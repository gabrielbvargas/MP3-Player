

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Dec 08 17:09:17 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4520 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	idataCOMRAM
    80  0019C4                     __pidataCOMRAM:
    81                           	callstack 0
    82                           
    83                           ;initializer for _duracoes
    84  0019C4  00B4               	dw	180
    85  0019C6  00B4               	dw	180
    86  0019C8  00B4               	dw	180
    87  0019CA  00B4               	dw	180
    88  0019CC  00B4               	dw	180
    89  0019CE  00B4               	dw	180
    90  0019D0  00B4               	dw	180
    91  0019D2  00B4               	dw	180
    92  0019D4  00B4               	dw	180
    93  0019D6  00B4               	dw	180
    94                           
    95                           ;initializer for _teclas
    96  0019D8  0A                 	db	10
    97  0019D9  07                 	db	7
    98  0019DA  04                 	db	4
    99  0019DB  01                 	db	1
   100  0019DC  00                 	db	0
   101  0019DD  08                 	db	8
   102  0019DE  05                 	db	5
   103  0019DF  02                 	db	2
   104                           
   105                           ;initializer for _volume
   106  0019E0  03                 	db	3
   107                           
   108                           ;initializer for _pause
   109  0019E1  01                 	db	1
   110                           
   111                           ;initializer for _tecla
   112  0019E2  10                 	db	16
   113                           
   114                           	psect	idataBANK2
   115  0013F4                     __pidataBANK2:
   116                           	callstack 0
   117                           
   118                           ;initializer for _nomes
   119  0013F4  45                 	db	69
   120  0013F5  73                 	db	115
   121  0013F6  74                 	db	116
   122  0013F7  61                 	db	97
   123  0013F8  6D                 	db	109
   124  0013F9  6F                 	db	111
   125  0013FA  73                 	db	115
   126  0013FB  20                 	db	32
   127  0013FC  56                 	db	86
   128  0013FD  69                 	db	105
   129  0013FE  76                 	db	118
   130  0013FF  6F                 	db	111
   131  001400  73                 	db	115
   132  001401  00                 	db	0
   133  001402  00                 	db	0
   134  001403  00                 	db	0
   135  001404  00                 	db	0
   136  001405  43                 	db	67
   137  001406  68                 	db	104
   138  001407  65                 	db	101
   139  001408  69                 	db	105
   140  001409  61                 	db	97
   141  00140A  20                 	db	32
   142  00140B  64                 	db	100
   143  00140C  65                 	db	101
   144  00140D  20                 	db	32
   145  00140E  4D                 	db	77
   146  00140F  61                 	db	97
   147  001410  6E                 	db	110
   148  001411  69                 	db	105
   149  001412  61                 	db	97
   150  001413  73                 	db	115
   151  001414  00                 	db	0
   152  001415  00                 	db	0
   153  001416  45                 	db	69
   154  001417  20                 	db	32
   155  001418  54                 	db	84
   156  001419  61                 	db	97
   157  00141A  72                 	db	114
   158  00141B  64                 	db	100
   159  00141C  65                 	db	101
   160  00141D  20                 	db	32
   161  00141E  44                 	db	68
   162  00141F  65                 	db	101
   163  001420  6D                 	db	109
   164  001421  61                 	db	97
   165  001422  69                 	db	105
   166  001423  73                 	db	115
   167  001424  00                 	db	0
   168  001425  00                 	db	0
   169  001426  00                 	db	0
   170  001427  53                 	db	83
   171  001428  6F                 	db	111
   172  001429  7A                 	db	122
   173  00142A  69                 	db	105
   174  00142B  6E                 	db	110
   175  00142C  68                 	db	104
   176  00142D  6F                 	db	111
   177  00142E  00                 	db	0
   178  00142F  00                 	db	0
   179  001430  00                 	db	0
   180  001431  00                 	db	0
   181  001432  00                 	db	0
   182  001433  00                 	db	0
   183  001434  00                 	db	0
   184  001435  00                 	db	0
   185  001436  00                 	db	0
   186  001437  00                 	db	0
   187  001438  43                 	db	67
   188  001439  69                 	db	105
   189  00143A  67                 	db	103
   190  00143B  61                 	db	97
   191  00143C  6E                 	db	110
   192  00143D  61                 	db	97
   193  00143E  00                 	db	0
   194  00143F  00                 	db	0
   195  001440  00                 	db	0
   196  001441  00                 	db	0
   197  001442  00                 	db	0
   198  001443  00                 	db	0
   199  001444  00                 	db	0
   200  001445  00                 	db	0
   201  001446  00                 	db	0
   202  001447  00                 	db	0
   203  001448  00                 	db	0
   204  001449  43                 	db	67
   205  00144A  69                 	db	105
   206  00144B  75                 	db	117
   207  00144C  6D                 	db	109
   208  00144D  65                 	db	101
   209  00144E  73                 	db	115
   210  00144F  20                 	db	32
   211  001450  64                 	db	100
   212  001451  65                 	db	101
   213  001452  20                 	db	32
   214  001453  56                 	db	86
   215  001454  6F                 	db	111
   216  001455  63                 	db	99
   217  001456  65                 	db	101
   218  001457  00                 	db	0
   219  001458  00                 	db	0
   220  001459  00                 	db	0
   221  00145A  45                 	db	69
   222  00145B  78                 	db	120
   223  00145C  74                 	db	116
   224  00145D  72                 	db	114
   225  00145E  61                 	db	97
   226  00145F  70                 	db	112
   227  001460  6F                 	db	111
   228  001461  6C                 	db	108
   229  001462  65                 	db	101
   230  001463  69                 	db	105
   231  001464  00                 	db	0
   232  001465  00                 	db	0
   233  001466  00                 	db	0
   234  001467  00                 	db	0
   235  001468  00                 	db	0
   236  001469  00                 	db	0
   237  00146A  00                 	db	0
   238  00146B  44                 	db	68
   239  00146C  65                 	db	101
   240  00146D  75                 	db	117
   241  00146E  73                 	db	115
   242  00146F  20                 	db	32
   243  001470  6D                 	db	109
   244  001471  65                 	db	101
   245  001472  20                 	db	32
   246  001473  4C                 	db	76
   247  001474  69                 	db	105
   248  001475  76                 	db	118
   249  001476  72                 	db	114
   250  001477  65                 	db	101
   251  001478  00                 	db	0
   252  001479  00                 	db	0
   253  00147A  00                 	db	0
   254  00147B  00                 	db	0
   255  00147C  4D                 	db	77
   256  00147D  61                 	db	97
   257  00147E  72                 	db	114
   258  00147F  61                 	db	97
   259  001480  76                 	db	118
   260  001481  69                 	db	105
   261  001482  6C                 	db	108
   262  001483  68                 	db	104
   263  001484  61                 	db	97
   264  001485  00                 	db	0
   265  001486  00                 	db	0
   266  001487  00                 	db	0
   267  001488  00                 	db	0
   268  001489  00                 	db	0
   269  00148A  00                 	db	0
   270  00148B  00                 	db	0
   271  00148C  00                 	db	0
   272  00148D  4D                 	db	77
   273  00148E  65                 	db	101
   274  00148F  64                 	db	100
   275  001490  69                 	db	105
   276  001491  64                 	db	100
   277  001492  61                 	db	97
   278  001493  20                 	db	32
   279  001494  45                 	db	69
   280  001495  78                 	db	120
   281  001496  61                 	db	97
   282  001497  74                 	db	116
   283  001498  61                 	db	97
   284  001499  00                 	db	0
   285  00149A  00                 	db	0
   286  00149B  00                 	db	0
   287  00149C  00                 	db	0
   288  00149D  00                 	db	0
   289                           
   290                           	psect	smallconst
   291  000600                     __psmallconst:
   292                           	callstack 0
   293  000600  00                 	db	0
   294  000601                     _valor:
   295                           	callstack 0
   296  000601  3F                 	db	63
   297  000602  06                 	db	6
   298  000603  5B                 	db	91
   299  000604  4F                 	db	79
   300  000605  66                 	db	102
   301  000606  6D                 	db	109
   302  000607  7D                 	db	125
   303  000608  07                 	db	7
   304  000609  7F                 	db	127
   305  00060A  6F                 	db	111
   306  00060B  77                 	db	119
   307  00060C  7C                 	db	124
   308  00060D  39                 	db	57
   309  00060E  5E                 	db	94
   310  00060F  79                 	db	121
   311  000610  71                 	db	113
   312  000611                     __end_of_valor:
   313                           	callstack 0
   314  0000                     _T0CON	set	4053
   315  0000                     _TMR0L	set	4054
   316  0000                     _TMR0H	set	4055
   317  0000                     _INTCON	set	4082
   318  0000                     _TRISE	set	3990
   319  0000                     _TRISD	set	3989
   320  0000                     _TRISC	set	3988
   321  0000                     _TRISB	set	3987
   322  0000                     _TRISA	set	3986
   323  0000                     _PORTE	set	3972
   324  0000                     _PORTD	set	3971
   325  0000                     _PORTC	set	3970
   326  0000                     _PORTB	set	3969
   327  0000                     _PORTA	set	3968
   328  000611                     STR_4:
   329  000611  3C                 	db	60	;'<'
   330  000612  2D                 	db	45
   331  000613  28                 	db	40
   332  000614  31                 	db	49	;'1'
   333  000615  29                 	db	41
   334  000616  20                 	db	32
   335  000617  28                 	db	40
   336  000618  2A                 	db	42
   337  000619  29                 	db	41
   338  00061A  20                 	db	32
   339  00061B  20                 	db	32
   340  00061C  28                 	db	40
   341  00061D  32                 	db	50	;'2'
   342  00061E  29                 	db	41
   343  00061F  2D                 	db	45
   344  000620  3E                 	db	62	;'>'
   345  000621  00                 	db	0
   346  000622                     STR_3:
   347  000622  45                 	db	69	;'E'
   348  000623  73                 	db	115	;'s'
   349  000624  63                 	db	99	;'c'
   350  000625  6F                 	db	111	;'o'
   351  000626  6C                 	db	108	;'l'
   352  000627  68                 	db	104	;'h'
   353  000628  61                 	db	97	;'a'
   354  000629  20                 	db	32
   355  00062A  61                 	db	97	;'a'
   356  00062B  20                 	db	32
   357  00062C  6D                 	db	109	;'m'
   358  00062D  75                 	db	117	;'u'
   359  00062E  73                 	db	115	;'s'
   360  00062F  69                 	db	105	;'i'
   361  000630  63                 	db	99	;'c'
   362  000631  61                 	db	97	;'a'
   363  000632  00                 	db	0
   364  000633                     STR_6:
   365  000633  2D                 	db	45
   366  000634  28                 	db	40
   367  000635  31                 	db	49	;'1'
   368  000636  29                 	db	41
   369  000637  20                 	db	32
   370  000638  20                 	db	32
   371  000639  28                 	db	40
   372  00063A  2A                 	db	42
   373  00063B  29                 	db	41
   374  00063C  20                 	db	32
   375  00063D  20                 	db	32
   376  00063E  28                 	db	40
   377  00063F  32                 	db	50	;'2'
   378  000640  29                 	db	41
   379  000641  2B                 	db	43
   380  000642  00                 	db	0
   381  000643                     STR_2:
   382  000643  50                 	db	80	;'P'
   383  000644  6C                 	db	108	;'l'
   384  000645  61                 	db	97	;'a'
   385  000646  79                 	db	121	;'y'
   386  000647  65                 	db	101	;'e'
   387  000648  72                 	db	114	;'r'
   388  000649  00                 	db	0
   389  00064A                     STR_1:
   390  00064A  4D                 	db	77	;'M'
   391  00064B  50                 	db	80	;'P'
   392  00064C  33                 	db	51	;'3'
   393  00064D  00                 	db	0
   394  00064E  00                 	db	0	; dummy byte at the end
   395  0000                     
   396                           ; #config settings
   397                           
   398                           	psect	cinit
   399  0017A2                     __pcinit:
   400                           	callstack 0
   401  0017A2                     start_initialization:
   402                           	callstack 0
   403  0017A2                     __initialization:
   404                           	callstack 0
   405                           
   406                           ; Initialize objects allocated to BANK2 (170 bytes)
   407                           ; load TBLPTR registers with __pidataBANK2
   408  0017A2  0EF4               	movlw	low __pidataBANK2
   409  0017A4  6EF6               	movwf	tblptrl,c
   410  0017A6  0E13               	movlw	high __pidataBANK2
   411  0017A8  6EF7               	movwf	tblptrh,c
   412  0017AA  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   413  0017AC  6EF8               	movwf	tblptru,c
   414  0017AE  EE02  F000         	lfsr	0,__pdataBANK2
   415  0017B2  EE10 F0AA          	lfsr	1,170
   416  0017B6                     copy_data0:
   417  0017B6  0009               	tblrd		*+
   418  0017B8  CFF5 FFEE          	movff	tablat,postinc0
   419  0017BC  50E5               	movf	postdec1,w,c
   420  0017BE  50E1               	movf	fsr1l,w,c
   421  0017C0  E1FA               	bnz	copy_data0
   422                           
   423                           ; Initialize objects allocated to COMRAM (31 bytes)
   424                           ; load TBLPTR registers with __pidataCOMRAM
   425  0017C2  0EC4               	movlw	low __pidataCOMRAM
   426  0017C4  6EF6               	movwf	tblptrl,c
   427  0017C6  0E19               	movlw	high __pidataCOMRAM
   428  0017C8  6EF7               	movwf	tblptrh,c
   429  0017CA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   430  0017CC  6EF8               	movwf	tblptru,c
   431  0017CE  EE00  F001         	lfsr	0,__pdataCOMRAM
   432  0017D2  EE10 F01F          	lfsr	1,31
   433  0017D6                     copy_data1:
   434  0017D6  0009               	tblrd		*+
   435  0017D8  CFF5 FFEE          	movff	tablat,postinc0
   436  0017DC  50E5               	movf	postdec1,w,c
   437  0017DE  50E1               	movf	fsr1l,w,c
   438  0017E0  E1FA               	bnz	copy_data1
   439                           
   440                           ; Clear objects allocated to BANK1 (190 bytes)
   441  0017E2  EE01  F000         	lfsr	0,__pbssBANK1
   442  0017E6  0EBE               	movlw	190
   443  0017E8                     clear_0:
   444  0017E8  6AEE               	clrf	postinc0,c
   445  0017EA  06E8               	decf	wreg,f,c
   446  0017EC  E1FD               	bnz	clear_0
   447                           
   448                           ; Clear objects allocated to COMRAM (21 bytes)
   449  0017EE  EE00  F020         	lfsr	0,__pbssCOMRAM
   450  0017F2  0E15               	movlw	21
   451  0017F4                     clear_1:
   452  0017F4  6AEE               	clrf	postinc0,c
   453  0017F6  06E8               	decf	wreg,f,c
   454  0017F8  E1FD               	bnz	clear_1
   455  0017FA                     end_of_initialization:
   456                           	callstack 0
   457  0017FA                     __end_of__initialization:
   458                           	callstack 0
   459  0017FA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   460  0017FC  6EF8               	movwf	tblptru,c
   461  0017FE  0100               	movlb	0
   462  001800  EFA2  F00A         	goto	_main	;jump to C main() function
   463                           
   464                           	psect	bssCOMRAM
   465  000020                     __pbssCOMRAM:
   466                           	callstack 0
   467  000020                     kpDebounce@valorAntigo:
   468                           	callstack 0
   469  000020                     	ds	2
   470  000022                     kpDebounce@valorNovo:
   471                           	callstack 0
   472  000022                     	ds	2
   473  000024                     _valor@keypad$F294:
   474                           	callstack 0
   475  000024                     	ds	2
   476  000026                     kpDebounce@tempo:
   477                           	callstack 0
   478  000026                     	ds	1
   479  000027                     _i:
   480                           	callstack 0
   481  000027                     	ds	1
   482  000028                     _v3:
   483                           	callstack 0
   484  000028                     	ds	1
   485  000029                     _v2:
   486                           	callstack 0
   487  000029                     	ds	1
   488  00002A                     _v1:
   489                           	callstack 0
   490  00002A                     	ds	1
   491  00002B                     _v0:
   492                           	callstack 0
   493  00002B                     	ds	1
   494  00002C                     _display:
   495                           	callstack 0
   496  00002C                     	ds	1
   497  00002D                     _cnt:
   498                           	callstack 0
   499  00002D                     	ds	1
   500  00002E                     _segundo2:
   501                           	callstack 0
   502  00002E                     	ds	1
   503  00002F                     _segundo1:
   504                           	callstack 0
   505  00002F                     	ds	1
   506  000030                     _minuto2:
   507                           	callstack 0
   508  000030                     	ds	1
   509  000031                     _minuto1:
   510                           	callstack 0
   511  000031                     	ds	1
   512  000032                     _tempo:
   513                           	callstack 0
   514  000032                     	ds	1
   515  000033                     _flag:
   516                           	callstack 0
   517  000033                     	ds	1
   518  000034                     _indice:
   519                           	callstack 0
   520  000034                     	ds	1
   521                           
   522                           	psect	dataCOMRAM
   523  000001                     __pdataCOMRAM:
   524                           	callstack 0
   525  000001                     _duracoes:
   526                           	callstack 0
   527  000001                     	ds	20
   528  000015                     _teclas:
   529                           	callstack 0
   530  000015                     	ds	8
   531  00001D                     _volume:
   532                           	callstack 0
   533  00001D                     	ds	1
   534  00001E                     _pause:
   535                           	callstack 0
   536  00001E                     	ds	1
   537  00001F                     _tecla:
   538                           	callstack 0
   539  00001F                     	ds	1
   540                           
   541                           	psect	bssBANK1
   542  000100                     __pbssBANK1:
   543                           	callstack 0
   544  000100                     _musicas:
   545                           	callstack 0
   546  000100                     	ds	190
   547                           
   548                           	psect	dataBANK2
   549  000200                     __pdataBANK2:
   550                           	callstack 0
   551  000200                     _nomes:
   552                           	callstack 0
   553  000200                     	ds	170
   554                           
   555                           	psect	cstackCOMRAM
   556  000035                     __pcstackCOMRAM:
   557                           	callstack 0
   558  000035                     ??_kpDebounce:
   559  000035                     ?_kpRead:
   560                           	callstack 0
   561  000035                     ?___wmul:
   562                           	callstack 0
   563  000035                     ?___awdiv:
   564                           	callstack 0
   565  000035                     Delay40us@i:
   566                           	callstack 0
   567  000035                     ssdDigit@pos:
   568                           	callstack 0
   569  000035                     digitalWrite@pin:
   570                           	callstack 0
   571  000035                     pinMode@pin:
   572                           	callstack 0
   573  000035                     atraso_ms@t:
   574                           	callstack 0
   575  000035                     ___wmul@multiplier:
   576                           	callstack 0
   577  000035                     ___awdiv@dividend:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x0
   581  000035                     	ds	1
   582  000036                     Delay2ms@i:
   583                           	callstack 0
   584  000036                     ssdDigit@val:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x1
   588  000036                     	ds	1
   589  000037                     digitalWrite@value:
   590                           	callstack 0
   591  000037                     pinMode@type:
   592                           	callstack 0
   593  000037                     atraso_ms@i:
   594                           	callstack 0
   595  000037                     ___wmul@multiplicand:
   596                           	callstack 0
   597  000037                     ___awdiv@divisor:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x2
   601  000037                     	ds	2
   602  000039                     ??_digitalWrite:
   603  000039                     ??_pinMode:
   604  000039                     atraso_ms@j:
   605                           	callstack 0
   606  000039                     ___awdiv@counter:
   607                           	callstack 0
   608  000039                     ___wmul@product:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x4
   612  000039                     	ds	1
   613  00003A                     atraso_ms@k:
   614                           	callstack 0
   615  00003A                     kpDebounce@old_D:
   616                           	callstack 0
   617  00003A                     ___awdiv@sign:
   618                           	callstack 0
   619                           
   620                           ; 1 bytes @ 0x5
   621  00003A                     	ds	1
   622  00003B                     ??_ssdUpdate:
   623  00003B                     lcdCommand@old_D:
   624                           	callstack 0
   625  00003B                     lcdData@valor:
   626                           	callstack 0
   627  00003B                     alterarVolume@opt:
   628                           	callstack 0
   629  00003B                     kpDebounce@k:
   630                           	callstack 0
   631  00003B                     ___awdiv@quotient:
   632                           	callstack 0
   633  00003B                     strcpy@dest:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x6
   637  00003B                     	ds	1
   638  00003C                     lcdCommand@cmd:
   639                           	callstack 0
   640  00003C                     lcdData@old_D:
   641                           	callstack 0
   642  00003C                     alterarVolume@old_D:
   643                           	callstack 0
   644                           
   645                           ; 1 bytes @ 0x7
   646  00003C                     	ds	1
   647  00003D                     ?___awmod:
   648                           	callstack 0
   649  00003D                     lcdPosition@coluna:
   650                           	callstack 0
   651  00003D                     kpDebounce@j:
   652                           	callstack 0
   653  00003D                     lcdStr@str:
   654                           	callstack 0
   655  00003D                     ___awmod@dividend:
   656                           	callstack 0
   657  00003D                     strcpy@src:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x8
   661  00003D                     	ds	1
   662  00003E                     lcdPosition@linha:
   663                           	callstack 0
   664  00003E                     kpDebounce@i:
   665                           	callstack 0
   666                           
   667                           ; 1 bytes @ 0x9
   668  00003E                     	ds	1
   669  00003F                     ??_lcdStr:
   670  00003F                     lcdPosition@comando:
   671                           	callstack 0
   672  00003F                     ___awmod@divisor:
   673                           	callstack 0
   674  00003F                     strcpy@s:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0xA
   678  00003F                     	ds	2
   679  000041                     lcdStr@i:
   680                           	callstack 0
   681  000041                     ___awmod@counter:
   682                           	callstack 0
   683  000041                     strcpy@d:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0xC
   687  000041                     	ds	1
   688  000042                     ___awmod@sign:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0xD
   692  000042                     	ds	1
   693  000043                     songsInit@i:
   694                           	callstack 0
   695  000043                     _playSong$957:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0xE
   699  000043                     	ds	2
   700  000045                     _playSong$958:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x10
   704  000045                     	ds	2
   705  000047                     playSong@j:
   706                           	callstack 0
   707                           
   708                           ; 1 bytes @ 0x12
   709  000047                     	ds	1
   710  000048                     ??_chooseSong:
   711                           
   712                           ; 1 bytes @ 0x13
   713  000048                     	ds	2
   714  00004A                     
   715                           ; 1 bytes @ 0x15
   716 ;;
   717 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   718 ;;
   719 ;; *************** function _main *****************
   720 ;; Defined at:
   721 ;;		line 11 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;		None
   724 ;; Auto vars:     Size  Location     Type
   725 ;;		None
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   735 ;;      Params:         0       0       0       0       0       0       0
   736 ;;      Locals:         0       0       0       0       0       0       0
   737 ;;      Temps:          0       0       0       0       0       0       0
   738 ;;      Totals:         0       0       0       0       0       0       0
   739 ;;Total ram usage:        0 bytes
   740 ;; Hardware stack levels required when called:    6
   741 ;; This function calls:
   742 ;;		_atraso_ms
   743 ;;		_chooseSong
   744 ;;		_kpInit
   745 ;;		_lcdCommand
   746 ;;		_lcdInit
   747 ;;		_lcdPosition
   748 ;;		_lcdStr
   749 ;;		_songsInit
   750 ;;		_ssdInit
   751 ;; This function is called by:
   752 ;;		Startup code after reset
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           	psect	text0
   757  001544                     __ptext0:
   758                           	callstack 0
   759  001544                     _main:
   760                           	callstack 25
   761  001544                     
   762                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 13:     songsInit();
   763  001544  EC4F  F00A         	call	_songsInit	;wreg free
   764  001548                     
   765                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 14:     lcdInit();
   766  001548  EC27  F00B         	call	_lcdInit	;wreg free
   767  00154C                     
   768                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 15:     ssdInit();
   769  00154C  EC5B  F00C         	call	_ssdInit	;wreg free
   770  001550                     
   771                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 16:     kpInit();
   772  001550  EC0C  F00D         	call	_kpInit	;wreg free
   773  001554                     
   774                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 17:     lcdCommand(0x0F);
   775  001554  0E0F               	movlw	15
   776  001556  ECE8  F00A         	call	_lcdCommand
   777  00155A                     
   778                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 19:     lcdPosition(0, 6);
   779  00155A  0E06               	movlw	6
   780  00155C  6E3D               	movwf	lcdPosition@coluna^0,c
   781  00155E  0E00               	movlw	0
   782  001560  EC02  F00C         	call	_lcdPosition
   783  001564                     
   784                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 20:     lcdStr("MP3");
   785  001564  0E4A               	movlw	low STR_1
   786  001566  6E3D               	movwf	lcdStr@str^0,c
   787  001568  0E06               	movlw	high STR_1
   788  00156A  6E3E               	movwf	(lcdStr@str+1)^0,c
   789  00156C  EC63  F00B         	call	_lcdStr	;wreg free
   790  001570                     
   791                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 21:     lcdPosition(1, 4);
   792  001570  0E04               	movlw	4
   793  001572  6E3D               	movwf	lcdPosition@coluna^0,c
   794  001574  0E01               	movlw	1
   795  001576  EC02  F00C         	call	_lcdPosition
   796  00157A                     
   797                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 22:     lcdStr("Player");
   798  00157A  0E43               	movlw	low STR_2
   799  00157C  6E3D               	movwf	lcdStr@str^0,c
   800  00157E  0E06               	movlw	high STR_2
   801  001580  6E3E               	movwf	(lcdStr@str+1)^0,c
   802  001582  EC63  F00B         	call	_lcdStr	;wreg free
   803  001586                     
   804                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 23:     atraso_ms(2000);
   805  001586  0E07               	movlw	7
   806  001588  6E36               	movwf	(atraso_ms@t+1)^0,c
   807  00158A  0ED0               	movlw	208
   808  00158C  6E35               	movwf	atraso_ms@t^0,c
   809  00158E  EC9F  F00B         	call	_atraso_ms	;wreg free
   810  001592                     
   811                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 25:     lcdCommand(0x01);
   812  001592  0E01               	movlw	1
   813  001594  ECE8  F00A         	call	_lcdCommand
   814  001598                     
   815                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 26:     lcdPosition(0, 0);
   816  001598  0E00               	movlw	0
   817  00159A  6E3D               	movwf	lcdPosition@coluna^0,c
   818  00159C  0E00               	movlw	0
   819  00159E  EC02  F00C         	call	_lcdPosition
   820  0015A2                     
   821                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 27:     lcdStr("Escolha a musica"
      +                          );
   822  0015A2  0E22               	movlw	low STR_3
   823  0015A4  6E3D               	movwf	lcdStr@str^0,c
   824  0015A6  0E06               	movlw	high STR_3
   825  0015A8  6E3E               	movwf	(lcdStr@str+1)^0,c
   826  0015AA  EC63  F00B         	call	_lcdStr	;wreg free
   827  0015AE                     l2482:
   828                           
   829                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 29:         lcdPosition(1, 0);
   830  0015AE  0E00               	movlw	0
   831  0015B0  6E3D               	movwf	lcdPosition@coluna^0,c
   832  0015B2  0E01               	movlw	1
   833  0015B4  EC02  F00C         	call	_lcdPosition
   834  0015B8                     
   835                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 30:         lcdStr("<-(1) (*)  (2
      +                          )->");
   836  0015B8  0E11               	movlw	low STR_4
   837  0015BA  6E3D               	movwf	lcdStr@str^0,c
   838  0015BC  0E06               	movlw	high STR_4
   839  0015BE  6E3E               	movwf	(lcdStr@str+1)^0,c
   840  0015C0  EC63  F00B         	call	_lcdStr	;wreg free
   841  0015C4                     
   842                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 31:         chooseSong();
   843  0015C4  ECA2  F008         	call	_chooseSong	;wreg free
   844                           
   845                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 32:     }
   846  0015C8  EFD7  F00A         	goto	l2482
   847  0015CC  EF00  F000         	goto	start
   848  0015D0                     __end_of_main:
   849                           	callstack 0
   850                           
   851 ;; *************** function _ssdInit *****************
   852 ;; Defined at:
   853 ;;		line 101 in file "ssd.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		wreg, status,2, status,0, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   867 ;;      Params:         0       0       0       0       0       0       0
   868 ;;      Locals:         0       0       0       0       0       0       0
   869 ;;      Temps:          0       0       0       0       0       0       0
   870 ;;      Totals:         0       0       0       0       0       0       0
   871 ;;Total ram usage:        0 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; Hardware stack levels required when called:    1
   874 ;; This function calls:
   875 ;;		_pinMode
   876 ;; This function is called by:
   877 ;;		_main
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           	psect	text1
   882  0018B6                     __ptext1:
   883                           	callstack 0
   884  0018B6                     _ssdInit:
   885                           	callstack 29
   886  0018B6                     
   887                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
   888  0018B6  0E00               	movlw	0
   889  0018B8  6E36               	movwf	(pinMode@pin+1)^0,c
   890  0018BA  0E02               	movlw	2
   891  0018BC  6E35               	movwf	pinMode@pin^0,c
   892  0018BE  0E00               	movlw	0
   893  0018C0  6E38               	movwf	(pinMode@type+1)^0,c
   894  0018C2  0E00               	movlw	0
   895  0018C4  6E37               	movwf	pinMode@type^0,c
   896  0018C6  EC50  F004         	call	_pinMode	;wreg free
   897                           
   898                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
   899  0018CA  0E00               	movlw	0
   900  0018CC  6E36               	movwf	(pinMode@pin+1)^0,c
   901  0018CE  0E03               	movlw	3
   902  0018D0  6E35               	movwf	pinMode@pin^0,c
   903  0018D2  0E00               	movlw	0
   904  0018D4  6E38               	movwf	(pinMode@type+1)^0,c
   905  0018D6  0E00               	movlw	0
   906  0018D8  6E37               	movwf	pinMode@type^0,c
   907  0018DA  EC50  F004         	call	_pinMode	;wreg free
   908                           
   909                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
   910  0018DE  0E00               	movlw	0
   911  0018E0  6E36               	movwf	(pinMode@pin+1)^0,c
   912  0018E2  0E04               	movlw	4
   913  0018E4  6E35               	movwf	pinMode@pin^0,c
   914  0018E6  0E00               	movlw	0
   915  0018E8  6E38               	movwf	(pinMode@type+1)^0,c
   916  0018EA  0E00               	movlw	0
   917  0018EC  6E37               	movwf	pinMode@type^0,c
   918  0018EE  EC50  F004         	call	_pinMode	;wreg free
   919                           
   920                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
   921  0018F2  0E00               	movlw	0
   922  0018F4  6E36               	movwf	(pinMode@pin+1)^0,c
   923  0018F6  0E05               	movlw	5
   924  0018F8  6E35               	movwf	pinMode@pin^0,c
   925  0018FA  0E00               	movlw	0
   926  0018FC  6E38               	movwf	(pinMode@type+1)^0,c
   927  0018FE  0E00               	movlw	0
   928  001900  6E37               	movwf	pinMode@type^0,c
   929  001902  EC50  F004         	call	_pinMode	;wreg free
   930  001906                     
   931                           ;ssd.c: 109:     TRISD = 0x00;
   932  001906  0E00               	movlw	0
   933  001908  6E95               	movwf	149,c	;volatile
   934  00190A  0012               	return		;funcret
   935  00190C                     __end_of_ssdInit:
   936                           	callstack 0
   937                           
   938 ;; *************** function _songsInit *****************
   939 ;; Defined at:
   940 ;;		line 22 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  i               2   14[COMRAM] unsigned int 
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   954 ;;      Params:         0       0       0       0       0       0       0
   955 ;;      Locals:         2       0       0       0       0       0       0
   956 ;;      Temps:          0       0       0       0       0       0       0
   957 ;;      Totals:         2       0       0       0       0       0       0
   958 ;;Total ram usage:        2 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; Hardware stack levels required when called:    1
   961 ;; This function calls:
   962 ;;		___wmul
   963 ;;		_strcpy
   964 ;; This function is called by:
   965 ;;		_main
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	text2
   970  00149E                     __ptext2:
   971                           	callstack 0
   972  00149E                     _songsInit:
   973                           	callstack 29
   974  00149E                     
   975                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 23:     TRISC = 0x00;
   976  00149E  0E00               	movlw	0
   977  0014A0  6E94               	movwf	148,c	;volatile
   978                           
   979                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 24:     for (unsigned int i = 0;
      +                           i < 10; i++) {
   980  0014A2  0E00               	movlw	0
   981  0014A4  6E44               	movwf	(songsInit@i+1)^0,c
   982  0014A6  0E00               	movlw	0
   983  0014A8  6E43               	movwf	songsInit@i^0,c
   984  0014AA                     l2360:
   985                           
   986                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 25:         musicas[i].duracao =
      +                           duracoes[i];
   987  0014AA  90D8               	bcf	status,0,c
   988  0014AC  3443               	rlcf	songsInit@i^0,w,c
   989  0014AE  6ED9               	movwf	fsr2l,c
   990  0014B0  3444               	rlcf	(songsInit@i+1)^0,w,c
   991  0014B2  6EDA               	movwf	fsr2h,c
   992  0014B4  0E01               	movlw	low _duracoes
   993  0014B6  26D9               	addwf	fsr2l,f,c
   994  0014B8  0E00               	movlw	high _duracoes
   995  0014BA  22DA               	addwfc	fsr2h,f,c
   996  0014BC  C043  F035         	movff	songsInit@i,___wmul@multiplier
   997  0014C0  C044  F036         	movff	songsInit@i+1,___wmul@multiplier+1
   998  0014C4  0E00               	movlw	0
   999  0014C6  6E38               	movwf	(___wmul@multiplicand+1)^0,c
  1000  0014C8  0E13               	movlw	19
  1001  0014CA  6E37               	movwf	___wmul@multiplicand^0,c
  1002  0014CC  ECCF  F00C         	call	___wmul	;wreg free
  1003  0014D0  0E00               	movlw	low _musicas
  1004  0014D2  2435               	addwf	?___wmul^0,w,c
  1005  0014D4  6EE1               	movwf	fsr1l,c
  1006  0014D6  0E01               	movlw	high _musicas
  1007  0014D8  2036               	addwfc	(?___wmul+1)^0,w,c
  1008  0014DA  6EE2               	movwf	fsr1h,c
  1009  0014DC  CFDE FFE6          	movff	postinc2,postinc1
  1010  0014E0  CFDD FFE5          	movff	postdec2,postdec1
  1011                           
  1012                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 26:         strcpy(musicas[i].no
      +                          me, (char*) nomes[i]);
  1013  0014E4  C043  F035         	movff	songsInit@i,___wmul@multiplier
  1014  0014E8  C044  F036         	movff	songsInit@i+1,___wmul@multiplier+1
  1015  0014EC  0E00               	movlw	0
  1016  0014EE  6E38               	movwf	(___wmul@multiplicand+1)^0,c
  1017  0014F0  0E13               	movlw	19
  1018  0014F2  6E37               	movwf	___wmul@multiplicand^0,c
  1019  0014F4  ECCF  F00C         	call	___wmul	;wreg free
  1020  0014F8  0E02               	movlw	low (_musicas+2)
  1021  0014FA  2435               	addwf	?___wmul^0,w,c
  1022  0014FC  6E3B               	movwf	strcpy@dest^0,c
  1023  0014FE  0E01               	movlw	high (_musicas+2)
  1024  001500  2036               	addwfc	(?___wmul+1)^0,w,c
  1025  001502  6E3C               	movwf	(strcpy@dest+1)^0,c
  1026  001504  C043  F035         	movff	songsInit@i,___wmul@multiplier
  1027  001508  C044  F036         	movff	songsInit@i+1,___wmul@multiplier+1
  1028  00150C  0E00               	movlw	0
  1029  00150E  6E38               	movwf	(___wmul@multiplicand+1)^0,c
  1030  001510  0E11               	movlw	17
  1031  001512  6E37               	movwf	___wmul@multiplicand^0,c
  1032  001514  ECCF  F00C         	call	___wmul	;wreg free
  1033  001518  0E00               	movlw	low _nomes
  1034  00151A  2435               	addwf	?___wmul^0,w,c
  1035  00151C  6E3D               	movwf	strcpy@src^0,c
  1036  00151E  0E02               	movlw	high _nomes
  1037  001520  2036               	addwfc	(?___wmul+1)^0,w,c
  1038  001522  6E3E               	movwf	(strcpy@src+1)^0,c
  1039  001524  ECB0  F00C         	call	_strcpy	;wreg free
  1040  001528                     
  1041                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 27:     }
  1042  001528  4A43               	infsnz	songsInit@i^0,f,c
  1043  00152A  2A44               	incf	(songsInit@i+1)^0,f,c
  1044  00152C  5044               	movf	(songsInit@i+1)^0,w,c
  1045  00152E  E109               	bnz	u2290
  1046  001530  0E0A               	movlw	10
  1047  001532  5C43               	subwf	songsInit@i^0,w,c
  1048  001534  A0D8               	btfss	status,0,c
  1049  001536  EF9F  F00A         	goto	u2291
  1050  00153A  EFA1  F00A         	goto	u2290
  1051  00153E                     u2291:
  1052  00153E  EF55  F00A         	goto	l2360
  1053  001542                     u2290:
  1054  001542  0012               	return		;funcret
  1055  001544                     __end_of_songsInit:
  1056                           	callstack 0
  1057                           
  1058 ;; *************** function _strcpy *****************
  1059 ;; Defined at:
  1060 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  dest            2    6[COMRAM] PTR unsigned char 
  1063 ;;		 -> musicas(190), 
  1064 ;;  src             2    8[COMRAM] PTR const unsigned char 
  1065 ;;		 -> nomes(170), 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  d               2   12[COMRAM] PTR unsigned char 
  1068 ;;		 -> musicas(190), 
  1069 ;;  s               2   10[COMRAM] PTR const unsigned char 
  1070 ;;		 -> nomes(170), 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  2    6[COMRAM] PTR unsigned char 
  1073 ;; Registers used:
  1074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1080 ;;      Params:         4       0       0       0       0       0       0
  1081 ;;      Locals:         4       0       0       0       0       0       0
  1082 ;;      Temps:          0       0       0       0       0       0       0
  1083 ;;      Totals:         8       0       0       0       0       0       0
  1084 ;;Total ram usage:        8 bytes
  1085 ;; Hardware stack levels used:    1
  1086 ;; This function calls:
  1087 ;;		Nothing
  1088 ;; This function is called by:
  1089 ;;		_songsInit
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text3
  1094  001960                     __ptext3:
  1095                           	callstack 0
  1096  001960                     _strcpy:
  1097                           	callstack 29
  1098  001960  C03D  F03F         	movff	strcpy@src,strcpy@s
  1099  001964  C03E  F040         	movff	strcpy@src+1,strcpy@s+1
  1100  001968  C03B  F041         	movff	strcpy@dest,strcpy@d
  1101  00196C  C03C  F042         	movff	strcpy@dest+1,strcpy@d+1
  1102  001970                     l2258:
  1103  001970  C03F  FFD9         	movff	strcpy@s,fsr2l
  1104  001974  C040  FFDA         	movff	strcpy@s+1,fsr2h
  1105  001978  4A3F               	infsnz	strcpy@s^0,f,c
  1106  00197A  2A40               	incf	(strcpy@s+1)^0,f,c
  1107  00197C  C041  FFE1         	movff	strcpy@d,fsr1l
  1108  001980  C042  FFE2         	movff	strcpy@d+1,fsr1h
  1109  001984  4A41               	infsnz	strcpy@d^0,f,c
  1110  001986  2A42               	incf	(strcpy@d+1)^0,f,c
  1111  001988  CFDF FFE7          	movff	indf2,indf1
  1112  00198C  50E7               	movf	indf1,w,c
  1113  00198E  A4D8               	btfss	status,2,c
  1114  001990  EFCC  F00C         	goto	u2181
  1115  001994  EFCE  F00C         	goto	u2180
  1116  001998                     u2181:
  1117  001998  EFB8  F00C         	goto	l2258
  1118  00199C                     u2180:
  1119  00199C  0012               	return		;funcret
  1120  00199E                     __end_of_strcpy:
  1121                           	callstack 0
  1122                           
  1123 ;; *************** function ___wmul *****************
  1124 ;; Defined at:
  1125 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  multiplier      2    0[COMRAM] unsigned int 
  1128 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  product         2    4[COMRAM] unsigned int 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  2    0[COMRAM] unsigned int 
  1133 ;; Registers used:
  1134 ;;		wreg, status,2, status,0, prodl, prodh
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1140 ;;      Params:         4       0       0       0       0       0       0
  1141 ;;      Locals:         2       0       0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0
  1143 ;;      Totals:         6       0       0       0       0       0       0
  1144 ;;Total ram usage:        6 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_songsInit
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text4
  1154  00199E                     __ptext4:
  1155                           	callstack 0
  1156  00199E                     ___wmul:
  1157                           	callstack 29
  1158  00199E  5035               	movf	___wmul@multiplier^0,w,c
  1159  0019A0  0237               	mulwf	___wmul@multiplicand^0,c
  1160  0019A2  CFF3 F039          	movff	prodl,___wmul@product
  1161  0019A6  CFF4 F03A          	movff	prodh,___wmul@product+1
  1162  0019AA  5035               	movf	___wmul@multiplier^0,w,c
  1163  0019AC  0238               	mulwf	(___wmul@multiplicand+1)^0,c
  1164  0019AE  50F3               	movf	243,w,c
  1165  0019B0  263A               	addwf	(___wmul@product+1)^0,f,c
  1166  0019B2  5036               	movf	(___wmul@multiplier+1)^0,w,c
  1167  0019B4  0237               	mulwf	___wmul@multiplicand^0,c
  1168  0019B6  50F3               	movf	243,w,c
  1169  0019B8  263A               	addwf	(___wmul@product+1)^0,f,c
  1170  0019BA  C039  F035         	movff	___wmul@product,?___wmul
  1171  0019BE  C03A  F036         	movff	___wmul@product+1,?___wmul+1
  1172  0019C2  0012               	return		;funcret
  1173  0019C4                     __end_of___wmul:
  1174                           	callstack 0
  1175                           
  1176 ;; *************** function _lcdInit *****************
  1177 ;; Defined at:
  1178 ;;		line 87 in file "lcd.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;		None
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;		None
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg, status,2, status,0, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1192 ;;      Params:         0       0       0       0       0       0       0
  1193 ;;      Locals:         0       0       0       0       0       0       0
  1194 ;;      Temps:          0       0       0       0       0       0       0
  1195 ;;      Totals:         0       0       0       0       0       0       0
  1196 ;;Total ram usage:        0 bytes
  1197 ;; Hardware stack levels used:    1
  1198 ;; Hardware stack levels required when called:    3
  1199 ;; This function calls:
  1200 ;;		_Delay2ms
  1201 ;;		_lcdCommand
  1202 ;;		_pinMode
  1203 ;; This function is called by:
  1204 ;;		_main
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text5
  1209  00164E                     __ptext5:
  1210                           	callstack 0
  1211  00164E                     _lcdInit:
  1212                           	callstack 27
  1213  00164E                     
  1214                           ;lcd.c: 89:     pinMode(PIN_E2, 0);
  1215  00164E  0E00               	movlw	0
  1216  001650  6E36               	movwf	(pinMode@pin+1)^0,c
  1217  001652  0E22               	movlw	34
  1218  001654  6E35               	movwf	pinMode@pin^0,c
  1219  001656  0E00               	movlw	0
  1220  001658  6E38               	movwf	(pinMode@type+1)^0,c
  1221  00165A  0E00               	movlw	0
  1222  00165C  6E37               	movwf	pinMode@type^0,c
  1223  00165E  EC50  F004         	call	_pinMode	;wreg free
  1224                           
  1225                           ;lcd.c: 90:     pinMode(PIN_E1, 0);
  1226  001662  0E00               	movlw	0
  1227  001664  6E36               	movwf	(pinMode@pin+1)^0,c
  1228  001666  0E21               	movlw	33
  1229  001668  6E35               	movwf	pinMode@pin^0,c
  1230  00166A  0E00               	movlw	0
  1231  00166C  6E38               	movwf	(pinMode@type+1)^0,c
  1232  00166E  0E00               	movlw	0
  1233  001670  6E37               	movwf	pinMode@type^0,c
  1234  001672  EC50  F004         	call	_pinMode	;wreg free
  1235  001676                     
  1236                           ;lcd.c: 91:     TRISD = 0x00;
  1237  001676  0E00               	movlw	0
  1238  001678  6E95               	movwf	149,c	;volatile
  1239  00167A                     
  1240                           ;lcd.c: 94:     Delay2ms();
  1241  00167A  ECF2  F00C         	call	_Delay2ms	;wreg free
  1242  00167E                     
  1243                           ;lcd.c: 95:     Delay2ms();
  1244  00167E  ECF2  F00C         	call	_Delay2ms	;wreg free
  1245  001682                     
  1246                           ;lcd.c: 96:     Delay2ms();
  1247  001682  ECF2  F00C         	call	_Delay2ms	;wreg free
  1248  001686                     
  1249                           ;lcd.c: 97:     Delay2ms();
  1250  001686  ECF2  F00C         	call	_Delay2ms	;wreg free
  1251  00168A                     
  1252                           ;lcd.c: 98:     Delay2ms();
  1253  00168A  ECF2  F00C         	call	_Delay2ms	;wreg free
  1254  00168E                     
  1255                           ;lcd.c: 100:     lcdCommand(0x38);
  1256  00168E  0E38               	movlw	56
  1257  001690  ECE8  F00A         	call	_lcdCommand
  1258  001694                     
  1259                           ;lcd.c: 101:     Delay2ms();
  1260  001694  ECF2  F00C         	call	_Delay2ms	;wreg free
  1261  001698                     
  1262                           ;lcd.c: 102:     Delay2ms();
  1263  001698  ECF2  F00C         	call	_Delay2ms	;wreg free
  1264  00169C                     
  1265                           ;lcd.c: 103:     lcdCommand(0x38);
  1266  00169C  0E38               	movlw	56
  1267  00169E  ECE8  F00A         	call	_lcdCommand
  1268  0016A2                     
  1269                           ;lcd.c: 104:     Delay2ms();
  1270  0016A2  ECF2  F00C         	call	_Delay2ms	;wreg free
  1271  0016A6                     
  1272                           ;lcd.c: 105:     lcdCommand(0x38);
  1273  0016A6  0E38               	movlw	56
  1274  0016A8  ECE8  F00A         	call	_lcdCommand
  1275  0016AC                     
  1276                           ;lcd.c: 107:     lcdCommand(0x38);
  1277  0016AC  0E38               	movlw	56
  1278  0016AE  ECE8  F00A         	call	_lcdCommand
  1279  0016B2                     
  1280                           ;lcd.c: 108:     lcdCommand(0x06);
  1281  0016B2  0E06               	movlw	6
  1282  0016B4  ECE8  F00A         	call	_lcdCommand
  1283  0016B8                     
  1284                           ;lcd.c: 111:     lcdCommand(0x0C);
  1285  0016B8  0E0C               	movlw	12
  1286  0016BA  ECE8  F00A         	call	_lcdCommand
  1287  0016BE                     
  1288                           ;lcd.c: 112:     lcdCommand(0x01);
  1289  0016BE  0E01               	movlw	1
  1290  0016C0  ECE8  F00A         	call	_lcdCommand
  1291  0016C4  0012               	return		;funcret
  1292  0016C6                     __end_of_lcdInit:
  1293                           	callstack 0
  1294                           
  1295 ;; *************** function _pinMode *****************
  1296 ;; Defined at:
  1297 ;;		line 54 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  pin             2    0[COMRAM] int 
  1300 ;;  type            2    2[COMRAM] int 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2, status,0
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1312 ;;      Params:         4       0       0       0       0       0       0
  1313 ;;      Locals:         0       0       0       0       0       0       0
  1314 ;;      Temps:          2       0       0       0       0       0       0
  1315 ;;      Totals:         6       0       0       0       0       0       0
  1316 ;;Total ram usage:        6 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_lcdInit
  1322 ;;		_ssdInit
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text6
  1327  0008A0                     __ptext6:
  1328                           	callstack 0
  1329  0008A0                     _pinMode:
  1330                           	callstack 29
  1331  0008A0                     
  1332                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 56:     if(pin <8){
  1333  0008A0  BE36               	btfsc	(pinMode@pin+1)^0,7,c
  1334  0008A2  EF5E  F004         	goto	u1980
  1335  0008A6  5036               	movf	(pinMode@pin+1)^0,w,c
  1336  0008A8  E107               	bnz	u1981
  1337  0008AA  0E08               	movlw	8
  1338  0008AC  5C35               	subwf	pinMode@pin^0,w,c
  1339  0008AE  B0D8               	btfsc	status,0,c
  1340  0008B0  EF5C  F004         	goto	u1981
  1341  0008B4  EF5E  F004         	goto	u1980
  1342  0008B8                     u1981:
  1343  0008B8  EF88  F004         	goto	l2224
  1344  0008BC                     u1980:
  1345  0008BC                     
  1346                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 57:         if (type){ ((TRISA) |= 
      +                          (1<<(pin)));}
  1347  0008BC  5037               	movf	pinMode@type^0,w,c
  1348  0008BE  1038               	iorwf	(pinMode@type+1)^0,w,c
  1349  0008C0  B4D8               	btfsc	status,2,c
  1350  0008C2  EF65  F004         	goto	u1991
  1351  0008C6  EF67  F004         	goto	u1990
  1352  0008CA                     u1991:
  1353  0008CA  EF77  F004         	goto	l2222
  1354  0008CE                     u1990:
  1355  0008CE  C035  F039         	movff	pinMode@pin,??_pinMode
  1356  0008D2  0E01               	movlw	1
  1357  0008D4  6E3A               	movwf	(??_pinMode+1)^0,c
  1358  0008D6  2A39               	incf	??_pinMode^0,f,c
  1359  0008D8  EF70  F004         	goto	u2004
  1360  0008DC                     u2005:
  1361  0008DC  90D8               	bcf	status,0,c
  1362  0008DE  363A               	rlcf	(??_pinMode+1)^0,f,c
  1363  0008E0                     u2004:
  1364  0008E0  2E39               	decfsz	??_pinMode^0,f,c
  1365  0008E2  EF6E  F004         	goto	u2005
  1366  0008E6  503A               	movf	(??_pinMode+1)^0,w,c
  1367  0008E8  1292               	iorwf	146,f,c	;volatile
  1368  0008EA  EF76  F005         	goto	l76
  1369  0008EE                     l2222:
  1370  0008EE  C035  F039         	movff	pinMode@pin,??_pinMode
  1371  0008F2  0E01               	movlw	1
  1372  0008F4  6E3A               	movwf	(??_pinMode+1)^0,c
  1373  0008F6  2A39               	incf	??_pinMode^0,f,c
  1374  0008F8  EF80  F004         	goto	u2014
  1375  0008FC                     u2015:
  1376  0008FC  90D8               	bcf	status,0,c
  1377  0008FE  363A               	rlcf	(??_pinMode+1)^0,f,c
  1378  000900                     u2014:
  1379  000900  2E39               	decfsz	??_pinMode^0,f,c
  1380  000902  EF7E  F004         	goto	u2015
  1381  000906  503A               	movf	(??_pinMode+1)^0,w,c
  1382  000908  0AFF               	xorlw	255
  1383  00090A  1692               	andwf	146,f,c	;volatile
  1384  00090C  EF76  F005         	goto	l76
  1385  000910                     l2224:
  1386  000910  BE36               	btfsc	(pinMode@pin+1)^0,7,c
  1387  000912  EF96  F004         	goto	u2020
  1388  000916  5036               	movf	(pinMode@pin+1)^0,w,c
  1389  000918  E107               	bnz	u2021
  1390  00091A  0E10               	movlw	16
  1391  00091C  5C35               	subwf	pinMode@pin^0,w,c
  1392  00091E  B0D8               	btfsc	status,0,c
  1393  000920  EF94  F004         	goto	u2021
  1394  000924  EF96  F004         	goto	u2020
  1395  000928                     u2021:
  1396  000928  EFC4  F004         	goto	l2232
  1397  00092C                     u2020:
  1398  00092C                     
  1399                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 60:         if (type){ ((TRISB) |= 
      +                          (1<<(pin-8)));}
  1400  00092C  5037               	movf	pinMode@type^0,w,c
  1401  00092E  1038               	iorwf	(pinMode@type+1)^0,w,c
  1402  000930  B4D8               	btfsc	status,2,c
  1403  000932  EF9D  F004         	goto	u2031
  1404  000936  EF9F  F004         	goto	u2030
  1405  00093A                     u2031:
  1406  00093A  EFB1  F004         	goto	l2230
  1407  00093E                     u2030:
  1408  00093E  C035  F039         	movff	pinMode@pin,??_pinMode
  1409  000942  0EF8               	movlw	-8
  1410  000944  2639               	addwf	??_pinMode^0,f,c
  1411  000946  0E01               	movlw	1
  1412  000948  6E3A               	movwf	(??_pinMode+1)^0,c
  1413  00094A  2A39               	incf	??_pinMode^0,f,c
  1414  00094C  EFAA  F004         	goto	u2044
  1415  000950                     u2045:
  1416  000950  90D8               	bcf	status,0,c
  1417  000952  363A               	rlcf	(??_pinMode+1)^0,f,c
  1418  000954                     u2044:
  1419  000954  2E39               	decfsz	??_pinMode^0,f,c
  1420  000956  EFA8  F004         	goto	u2045
  1421  00095A  503A               	movf	(??_pinMode+1)^0,w,c
  1422  00095C  1293               	iorwf	147,f,c	;volatile
  1423  00095E  EF76  F005         	goto	l76
  1424  000962                     l2230:
  1425  000962  C035  F039         	movff	pinMode@pin,??_pinMode
  1426  000966  0EF8               	movlw	-8
  1427  000968  2639               	addwf	??_pinMode^0,f,c
  1428  00096A  0E01               	movlw	1
  1429  00096C  6E3A               	movwf	(??_pinMode+1)^0,c
  1430  00096E  2A39               	incf	??_pinMode^0,f,c
  1431  000970  EFBC  F004         	goto	u2054
  1432  000974                     u2055:
  1433  000974  90D8               	bcf	status,0,c
  1434  000976  363A               	rlcf	(??_pinMode+1)^0,f,c
  1435  000978                     u2054:
  1436  000978  2E39               	decfsz	??_pinMode^0,f,c
  1437  00097A  EFBA  F004         	goto	u2055
  1438  00097E  503A               	movf	(??_pinMode+1)^0,w,c
  1439  000980  0AFF               	xorlw	255
  1440  000982  1693               	andwf	147,f,c	;volatile
  1441  000984  EF76  F005         	goto	l76
  1442  000988                     l2232:
  1443  000988  BE36               	btfsc	(pinMode@pin+1)^0,7,c
  1444  00098A  EFD2  F004         	goto	u2060
  1445  00098E  5036               	movf	(pinMode@pin+1)^0,w,c
  1446  000990  E107               	bnz	u2061
  1447  000992  0E18               	movlw	24
  1448  000994  5C35               	subwf	pinMode@pin^0,w,c
  1449  000996  B0D8               	btfsc	status,0,c
  1450  000998  EFD0  F004         	goto	u2061
  1451  00099C  EFD2  F004         	goto	u2060
  1452  0009A0                     u2061:
  1453  0009A0  EF00  F005         	goto	l2240
  1454  0009A4                     u2060:
  1455  0009A4                     
  1456                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 63:         if (type){ ((TRISC) |= 
      +                          (1<<(pin-16)));}
  1457  0009A4  5037               	movf	pinMode@type^0,w,c
  1458  0009A6  1038               	iorwf	(pinMode@type+1)^0,w,c
  1459  0009A8  B4D8               	btfsc	status,2,c
  1460  0009AA  EFD9  F004         	goto	u2071
  1461  0009AE  EFDB  F004         	goto	u2070
  1462  0009B2                     u2071:
  1463  0009B2  EFED  F004         	goto	l2238
  1464  0009B6                     u2070:
  1465  0009B6  C035  F039         	movff	pinMode@pin,??_pinMode
  1466  0009BA  0EF0               	movlw	-16
  1467  0009BC  2639               	addwf	??_pinMode^0,f,c
  1468  0009BE  0E01               	movlw	1
  1469  0009C0  6E3A               	movwf	(??_pinMode+1)^0,c
  1470  0009C2  2A39               	incf	??_pinMode^0,f,c
  1471  0009C4  EFE6  F004         	goto	u2084
  1472  0009C8                     u2085:
  1473  0009C8  90D8               	bcf	status,0,c
  1474  0009CA  363A               	rlcf	(??_pinMode+1)^0,f,c
  1475  0009CC                     u2084:
  1476  0009CC  2E39               	decfsz	??_pinMode^0,f,c
  1477  0009CE  EFE4  F004         	goto	u2085
  1478  0009D2  503A               	movf	(??_pinMode+1)^0,w,c
  1479  0009D4  1294               	iorwf	148,f,c	;volatile
  1480  0009D6  EF76  F005         	goto	l76
  1481  0009DA                     l2238:
  1482  0009DA  C035  F039         	movff	pinMode@pin,??_pinMode
  1483  0009DE  0EF0               	movlw	-16
  1484  0009E0  2639               	addwf	??_pinMode^0,f,c
  1485  0009E2  0E01               	movlw	1
  1486  0009E4  6E3A               	movwf	(??_pinMode+1)^0,c
  1487  0009E6  2A39               	incf	??_pinMode^0,f,c
  1488  0009E8  EFF8  F004         	goto	u2094
  1489  0009EC                     u2095:
  1490  0009EC  90D8               	bcf	status,0,c
  1491  0009EE  363A               	rlcf	(??_pinMode+1)^0,f,c
  1492  0009F0                     u2094:
  1493  0009F0  2E39               	decfsz	??_pinMode^0,f,c
  1494  0009F2  EFF6  F004         	goto	u2095
  1495  0009F6  503A               	movf	(??_pinMode+1)^0,w,c
  1496  0009F8  0AFF               	xorlw	255
  1497  0009FA  1694               	andwf	148,f,c	;volatile
  1498  0009FC  EF76  F005         	goto	l76
  1499  000A00                     l2240:
  1500  000A00  BE36               	btfsc	(pinMode@pin+1)^0,7,c
  1501  000A02  EF0E  F005         	goto	u2100
  1502  000A06  5036               	movf	(pinMode@pin+1)^0,w,c
  1503  000A08  E107               	bnz	u2101
  1504  000A0A  0E20               	movlw	32
  1505  000A0C  5C35               	subwf	pinMode@pin^0,w,c
  1506  000A0E  B0D8               	btfsc	status,0,c
  1507  000A10  EF0C  F005         	goto	u2101
  1508  000A14  EF0E  F005         	goto	u2100
  1509  000A18                     u2101:
  1510  000A18  EF3C  F005         	goto	l2248
  1511  000A1C                     u2100:
  1512  000A1C                     
  1513                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 66:         if (type){ ((TRISD) |= 
      +                          (1<<(pin-24)));}
  1514  000A1C  5037               	movf	pinMode@type^0,w,c
  1515  000A1E  1038               	iorwf	(pinMode@type+1)^0,w,c
  1516  000A20  B4D8               	btfsc	status,2,c
  1517  000A22  EF15  F005         	goto	u2111
  1518  000A26  EF17  F005         	goto	u2110
  1519  000A2A                     u2111:
  1520  000A2A  EF29  F005         	goto	l2246
  1521  000A2E                     u2110:
  1522  000A2E  C035  F039         	movff	pinMode@pin,??_pinMode
  1523  000A32  0EE8               	movlw	-24
  1524  000A34  2639               	addwf	??_pinMode^0,f,c
  1525  000A36  0E01               	movlw	1
  1526  000A38  6E3A               	movwf	(??_pinMode+1)^0,c
  1527  000A3A  2A39               	incf	??_pinMode^0,f,c
  1528  000A3C  EF22  F005         	goto	u2124
  1529  000A40                     u2125:
  1530  000A40  90D8               	bcf	status,0,c
  1531  000A42  363A               	rlcf	(??_pinMode+1)^0,f,c
  1532  000A44                     u2124:
  1533  000A44  2E39               	decfsz	??_pinMode^0,f,c
  1534  000A46  EF20  F005         	goto	u2125
  1535  000A4A  503A               	movf	(??_pinMode+1)^0,w,c
  1536  000A4C  1295               	iorwf	149,f,c	;volatile
  1537  000A4E  EF76  F005         	goto	l76
  1538  000A52                     l2246:
  1539  000A52  C035  F039         	movff	pinMode@pin,??_pinMode
  1540  000A56  0EE8               	movlw	-24
  1541  000A58  2639               	addwf	??_pinMode^0,f,c
  1542  000A5A  0E01               	movlw	1
  1543  000A5C  6E3A               	movwf	(??_pinMode+1)^0,c
  1544  000A5E  2A39               	incf	??_pinMode^0,f,c
  1545  000A60  EF34  F005         	goto	u2134
  1546  000A64                     u2135:
  1547  000A64  90D8               	bcf	status,0,c
  1548  000A66  363A               	rlcf	(??_pinMode+1)^0,f,c
  1549  000A68                     u2134:
  1550  000A68  2E39               	decfsz	??_pinMode^0,f,c
  1551  000A6A  EF32  F005         	goto	u2135
  1552  000A6E  503A               	movf	(??_pinMode+1)^0,w,c
  1553  000A70  0AFF               	xorlw	255
  1554  000A72  1695               	andwf	149,f,c	;volatile
  1555  000A74  EF76  F005         	goto	l76
  1556  000A78                     l2248:
  1557  000A78  BE36               	btfsc	(pinMode@pin+1)^0,7,c
  1558  000A7A  EF4A  F005         	goto	u2140
  1559  000A7E  5036               	movf	(pinMode@pin+1)^0,w,c
  1560  000A80  E107               	bnz	u2141
  1561  000A82  0E28               	movlw	40
  1562  000A84  5C35               	subwf	pinMode@pin^0,w,c
  1563  000A86  B0D8               	btfsc	status,0,c
  1564  000A88  EF48  F005         	goto	u2141
  1565  000A8C  EF4A  F005         	goto	u2140
  1566  000A90                     u2141:
  1567  000A90  EF76  F005         	goto	l76
  1568  000A94                     u2140:
  1569  000A94                     
  1570                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 69:         if (type){ ((TRISE) |= 
      +                          (1<<(pin-32)));}
  1571  000A94  5037               	movf	pinMode@type^0,w,c
  1572  000A96  1038               	iorwf	(pinMode@type+1)^0,w,c
  1573  000A98  B4D8               	btfsc	status,2,c
  1574  000A9A  EF51  F005         	goto	u2151
  1575  000A9E  EF53  F005         	goto	u2150
  1576  000AA2                     u2151:
  1577  000AA2  EF65  F005         	goto	l2254
  1578  000AA6                     u2150:
  1579  000AA6  C035  F039         	movff	pinMode@pin,??_pinMode
  1580  000AAA  0EE0               	movlw	-32
  1581  000AAC  2639               	addwf	??_pinMode^0,f,c
  1582  000AAE  0E01               	movlw	1
  1583  000AB0  6E3A               	movwf	(??_pinMode+1)^0,c
  1584  000AB2  2A39               	incf	??_pinMode^0,f,c
  1585  000AB4  EF5E  F005         	goto	u2164
  1586  000AB8                     u2165:
  1587  000AB8  90D8               	bcf	status,0,c
  1588  000ABA  363A               	rlcf	(??_pinMode+1)^0,f,c
  1589  000ABC                     u2164:
  1590  000ABC  2E39               	decfsz	??_pinMode^0,f,c
  1591  000ABE  EF5C  F005         	goto	u2165
  1592  000AC2  503A               	movf	(??_pinMode+1)^0,w,c
  1593  000AC4  1296               	iorwf	150,f,c	;volatile
  1594  000AC6  EF76  F005         	goto	l76
  1595  000ACA                     l2254:
  1596  000ACA  C035  F039         	movff	pinMode@pin,??_pinMode
  1597  000ACE  0EE0               	movlw	-32
  1598  000AD0  2639               	addwf	??_pinMode^0,f,c
  1599  000AD2  0E01               	movlw	1
  1600  000AD4  6E3A               	movwf	(??_pinMode+1)^0,c
  1601  000AD6  2A39               	incf	??_pinMode^0,f,c
  1602  000AD8  EF70  F005         	goto	u2174
  1603  000ADC                     u2175:
  1604  000ADC  90D8               	bcf	status,0,c
  1605  000ADE  363A               	rlcf	(??_pinMode+1)^0,f,c
  1606  000AE0                     u2174:
  1607  000AE0  2E39               	decfsz	??_pinMode^0,f,c
  1608  000AE2  EF6E  F005         	goto	u2175
  1609  000AE6  503A               	movf	(??_pinMode+1)^0,w,c
  1610  000AE8  0AFF               	xorlw	255
  1611  000AEA  1696               	andwf	150,f,c	;volatile
  1612  000AEC                     l76:
  1613  000AEC  0012               	return		;funcret
  1614  000AEE                     __end_of_pinMode:
  1615                           	callstack 0
  1616                           
  1617 ;; *************** function _kpInit *****************
  1618 ;; Defined at:
  1619 ;;		line 89 in file "keypad.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;		None
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg, status,2, status,0
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1633 ;;      Params:         0       0       0       0       0       0       0
  1634 ;;      Locals:         0       0       0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0
  1636 ;;      Totals:         0       0       0       0       0       0       0
  1637 ;;Total ram usage:        0 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text7
  1647  001A18                     __ptext7:
  1648                           	callstack 0
  1649  001A18                     _kpInit:
  1650                           	callstack 30
  1651  001A18                     
  1652                           ;keypad.c: 91:     TRISB &= 0x07;
  1653  001A18  0E07               	movlw	7
  1654  001A1A  1693               	andwf	147,f,c	;volatile
  1655                           
  1656                           ;keypad.c: 93:     TRISD |= 0x0f;
  1657  001A1C  0E0F               	movlw	15
  1658  001A1E  1295               	iorwf	149,f,c	;volatile
  1659  001A20  0012               	return		;funcret
  1660  001A22                     __end_of_kpInit:
  1661                           	callstack 0
  1662                           
  1663 ;; *************** function _chooseSong *****************
  1664 ;; Defined at:
  1665 ;;		line 31 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1679 ;;      Params:         0       0       0       0       0       0       0
  1680 ;;      Locals:         0       0       0       0       0       0       0
  1681 ;;      Temps:          2       0       0       0       0       0       0
  1682 ;;      Totals:         2       0       0       0       0       0       0
  1683 ;;Total ram usage:        2 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:    5
  1686 ;; This function calls:
  1687 ;;		_atraso_ms
  1688 ;;		_kpDebounce
  1689 ;;		_kpRead
  1690 ;;		_lcdCommand
  1691 ;;		_lcdPosition
  1692 ;;		_lcdStr
  1693 ;;		_playSong
  1694 ;;		_ssdDigit
  1695 ;;		_ssdUpdate
  1696 ;; This function is called by:
  1697 ;;		_main
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text8
  1702  001144                     __ptext8:
  1703                           	callstack 0
  1704  001144                     _chooseSong:
  1705                           	callstack 25
  1706  001144                     
  1707                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 32:     kpDebounce();
  1708  001144  EC9E  F006         	call	_kpDebounce	;wreg free
  1709  001148                     
  1710                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 33:     tecla = kpRead();
  1711  001148  EC11  F00D         	call	_kpRead	;wreg free
  1712  00114C  5035               	movf	?_kpRead^0,w,c
  1713  00114E  6E1F               	movwf	_tecla^0,c
  1714  001150                     
  1715                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 34:     if (((tecla) & (1<<(3)))
      +                           || ((tecla) & (1<<(7)))) {
  1716  001150  B61F               	btfsc	_tecla^0,3,c
  1717  001152  EFAD  F008         	goto	u2301
  1718  001156  EFAF  F008         	goto	u2300
  1719  00115A                     u2301:
  1720  00115A  EFB6  F008         	goto	l2412
  1721  00115E                     u2300:
  1722  00115E  AE1F               	btfss	_tecla^0,7,c
  1723  001160  EFB4  F008         	goto	u2311
  1724  001164  EFB6  F008         	goto	u2310
  1725  001168                     u2311:
  1726  001168  EF3F  F009         	goto	l238
  1727  00116C                     u2310:
  1728  00116C                     l2412:
  1729                           
  1730                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 35:         flag = 1;
  1731  00116C  0E01               	movlw	1
  1732  00116E  6E33               	movwf	_flag^0,c
  1733  001170                     l2414:
  1734                           
  1735                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 37:             ssdUpdate();
  1736  001170  EC5B  F007         	call	_ssdUpdate	;wreg free
  1737  001174                     
  1738                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 38:             kpDebounce();
  1739  001174  EC9E  F006         	call	_kpDebounce	;wreg free
  1740  001178                     
  1741                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 39:             atraso_ms(10);
  1742  001178  0E00               	movlw	0
  1743  00117A  6E36               	movwf	(atraso_ms@t+1)^0,c
  1744  00117C  0E0A               	movlw	10
  1745  00117E  6E35               	movwf	atraso_ms@t^0,c
  1746  001180  EC9F  F00B         	call	_atraso_ms	;wreg free
  1747  001184                     
  1748                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 40:             if ((kpRead() !=
      +                           tecla) || flag == 1) {
  1749  001184  501F               	movf	_tecla^0,w,c
  1750  001186  6E48               	movwf	??_chooseSong^0,c
  1751  001188  6A49               	clrf	(??_chooseSong+1)^0,c
  1752  00118A  EC11  F00D         	call	_kpRead	;wreg free
  1753  00118E  5048               	movf	??_chooseSong^0,w,c
  1754  001190  1835               	xorwf	?_kpRead^0,w,c
  1755  001192  E107               	bnz	u2321
  1756  001194  5049               	movf	(??_chooseSong+1)^0,w,c
  1757  001196  1836               	xorwf	(?_kpRead+1)^0,w,c
  1758  001198  A4D8               	btfss	status,2,c
  1759  00119A  EFD1  F008         	goto	u2321
  1760  00119E  EFD3  F008         	goto	u2320
  1761  0011A2                     u2321:
  1762  0011A2  EFDB  F008         	goto	l2424
  1763  0011A6                     u2320:
  1764  0011A6  0433               	decf	_flag^0,w,c
  1765  0011A8  A4D8               	btfss	status,2,c
  1766  0011AA  EFD9  F008         	goto	u2331
  1767  0011AE  EFDB  F008         	goto	u2330
  1768  0011B2                     u2331:
  1769  0011B2  EFB8  F008         	goto	l2414
  1770  0011B6                     u2330:
  1771  0011B6                     l2424:
  1772                           
  1773                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 41:                 tecla = kpRe
      +                          ad();
  1774  0011B6  EC11  F00D         	call	_kpRead	;wreg free
  1775  0011BA  5035               	movf	?_kpRead^0,w,c
  1776  0011BC  6E1F               	movwf	_tecla^0,c
  1777  0011BE                     
  1778                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 42:                 if (((tecla)
      +                           & (1<<(3)))) {
  1779  0011BE  A61F               	btfss	_tecla^0,3,c
  1780  0011C0  EFE4  F008         	goto	u2341
  1781  0011C4  EFE6  F008         	goto	u2340
  1782  0011C8                     u2341:
  1783  0011C8  EFF5  F008         	goto	l228
  1784  0011CC                     u2340:
  1785  0011CC                     
  1786                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 43:                     if (indi
      +                          ce == 0) {
  1787  0011CC  5034               	movf	_indice^0,w,c
  1788  0011CE  A4D8               	btfss	status,2,c
  1789  0011D0  EFEC  F008         	goto	u2351
  1790  0011D4  EFEE  F008         	goto	u2350
  1791  0011D8                     u2351:
  1792  0011D8  EFF2  F008         	goto	l2432
  1793  0011DC                     u2350:
  1794  0011DC                     
  1795                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 44:                         indi
      +                          ce = 9;
  1796  0011DC  0E09               	movlw	9
  1797  0011DE  6E34               	movwf	_indice^0,c
  1798                           
  1799                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 45:                     } else {
  1800  0011E0  EF17  F009         	goto	l2442
  1801  0011E4                     l2432:
  1802                           
  1803                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 46:                         indi
      +                          ce -= 1;
  1804  0011E4  0634               	decf	_indice^0,f,c
  1805  0011E6  EF17  F009         	goto	l2442
  1806  0011EA                     l228:
  1807  0011EA  AE1F               	btfss	_tecla^0,7,c
  1808  0011EC  EFFA  F008         	goto	u2361
  1809  0011F0  EFFC  F008         	goto	u2360
  1810  0011F4                     u2361:
  1811  0011F4  EF0C  F009         	goto	l232
  1812  0011F8                     u2360:
  1813  0011F8                     
  1814                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 49:                     if (indi
      +                          ce == 9) {
  1815  0011F8  0E09               	movlw	9
  1816  0011FA  1834               	xorwf	_indice^0,w,c
  1817  0011FC  A4D8               	btfss	status,2,c
  1818  0011FE  EF03  F009         	goto	u2371
  1819  001202  EF05  F009         	goto	u2370
  1820  001206                     u2371:
  1821  001206  EF09  F009         	goto	l2438
  1822  00120A                     u2370:
  1823  00120A                     
  1824                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 50:                         indi
      +                          ce = 0;
  1825  00120A  0E00               	movlw	0
  1826  00120C  6E34               	movwf	_indice^0,c
  1827                           
  1828                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 51:                     } else {
  1829  00120E  EF17  F009         	goto	l2442
  1830  001212                     l2438:
  1831                           
  1832                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 52:                         indi
      +                          ce += 1;
  1833  001212  2A34               	incf	_indice^0,f,c
  1834  001214  EF17  F009         	goto	l2442
  1835  001218                     l232:
  1836  001218  A01F               	btfss	_tecla^0,0,c
  1837  00121A  EF11  F009         	goto	u2381
  1838  00121E  EF13  F009         	goto	u2380
  1839  001222                     u2381:
  1840  001222  EF17  F009         	goto	l2442
  1841  001226                     u2380:
  1842  001226                     
  1843                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 55:                     flag = 0
      +                          ;
  1844  001226  0E00               	movlw	0
  1845  001228  6E33               	movwf	_flag^0,c
  1846                           
  1847                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 56:                     break;
  1848  00122A  EF3D  F009         	goto	l2454
  1849  00122E                     l2442:
  1850                           
  1851                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 58:                 lcdCommand(0
      +                          x01);
  1852  00122E  0E01               	movlw	1
  1853  001230  ECE8  F00A         	call	_lcdCommand
  1854                           
  1855                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 59:                 lcdPosition(
      +                          1, 0);
  1856  001234  0E00               	movlw	0
  1857  001236  6E3D               	movwf	lcdPosition@coluna^0,c
  1858  001238  0E01               	movlw	1
  1859  00123A  EC02  F00C         	call	_lcdPosition
  1860  00123E                     
  1861                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 60:                 lcdStr("<-(1
      +                          ) (*)  (2)->");
  1862  00123E  0E11               	movlw	low STR_4
  1863  001240  6E3D               	movwf	lcdStr@str^0,c
  1864  001242  0E06               	movlw	high STR_4
  1865  001244  6E3E               	movwf	(lcdStr@str+1)^0,c
  1866  001246  EC63  F00B         	call	_lcdStr	;wreg free
  1867  00124A                     
  1868                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 61:                 lcdPosition(
      +                          0, 0);
  1869  00124A  0E00               	movlw	0
  1870  00124C  6E3D               	movwf	lcdPosition@coluna^0,c
  1871  00124E  0E00               	movlw	0
  1872  001250  EC02  F00C         	call	_lcdPosition
  1873  001254                     
  1874                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 62:                 lcdStr(music
      +                          as[indice].nome);
  1875  001254  5034               	movf	_indice^0,w,c
  1876  001256  0D13               	mullw	19
  1877  001258  0E02               	movlw	low (_musicas+2)
  1878  00125A  24F3               	addwf	243,w,c
  1879  00125C  6E3D               	movwf	lcdStr@str^0,c
  1880  00125E  0E01               	movlw	high (_musicas+2)
  1881  001260  20F4               	addwfc	prodh,w,c
  1882  001262  6E3E               	movwf	(lcdStr@str+1)^0,c
  1883  001264  EC63  F00B         	call	_lcdStr	;wreg free
  1884  001268                     
  1885                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 63:                 ssdDigit(ind
      +                          ice, 3);
  1886  001268  0E03               	movlw	3
  1887  00126A  6E35               	movwf	ssdDigit@pos^0,c
  1888  00126C  5034               	movf	_indice^0,w,c
  1889  00126E  EC2F  F00C         	call	_ssdDigit
  1890  001272                     
  1891                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 64:                 flag = 0;
  1892  001272  0E00               	movlw	0
  1893  001274  6E33               	movwf	_flag^0,c
  1894  001276  EFB8  F008         	goto	l2414
  1895  00127A                     l2454:
  1896                           
  1897                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 67:         playSong();
  1898  00127A  EC28  F003         	call	_playSong	;wreg free
  1899  00127E                     l238:
  1900  00127E  0012               	return		;funcret
  1901  001280                     __end_of_chooseSong:
  1902                           	callstack 0
  1903                           
  1904 ;; *************** function _playSong *****************
  1905 ;; Defined at:
  1906 ;;		line 71 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;		None
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  j               1   18[COMRAM] unsigned char 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1920 ;;      Params:         0       0       0       0       0       0       0
  1921 ;;      Locals:         5       0       0       0       0       0       0
  1922 ;;      Temps:          0       0       0       0       0       0       0
  1923 ;;      Totals:         5       0       0       0       0       0       0
  1924 ;;Total ram usage:        5 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:    4
  1927 ;; This function calls:
  1928 ;;		___awdiv
  1929 ;;		___awmod
  1930 ;;		_alterarVolume
  1931 ;;		_atraso_ms
  1932 ;;		_kpDebounce
  1933 ;;		_kpRead
  1934 ;;		_lcdCommand
  1935 ;;		_lcdPosition
  1936 ;;		_lcdStr
  1937 ;;		_ssdDigit
  1938 ;;		_ssdUpdate
  1939 ;; This function is called by:
  1940 ;;		_chooseSong
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text9
  1945  000650                     __ptext9:
  1946                           	callstack 0
  1947  000650                     _playSong:
  1948                           	callstack 25
  1949  000650                     
  1950                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 72:     lcdCommand(0x01);
  1951  000650  0E01               	movlw	1
  1952  000652  ECE8  F00A         	call	_lcdCommand
  1953                           
  1954                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 73:     lcdPosition(0, 0);
  1955  000656  0E00               	movlw	0
  1956  000658  6E3D               	movwf	lcdPosition@coluna^0,c
  1957  00065A  0E00               	movlw	0
  1958  00065C  EC02  F00C         	call	_lcdPosition
  1959  000660                     
  1960                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 74:     lcdStr(musicas[indice].n
      +                          ome);
  1961  000660  5034               	movf	_indice^0,w,c
  1962  000662  0D13               	mullw	19
  1963  000664  0E02               	movlw	low (_musicas+2)
  1964  000666  24F3               	addwf	243,w,c
  1965  000668  6E3D               	movwf	lcdStr@str^0,c
  1966  00066A  0E01               	movlw	high (_musicas+2)
  1967  00066C  20F4               	addwfc	prodh,w,c
  1968  00066E  6E3E               	movwf	(lcdStr@str+1)^0,c
  1969  000670  EC63  F00B         	call	_lcdStr	;wreg free
  1970  000674                     
  1971                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 75:     lcdPosition(1, 0);
  1972  000674  0E00               	movlw	0
  1973  000676  6E3D               	movwf	lcdPosition@coluna^0,c
  1974  000678  0E01               	movlw	1
  1975  00067A  EC02  F00C         	call	_lcdPosition
  1976  00067E                     
  1977                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 76:     lcdStr("-(1)  (*)  (2)+"
      +                          );
  1978  00067E  0E33               	movlw	low STR_6
  1979  000680  6E3D               	movwf	lcdStr@str^0,c
  1980  000682  0E06               	movlw	high STR_6
  1981  000684  6E3E               	movwf	(lcdStr@str+1)^0,c
  1982  000686  EC63  F00B         	call	_lcdStr	;wreg free
  1983  00068A                     
  1984                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 78:     tempo = musicas[indice].
      +                          duracao;
  1985  00068A  5034               	movf	_indice^0,w,c
  1986  00068C  0D13               	mullw	19
  1987  00068E  0E00               	movlw	low _musicas
  1988  000690  24F3               	addwf	243,w,c
  1989  000692  6ED9               	movwf	fsr2l,c
  1990  000694  0E01               	movlw	high _musicas
  1991  000696  20F4               	addwfc	prodh,w,c
  1992  000698  6EDA               	movwf	fsr2h,c
  1993  00069A  50DF               	movf	indf2,w,c
  1994  00069C  6E32               	movwf	_tempo^0,c
  1995                           
  1996                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 80:     while (tempo != 0) {
  1997  00069E  EF3F  F004         	goto	l2340
  1998  0006A2                     l2270:
  1999                           
  2000                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 81:         minuto1 = (tempo / 6
      +                          0) % 10;
  2001  0006A2  0E00               	movlw	0
  2002  0006A4  6E38               	movwf	(___awdiv@divisor+1)^0,c
  2003  0006A6  0E3C               	movlw	60
  2004  0006A8  6E37               	movwf	___awdiv@divisor^0,c
  2005  0006AA  C032  F035         	movff	_tempo,___awdiv@dividend
  2006  0006AE  6A36               	clrf	(___awdiv@dividend+1)^0,c
  2007  0006B0  EC40  F009         	call	___awdiv	;wreg free
  2008  0006B4  C035  F03D         	movff	?___awdiv,___awmod@dividend
  2009  0006B8  C036  F03E         	movff	?___awdiv+1,___awmod@dividend+1
  2010  0006BC  0E00               	movlw	0
  2011  0006BE  6E40               	movwf	(___awmod@divisor+1)^0,c
  2012  0006C0  0E0A               	movlw	10
  2013  0006C2  6E3F               	movwf	___awmod@divisor^0,c
  2014  0006C4  ECA2  F009         	call	___awmod	;wreg free
  2015  0006C8  503D               	movf	?___awmod^0,w,c
  2016  0006CA  6E31               	movwf	_minuto1^0,c
  2017                           
  2018                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 82:         minuto2 = (tempo / 6
      +                          0) / 10;
  2019  0006CC  0E00               	movlw	0
  2020  0006CE  6E38               	movwf	(___awdiv@divisor+1)^0,c
  2021  0006D0  0E3C               	movlw	60
  2022  0006D2  6E37               	movwf	___awdiv@divisor^0,c
  2023  0006D4  C032  F035         	movff	_tempo,___awdiv@dividend
  2024  0006D8  6A36               	clrf	(___awdiv@dividend+1)^0,c
  2025  0006DA  EC40  F009         	call	___awdiv	;wreg free
  2026  0006DE  C035  F043         	movff	?___awdiv,_playSong$957
  2027  0006E2  C036  F044         	movff	?___awdiv+1,_playSong$957+1
  2028                           
  2029                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 82:         minuto2 = (tempo / 6
      +                          0) / 10;
  2030  0006E6  C043  F035         	movff	_playSong$957,___awdiv@dividend
  2031  0006EA  C044  F036         	movff	_playSong$957+1,___awdiv@dividend+1
  2032  0006EE  0E00               	movlw	0
  2033  0006F0  6E38               	movwf	(___awdiv@divisor+1)^0,c
  2034  0006F2  0E0A               	movlw	10
  2035  0006F4  6E37               	movwf	___awdiv@divisor^0,c
  2036  0006F6  EC40  F009         	call	___awdiv	;wreg free
  2037  0006FA  5035               	movf	?___awdiv^0,w,c
  2038  0006FC  6E30               	movwf	_minuto2^0,c
  2039                           
  2040                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 83:         segundo1 = (tempo % 
      +                          60) % 10;
  2041  0006FE  0E00               	movlw	0
  2042  000700  6E40               	movwf	(___awmod@divisor+1)^0,c
  2043  000702  0E3C               	movlw	60
  2044  000704  6E3F               	movwf	___awmod@divisor^0,c
  2045  000706  C032  F03D         	movff	_tempo,___awmod@dividend
  2046  00070A  6A3E               	clrf	(___awmod@dividend+1)^0,c
  2047  00070C  ECA2  F009         	call	___awmod	;wreg free
  2048  000710  C03D  F045         	movff	?___awmod,_playSong$958
  2049  000714  C03E  F046         	movff	?___awmod+1,_playSong$958+1
  2050                           
  2051                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 83:         segundo1 = (tempo % 
      +                          60) % 10;
  2052  000718  C045  F03D         	movff	_playSong$958,___awmod@dividend
  2053  00071C  C046  F03E         	movff	_playSong$958+1,___awmod@dividend+1
  2054  000720  0E00               	movlw	0
  2055  000722  6E40               	movwf	(___awmod@divisor+1)^0,c
  2056  000724  0E0A               	movlw	10
  2057  000726  6E3F               	movwf	___awmod@divisor^0,c
  2058  000728  ECA2  F009         	call	___awmod	;wreg free
  2059  00072C  503D               	movf	?___awmod^0,w,c
  2060  00072E  6E2F               	movwf	_segundo1^0,c
  2061                           
  2062                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 84:         segundo2 = (tempo % 
      +                          60) / 10;
  2063  000730  0E00               	movlw	0
  2064  000732  6E40               	movwf	(___awmod@divisor+1)^0,c
  2065  000734  0E3C               	movlw	60
  2066  000736  6E3F               	movwf	___awmod@divisor^0,c
  2067  000738  C032  F03D         	movff	_tempo,___awmod@dividend
  2068  00073C  6A3E               	clrf	(___awmod@dividend+1)^0,c
  2069  00073E  ECA2  F009         	call	___awmod	;wreg free
  2070  000742  C03D  F035         	movff	?___awmod,___awdiv@dividend
  2071  000746  C03E  F036         	movff	?___awmod+1,___awdiv@dividend+1
  2072  00074A  0E00               	movlw	0
  2073  00074C  6E38               	movwf	(___awdiv@divisor+1)^0,c
  2074  00074E  0E0A               	movlw	10
  2075  000750  6E37               	movwf	___awdiv@divisor^0,c
  2076  000752  EC40  F009         	call	___awdiv	;wreg free
  2077  000756  5035               	movf	?___awdiv^0,w,c
  2078  000758  6E2E               	movwf	_segundo2^0,c
  2079                           
  2080                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 86:         ssdDigit(minuto2, 0)
      +                          ;
  2081  00075A  0E00               	movlw	0
  2082  00075C  6E35               	movwf	ssdDigit@pos^0,c
  2083  00075E  5030               	movf	_minuto2^0,w,c
  2084  000760  EC2F  F00C         	call	_ssdDigit
  2085                           
  2086                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 87:         ssdDigit(minuto1, 1)
      +                          ;
  2087  000764  0E01               	movlw	1
  2088  000766  6E35               	movwf	ssdDigit@pos^0,c
  2089  000768  5031               	movf	_minuto1^0,w,c
  2090  00076A  EC2F  F00C         	call	_ssdDigit
  2091                           
  2092                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 88:         ssdDigit(segundo2, 2
      +                          );
  2093  00076E  0E02               	movlw	2
  2094  000770  6E35               	movwf	ssdDigit@pos^0,c
  2095  000772  502E               	movf	_segundo2^0,w,c
  2096  000774  EC2F  F00C         	call	_ssdDigit
  2097                           
  2098                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 89:         ssdDigit(segundo1, 3
      +                          );
  2099  000778  0E03               	movlw	3
  2100  00077A  6E35               	movwf	ssdDigit@pos^0,c
  2101  00077C  502F               	movf	_segundo1^0,w,c
  2102  00077E  EC2F  F00C         	call	_ssdDigit
  2103  000782                     
  2104                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 91:         for (unsigned char j
      +                           = 0; j < 100; j++) {
  2105  000782  0E00               	movlw	0
  2106  000784  6E47               	movwf	playSong@j^0,c
  2107  000786                     l2278:
  2108                           
  2109                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 92:             ssdUpdate();
  2110  000786  EC5B  F007         	call	_ssdUpdate	;wreg free
  2111  00078A                     
  2112                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 93:             atraso_ms(10);
  2113  00078A  0E00               	movlw	0
  2114  00078C  6E36               	movwf	(atraso_ms@t+1)^0,c
  2115  00078E  0E0A               	movlw	10
  2116  000790  6E35               	movwf	atraso_ms@t^0,c
  2117  000792  EC9F  F00B         	call	_atraso_ms	;wreg free
  2118  000796                     
  2119                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 94:             kpDebounce();
  2120  000796  EC9E  F006         	call	_kpDebounce	;wreg free
  2121  00079A                     
  2122                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 95:             tecla = kpRead()
      +                          ;
  2123  00079A  EC11  F00D         	call	_kpRead	;wreg free
  2124  00079E  5035               	movf	?_kpRead^0,w,c
  2125  0007A0  6E1F               	movwf	_tecla^0,c
  2126  0007A2                     
  2127                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 96:             if (((tecla) & (
      +                          1<<(3)))) {
  2128  0007A2  A61F               	btfss	_tecla^0,3,c
  2129  0007A4  EFD6  F003         	goto	u2191
  2130  0007A8  EFD8  F003         	goto	u2190
  2131  0007AC                     u2191:
  2132  0007AC  EFEC  F003         	goto	l2300
  2133  0007B0                     u2190:
  2134  0007B0  EFE2  F003         	goto	l2296
  2135  0007B4                     l2290:
  2136                           
  2137                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 98:                     ssdUpdat
      +                          e();
  2138  0007B4  EC5B  F007         	call	_ssdUpdate	;wreg free
  2139  0007B8                     
  2140                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 99:                     kpDeboun
      +                          ce();
  2141  0007B8  EC9E  F006         	call	_kpDebounce	;wreg free
  2142  0007BC                     
  2143                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 100:                     tecla =
      +                           kpRead();
  2144  0007BC  EC11  F00D         	call	_kpRead	;wreg free
  2145  0007C0  5035               	movf	?_kpRead^0,w,c
  2146  0007C2  6E1F               	movwf	_tecla^0,c
  2147  0007C4                     l2296:
  2148                           
  2149                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 97:                 while(((tecl
      +                          a) & (1<<(3)))) {
  2150  0007C4  B61F               	btfsc	_tecla^0,3,c
  2151  0007C6  EFE7  F003         	goto	u2201
  2152  0007CA  EFE9  F003         	goto	u2200
  2153  0007CE                     u2201:
  2154  0007CE  EFDA  F003         	goto	l2290
  2155  0007D2                     u2200:
  2156  0007D2                     
  2157                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 102:                 alterarVolu
      +                          me(0);
  2158  0007D2  0E00               	movlw	0
  2159  0007D4  EC03  F008         	call	_alterarVolume
  2160  0007D8                     l2300:
  2161                           
  2162                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 104:             if (((tecla) & 
      +                          (1<<(7)))) {
  2163  0007D8  AE1F               	btfss	_tecla^0,7,c
  2164  0007DA  EFF1  F003         	goto	u2211
  2165  0007DE  EFF3  F003         	goto	u2210
  2166  0007E2                     u2211:
  2167  0007E2  EF07  F004         	goto	l2314
  2168  0007E6                     u2210:
  2169  0007E6  EFFD  F003         	goto	l2310
  2170  0007EA                     l2304:
  2171                           
  2172                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 106:                     ssdUpda
      +                          te();
  2173  0007EA  EC5B  F007         	call	_ssdUpdate	;wreg free
  2174  0007EE                     
  2175                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 107:                     kpDebou
      +                          nce();
  2176  0007EE  EC9E  F006         	call	_kpDebounce	;wreg free
  2177  0007F2                     
  2178                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 108:                     tecla =
      +                           kpRead();
  2179  0007F2  EC11  F00D         	call	_kpRead	;wreg free
  2180  0007F6  5035               	movf	?_kpRead^0,w,c
  2181  0007F8  6E1F               	movwf	_tecla^0,c
  2182  0007FA                     l2310:
  2183                           
  2184                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 105:                 while(((tec
      +                          la) & (1<<(7)))) {
  2185  0007FA  BE1F               	btfsc	_tecla^0,7,c
  2186  0007FC  EF02  F004         	goto	u2221
  2187  000800  EF04  F004         	goto	u2220
  2188  000804                     u2221:
  2189  000804  EFF5  F003         	goto	l2304
  2190  000808                     u2220:
  2191  000808                     
  2192                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 110:                 alterarVolu
      +                          me(1);
  2193  000808  0E01               	movlw	1
  2194  00080A  EC03  F008         	call	_alterarVolume
  2195  00080E                     l2314:
  2196                           
  2197                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 112:             if (((tecla) & 
      +                          (1<<(0)))) {
  2198  00080E  A01F               	btfss	_tecla^0,0,c
  2199  000810  EF0C  F004         	goto	u2231
  2200  000814  EF0E  F004         	goto	u2230
  2201  000818                     u2231:
  2202  000818  EF2D  F004         	goto	l2332
  2203  00081C                     u2230:
  2204  00081C  EF18  F004         	goto	l2324
  2205  000820                     l2318:
  2206                           
  2207                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 114:                     ssdUpda
      +                          te();
  2208  000820  EC5B  F007         	call	_ssdUpdate	;wreg free
  2209  000824                     
  2210                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 115:                     kpDebou
      +                          nce();
  2211  000824  EC9E  F006         	call	_kpDebounce	;wreg free
  2212  000828                     
  2213                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 116:                     tecla =
      +                           kpRead();
  2214  000828  EC11  F00D         	call	_kpRead	;wreg free
  2215  00082C  5035               	movf	?_kpRead^0,w,c
  2216  00082E  6E1F               	movwf	_tecla^0,c
  2217  000830                     l2324:
  2218                           
  2219                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 113:                 while(((tec
      +                          la) & (1<<(0)))) {
  2220  000830  B01F               	btfsc	_tecla^0,0,c
  2221  000832  EF1D  F004         	goto	u2241
  2222  000836  EF1F  F004         	goto	u2240
  2223  00083A                     u2241:
  2224  00083A  EF10  F004         	goto	l2318
  2225  00083E                     u2240:
  2226  00083E                     
  2227                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 118:                 if (pause =
      +                          = 0) {pause = 1;} else {pause = 0;}
  2228  00083E  501E               	movf	_pause^0,w,c
  2229  000840  A4D8               	btfss	status,2,c
  2230  000842  EF25  F004         	goto	u2251
  2231  000846  EF27  F004         	goto	u2250
  2232  00084A                     u2251:
  2233  00084A  EF2B  F004         	goto	l2330
  2234  00084E                     u2250:
  2235  00084E  0E01               	movlw	1
  2236  000850  6E1E               	movwf	_pause^0,c
  2237  000852  EF2D  F004         	goto	l2332
  2238  000856                     l2330:
  2239  000856  0E00               	movlw	0
  2240  000858  6E1E               	movwf	_pause^0,c
  2241  00085A                     l2332:
  2242                           
  2243                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 120:         }
  2244  00085A  2A47               	incf	playSong@j^0,f,c
  2245  00085C  0E63               	movlw	99
  2246  00085E  6447               	cpfsgt	playSong@j^0,c
  2247  000860  EF34  F004         	goto	u2261
  2248  000864  EF36  F004         	goto	u2260
  2249  000868                     u2261:
  2250  000868  EFC3  F003         	goto	l2278
  2251  00086C                     u2260:
  2252  00086C                     
  2253                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 121:         if (pause == 0) {
  2254  00086C  501E               	movf	_pause^0,w,c
  2255  00086E  A4D8               	btfss	status,2,c
  2256  000870  EF3C  F004         	goto	u2271
  2257  000874  EF3E  F004         	goto	u2270
  2258  000878                     u2271:
  2259  000878  EF3F  F004         	goto	l2340
  2260  00087C                     u2270:
  2261  00087C                     
  2262                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 122:             tempo -= 1;
  2263  00087C  0632               	decf	_tempo^0,f,c
  2264  00087E                     l2340:
  2265                           
  2266                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 80:     while (tempo != 0) {
  2267  00087E  5032               	movf	_tempo^0,w,c
  2268  000880  A4D8               	btfss	status,2,c
  2269  000882  EF45  F004         	goto	u2281
  2270  000886  EF47  F004         	goto	u2280
  2271  00088A                     u2281:
  2272  00088A  EF51  F003         	goto	l2270
  2273  00088E                     u2280:
  2274  00088E                     
  2275                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 125:     ((TRISC) |= (1<<(1)));
  2276  00088E  8294               	bsf	148,1,c	;volatile
  2277  000890                     
  2278                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 126:     atraso_ms(500);
  2279  000890  0E01               	movlw	1
  2280  000892  6E36               	movwf	(atraso_ms@t+1)^0,c
  2281  000894  0EF4               	movlw	244
  2282  000896  6E35               	movwf	atraso_ms@t^0,c
  2283  000898  EC9F  F00B         	call	_atraso_ms	;wreg free
  2284  00089C                     
  2285                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 127:     ((TRISC) |= (1<<(0)));
  2286  00089C  8094               	bsf	148,0,c	;volatile
  2287  00089E  0012               	return		;funcret
  2288  0008A0                     __end_of_playSong:
  2289                           	callstack 0
  2290                           
  2291 ;; *************** function _ssdUpdate *****************
  2292 ;; Defined at:
  2293 ;;		line 54 in file "ssd.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;		None
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;		None
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2307 ;;      Params:         0       0       0       0       0       0       0
  2308 ;;      Locals:         0       0       0       0       0       0       0
  2309 ;;      Temps:          2       0       0       0       0       0       0
  2310 ;;      Totals:         2       0       0       0       0       0       0
  2311 ;;Total ram usage:        2 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; Hardware stack levels required when called:    1
  2314 ;; This function calls:
  2315 ;;		_digitalWrite
  2316 ;; This function is called by:
  2317 ;;		_chooseSong
  2318 ;;		_playSong
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text10
  2323  000EB6                     __ptext10:
  2324                           	callstack 0
  2325  000EB6                     _ssdUpdate:
  2326                           	callstack 28
  2327  000EB6                     
  2328                           ;ssd.c: 58:     TRISD= 0x00;
  2329  000EB6  0E00               	movlw	0
  2330  000EB8  6E95               	movwf	149,c	;volatile
  2331  000EBA                     
  2332                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  2333  000EBA  0E00               	movlw	0
  2334  000EBC  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2335  000EBE  0E02               	movlw	2
  2336  000EC0  6E35               	movwf	digitalWrite@pin^0,c
  2337  000EC2  0E00               	movlw	0
  2338  000EC4  6E38               	movwf	(digitalWrite@value+1)^0,c
  2339  000EC6  0E00               	movlw	0
  2340  000EC8  6E37               	movwf	digitalWrite@value^0,c
  2341  000ECA  EC77  F005         	call	_digitalWrite	;wreg free
  2342  000ECE                     
  2343                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  2344  000ECE  0E00               	movlw	0
  2345  000ED0  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2346  000ED2  0E03               	movlw	3
  2347  000ED4  6E35               	movwf	digitalWrite@pin^0,c
  2348  000ED6  0E00               	movlw	0
  2349  000ED8  6E38               	movwf	(digitalWrite@value+1)^0,c
  2350  000EDA  0E00               	movlw	0
  2351  000EDC  6E37               	movwf	digitalWrite@value^0,c
  2352  000EDE  EC77  F005         	call	_digitalWrite	;wreg free
  2353  000EE2                     
  2354                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  2355  000EE2  0E00               	movlw	0
  2356  000EE4  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2357  000EE6  0E04               	movlw	4
  2358  000EE8  6E35               	movwf	digitalWrite@pin^0,c
  2359  000EEA  0E00               	movlw	0
  2360  000EEC  6E38               	movwf	(digitalWrite@value+1)^0,c
  2361  000EEE  0E00               	movlw	0
  2362  000EF0  6E37               	movwf	digitalWrite@value^0,c
  2363  000EF2  EC77  F005         	call	_digitalWrite	;wreg free
  2364  000EF6                     
  2365                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  2366  000EF6  0E00               	movlw	0
  2367  000EF8  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2368  000EFA  0E05               	movlw	5
  2369  000EFC  6E35               	movwf	digitalWrite@pin^0,c
  2370  000EFE  0E00               	movlw	0
  2371  000F00  6E38               	movwf	(digitalWrite@value+1)^0,c
  2372  000F02  0E00               	movlw	0
  2373  000F04  6E37               	movwf	digitalWrite@value^0,c
  2374  000F06  EC77  F005         	call	_digitalWrite	;wreg free
  2375                           
  2376                           ;ssd.c: 66:     PORTD = 0x00;
  2377  000F0A  0E00               	movlw	0
  2378  000F0C  6E83               	movwf	131,c	;volatile
  2379                           
  2380                           ;ssd.c: 69:     switch (display)
  2381  000F0E  EFE5  F007         	goto	l2058
  2382  000F12                     l2030:
  2383                           
  2384                           ;ssd.c: 72:             PORTD = valor[v0];
  2385  000F12  0E01               	movlw	low _valor
  2386  000F14  242B               	addwf	_v0^0,w,c
  2387  000F16  6EF6               	movwf	tblptrl,c
  2388  000F18  6AF7               	clrf	tblptrh,c
  2389  000F1A  0E06               	movlw	high _valor
  2390  000F1C  22F7               	addwfc	tblptrh,f,c
  2391  000F1E                     	if	0	;There are less than 3 active tblptr bytes
  2392  000F1E                     	endif
  2393  000F1E  0008               	tblrd		*
  2394  000F20  CFF5 FF83          	movff	tablat,3971	;volatile
  2395  000F24                     
  2396                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  2397  000F24  0E00               	movlw	0
  2398  000F26  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2399  000F28  0E02               	movlw	2
  2400  000F2A  6E35               	movwf	digitalWrite@pin^0,c
  2401  000F2C  0E00               	movlw	0
  2402  000F2E  6E38               	movwf	(digitalWrite@value+1)^0,c
  2403  000F30  0E01               	movlw	1
  2404  000F32  6E37               	movwf	digitalWrite@value^0,c
  2405  000F34  EC77  F005         	call	_digitalWrite	;wreg free
  2406  000F38                     
  2407                           ;ssd.c: 74:             display = 1;
  2408  000F38  0E01               	movlw	1
  2409  000F3A  6E2C               	movwf	_display^0,c
  2410                           
  2411                           ;ssd.c: 75:             break;
  2412  000F3C  EF02  F008         	goto	l322
  2413  000F40                     l2036:
  2414                           
  2415                           ;ssd.c: 78:             PORTD = valor[v1];
  2416  000F40  0E01               	movlw	low _valor
  2417  000F42  242A               	addwf	_v1^0,w,c
  2418  000F44  6EF6               	movwf	tblptrl,c
  2419  000F46  6AF7               	clrf	tblptrh,c
  2420  000F48  0E06               	movlw	high _valor
  2421  000F4A  22F7               	addwfc	tblptrh,f,c
  2422  000F4C                     	if	0	;There are less than 3 active tblptr bytes
  2423  000F4C                     	endif
  2424  000F4C  0008               	tblrd		*
  2425  000F4E  CFF5 FF83          	movff	tablat,3971	;volatile
  2426  000F52                     
  2427                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  2428  000F52  0E00               	movlw	0
  2429  000F54  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2430  000F56  0E03               	movlw	3
  2431  000F58  6E35               	movwf	digitalWrite@pin^0,c
  2432  000F5A  0E00               	movlw	0
  2433  000F5C  6E38               	movwf	(digitalWrite@value+1)^0,c
  2434  000F5E  0E01               	movlw	1
  2435  000F60  6E37               	movwf	digitalWrite@value^0,c
  2436  000F62  EC77  F005         	call	_digitalWrite	;wreg free
  2437  000F66                     
  2438                           ;ssd.c: 80:             display = 2;
  2439  000F66  0E02               	movlw	2
  2440  000F68  6E2C               	movwf	_display^0,c
  2441                           
  2442                           ;ssd.c: 81:             break;
  2443  000F6A  EF02  F008         	goto	l322
  2444  000F6E                     l2042:
  2445                           
  2446                           ;ssd.c: 84:             PORTD = valor[v2];
  2447  000F6E  0E01               	movlw	low _valor
  2448  000F70  2429               	addwf	_v2^0,w,c
  2449  000F72  6EF6               	movwf	tblptrl,c
  2450  000F74  6AF7               	clrf	tblptrh,c
  2451  000F76  0E06               	movlw	high _valor
  2452  000F78  22F7               	addwfc	tblptrh,f,c
  2453  000F7A                     	if	0	;There are less than 3 active tblptr bytes
  2454  000F7A                     	endif
  2455  000F7A  0008               	tblrd		*
  2456  000F7C  CFF5 FF83          	movff	tablat,3971	;volatile
  2457  000F80                     
  2458                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  2459  000F80  0E00               	movlw	0
  2460  000F82  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2461  000F84  0E04               	movlw	4
  2462  000F86  6E35               	movwf	digitalWrite@pin^0,c
  2463  000F88  0E00               	movlw	0
  2464  000F8A  6E38               	movwf	(digitalWrite@value+1)^0,c
  2465  000F8C  0E01               	movlw	1
  2466  000F8E  6E37               	movwf	digitalWrite@value^0,c
  2467  000F90  EC77  F005         	call	_digitalWrite	;wreg free
  2468  000F94                     
  2469                           ;ssd.c: 86:             display = 3;
  2470  000F94  0E03               	movlw	3
  2471  000F96  6E2C               	movwf	_display^0,c
  2472                           
  2473                           ;ssd.c: 87:             break;
  2474  000F98  EF02  F008         	goto	l322
  2475  000F9C                     l2048:
  2476                           
  2477                           ;ssd.c: 90:             PORTD = valor[v3];
  2478  000F9C  0E01               	movlw	low _valor
  2479  000F9E  2428               	addwf	_v3^0,w,c
  2480  000FA0  6EF6               	movwf	tblptrl,c
  2481  000FA2  6AF7               	clrf	tblptrh,c
  2482  000FA4  0E06               	movlw	high _valor
  2483  000FA6  22F7               	addwfc	tblptrh,f,c
  2484  000FA8                     	if	0	;There are less than 3 active tblptr bytes
  2485  000FA8                     	endif
  2486  000FA8  0008               	tblrd		*
  2487  000FAA  CFF5 FF83          	movff	tablat,3971	;volatile
  2488  000FAE                     
  2489                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  2490  000FAE  0E00               	movlw	0
  2491  000FB0  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2492  000FB2  0E05               	movlw	5
  2493  000FB4  6E35               	movwf	digitalWrite@pin^0,c
  2494  000FB6  0E00               	movlw	0
  2495  000FB8  6E38               	movwf	(digitalWrite@value+1)^0,c
  2496  000FBA  0E01               	movlw	1
  2497  000FBC  6E37               	movwf	digitalWrite@value^0,c
  2498  000FBE  EC77  F005         	call	_digitalWrite	;wreg free
  2499  000FC2                     l2052:
  2500                           
  2501                           ;ssd.c: 92:             display = 0;
  2502  000FC2  0E00               	movlw	0
  2503  000FC4  6E2C               	movwf	_display^0,c
  2504                           
  2505                           ;ssd.c: 93:             break;
  2506  000FC6  EF02  F008         	goto	l322
  2507  000FCA                     l2058:
  2508  000FCA  502C               	movf	_display^0,w,c
  2509  000FCC  6E3B               	movwf	??_ssdUpdate^0,c
  2510  000FCE  6A3C               	clrf	(??_ssdUpdate+1)^0,c
  2511                           
  2512                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2513                           ; Switch size 1, requested type "simple"
  2514                           ; Number of cases is 1, Range of values is 0 to 0
  2515                           ; switch strategies available:
  2516                           ; Name         Instructions Cycles
  2517                           ; simple_byte            4     3 (average)
  2518                           ;	Chosen strategy is simple_byte
  2519  000FD0  503C               	movf	(??_ssdUpdate+1)^0,w,c
  2520  000FD2  0A00               	xorlw	0	; case 0
  2521  000FD4  B4D8               	btfsc	status,2,c
  2522  000FD6  EFEF  F007         	goto	l2492
  2523  000FDA  EFE1  F007         	goto	l2052
  2524  000FDE                     l2492:
  2525                           
  2526                           ; Switch size 1, requested type "simple"
  2527                           ; Number of cases is 4, Range of values is 0 to 3
  2528                           ; switch strategies available:
  2529                           ; Name         Instructions Cycles
  2530                           ; simple_byte           13     7 (average)
  2531                           ;	Chosen strategy is simple_byte
  2532  000FDE  503B               	movf	??_ssdUpdate^0,w,c
  2533  000FE0  0A00               	xorlw	0	; case 0
  2534  000FE2  B4D8               	btfsc	status,2,c
  2535  000FE4  EF89  F007         	goto	l2030
  2536  000FE8  0A01               	xorlw	1	; case 1
  2537  000FEA  B4D8               	btfsc	status,2,c
  2538  000FEC  EFA0  F007         	goto	l2036
  2539  000FF0  0A03               	xorlw	3	; case 2
  2540  000FF2  B4D8               	btfsc	status,2,c
  2541  000FF4  EFB7  F007         	goto	l2042
  2542  000FF8  0A01               	xorlw	1	; case 3
  2543  000FFA  B4D8               	btfsc	status,2,c
  2544  000FFC  EFCE  F007         	goto	l2048
  2545  001000  EFE1  F007         	goto	l2052
  2546  001004                     l322:
  2547  001004  0012               	return		;funcret
  2548  001006                     __end_of_ssdUpdate:
  2549                           	callstack 0
  2550                           
  2551 ;; *************** function _ssdDigit *****************
  2552 ;; Defined at:
  2553 ;;		line 38 in file "ssd.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  val             1    wreg     unsigned char 
  2556 ;;  pos             1    0[COMRAM] unsigned char 
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;  val             1    1[COMRAM] unsigned char 
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      void 
  2561 ;; Registers used:
  2562 ;;		wreg, status,2, status,0
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2568 ;;      Params:         1       0       0       0       0       0       0
  2569 ;;      Locals:         1       0       0       0       0       0       0
  2570 ;;      Temps:          0       0       0       0       0       0       0
  2571 ;;      Totals:         2       0       0       0       0       0       0
  2572 ;;Total ram usage:        2 bytes
  2573 ;; Hardware stack levels used:    1
  2574 ;; This function calls:
  2575 ;;		Nothing
  2576 ;; This function is called by:
  2577 ;;		_chooseSong
  2578 ;;		_playSong
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           	psect	text11
  2583  00185E                     __ptext11:
  2584                           	callstack 0
  2585  00185E                     _ssdDigit:
  2586                           	callstack 29
  2587                           
  2588                           ;incstack = 0
  2589                           ;ssdDigit@val stored from wreg
  2590  00185E  6E36               	movwf	ssdDigit@val^0,c
  2591  001860                     
  2592                           ;ssd.c: 39:     if (pos == 0) {
  2593  001860  5035               	movf	ssdDigit@pos^0,w,c
  2594  001862  A4D8               	btfss	status,2,c
  2595  001864  EF36  F00C         	goto	u1701
  2596  001868  EF38  F00C         	goto	u1700
  2597  00186C                     u1701:
  2598  00186C  EF3A  F00C         	goto	l2068
  2599  001870                     u1700:
  2600  001870                     
  2601                           ;ssd.c: 40:         v0 = val;
  2602  001870  C036  F02B         	movff	ssdDigit@val,_v0
  2603  001874                     l2068:
  2604                           
  2605                           ;ssd.c: 42:     if (pos == 1) {
  2606  001874  0435               	decf	ssdDigit@pos^0,w,c
  2607  001876  A4D8               	btfss	status,2,c
  2608  001878  EF40  F00C         	goto	u1711
  2609  00187C  EF42  F00C         	goto	u1710
  2610  001880                     u1711:
  2611  001880  EF44  F00C         	goto	l2072
  2612  001884                     u1710:
  2613  001884                     
  2614                           ;ssd.c: 43:         v1 = val;
  2615  001884  C036  F02A         	movff	ssdDigit@val,_v1
  2616  001888                     l2072:
  2617                           
  2618                           ;ssd.c: 45:     if (pos == 2) {
  2619  001888  0E02               	movlw	2
  2620  00188A  1835               	xorwf	ssdDigit@pos^0,w,c
  2621  00188C  A4D8               	btfss	status,2,c
  2622  00188E  EF4B  F00C         	goto	u1721
  2623  001892  EF4D  F00C         	goto	u1720
  2624  001896                     u1721:
  2625  001896  EF4F  F00C         	goto	l2076
  2626  00189A                     u1720:
  2627  00189A                     
  2628                           ;ssd.c: 46:         v2 = val;
  2629  00189A  C036  F029         	movff	ssdDigit@val,_v2
  2630  00189E                     l2076:
  2631                           
  2632                           ;ssd.c: 48:     if (pos == 3) {
  2633  00189E  0E03               	movlw	3
  2634  0018A0  1835               	xorwf	ssdDigit@pos^0,w,c
  2635  0018A2  A4D8               	btfss	status,2,c
  2636  0018A4  EF56  F00C         	goto	u1731
  2637  0018A8  EF58  F00C         	goto	u1730
  2638  0018AC                     u1731:
  2639  0018AC  EF5A  F00C         	goto	l312
  2640  0018B0                     u1730:
  2641  0018B0                     
  2642                           ;ssd.c: 49:         v3 = val;
  2643  0018B0  C036  F028         	movff	ssdDigit@val,_v3
  2644  0018B4                     l312:
  2645  0018B4  0012               	return		;funcret
  2646  0018B6                     __end_of_ssdDigit:
  2647                           	callstack 0
  2648                           
  2649 ;; *************** function _lcdStr *****************
  2650 ;; Defined at:
  2651 ;;		line 128 in file "lcd.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  str             2    8[COMRAM] PTR const unsigned char 
  2654 ;;		 -> STR_6(16), STR_5(17), musicas.nome(17), musicas(190), 
  2655 ;;		 -> STR_4(17), STR_3(17), STR_2(7), STR_1(4), 
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;  i               1   12[COMRAM] unsigned char 
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      void 
  2660 ;; Registers used:
  2661 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2667 ;;      Params:         2       0       0       0       0       0       0
  2668 ;;      Locals:         1       0       0       0       0       0       0
  2669 ;;      Temps:          2       0       0       0       0       0       0
  2670 ;;      Totals:         5       0       0       0       0       0       0
  2671 ;;Total ram usage:        5 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    2
  2674 ;; This function calls:
  2675 ;;		_lcdData
  2676 ;; This function is called by:
  2677 ;;		_main
  2678 ;;		_chooseSong
  2679 ;;		_playSong
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           	psect	text12
  2684  0016C6                     __ptext12:
  2685                           	callstack 0
  2686  0016C6                     _lcdStr:
  2687                           	callstack 28
  2688  0016C6                     
  2689                           ;lcd.c: 129:     unsigned char i = 0;
  2690  0016C6  0E00               	movlw	0
  2691  0016C8  6E41               	movwf	lcdStr@i^0,c
  2692                           
  2693                           ;lcd.c: 131:     while (str[i] != 0) {
  2694  0016CA  EF80  F00B         	goto	l1962
  2695  0016CE                     l1958:
  2696                           
  2697                           ;lcd.c: 132:         lcdData(str[i]);
  2698  0016CE  5041               	movf	lcdStr@i^0,w,c
  2699  0016D0  243D               	addwf	lcdStr@str^0,w,c
  2700  0016D2  6E3F               	movwf	??_lcdStr^0,c
  2701  0016D4  0E00               	movlw	0
  2702  0016D6  203E               	addwfc	(lcdStr@str+1)^0,w,c
  2703  0016D8  6E40               	movwf	(??_lcdStr+1)^0,c
  2704  0016DA  C03F  FFF6         	movff	??_lcdStr,tblptrl
  2705  0016DE  C040  FFF7         	movff	??_lcdStr+1,tblptrh
  2706  0016E2  6AF8               	clrf	tblptru,c
  2707  0016E4  0E05               	movlw	(high __ramtop+-1)
  2708  0016E6  64F7               	cpfsgt	tblptrh,c
  2709  0016E8  D003               	bra	u1567
  2710  0016EA  0008               	tblrd		*
  2711  0016EC  50F5               	movf	tablat,w,c
  2712  0016EE  D005               	bra	u1560
  2713  0016F0                     u1567:
  2714  0016F0  CFF6 FFE9          	movff	tblptrl,fsr0l
  2715  0016F4  CFF7 FFEA          	movff	tblptrh,fsr0h
  2716  0016F8  50EF               	movf	indf0,w,c
  2717  0016FA                     u1560:
  2718  0016FA  EC86  F00C         	call	_lcdData
  2719  0016FE                     
  2720                           ;lcd.c: 133:         i++;
  2721  0016FE  2A41               	incf	lcdStr@i^0,f,c
  2722  001700                     l1962:
  2723                           
  2724                           ;lcd.c: 131:     while (str[i] != 0) {
  2725  001700  5041               	movf	lcdStr@i^0,w,c
  2726  001702  243D               	addwf	lcdStr@str^0,w,c
  2727  001704  6E3F               	movwf	??_lcdStr^0,c
  2728  001706  0E00               	movlw	0
  2729  001708  203E               	addwfc	(lcdStr@str+1)^0,w,c
  2730  00170A  6E40               	movwf	(??_lcdStr+1)^0,c
  2731  00170C  C03F  FFF6         	movff	??_lcdStr,tblptrl
  2732  001710  C040  FFF7         	movff	??_lcdStr+1,tblptrh
  2733  001714  6AF8               	clrf	tblptru,c
  2734  001716  0E05               	movlw	(high __ramtop+-1)
  2735  001718  64F7               	cpfsgt	tblptrh,c
  2736  00171A  D003               	bra	u1577
  2737  00171C  0008               	tblrd		*
  2738  00171E  50F5               	movf	tablat,w,c
  2739  001720  D005               	bra	u1570
  2740  001722                     u1577:
  2741  001722  CFF6 FFE9          	movff	tblptrl,fsr0l
  2742  001726  CFF7 FFEA          	movff	tblptrh,fsr0h
  2743  00172A  50EF               	movf	indf0,w,c
  2744  00172C                     u1570:
  2745  00172C  0900               	iorlw	0
  2746  00172E  A4D8               	btfss	status,2,c
  2747  001730  EF9C  F00B         	goto	u1581
  2748  001734  EF9E  F00B         	goto	u1580
  2749  001738                     u1581:
  2750  001738  EF67  F00B         	goto	l1958
  2751  00173C                     u1580:
  2752  00173C  0012               	return		;funcret
  2753  00173E                     __end_of_lcdStr:
  2754                           	callstack 0
  2755                           
  2756 ;; *************** function _lcdData *****************
  2757 ;; Defined at:
  2758 ;;		line 68 in file "lcd.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;  valor           1    wreg     unsigned char 
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;  valor           1    6[COMRAM] unsigned char 
  2763 ;;  old_D           1    7[COMRAM] unsigned char 
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  1    wreg      void 
  2766 ;; Registers used:
  2767 ;;		wreg, status,2, status,0, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2773 ;;      Params:         0       0       0       0       0       0       0
  2774 ;;      Locals:         2       0       0       0       0       0       0
  2775 ;;      Temps:          0       0       0       0       0       0       0
  2776 ;;      Totals:         2       0       0       0       0       0       0
  2777 ;;Total ram usage:        2 bytes
  2778 ;; Hardware stack levels used:    1
  2779 ;; Hardware stack levels required when called:    1
  2780 ;; This function calls:
  2781 ;;		_Delay40us
  2782 ;;		_digitalWrite
  2783 ;; This function is called by:
  2784 ;;		_lcdStr
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           	psect	text13
  2789  00190C                     __ptext13:
  2790                           	callstack 0
  2791  00190C                     _lcdData:
  2792                           	callstack 28
  2793                           
  2794                           ;incstack = 0
  2795                           ;lcdData@valor stored from wreg
  2796  00190C  6E3B               	movwf	lcdData@valor^0,c
  2797  00190E                     
  2798                           ;lcd.c: 70:     unsigned char old_D;;lcd.c: 71:     old_D = PORTD;
  2799  00190E  CF83 F03C          	movff	3971,lcdData@old_D	;volatile
  2800  001912                     
  2801                           ;lcd.c: 73:     TRISD = 0x00;
  2802  001912  0E00               	movlw	0
  2803  001914  6E95               	movwf	149,c	;volatile
  2804  001916                     
  2805                           ;lcd.c: 74:     digitalWrite(PIN_E2, 1);
  2806  001916  0E00               	movlw	0
  2807  001918  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2808  00191A  0E22               	movlw	34
  2809  00191C  6E35               	movwf	digitalWrite@pin^0,c
  2810  00191E  0E00               	movlw	0
  2811  001920  6E38               	movwf	(digitalWrite@value+1)^0,c
  2812  001922  0E01               	movlw	1
  2813  001924  6E37               	movwf	digitalWrite@value^0,c
  2814  001926  EC77  F005         	call	_digitalWrite	;wreg free
  2815  00192A                     
  2816                           ;lcd.c: 76:     PORTD = valor;
  2817  00192A  C03B  FF83         	movff	lcdData@valor,3971	;volatile
  2818  00192E                     
  2819                           ;lcd.c: 78:     digitalWrite(PIN_E1, 1);
  2820  00192E  0E00               	movlw	0
  2821  001930  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2822  001932  0E21               	movlw	33
  2823  001934  6E35               	movwf	digitalWrite@pin^0,c
  2824  001936  0E00               	movlw	0
  2825  001938  6E38               	movwf	(digitalWrite@value+1)^0,c
  2826  00193A  0E01               	movlw	1
  2827  00193C  6E37               	movwf	digitalWrite@value^0,c
  2828  00193E  EC77  F005         	call	_digitalWrite	;wreg free
  2829  001942                     
  2830                           ;lcd.c: 79:     digitalWrite(PIN_E1, 0);
  2831  001942  0E00               	movlw	0
  2832  001944  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2833  001946  0E21               	movlw	33
  2834  001948  6E35               	movwf	digitalWrite@pin^0,c
  2835  00194A  0E00               	movlw	0
  2836  00194C  6E38               	movwf	(digitalWrite@value+1)^0,c
  2837  00194E  0E00               	movlw	0
  2838  001950  6E37               	movwf	digitalWrite@value^0,c
  2839  001952  EC77  F005         	call	_digitalWrite	;wreg free
  2840  001956                     
  2841                           ;lcd.c: 81:     PORTD = old_D;
  2842  001956  C03C  FF83         	movff	lcdData@old_D,3971	;volatile
  2843  00195A                     
  2844                           ;lcd.c: 83:     Delay40us();
  2845  00195A  EC00  F00D         	call	_Delay40us	;wreg free
  2846  00195E  0012               	return		;funcret
  2847  001960                     __end_of_lcdData:
  2848                           	callstack 0
  2849                           
  2850 ;; *************** function _lcdPosition *****************
  2851 ;; Defined at:
  2852 ;;		line 115 in file "lcd.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  linha           1    wreg     unsigned char 
  2855 ;;  coluna          1    8[COMRAM] unsigned char 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  linha           1    9[COMRAM] unsigned char 
  2858 ;;  comando         1   10[COMRAM] unsigned char 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		wreg, status,2, status,0, cstack
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2868 ;;      Params:         1       0       0       0       0       0       0
  2869 ;;      Locals:         2       0       0       0       0       0       0
  2870 ;;      Temps:          0       0       0       0       0       0       0
  2871 ;;      Totals:         3       0       0       0       0       0       0
  2872 ;;Total ram usage:        3 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:    3
  2875 ;; This function calls:
  2876 ;;		_lcdCommand
  2877 ;; This function is called by:
  2878 ;;		_main
  2879 ;;		_chooseSong
  2880 ;;		_playSong
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text14
  2885  001804                     __ptext14:
  2886                           	callstack 0
  2887  001804                     _lcdPosition:
  2888                           	callstack 27
  2889                           
  2890                           ;incstack = 0
  2891                           ;lcdPosition@linha stored from wreg
  2892  001804  6E3E               	movwf	lcdPosition@linha^0,c
  2893  001806                     
  2894                           ;lcd.c: 116:     char comando = 0;
  2895  001806  0E00               	movlw	0
  2896  001808  6E3F               	movwf	lcdPosition@comando^0,c
  2897  00180A                     
  2898                           ;lcd.c: 117:     if (linha == 0 && comando != 0x01) comando = 0x80 + coluna;
  2899  00180A  503E               	movf	lcdPosition@linha^0,w,c
  2900  00180C  A4D8               	btfss	status,2,c
  2901  00180E  EF0B  F00C         	goto	u1521
  2902  001812  EF0D  F00C         	goto	u1520
  2903  001816                     u1521:
  2904  001816  EF10  F00C         	goto	l145
  2905  00181A                     u1520:
  2906  00181A  503D               	movf	lcdPosition@coluna^0,w,c
  2907  00181C  0F80               	addlw	128
  2908  00181E  6E3F               	movwf	lcdPosition@comando^0,c
  2909  001820                     l145:
  2910                           
  2911                           ;lcd.c: 118:     if (linha == 1 && comando != 0x01) comando = 0xC0 + coluna;
  2912  001820  043E               	decf	lcdPosition@linha^0,w,c
  2913  001822  A4D8               	btfss	status,2,c
  2914  001824  EF16  F00C         	goto	u1531
  2915  001828  EF18  F00C         	goto	u1530
  2916  00182C                     u1531:
  2917  00182C  EF23  F00C         	goto	l146
  2918  001830                     u1530:
  2919  001830  043F               	decf	lcdPosition@comando^0,w,c
  2920  001832  B4D8               	btfsc	status,2,c
  2921  001834  EF1E  F00C         	goto	u1541
  2922  001838  EF20  F00C         	goto	u1540
  2923  00183C                     u1541:
  2924  00183C  EF23  F00C         	goto	l146
  2925  001840                     u1540:
  2926  001840  503D               	movf	lcdPosition@coluna^0,w,c
  2927  001842  0FC0               	addlw	192
  2928  001844  6E3F               	movwf	lcdPosition@comando^0,c
  2929  001846                     l146:
  2930                           
  2931                           ;lcd.c: 119:     if (coluna > 15) {
  2932  001846  0E0F               	movlw	15
  2933  001848  643D               	cpfsgt	lcdPosition@coluna^0,c
  2934  00184A  EF29  F00C         	goto	u1551
  2935  00184E  EF2B  F00C         	goto	u1550
  2936  001852                     u1551:
  2937  001852  EF2B  F00C         	goto	l1954
  2938  001856                     u1550:
  2939  001856                     l1954:
  2940                           
  2941                           ;lcd.c: 125:     lcdCommand(comando);
  2942  001856  503F               	movf	lcdPosition@comando^0,w,c
  2943  001858  ECE8  F00A         	call	_lcdCommand
  2944  00185C  0012               	return		;funcret
  2945  00185E                     __end_of_lcdPosition:
  2946                           	callstack 0
  2947                           
  2948 ;; *************** function _lcdCommand *****************
  2949 ;; Defined at:
  2950 ;;		line 43 in file "lcd.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  cmd             1    wreg     unsigned char 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  cmd             1    7[COMRAM] unsigned char 
  2955 ;;  old_D           1    6[COMRAM] unsigned char 
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		wreg, status,2, status,0, cstack
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2965 ;;      Params:         0       0       0       0       0       0       0
  2966 ;;      Locals:         2       0       0       0       0       0       0
  2967 ;;      Temps:          0       0       0       0       0       0       0
  2968 ;;      Totals:         2       0       0       0       0       0       0
  2969 ;;Total ram usage:        2 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; Hardware stack levels required when called:    2
  2972 ;; This function calls:
  2973 ;;		_Delay2ms
  2974 ;;		_Delay40us
  2975 ;;		_digitalWrite
  2976 ;; This function is called by:
  2977 ;;		_main
  2978 ;;		_lcdInit
  2979 ;;		_lcdPosition
  2980 ;;		_chooseSong
  2981 ;;		_playSong
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text15
  2986  0015D0                     __ptext15:
  2987                           	callstack 0
  2988  0015D0                     _lcdCommand:
  2989                           	callstack 27
  2990                           
  2991                           ;incstack = 0
  2992                           ;lcdCommand@cmd stored from wreg
  2993  0015D0  6E3C               	movwf	lcdCommand@cmd^0,c
  2994  0015D2                     
  2995                           ;lcd.c: 44:     unsigned char old_D;;lcd.c: 45:     old_D = PORTD;
  2996  0015D2  CF83 F03B          	movff	3971,lcdCommand@old_D	;volatile
  2997  0015D6                     
  2998                           ;lcd.c: 48:     TRISD = 0x00;
  2999  0015D6  0E00               	movlw	0
  3000  0015D8  6E95               	movwf	149,c	;volatile
  3001  0015DA                     
  3002                           ;lcd.c: 50:     digitalWrite(PIN_E2, 0);
  3003  0015DA  0E00               	movlw	0
  3004  0015DC  6E36               	movwf	(digitalWrite@pin+1)^0,c
  3005  0015DE  0E22               	movlw	34
  3006  0015E0  6E35               	movwf	digitalWrite@pin^0,c
  3007  0015E2  0E00               	movlw	0
  3008  0015E4  6E38               	movwf	(digitalWrite@value+1)^0,c
  3009  0015E6  0E00               	movlw	0
  3010  0015E8  6E37               	movwf	digitalWrite@value^0,c
  3011  0015EA  EC77  F005         	call	_digitalWrite	;wreg free
  3012  0015EE                     
  3013                           ;lcd.c: 51:     PORTD = cmd;
  3014  0015EE  C03C  FF83         	movff	lcdCommand@cmd,3971	;volatile
  3015  0015F2                     
  3016                           ;lcd.c: 53:     digitalWrite(PIN_E1, 1);
  3017  0015F2  0E00               	movlw	0
  3018  0015F4  6E36               	movwf	(digitalWrite@pin+1)^0,c
  3019  0015F6  0E21               	movlw	33
  3020  0015F8  6E35               	movwf	digitalWrite@pin^0,c
  3021  0015FA  0E00               	movlw	0
  3022  0015FC  6E38               	movwf	(digitalWrite@value+1)^0,c
  3023  0015FE  0E01               	movlw	1
  3024  001600  6E37               	movwf	digitalWrite@value^0,c
  3025  001602  EC77  F005         	call	_digitalWrite	;wreg free
  3026  001606                     
  3027                           ;lcd.c: 54:     digitalWrite(PIN_E1, 0);
  3028  001606  0E00               	movlw	0
  3029  001608  6E36               	movwf	(digitalWrite@pin+1)^0,c
  3030  00160A  0E21               	movlw	33
  3031  00160C  6E35               	movwf	digitalWrite@pin^0,c
  3032  00160E  0E00               	movlw	0
  3033  001610  6E38               	movwf	(digitalWrite@value+1)^0,c
  3034  001612  0E00               	movlw	0
  3035  001614  6E37               	movwf	digitalWrite@value^0,c
  3036  001616  EC77  F005         	call	_digitalWrite	;wreg free
  3037  00161A                     
  3038                           ;lcd.c: 57:     PORTD = old_D;
  3039  00161A  C03B  FF83         	movff	lcdCommand@old_D,3971	;volatile
  3040  00161E                     
  3041                           ;lcd.c: 59:     if ((cmd == 0x02) || (cmd == 0x01)) {
  3042  00161E  0E02               	movlw	2
  3043  001620  183C               	xorwf	lcdCommand@cmd^0,w,c
  3044  001622  B4D8               	btfsc	status,2,c
  3045  001624  EF16  F00B         	goto	u1501
  3046  001628  EF18  F00B         	goto	u1500
  3047  00162C                     u1501:
  3048  00162C  EF20  F00B         	goto	l1918
  3049  001630                     u1500:
  3050  001630  043C               	decf	lcdCommand@cmd^0,w,c
  3051  001632  A4D8               	btfss	status,2,c
  3052  001634  EF1E  F00B         	goto	u1511
  3053  001638  EF20  F00B         	goto	u1510
  3054  00163C                     u1511:
  3055  00163C  EF24  F00B         	goto	l1920
  3056  001640                     u1510:
  3057  001640                     l1918:
  3058                           
  3059                           ;lcd.c: 60:         Delay2ms();
  3060  001640  ECF2  F00C         	call	_Delay2ms	;wreg free
  3061                           
  3062                           ;lcd.c: 61:     } else {
  3063  001644  EF26  F00B         	goto	l136
  3064  001648                     l1920:
  3065                           
  3066                           ;lcd.c: 62:         Delay40us();
  3067  001648  EC00  F00D         	call	_Delay40us	;wreg free
  3068  00164C                     l136:
  3069  00164C  0012               	return		;funcret
  3070  00164E                     __end_of_lcdCommand:
  3071                           	callstack 0
  3072                           
  3073 ;; *************** function _digitalWrite *****************
  3074 ;; Defined at:
  3075 ;;		line 14 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;  pin             2    0[COMRAM] int 
  3078 ;;  value           2    2[COMRAM] int 
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;		None
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  1    wreg      void 
  3083 ;; Registers used:
  3084 ;;		wreg, status,2, status,0
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3090 ;;      Params:         4       0       0       0       0       0       0
  3091 ;;      Locals:         0       0       0       0       0       0       0
  3092 ;;      Temps:          2       0       0       0       0       0       0
  3093 ;;      Totals:         6       0       0       0       0       0       0
  3094 ;;Total ram usage:        6 bytes
  3095 ;; Hardware stack levels used:    1
  3096 ;; This function calls:
  3097 ;;		Nothing
  3098 ;; This function is called by:
  3099 ;;		_lcdCommand
  3100 ;;		_lcdData
  3101 ;;		_ssdUpdate
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	text16
  3106  000AEE                     __ptext16:
  3107                           	callstack 0
  3108  000AEE                     _digitalWrite:
  3109                           	callstack 28
  3110  000AEE                     
  3111                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 16:     if(pin <8){
  3112  000AEE  BE36               	btfsc	(digitalWrite@pin+1)^0,7,c
  3113  000AF0  EF85  F005         	goto	u1260
  3114  000AF4  5036               	movf	(digitalWrite@pin+1)^0,w,c
  3115  000AF6  E107               	bnz	u1261
  3116  000AF8  0E08               	movlw	8
  3117  000AFA  5C35               	subwf	digitalWrite@pin^0,w,c
  3118  000AFC  B0D8               	btfsc	status,0,c
  3119  000AFE  EF83  F005         	goto	u1261
  3120  000B02  EF85  F005         	goto	u1260
  3121  000B06                     u1261:
  3122  000B06  EFAF  F005         	goto	l1830
  3123  000B0A                     u1260:
  3124  000B0A                     
  3125                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 17:         if (value){ ((PORTA) |=
      +                           (1<<(pin)));}
  3126  000B0A  5037               	movf	digitalWrite@value^0,w,c
  3127  000B0C  1038               	iorwf	(digitalWrite@value+1)^0,w,c
  3128  000B0E  B4D8               	btfsc	status,2,c
  3129  000B10  EF8C  F005         	goto	u1271
  3130  000B14  EF8E  F005         	goto	u1270
  3131  000B18                     u1271:
  3132  000B18  EF9E  F005         	goto	l1828
  3133  000B1C                     u1270:
  3134  000B1C  C035  F039         	movff	digitalWrite@pin,??_digitalWrite
  3135  000B20  0E01               	movlw	1
  3136  000B22  6E3A               	movwf	(??_digitalWrite+1)^0,c
  3137  000B24  2A39               	incf	??_digitalWrite^0,f,c
  3138  000B26  EF97  F005         	goto	u1284
  3139  000B2A                     u1285:
  3140  000B2A  90D8               	bcf	status,0,c
  3141  000B2C  363A               	rlcf	(??_digitalWrite+1)^0,f,c
  3142  000B2E                     u1284:
  3143  000B2E  2E39               	decfsz	??_digitalWrite^0,f,c
  3144  000B30  EF95  F005         	goto	u1285
  3145  000B34  503A               	movf	(??_digitalWrite+1)^0,w,c
  3146  000B36  1280               	iorwf	128,f,c	;volatile
  3147  000B38  EF9D  F006         	goto	l42
  3148  000B3C                     l1828:
  3149  000B3C  C035  F039         	movff	digitalWrite@pin,??_digitalWrite
  3150  000B40  0E01               	movlw	1
  3151  000B42  6E3A               	movwf	(??_digitalWrite+1)^0,c
  3152  000B44  2A39               	incf	??_digitalWrite^0,f,c
  3153  000B46  EFA7  F005         	goto	u1294
  3154  000B4A                     u1295:
  3155  000B4A  90D8               	bcf	status,0,c
  3156  000B4C  363A               	rlcf	(??_digitalWrite+1)^0,f,c
  3157  000B4E                     u1294:
  3158  000B4E  2E39               	decfsz	??_digitalWrite^0,f,c
  3159  000B50  EFA5  F005         	goto	u1295
  3160  000B54  503A               	movf	(??_digitalWrite+1)^0,w,c
  3161  000B56  0AFF               	xorlw	255
  3162  000B58  1680               	andwf	128,f,c	;volatile
  3163  000B5A  EF9D  F006         	goto	l42
  3164  000B5E                     l1830:
  3165  000B5E  BE36               	btfsc	(digitalWrite@pin+1)^0,7,c
  3166  000B60  EFBD  F005         	goto	u1300
  3167  000B64  5036               	movf	(digitalWrite@pin+1)^0,w,c
  3168  000B66  E107               	bnz	u1301
  3169  000B68  0E10               	movlw	16
  3170  000B6A  5C35               	subwf	digitalWrite@pin^0,w,c
  3171  000B6C  B0D8               	btfsc	status,0,c
  3172  000B6E  EFBB  F005         	goto	u1301
  3173  000B72  EFBD  F005         	goto	u1300
  3174  000B76                     u1301:
  3175  000B76  EFEB  F005         	goto	l1838
  3176  000B7A                     u1300:
  3177  000B7A                     
  3178                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 20:         pin -=8;
  3179  000B7A  0EF8               	movlw	248
  3180  000B7C  2635               	addwf	digitalWrite@pin^0,f,c
  3181  000B7E  0EFF               	movlw	255
  3182  000B80  2236               	addwfc	(digitalWrite@pin+1)^0,f,c
  3183                           
  3184                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 21:         if (value){ ((PORTB) |=
      +                           (1<<(pin)));}
  3185  000B82  5037               	movf	digitalWrite@value^0,w,c
  3186  000B84  1038               	iorwf	(digitalWrite@value+1)^0,w,c
  3187  000B86  B4D8               	btfsc	status,2,c
  3188  000B88  EFC8  F005         	goto	u1311
  3189  000B8C  EFCA  F005         	goto	u1310
  3190  000B90                     u1311:
  3191  000B90  EFDA  F005         	goto	l1836
  3192  000B94                     u1310:
  3193  000B94  C035  F039         	movff	digitalWrite@pin,??_digitalWrite
  3194  000B98  0E01               	movlw	1
  3195  000B9A  6E3A               	movwf	(??_digitalWrite+1)^0,c
  3196  000B9C  2A39               	incf	??_digitalWrite^0,f,c
  3197  000B9E  EFD3  F005         	goto	u1324
  3198  000BA2                     u1325:
  3199  000BA2  90D8               	bcf	status,0,c
  3200  000BA4  363A               	rlcf	(??_digitalWrite+1)^0,f,c
  3201  000BA6                     u1324:
  3202  000BA6  2E39               	decfsz	??_digitalWrite^0,f,c
  3203  000BA8  EFD1  F005         	goto	u1325
  3204  000BAC  503A               	movf	(??_digitalWrite+1)^0,w,c
  3205  000BAE  1281               	iorwf	129,f,c	;volatile
  3206  000BB0  EF9D  F006         	goto	l42
  3207  000BB4                     l1836:
  3208  000BB4  C035  F039         	movff	digitalWrite@pin,??_digitalWrite
  3209  000BB8  0E01               	movlw	1
  3210  000BBA  6E3A               	movwf	(??_digitalWrite+1)^0,c
  3211  000BBC  2A39               	incf	??_digitalWrite^0,f,c
  3212  000BBE  EFE3  F005         	goto	u1334
  3213  000BC2                     u1335:
  3214  000BC2  90D8               	bcf	status,0,c
  3215  000BC4  363A               	rlcf	(??_digitalWrite+1)^0,f,c
  3216  000BC6                     u1334:
  3217  000BC6  2E39               	decfsz	??_digitalWrite^0,f,c
  3218  000BC8  EFE1  F005         	goto	u1335
  3219  000BCC  503A               	movf	(??_digitalWrite+1)^0,w,c
  3220  000BCE  0AFF               	xorlw	255
  3221  000BD0  1681               	andwf	129,f,c	;volatile
  3222  000BD2  EF9D  F006         	goto	l42
  3223  000BD6                     l1838:
  3224  000BD6  BE36               	btfsc	(digitalWrite@pin+1)^0,7,c
  3225  000BD8  EFF9  F005         	goto	u1340
  3226  000BDC  5036               	movf	(digitalWrite@pin+1)^0,w,c
  3227  000BDE  E107               	bnz	u1341
  3228  000BE0  0E18               	movlw	24
  3229  000BE2  5C35               	subwf	digitalWrite@pin^0,w,c
  3230  000BE4  B0D8               	btfsc	status,0,c
  3231  000BE6  EFF7  F005         	goto	u1341
  3232  000BEA  EFF9  F005         	goto	u1340
  3233  000BEE                     u1341:
  3234  000BEE  EF27  F006         	goto	l1846
  3235  000BF2                     u1340:
  3236  000BF2                     
  3237                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 24:         pin -=16;
  3238  000BF2  0EF0               	movlw	240
  3239  000BF4  2635               	addwf	digitalWrite@pin^0,f,c
  3240  000BF6  0EFF               	movlw	255
  3241  000BF8  2236               	addwfc	(digitalWrite@pin+1)^0,f,c
  3242                           
  3243                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 25:         if (value){ ((PORTC) |=
      +                           (1<<(pin)));}
  3244  000BFA  5037               	movf	digitalWrite@value^0,w,c
  3245  000BFC  1038               	iorwf	(digitalWrite@value+1)^0,w,c
  3246  000BFE  B4D8               	btfsc	status,2,c
  3247  000C00  EF04  F006         	goto	u1351
  3248  000C04  EF06  F006         	goto	u1350
  3249  000C08                     u1351:
  3250  000C08  EF16  F006         	goto	l1844
  3251  000C0C                     u1350:
  3252  000C0C  C035  F039         	movff	digitalWrite@pin,??_digitalWrite
  3253  000C10  0E01               	movlw	1
  3254  000C12  6E3A               	movwf	(??_digitalWrite+1)^0,c
  3255  000C14  2A39               	incf	??_digitalWrite^0,f,c
  3256  000C16  EF0F  F006         	goto	u1364
  3257  000C1A                     u1365:
  3258  000C1A  90D8               	bcf	status,0,c
  3259  000C1C  363A               	rlcf	(??_digitalWrite+1)^0,f,c
  3260  000C1E                     u1364:
  3261  000C1E  2E39               	decfsz	??_digitalWrite^0,f,c
  3262  000C20  EF0D  F006         	goto	u1365
  3263  000C24  503A               	movf	(??_digitalWrite+1)^0,w,c
  3264  000C26  1282               	iorwf	130,f,c	;volatile
  3265  000C28  EF9D  F006         	goto	l42
  3266  000C2C                     l1844:
  3267  000C2C  C035  F039         	movff	digitalWrite@pin,??_digitalWrite
  3268  000C30  0E01               	movlw	1
  3269  000C32  6E3A               	movwf	(??_digitalWrite+1)^0,c
  3270  000C34  2A39               	incf	??_digitalWrite^0,f,c
  3271  000C36  EF1F  F006         	goto	u1374
  3272  000C3A                     u1375:
  3273  000C3A  90D8               	bcf	status,0,c
  3274  000C3C  363A               	rlcf	(??_digitalWrite+1)^0,f,c
  3275  000C3E                     u1374:
  3276  000C3E  2E39               	decfsz	??_digitalWrite^0,f,c
  3277  000C40  EF1D  F006         	goto	u1375
  3278  000C44  503A               	movf	(??_digitalWrite+1)^0,w,c
  3279  000C46  0AFF               	xorlw	255
  3280  000C48  1682               	andwf	130,f,c	;volatile
  3281  000C4A  EF9D  F006         	goto	l42
  3282  000C4E                     l1846:
  3283  000C4E  BE36               	btfsc	(digitalWrite@pin+1)^0,7,c
  3284  000C50  EF35  F006         	goto	u1380
  3285  000C54  5036               	movf	(digitalWrite@pin+1)^0,w,c
  3286  000C56  E107               	bnz	u1381
  3287  000C58  0E20               	movlw	32
  3288  000C5A  5C35               	subwf	digitalWrite@pin^0,w,c
  3289  000C5C  B0D8               	btfsc	status,0,c
  3290  000C5E  EF33  F006         	goto	u1381
  3291  000C62  EF35  F006         	goto	u1380
  3292  000C66                     u1381:
  3293  000C66  EF63  F006         	goto	l1854
  3294  000C6A                     u1380:
  3295  000C6A                     
  3296                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 28:         pin -=24;
  3297  000C6A  0EE8               	movlw	232
  3298  000C6C  2635               	addwf	digitalWrite@pin^0,f,c
  3299  000C6E  0EFF               	movlw	255
  3300  000C70  2236               	addwfc	(digitalWrite@pin+1)^0,f,c
  3301                           
  3302                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 29:         if (value){ ((PORTD) |=
      +                           (1<<(pin)));}
  3303  000C72  5037               	movf	digitalWrite@value^0,w,c
  3304  000C74  1038               	iorwf	(digitalWrite@value+1)^0,w,c
  3305  000C76  B4D8               	btfsc	status,2,c
  3306  000C78  EF40  F006         	goto	u1391
  3307  000C7C  EF42  F006         	goto	u1390
  3308  000C80                     u1391:
  3309  000C80  EF52  F006         	goto	l1852
  3310  000C84                     u1390:
  3311  000C84  C035  F039         	movff	digitalWrite@pin,??_digitalWrite
  3312  000C88  0E01               	movlw	1
  3313  000C8A  6E3A               	movwf	(??_digitalWrite+1)^0,c
  3314  000C8C  2A39               	incf	??_digitalWrite^0,f,c
  3315  000C8E  EF4B  F006         	goto	u1404
  3316  000C92                     u1405:
  3317  000C92  90D8               	bcf	status,0,c
  3318  000C94  363A               	rlcf	(??_digitalWrite+1)^0,f,c
  3319  000C96                     u1404:
  3320  000C96  2E39               	decfsz	??_digitalWrite^0,f,c
  3321  000C98  EF49  F006         	goto	u1405
  3322  000C9C  503A               	movf	(??_digitalWrite+1)^0,w,c
  3323  000C9E  1283               	iorwf	131,f,c	;volatile
  3324  000CA0  EF9D  F006         	goto	l42
  3325  000CA4                     l1852:
  3326  000CA4  C035  F039         	movff	digitalWrite@pin,??_digitalWrite
  3327  000CA8  0E01               	movlw	1
  3328  000CAA  6E3A               	movwf	(??_digitalWrite+1)^0,c
  3329  000CAC  2A39               	incf	??_digitalWrite^0,f,c
  3330  000CAE  EF5B  F006         	goto	u1414
  3331  000CB2                     u1415:
  3332  000CB2  90D8               	bcf	status,0,c
  3333  000CB4  363A               	rlcf	(??_digitalWrite+1)^0,f,c
  3334  000CB6                     u1414:
  3335  000CB6  2E39               	decfsz	??_digitalWrite^0,f,c
  3336  000CB8  EF59  F006         	goto	u1415
  3337  000CBC  503A               	movf	(??_digitalWrite+1)^0,w,c
  3338  000CBE  0AFF               	xorlw	255
  3339  000CC0  1683               	andwf	131,f,c	;volatile
  3340  000CC2  EF9D  F006         	goto	l42
  3341  000CC6                     l1854:
  3342  000CC6  BE36               	btfsc	(digitalWrite@pin+1)^0,7,c
  3343  000CC8  EF71  F006         	goto	u1420
  3344  000CCC  5036               	movf	(digitalWrite@pin+1)^0,w,c
  3345  000CCE  E107               	bnz	u1421
  3346  000CD0  0E28               	movlw	40
  3347  000CD2  5C35               	subwf	digitalWrite@pin^0,w,c
  3348  000CD4  B0D8               	btfsc	status,0,c
  3349  000CD6  EF6F  F006         	goto	u1421
  3350  000CDA  EF71  F006         	goto	u1420
  3351  000CDE                     u1421:
  3352  000CDE  EF9D  F006         	goto	l42
  3353  000CE2                     u1420:
  3354  000CE2                     
  3355                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 32:         pin -=32;
  3356  000CE2  0EE0               	movlw	224
  3357  000CE4  2635               	addwf	digitalWrite@pin^0,f,c
  3358  000CE6  0EFF               	movlw	255
  3359  000CE8  2236               	addwfc	(digitalWrite@pin+1)^0,f,c
  3360                           
  3361                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 33:         if (value){ ((PORTE) |=
      +                           (1<<(pin)));}
  3362  000CEA  5037               	movf	digitalWrite@value^0,w,c
  3363  000CEC  1038               	iorwf	(digitalWrite@value+1)^0,w,c
  3364  000CEE  B4D8               	btfsc	status,2,c
  3365  000CF0  EF7C  F006         	goto	u1431
  3366  000CF4  EF7E  F006         	goto	u1430
  3367  000CF8                     u1431:
  3368  000CF8  EF8E  F006         	goto	l1860
  3369  000CFC                     u1430:
  3370  000CFC  C035  F039         	movff	digitalWrite@pin,??_digitalWrite
  3371  000D00  0E01               	movlw	1
  3372  000D02  6E3A               	movwf	(??_digitalWrite+1)^0,c
  3373  000D04  2A39               	incf	??_digitalWrite^0,f,c
  3374  000D06  EF87  F006         	goto	u1444
  3375  000D0A                     u1445:
  3376  000D0A  90D8               	bcf	status,0,c
  3377  000D0C  363A               	rlcf	(??_digitalWrite+1)^0,f,c
  3378  000D0E                     u1444:
  3379  000D0E  2E39               	decfsz	??_digitalWrite^0,f,c
  3380  000D10  EF85  F006         	goto	u1445
  3381  000D14  503A               	movf	(??_digitalWrite+1)^0,w,c
  3382  000D16  1284               	iorwf	132,f,c	;volatile
  3383  000D18  EF9D  F006         	goto	l42
  3384  000D1C                     l1860:
  3385  000D1C  C035  F039         	movff	digitalWrite@pin,??_digitalWrite
  3386  000D20  0E01               	movlw	1
  3387  000D22  6E3A               	movwf	(??_digitalWrite+1)^0,c
  3388  000D24  2A39               	incf	??_digitalWrite^0,f,c
  3389  000D26  EF97  F006         	goto	u1454
  3390  000D2A                     u1455:
  3391  000D2A  90D8               	bcf	status,0,c
  3392  000D2C  363A               	rlcf	(??_digitalWrite+1)^0,f,c
  3393  000D2E                     u1454:
  3394  000D2E  2E39               	decfsz	??_digitalWrite^0,f,c
  3395  000D30  EF95  F006         	goto	u1455
  3396  000D34  503A               	movf	(??_digitalWrite+1)^0,w,c
  3397  000D36  0AFF               	xorlw	255
  3398  000D38  1684               	andwf	132,f,c	;volatile
  3399  000D3A                     l42:
  3400  000D3A  0012               	return		;funcret
  3401  000D3C                     __end_of_digitalWrite:
  3402                           	callstack 0
  3403                           
  3404 ;; *************** function _Delay2ms *****************
  3405 ;; Defined at:
  3406 ;;		line 36 in file "lcd.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;		None
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;  i               1    1[COMRAM] unsigned char 
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  1    wreg      void 
  3413 ;; Registers used:
  3414 ;;		wreg, status,2, status,0, cstack
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3420 ;;      Params:         0       0       0       0       0       0       0
  3421 ;;      Locals:         1       0       0       0       0       0       0
  3422 ;;      Temps:          0       0       0       0       0       0       0
  3423 ;;      Totals:         1       0       0       0       0       0       0
  3424 ;;Total ram usage:        1 bytes
  3425 ;; Hardware stack levels used:    1
  3426 ;; Hardware stack levels required when called:    1
  3427 ;; This function calls:
  3428 ;;		_Delay40us
  3429 ;; This function is called by:
  3430 ;;		_lcdCommand
  3431 ;;		_lcdInit
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           	psect	text17
  3436  0019E4                     __ptext17:
  3437                           	callstack 0
  3438  0019E4                     _Delay2ms:
  3439                           	callstack 27
  3440  0019E4                     
  3441                           ;lcd.c: 37:     unsigned char i;;lcd.c: 38:     for (i = 0; i < 50; i++) {
  3442  0019E4  0E00               	movlw	0
  3443  0019E6  6E36               	movwf	Delay2ms@i^0,c
  3444  0019E8                     l1868:
  3445                           
  3446                           ;lcd.c: 39:         Delay40us();
  3447  0019E8  EC00  F00D         	call	_Delay40us	;wreg free
  3448  0019EC                     
  3449                           ;lcd.c: 40:     }
  3450  0019EC  2A36               	incf	Delay2ms@i^0,f,c
  3451  0019EE  0E31               	movlw	49
  3452  0019F0  6436               	cpfsgt	Delay2ms@i^0,c
  3453  0019F2  EFFD  F00C         	goto	u1461
  3454  0019F6  EFFF  F00C         	goto	u1460
  3455  0019FA                     u1461:
  3456  0019FA  EFF4  F00C         	goto	l1868
  3457  0019FE                     u1460:
  3458  0019FE  0012               	return		;funcret
  3459  001A00                     __end_of_Delay2ms:
  3460                           	callstack 0
  3461                           
  3462 ;; *************** function _Delay40us *****************
  3463 ;; Defined at:
  3464 ;;		line 31 in file "lcd.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;		None
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;  i               1    0[COMRAM] unsigned char 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, status,0
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3478 ;;      Params:         0       0       0       0       0       0       0
  3479 ;;      Locals:         1       0       0       0       0       0       0
  3480 ;;      Temps:          0       0       0       0       0       0       0
  3481 ;;      Totals:         1       0       0       0       0       0       0
  3482 ;;Total ram usage:        1 bytes
  3483 ;; Hardware stack levels used:    1
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_Delay2ms
  3488 ;;		_lcdCommand
  3489 ;;		_lcdData
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           	psect	text18
  3494  001A00                     __ptext18:
  3495                           	callstack 0
  3496  001A00                     _Delay40us:
  3497                           	callstack 28
  3498  001A00                     
  3499                           ;lcd.c: 32:     unsigned char i;;lcd.c: 33:     for (i = 0; i < 25; i++);
  3500  001A00  0E00               	movlw	0
  3501  001A02  6E35               	movwf	Delay40us@i^0,c
  3502  001A04                     l1818:
  3503  001A04  2A35               	incf	Delay40us@i^0,f,c
  3504  001A06  0E18               	movlw	24
  3505  001A08  6435               	cpfsgt	Delay40us@i^0,c
  3506  001A0A  EF09  F00D         	goto	u1251
  3507  001A0E  EF0B  F00D         	goto	u1250
  3508  001A12                     u1251:
  3509  001A12  EF02  F00D         	goto	l1818
  3510  001A16                     u1250:
  3511  001A16  0012               	return		;funcret
  3512  001A18                     __end_of_Delay40us:
  3513                           	callstack 0
  3514                           
  3515 ;; *************** function _kpRead *****************
  3516 ;; Defined at:
  3517 ;;		line 37 in file "keypad.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;		None
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;		None
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  2    0[COMRAM] unsigned int 
  3524 ;; Registers used:
  3525 ;;		None
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3531 ;;      Params:         2       0       0       0       0       0       0
  3532 ;;      Locals:         0       0       0       0       0       0       0
  3533 ;;      Temps:          0       0       0       0       0       0       0
  3534 ;;      Totals:         2       0       0       0       0       0       0
  3535 ;;Total ram usage:        2 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_chooseSong
  3541 ;;		_playSong
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           	psect	text19
  3546  001A22                     __ptext19:
  3547                           	callstack 0
  3548  001A22                     _kpRead:
  3549                           	callstack 28
  3550  001A22                     
  3551                           ;keypad.c: 38:     return valor;
  3552  001A22  C024  F035         	movff	_valor@keypad$F294,?_kpRead
  3553  001A26  C025  F036         	movff	_valor@keypad$F294+1,?_kpRead+1
  3554  001A2A  0012               	return		;funcret
  3555  001A2C                     __end_of_kpRead:
  3556                           	callstack 0
  3557                           
  3558 ;; *************** function _kpDebounce *****************
  3559 ;; Defined at:
  3560 ;;		line 41 in file "keypad.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;		None
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  k               2    6[COMRAM] int 
  3565 ;;  i               1    9[COMRAM] unsigned char 
  3566 ;;  j               1    8[COMRAM] unsigned char 
  3567 ;;  old_D           1    5[COMRAM] unsigned char 
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      void 
  3570 ;; Registers used:
  3571 ;;		wreg, status,2, status,0, prodl, prodh
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3577 ;;      Params:         0       0       0       0       0       0       0
  3578 ;;      Locals:         5       0       0       0       0       0       0
  3579 ;;      Temps:          5       0       0       0       0       0       0
  3580 ;;      Totals:        10       0       0       0       0       0       0
  3581 ;;Total ram usage:       10 bytes
  3582 ;; Hardware stack levels used:    1
  3583 ;; This function calls:
  3584 ;;		Nothing
  3585 ;; This function is called by:
  3586 ;;		_chooseSong
  3587 ;;		_playSong
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           	psect	text20
  3592  000D3C                     __ptext20:
  3593                           	callstack 0
  3594  000D3C                     _kpDebounce:
  3595                           	callstack 28
  3596  000D3C                     
  3597                           ;keypad.c: 42:     unsigned char i, j;;keypad.c: 43:     static unsigned char tempo;;key
      +                          pad.c: 44:     static unsigned int valorNovo = 0x0000;;keypad.c: 45:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 48:     unsigned char old_D;;keypad.c: 49:     old_
      +                          D = PORTD;
  3598  000D3C  CF83 F03A          	movff	3971,kpDebounce@old_D	;volatile
  3599  000D40                     
  3600                           ;keypad.c: 53:     TRISD |= 0x0f;
  3601  000D40  0E0F               	movlw	15
  3602  000D42  1295               	iorwf	149,f,c	;volatile
  3603  000D44                     
  3604                           ;keypad.c: 55:     for (i = 0; i < 3; i++) {
  3605  000D44  0E00               	movlw	0
  3606  000D46  6E3E               	movwf	kpDebounce@i^0,c
  3607  000D48                     l1974:
  3608                           
  3609                           ;keypad.c: 57:         TRISB &= 0xF8;
  3610  000D48  0EF8               	movlw	248
  3611  000D4A  1693               	andwf	147,f,c	;volatile
  3612                           
  3613                           ;keypad.c: 59:         ((TRISB) |= (1<<(i)));
  3614  000D4C  C03E  F035         	movff	kpDebounce@i,??_kpDebounce
  3615  000D50  0E01               	movlw	1
  3616  000D52  6E36               	movwf	(??_kpDebounce+1)^0,c
  3617  000D54  2A35               	incf	??_kpDebounce^0,f,c
  3618  000D56  EFAF  F006         	goto	u1594
  3619  000D5A                     u1595:
  3620  000D5A  90D8               	bcf	status,0,c
  3621  000D5C  3636               	rlcf	(??_kpDebounce+1)^0,f,c
  3622  000D5E                     u1594:
  3623  000D5E  2E35               	decfsz	??_kpDebounce^0,f,c
  3624  000D60  EFAD  F006         	goto	u1595
  3625  000D64  5036               	movf	(??_kpDebounce+1)^0,w,c
  3626  000D66  1293               	iorwf	147,f,c	;volatile
  3627                           
  3628                           ;keypad.c: 61:         PORTB |= 0x07;
  3629  000D68  0E07               	movlw	7
  3630  000D6A  1281               	iorwf	129,f,c	;volatile
  3631                           
  3632                           ;keypad.c: 62:         ((PORTB) &= ~(1<<(i)));
  3633  000D6C  C03E  F035         	movff	kpDebounce@i,??_kpDebounce
  3634  000D70  0E01               	movlw	1
  3635  000D72  6E36               	movwf	(??_kpDebounce+1)^0,c
  3636  000D74  2A35               	incf	??_kpDebounce^0,f,c
  3637  000D76  EFBF  F006         	goto	u1604
  3638  000D7A                     u1605:
  3639  000D7A  90D8               	bcf	status,0,c
  3640  000D7C  3636               	rlcf	(??_kpDebounce+1)^0,f,c
  3641  000D7E                     u1604:
  3642  000D7E  2E35               	decfsz	??_kpDebounce^0,f,c
  3643  000D80  EFBD  F006         	goto	u1605
  3644  000D84  5036               	movf	(??_kpDebounce+1)^0,w,c
  3645  000D86  0AFF               	xorlw	255
  3646  000D88  1681               	andwf	129,f,c	;volatile
  3647  000D8A                     
  3648                           ;keypad.c: 65:         for (int k = 0; k < 10; k++);
  3649  000D8A  0E00               	movlw	0
  3650  000D8C  6E3C               	movwf	(kpDebounce@k+1)^0,c
  3651  000D8E  0E00               	movlw	0
  3652  000D90  6E3B               	movwf	kpDebounce@k^0,c
  3653  000D92                     l1982:
  3654  000D92  4A3B               	infsnz	kpDebounce@k^0,f,c
  3655  000D94  2A3C               	incf	(kpDebounce@k+1)^0,f,c
  3656  000D96  BE3C               	btfsc	(kpDebounce@k+1)^0,7,c
  3657  000D98  EFD7  F006         	goto	u1611
  3658  000D9C  503C               	movf	(kpDebounce@k+1)^0,w,c
  3659  000D9E  E109               	bnz	u1610
  3660  000DA0  0E0A               	movlw	10
  3661  000DA2  5C3B               	subwf	kpDebounce@k^0,w,c
  3662  000DA4  A0D8               	btfss	status,0,c
  3663  000DA6  EFD7  F006         	goto	u1611
  3664  000DAA  EFD9  F006         	goto	u1610
  3665  000DAE                     u1611:
  3666  000DAE  EFC9  F006         	goto	l1982
  3667  000DB2                     u1610:
  3668  000DB2                     
  3669                           ;keypad.c: 68:         for (j = 0; j < 4; j++) {
  3670  000DB2  0E00               	movlw	0
  3671  000DB4  6E3D               	movwf	kpDebounce@j^0,c
  3672  000DB6                     l1992:
  3673                           
  3674                           ;keypad.c: 69:             if (!((PORTD) & (1<<(j)))) {
  3675  000DB6  C03D  F035         	movff	kpDebounce@j,??_kpDebounce
  3676  000DBA  0E01               	movlw	1
  3677  000DBC  6E36               	movwf	(??_kpDebounce+1)^0,c
  3678  000DBE  2A35               	incf	??_kpDebounce^0,f,c
  3679  000DC0  EFE4  F006         	goto	u1624
  3680  000DC4                     u1625:
  3681  000DC4  90D8               	bcf	status,0,c
  3682  000DC6  3636               	rlcf	(??_kpDebounce+1)^0,f,c
  3683  000DC8                     u1624:
  3684  000DC8  2E35               	decfsz	??_kpDebounce^0,f,c
  3685  000DCA  EFE2  F006         	goto	u1625
  3686  000DCE  5036               	movf	(??_kpDebounce+1)^0,w,c
  3687  000DD0  1483               	andwf	131,w,c	;volatile
  3688  000DD2  0900               	iorlw	0
  3689  000DD4  A4D8               	btfss	status,2,c
  3690  000DD6  EFEF  F006         	goto	u1631
  3691  000DDA  EFF1  F006         	goto	u1630
  3692  000DDE                     u1631:
  3693  000DDE  EF09  F007         	goto	l1996
  3694  000DE2                     u1630:
  3695  000DE2                     
  3696                           ;keypad.c: 70:                 ((valorNovo) |= (1<<((i * 4) + j)));
  3697  000DE2  503E               	movf	kpDebounce@i^0,w,c
  3698  000DE4  0D04               	mullw	4
  3699  000DE6  50F3               	movf	243,w,c
  3700  000DE8  243D               	addwf	kpDebounce@j^0,w,c
  3701  000DEA  6E35               	movwf	??_kpDebounce^0,c
  3702  000DEC  0E01               	movlw	1
  3703  000DEE  6E36               	movwf	(??_kpDebounce+1)^0,c
  3704  000DF0  0E00               	movlw	0
  3705  000DF2  6E37               	movwf	(??_kpDebounce+2)^0,c
  3706  000DF4  2A35               	incf	??_kpDebounce^0,f,c
  3707  000DF6  EF00  F007         	goto	u1644
  3708  000DFA                     u1645:
  3709  000DFA  90D8               	bcf	status,0,c
  3710  000DFC  3636               	rlcf	(??_kpDebounce+1)^0,f,c
  3711  000DFE  3637               	rlcf	(??_kpDebounce+2)^0,f,c
  3712  000E00                     u1644:
  3713  000E00  2E35               	decfsz	??_kpDebounce^0,f,c
  3714  000E02  EFFD  F006         	goto	u1645
  3715  000E06  5036               	movf	(??_kpDebounce+1)^0,w,c
  3716  000E08  1222               	iorwf	kpDebounce@valorNovo^0,f,c
  3717  000E0A  5037               	movf	(??_kpDebounce+2)^0,w,c
  3718  000E0C  1223               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  3719                           
  3720                           ;keypad.c: 71:             } else {
  3721  000E0E  EF23  F007         	goto	l1998
  3722  000E12                     l1996:
  3723                           
  3724                           ;keypad.c: 72:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  3725  000E12  503E               	movf	kpDebounce@i^0,w,c
  3726  000E14  0D04               	mullw	4
  3727  000E16  50F3               	movf	243,w,c
  3728  000E18  243D               	addwf	kpDebounce@j^0,w,c
  3729  000E1A  6E35               	movwf	??_kpDebounce^0,c
  3730  000E1C  0E01               	movlw	1
  3731  000E1E  6E36               	movwf	(??_kpDebounce+1)^0,c
  3732  000E20  0E00               	movlw	0
  3733  000E22  6E37               	movwf	(??_kpDebounce+2)^0,c
  3734  000E24  2A35               	incf	??_kpDebounce^0,f,c
  3735  000E26  EF18  F007         	goto	u1654
  3736  000E2A                     u1655:
  3737  000E2A  90D8               	bcf	status,0,c
  3738  000E2C  3636               	rlcf	(??_kpDebounce+1)^0,f,c
  3739  000E2E  3637               	rlcf	(??_kpDebounce+2)^0,f,c
  3740  000E30                     u1654:
  3741  000E30  2E35               	decfsz	??_kpDebounce^0,f,c
  3742  000E32  EF15  F007         	goto	u1655
  3743  000E36  1C36               	comf	(??_kpDebounce+1)^0,w,c
  3744  000E38  6E38               	movwf	(??_kpDebounce+3)^0,c
  3745  000E3A  1C37               	comf	(??_kpDebounce+2)^0,w,c
  3746  000E3C  6E39               	movwf	(??_kpDebounce+4)^0,c
  3747  000E3E  5038               	movf	(??_kpDebounce+3)^0,w,c
  3748  000E40  1622               	andwf	kpDebounce@valorNovo^0,f,c
  3749  000E42  5039               	movf	(??_kpDebounce+4)^0,w,c
  3750  000E44  1623               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  3751  000E46                     l1998:
  3752                           
  3753                           ;keypad.c: 74:         }
  3754  000E46  2A3D               	incf	kpDebounce@j^0,f,c
  3755  000E48  0E03               	movlw	3
  3756  000E4A  643D               	cpfsgt	kpDebounce@j^0,c
  3757  000E4C  EF2A  F007         	goto	u1661
  3758  000E50  EF2C  F007         	goto	u1660
  3759  000E54                     u1661:
  3760  000E54  EFDB  F006         	goto	l1992
  3761  000E58                     u1660:
  3762  000E58                     
  3763                           ;keypad.c: 75:     }
  3764  000E58  2A3E               	incf	kpDebounce@i^0,f,c
  3765  000E5A  0E02               	movlw	2
  3766  000E5C  643E               	cpfsgt	kpDebounce@i^0,c
  3767  000E5E  EF33  F007         	goto	u1671
  3768  000E62  EF35  F007         	goto	u1670
  3769  000E66                     u1671:
  3770  000E66  EFA4  F006         	goto	l1974
  3771  000E6A                     u1670:
  3772  000E6A                     
  3773                           ;keypad.c: 76:     if (valorAntigo == valorNovo) {
  3774  000E6A  5022               	movf	kpDebounce@valorNovo^0,w,c
  3775  000E6C  1820               	xorwf	kpDebounce@valorAntigo^0,w,c
  3776  000E6E  E107               	bnz	u1681
  3777  000E70  5023               	movf	(kpDebounce@valorNovo+1)^0,w,c
  3778  000E72  1821               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  3779  000E74  A4D8               	btfss	status,2,c
  3780  000E76  EF3F  F007         	goto	u1681
  3781  000E7A  EF41  F007         	goto	u1680
  3782  000E7E                     u1681:
  3783  000E7E  EF44  F007         	goto	l2010
  3784  000E82                     u1680:
  3785  000E82                     
  3786                           ;keypad.c: 77:         tempo--;
  3787  000E82  0626               	decf	kpDebounce@tempo^0,f,c
  3788                           
  3789                           ;keypad.c: 78:     } else {
  3790  000E84  EF4A  F007         	goto	l360
  3791  000E88                     l2010:
  3792                           
  3793                           ;keypad.c: 79:         tempo = 10;
  3794  000E88  0E0A               	movlw	10
  3795  000E8A  6E26               	movwf	kpDebounce@tempo^0,c
  3796  000E8C                     
  3797                           ;keypad.c: 80:         valorAntigo = valorNovo;
  3798  000E8C  C022  F020         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  3799  000E90  C023  F021         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  3800  000E94                     l360:
  3801                           
  3802                           ;keypad.c: 82:     if (tempo == 0) {
  3803  000E94  5026               	movf	kpDebounce@tempo^0,w,c
  3804  000E96  A4D8               	btfss	status,2,c
  3805  000E98  EF50  F007         	goto	u1691
  3806  000E9C  EF52  F007         	goto	u1690
  3807  000EA0                     u1691:
  3808  000EA0  EF56  F007         	goto	l361
  3809  000EA4                     u1690:
  3810  000EA4                     
  3811                           ;keypad.c: 83:         valor = valorAntigo;
  3812  000EA4  C020  F024         	movff	kpDebounce@valorAntigo,_valor@keypad$F294
  3813  000EA8  C021  F025         	movff	kpDebounce@valorAntigo+1,_valor@keypad$F294+1
  3814  000EAC                     l361:
  3815                           
  3816                           ;keypad.c: 85:     PORTD = old_D;
  3817  000EAC  C03A  FF83         	movff	kpDebounce@old_D,3971	;volatile
  3818  000EB0                     
  3819                           ;keypad.c: 86:     TRISD = 0x00;
  3820  000EB0  0E00               	movlw	0
  3821  000EB2  6E95               	movwf	149,c	;volatile
  3822  000EB4  0012               	return		;funcret
  3823  000EB6                     __end_of_kpDebounce:
  3824                           	callstack 0
  3825                           
  3826 ;; *************** function _alterarVolume *****************
  3827 ;; Defined at:
  3828 ;;		line 130 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;  opt             1    wreg     unsigned char 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  opt             1    6[COMRAM] unsigned char 
  3833 ;;  old_D           1    7[COMRAM] unsigned char 
  3834 ;;  old_A           1    0        unsigned char 
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		wreg, status,2, status,0, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3844 ;;      Params:         0       0       0       0       0       0       0
  3845 ;;      Locals:         2       0       0       0       0       0       0
  3846 ;;      Temps:          0       0       0       0       0       0       0
  3847 ;;      Totals:         2       0       0       0       0       0       0
  3848 ;;Total ram usage:        2 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    1
  3851 ;; This function calls:
  3852 ;;		_atraso_ms
  3853 ;; This function is called by:
  3854 ;;		_playSong
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           	psect	text21
  3859  001006                     __ptext21:
  3860                           	callstack 0
  3861  001006                     _alterarVolume:
  3862                           	callstack 27
  3863                           
  3864                           ;incstack = 0
  3865                           ;alterarVolume@opt stored from wreg
  3866  001006  6E3B               	movwf	alterarVolume@opt^0,c
  3867  001008                     
  3868                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 131:     if (opt == 1) {
  3869  001008  043B               	decf	alterarVolume@opt^0,w,c
  3870  00100A  A4D8               	btfss	status,2,c
  3871  00100C  EF0A  F008         	goto	u1741
  3872  001010  EF0C  F008         	goto	u1740
  3873  001014                     u1741:
  3874  001014  EF18  F008         	goto	l2086
  3875  001018                     u1740:
  3876  001018                     
  3877                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 132:         if(volume!=8){volum
      +                          e += 1;}
  3878  001018  0E08               	movlw	8
  3879  00101A  181D               	xorwf	_volume^0,w,c
  3880  00101C  B4D8               	btfsc	status,2,c
  3881  00101E  EF13  F008         	goto	u1751
  3882  001022  EF15  F008         	goto	u1750
  3883  001026                     u1751:
  3884  001026  EF21  F008         	goto	l2090
  3885  00102A                     u1750:
  3886  00102A  2A1D               	incf	_volume^0,f,c
  3887  00102C  EF21  F008         	goto	l2090
  3888  001030                     l2086:
  3889                           
  3890                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 134:         if(volume!=0){volum
      +                          e -= 1;}
  3891  001030  501D               	movf	_volume^0,w,c
  3892  001032  B4D8               	btfsc	status,2,c
  3893  001034  EF1E  F008         	goto	u1761
  3894  001038  EF20  F008         	goto	u1760
  3895  00103C                     u1761:
  3896  00103C  EF21  F008         	goto	l2090
  3897  001040                     u1760:
  3898  001040  061D               	decf	_volume^0,f,c
  3899  001042                     l2090:
  3900                           
  3901                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 136:     unsigned char old_D, ol
      +                          d_A;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 137:     old_D = TRISD;
  3902  001042  CF95 F03C          	movff	3989,alterarVolume@old_D	;volatile
  3903  001046                     
  3904                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 140:     PORTA=0x00;
  3905  001046  0E00               	movlw	0
  3906  001048  6E80               	movwf	128,c	;volatile
  3907  00104A                     
  3908                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 141:     TRISD = 0x00;
  3909  00104A  0E00               	movlw	0
  3910  00104C  6E95               	movwf	149,c	;volatile
  3911  00104E                     
  3912                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 143:     if (volume == 0) {
  3913  00104E  501D               	movf	_volume^0,w,c
  3914  001050  A4D8               	btfss	status,2,c
  3915  001052  EF2D  F008         	goto	u1771
  3916  001056  EF2F  F008         	goto	u1770
  3917  00105A                     u1771:
  3918  00105A  EF33  F008         	goto	l2100
  3919  00105E                     u1770:
  3920  00105E                     
  3921                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 144:         PORTD = 0b00000000;
  3922  00105E  0E00               	movlw	0
  3923  001060  6E83               	movwf	131,c	;volatile
  3924                           
  3925                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 145:     } else if (volume == 1)
      +                           {
  3926  001062  EF99  F008         	goto	l2132
  3927  001066                     l2100:
  3928  001066  041D               	decf	_volume^0,w,c
  3929  001068  A4D8               	btfss	status,2,c
  3930  00106A  EF39  F008         	goto	u1781
  3931  00106E  EF3B  F008         	goto	u1780
  3932  001072                     u1781:
  3933  001072  EF3F  F008         	goto	l2104
  3934  001076                     u1780:
  3935  001076                     
  3936                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 146:         PORTD = 0b10000000;
  3937  001076  0E80               	movlw	128
  3938  001078  6E83               	movwf	131,c	;volatile
  3939                           
  3940                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 147:     } else if (volume == 2)
      +                           {
  3941  00107A  EF99  F008         	goto	l2132
  3942  00107E                     l2104:
  3943  00107E  0E02               	movlw	2
  3944  001080  181D               	xorwf	_volume^0,w,c
  3945  001082  A4D8               	btfss	status,2,c
  3946  001084  EF46  F008         	goto	u1791
  3947  001088  EF48  F008         	goto	u1790
  3948  00108C                     u1791:
  3949  00108C  EF4C  F008         	goto	l2108
  3950  001090                     u1790:
  3951  001090                     
  3952                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 148:         PORTD = 0b11000000;
  3953  001090  0EC0               	movlw	192
  3954  001092  6E83               	movwf	131,c	;volatile
  3955                           
  3956                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 149:     } else if (volume == 3)
      +                           {
  3957  001094  EF99  F008         	goto	l2132
  3958  001098                     l2108:
  3959  001098  0E03               	movlw	3
  3960  00109A  181D               	xorwf	_volume^0,w,c
  3961  00109C  A4D8               	btfss	status,2,c
  3962  00109E  EF53  F008         	goto	u1801
  3963  0010A2  EF55  F008         	goto	u1800
  3964  0010A6                     u1801:
  3965  0010A6  EF59  F008         	goto	l2112
  3966  0010AA                     u1800:
  3967  0010AA                     
  3968                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 150:         PORTD = 0b11100000;
  3969  0010AA  0EE0               	movlw	224
  3970  0010AC  6E83               	movwf	131,c	;volatile
  3971                           
  3972                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 151:     } else if (volume == 4)
      +                           {
  3973  0010AE  EF99  F008         	goto	l2132
  3974  0010B2                     l2112:
  3975  0010B2  0E04               	movlw	4
  3976  0010B4  181D               	xorwf	_volume^0,w,c
  3977  0010B6  A4D8               	btfss	status,2,c
  3978  0010B8  EF60  F008         	goto	u1811
  3979  0010BC  EF62  F008         	goto	u1810
  3980  0010C0                     u1811:
  3981  0010C0  EF66  F008         	goto	l2116
  3982  0010C4                     u1810:
  3983  0010C4                     
  3984                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 152:         PORTD = 0b11110000;
  3985  0010C4  0EF0               	movlw	240
  3986  0010C6  6E83               	movwf	131,c	;volatile
  3987                           
  3988                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 153:     } else if (volume == 5)
      +                           {
  3989  0010C8  EF99  F008         	goto	l2132
  3990  0010CC                     l2116:
  3991  0010CC  0E05               	movlw	5
  3992  0010CE  181D               	xorwf	_volume^0,w,c
  3993  0010D0  A4D8               	btfss	status,2,c
  3994  0010D2  EF6D  F008         	goto	u1821
  3995  0010D6  EF6F  F008         	goto	u1820
  3996  0010DA                     u1821:
  3997  0010DA  EF73  F008         	goto	l2120
  3998  0010DE                     u1820:
  3999  0010DE                     
  4000                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 154:         PORTD = 0b11111000;
  4001  0010DE  0EF8               	movlw	248
  4002  0010E0  6E83               	movwf	131,c	;volatile
  4003                           
  4004                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 155:     } else if (volume == 6)
      +                           {
  4005  0010E2  EF99  F008         	goto	l2132
  4006  0010E6                     l2120:
  4007  0010E6  0E06               	movlw	6
  4008  0010E8  181D               	xorwf	_volume^0,w,c
  4009  0010EA  A4D8               	btfss	status,2,c
  4010  0010EC  EF7A  F008         	goto	u1831
  4011  0010F0  EF7C  F008         	goto	u1830
  4012  0010F4                     u1831:
  4013  0010F4  EF80  F008         	goto	l2124
  4014  0010F8                     u1830:
  4015  0010F8                     
  4016                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 156:         PORTD = 0b11111100;
  4017  0010F8  0EFC               	movlw	252
  4018  0010FA  6E83               	movwf	131,c	;volatile
  4019                           
  4020                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 157:     } else if (volume == 7)
      +                           {
  4021  0010FC  EF99  F008         	goto	l2132
  4022  001100                     l2124:
  4023  001100  0E07               	movlw	7
  4024  001102  181D               	xorwf	_volume^0,w,c
  4025  001104  A4D8               	btfss	status,2,c
  4026  001106  EF87  F008         	goto	u1841
  4027  00110A  EF89  F008         	goto	u1840
  4028  00110E                     u1841:
  4029  00110E  EF8D  F008         	goto	l2128
  4030  001112                     u1840:
  4031  001112                     
  4032                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 158:         PORTD = 0b11111110;
  4033  001112  0EFE               	movlw	254
  4034  001114  6E83               	movwf	131,c	;volatile
  4035                           
  4036                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 159:     } else if (volume == 8)
      +                           {
  4037  001116  EF99  F008         	goto	l2132
  4038  00111A                     l2128:
  4039  00111A  0E08               	movlw	8
  4040  00111C  181D               	xorwf	_volume^0,w,c
  4041  00111E  A4D8               	btfss	status,2,c
  4042  001120  EF94  F008         	goto	u1851
  4043  001124  EF96  F008         	goto	u1850
  4044  001128                     u1851:
  4045  001128  EF99  F008         	goto	l279
  4046  00112C                     u1850:
  4047  00112C                     
  4048                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 160:         PORTD = 0b11111111;
  4049  00112C  6883               	setf	131,c	;volatile
  4050  00112E  EF99  F008         	goto	l2132
  4051  001132                     l279:
  4052  001132                     l2132:
  4053                           
  4054                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 162:     atraso_ms(500);
  4055  001132  0E01               	movlw	1
  4056  001134  6E36               	movwf	(atraso_ms@t+1)^0,c
  4057  001136  0EF4               	movlw	244
  4058  001138  6E35               	movwf	atraso_ms@t^0,c
  4059  00113A  EC9F  F00B         	call	_atraso_ms	;wreg free
  4060  00113E                     
  4061                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 163:     TRISD=old_D;
  4062  00113E  C03C  FF95         	movff	alterarVolume@old_D,3989	;volatile
  4063  001142  0012               	return		;funcret
  4064  001144                     __end_of_alterarVolume:
  4065                           	callstack 0
  4066                           
  4067 ;; *************** function _atraso_ms *****************
  4068 ;; Defined at:
  4069 ;;		line 3 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  t               2    0[COMRAM] int 
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;  i               2    2[COMRAM] volatile unsigned int 
  4074 ;;  k               1    5[COMRAM] volatile unsigned char 
  4075 ;;  j               1    4[COMRAM] volatile unsigned char 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      void 
  4078 ;; Registers used:
  4079 ;;		wreg, status,2, status,0
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4085 ;;      Params:         2       0       0       0       0       0       0
  4086 ;;      Locals:         4       0       0       0       0       0       0
  4087 ;;      Temps:          0       0       0       0       0       0       0
  4088 ;;      Totals:         6       0       0       0       0       0       0
  4089 ;;Total ram usage:        6 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; This function calls:
  4092 ;;		Nothing
  4093 ;; This function is called by:
  4094 ;;		_main
  4095 ;;		_chooseSong
  4096 ;;		_playSong
  4097 ;;		_alterarVolume
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           	psect	text22
  4102  00173E                     __ptext22:
  4103                           	callstack 0
  4104  00173E                     _atraso_ms:
  4105                           	callstack 28
  4106  00173E                     
  4107                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 4:     volatile unsigned char j,
      +                           k;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 5:     volatile unsigned int 
      +                          i;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 7:     for (i = 0; i < (t); i+
      +                          +) {
  4108  00173E  0E00               	movlw	0
  4109  001740  6E38               	movwf	(atraso_ms@i+1)^0,c	;volatile
  4110  001742  0E00               	movlw	0
  4111  001744  6E37               	movwf	atraso_ms@i^0,c	;volatile
  4112  001746  EFC5  F00B         	goto	l1898
  4113  00174A                     l1876:
  4114                           
  4115                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 8:         for (j = 0; j < 41; j
      +                          ++) {
  4116  00174A  0E00               	movlw	0
  4117  00174C  6E39               	movwf	atraso_ms@j^0,c	;volatile
  4118  00174E                     l1878:
  4119  00174E  0E28               	movlw	40
  4120  001750  6439               	cpfsgt	atraso_ms@j^0,c	;volatile
  4121  001752  EFAD  F00B         	goto	u1471
  4122  001756  EFAF  F00B         	goto	u1470
  4123  00175A                     u1471:
  4124  00175A  EFB1  F00B         	goto	l1882
  4125  00175E                     u1470:
  4126  00175E  EFC3  F00B         	goto	l1896
  4127  001762                     l1882:
  4128                           
  4129                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 9:             for (k = 0; k < 3
      +                          ; k++);
  4130  001762  0E00               	movlw	0
  4131  001764  6E3A               	movwf	atraso_ms@k^0,c	;volatile
  4132  001766                     l1884:
  4133  001766  0E02               	movlw	2
  4134  001768  643A               	cpfsgt	atraso_ms@k^0,c	;volatile
  4135  00176A  EFB9  F00B         	goto	u1481
  4136  00176E  EFBB  F00B         	goto	u1480
  4137  001772                     u1481:
  4138  001772  EFBD  F00B         	goto	l1888
  4139  001776                     u1480:
  4140  001776  EFC0  F00B         	goto	l1892
  4141  00177A                     l1888:
  4142  00177A  2A3A               	incf	atraso_ms@k^0,f,c	;volatile
  4143  00177C  EFB3  F00B         	goto	l1884
  4144  001780                     l1892:
  4145                           
  4146                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 10:         }
  4147  001780  2A39               	incf	atraso_ms@j^0,f,c	;volatile
  4148  001782  EFA7  F00B         	goto	l1878
  4149  001786                     l1896:
  4150                           
  4151                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 11:     }
  4152  001786  4A37               	infsnz	atraso_ms@i^0,f,c	;volatile
  4153  001788  2A38               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  4154  00178A                     l1898:
  4155  00178A  5035               	movf	atraso_ms@t^0,w,c
  4156  00178C  5C37               	subwf	atraso_ms@i^0,w,c	;volatile
  4157  00178E  5036               	movf	(atraso_ms@t+1)^0,w,c
  4158  001790  5838               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  4159  001792  A0D8               	btfss	status,0,c
  4160  001794  EFCE  F00B         	goto	u1491
  4161  001798  EFD0  F00B         	goto	u1490
  4162  00179C                     u1491:
  4163  00179C  EFA5  F00B         	goto	l1876
  4164  0017A0                     u1490:
  4165  0017A0  0012               	return		;funcret
  4166  0017A2                     __end_of_atraso_ms:
  4167                           	callstack 0
  4168                           
  4169 ;; *************** function ___awmod *****************
  4170 ;; Defined at:
  4171 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awmod.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;  dividend        2    8[COMRAM] int 
  4174 ;;  divisor         2   10[COMRAM] int 
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;  sign            1   13[COMRAM] unsigned char 
  4177 ;;  counter         1   12[COMRAM] unsigned char 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  2    8[COMRAM] int 
  4180 ;; Registers used:
  4181 ;;		wreg, status,2, status,0
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4187 ;;      Params:         4       0       0       0       0       0       0
  4188 ;;      Locals:         2       0       0       0       0       0       0
  4189 ;;      Temps:          0       0       0       0       0       0       0
  4190 ;;      Totals:         6       0       0       0       0       0       0
  4191 ;;Total ram usage:        6 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; This function calls:
  4194 ;;		Nothing
  4195 ;; This function is called by:
  4196 ;;		_playSong
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           	psect	text23
  4201  001344                     __ptext23:
  4202                           	callstack 0
  4203  001344                     ___awmod:
  4204                           	callstack 28
  4205  001344  0E00               	movlw	0
  4206  001346  6E42               	movwf	___awmod@sign^0,c
  4207  001348  BE3E               	btfsc	(___awmod@dividend+1)^0,7,c
  4208  00134A  EFAB  F009         	goto	u1920
  4209  00134E  EFA9  F009         	goto	u1921
  4210  001352                     u1921:
  4211  001352  EFB1  F009         	goto	l2188
  4212  001356                     u1920:
  4213  001356  6C3D               	negf	___awmod@dividend^0,c
  4214  001358  1E3E               	comf	(___awmod@dividend+1)^0,f,c
  4215  00135A  B0D8               	btfsc	status,0,c
  4216  00135C  2A3E               	incf	(___awmod@dividend+1)^0,f,c
  4217  00135E  0E01               	movlw	1
  4218  001360  6E42               	movwf	___awmod@sign^0,c
  4219  001362                     l2188:
  4220  001362  BE40               	btfsc	(___awmod@divisor+1)^0,7,c
  4221  001364  EFB8  F009         	goto	u1930
  4222  001368  EFB6  F009         	goto	u1931
  4223  00136C                     u1931:
  4224  00136C  EFBC  F009         	goto	l2192
  4225  001370                     u1930:
  4226  001370  6C3F               	negf	___awmod@divisor^0,c
  4227  001372  1E40               	comf	(___awmod@divisor+1)^0,f,c
  4228  001374  B0D8               	btfsc	status,0,c
  4229  001376  2A40               	incf	(___awmod@divisor+1)^0,f,c
  4230  001378                     l2192:
  4231  001378  503F               	movf	___awmod@divisor^0,w,c
  4232  00137A  1040               	iorwf	(___awmod@divisor+1)^0,w,c
  4233  00137C  B4D8               	btfsc	status,2,c
  4234  00137E  EFC3  F009         	goto	u1941
  4235  001382  EFC5  F009         	goto	u1940
  4236  001386                     u1941:
  4237  001386  EFE9  F009         	goto	l2208
  4238  00138A                     u1940:
  4239  00138A  0E01               	movlw	1
  4240  00138C  6E41               	movwf	___awmod@counter^0,c
  4241  00138E  EFCD  F009         	goto	l2198
  4242  001392                     l2196:
  4243  001392  90D8               	bcf	status,0,c
  4244  001394  363F               	rlcf	___awmod@divisor^0,f,c
  4245  001396  3640               	rlcf	(___awmod@divisor+1)^0,f,c
  4246  001398  2A41               	incf	___awmod@counter^0,f,c
  4247  00139A                     l2198:
  4248  00139A  AE40               	btfss	(___awmod@divisor+1)^0,7,c
  4249  00139C  EFD2  F009         	goto	u1951
  4250  0013A0  EFD4  F009         	goto	u1950
  4251  0013A4                     u1951:
  4252  0013A4  EFC9  F009         	goto	l2196
  4253  0013A8                     u1950:
  4254  0013A8                     l2200:
  4255  0013A8  503F               	movf	___awmod@divisor^0,w,c
  4256  0013AA  5C3D               	subwf	___awmod@dividend^0,w,c
  4257  0013AC  5040               	movf	(___awmod@divisor+1)^0,w,c
  4258  0013AE  583E               	subwfb	(___awmod@dividend+1)^0,w,c
  4259  0013B0  A0D8               	btfss	status,0,c
  4260  0013B2  EFDD  F009         	goto	u1961
  4261  0013B6  EFDF  F009         	goto	u1960
  4262  0013BA                     u1961:
  4263  0013BA  EFE3  F009         	goto	l2204
  4264  0013BE                     u1960:
  4265  0013BE  503F               	movf	___awmod@divisor^0,w,c
  4266  0013C0  5E3D               	subwf	___awmod@dividend^0,f,c
  4267  0013C2  5040               	movf	(___awmod@divisor+1)^0,w,c
  4268  0013C4  5A3E               	subwfb	(___awmod@dividend+1)^0,f,c
  4269  0013C6                     l2204:
  4270  0013C6  90D8               	bcf	status,0,c
  4271  0013C8  3240               	rrcf	(___awmod@divisor+1)^0,f,c
  4272  0013CA  323F               	rrcf	___awmod@divisor^0,f,c
  4273  0013CC  2E41               	decfsz	___awmod@counter^0,f,c
  4274  0013CE  EFD4  F009         	goto	l2200
  4275  0013D2                     l2208:
  4276  0013D2  5042               	movf	___awmod@sign^0,w,c
  4277  0013D4  B4D8               	btfsc	status,2,c
  4278  0013D6  EFEF  F009         	goto	u1971
  4279  0013DA  EFF1  F009         	goto	u1970
  4280  0013DE                     u1971:
  4281  0013DE  EFF5  F009         	goto	l2212
  4282  0013E2                     u1970:
  4283  0013E2  6C3D               	negf	___awmod@dividend^0,c
  4284  0013E4  1E3E               	comf	(___awmod@dividend+1)^0,f,c
  4285  0013E6  B0D8               	btfsc	status,0,c
  4286  0013E8  2A3E               	incf	(___awmod@dividend+1)^0,f,c
  4287  0013EA                     l2212:
  4288  0013EA  C03D  F03D         	movff	___awmod@dividend,?___awmod
  4289  0013EE  C03E  F03E         	movff	___awmod@dividend+1,?___awmod+1
  4290  0013F2  0012               	return		;funcret
  4291  0013F4                     __end_of___awmod:
  4292                           	callstack 0
  4293                           
  4294 ;; *************** function ___awdiv *****************
  4295 ;; Defined at:
  4296 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  dividend        2    0[COMRAM] int 
  4299 ;;  divisor         2    2[COMRAM] int 
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;  quotient        2    6[COMRAM] int 
  4302 ;;  sign            1    5[COMRAM] unsigned char 
  4303 ;;  counter         1    4[COMRAM] unsigned char 
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  2    0[COMRAM] int 
  4306 ;; Registers used:
  4307 ;;		wreg, status,2, status,0
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4313 ;;      Params:         4       0       0       0       0       0       0
  4314 ;;      Locals:         4       0       0       0       0       0       0
  4315 ;;      Temps:          0       0       0       0       0       0       0
  4316 ;;      Totals:         8       0       0       0       0       0       0
  4317 ;;Total ram usage:        8 bytes
  4318 ;; Hardware stack levels used:    1
  4319 ;; This function calls:
  4320 ;;		Nothing
  4321 ;; This function is called by:
  4322 ;;		_playSong
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           	psect	text24
  4327  001280                     __ptext24:
  4328                           	callstack 0
  4329  001280                     ___awdiv:
  4330                           	callstack 28
  4331  001280  0E00               	movlw	0
  4332  001282  6E3A               	movwf	___awdiv@sign^0,c
  4333  001284  BE38               	btfsc	(___awdiv@divisor+1)^0,7,c
  4334  001286  EF49  F009         	goto	u1860
  4335  00128A  EF47  F009         	goto	u1861
  4336  00128E                     u1861:
  4337  00128E  EF4F  F009         	goto	l2144
  4338  001292                     u1860:
  4339  001292  6C37               	negf	___awdiv@divisor^0,c
  4340  001294  1E38               	comf	(___awdiv@divisor+1)^0,f,c
  4341  001296  B0D8               	btfsc	status,0,c
  4342  001298  2A38               	incf	(___awdiv@divisor+1)^0,f,c
  4343  00129A  0E01               	movlw	1
  4344  00129C  6E3A               	movwf	___awdiv@sign^0,c
  4345  00129E                     l2144:
  4346  00129E  BE36               	btfsc	(___awdiv@dividend+1)^0,7,c
  4347  0012A0  EF56  F009         	goto	u1870
  4348  0012A4  EF54  F009         	goto	u1871
  4349  0012A8                     u1871:
  4350  0012A8  EF5C  F009         	goto	l2150
  4351  0012AC                     u1870:
  4352  0012AC  6C35               	negf	___awdiv@dividend^0,c
  4353  0012AE  1E36               	comf	(___awdiv@dividend+1)^0,f,c
  4354  0012B0  B0D8               	btfsc	status,0,c
  4355  0012B2  2A36               	incf	(___awdiv@dividend+1)^0,f,c
  4356  0012B4  0E01               	movlw	1
  4357  0012B6  1A3A               	xorwf	___awdiv@sign^0,f,c
  4358  0012B8                     l2150:
  4359  0012B8  0E00               	movlw	0
  4360  0012BA  6E3C               	movwf	(___awdiv@quotient+1)^0,c
  4361  0012BC  0E00               	movlw	0
  4362  0012BE  6E3B               	movwf	___awdiv@quotient^0,c
  4363  0012C0  5037               	movf	___awdiv@divisor^0,w,c
  4364  0012C2  1038               	iorwf	(___awdiv@divisor+1)^0,w,c
  4365  0012C4  B4D8               	btfsc	status,2,c
  4366  0012C6  EF67  F009         	goto	u1881
  4367  0012CA  EF69  F009         	goto	u1880
  4368  0012CE                     u1881:
  4369  0012CE  EF91  F009         	goto	l2172
  4370  0012D2                     u1880:
  4371  0012D2  0E01               	movlw	1
  4372  0012D4  6E39               	movwf	___awdiv@counter^0,c
  4373  0012D6  EF71  F009         	goto	l2158
  4374  0012DA                     l2156:
  4375  0012DA  90D8               	bcf	status,0,c
  4376  0012DC  3637               	rlcf	___awdiv@divisor^0,f,c
  4377  0012DE  3638               	rlcf	(___awdiv@divisor+1)^0,f,c
  4378  0012E0  2A39               	incf	___awdiv@counter^0,f,c
  4379  0012E2                     l2158:
  4380  0012E2  AE38               	btfss	(___awdiv@divisor+1)^0,7,c
  4381  0012E4  EF76  F009         	goto	u1891
  4382  0012E8  EF78  F009         	goto	u1890
  4383  0012EC                     u1891:
  4384  0012EC  EF6D  F009         	goto	l2156
  4385  0012F0                     u1890:
  4386  0012F0                     l2160:
  4387  0012F0  90D8               	bcf	status,0,c
  4388  0012F2  363B               	rlcf	___awdiv@quotient^0,f,c
  4389  0012F4  363C               	rlcf	(___awdiv@quotient+1)^0,f,c
  4390  0012F6  5037               	movf	___awdiv@divisor^0,w,c
  4391  0012F8  5C35               	subwf	___awdiv@dividend^0,w,c
  4392  0012FA  5038               	movf	(___awdiv@divisor+1)^0,w,c
  4393  0012FC  5836               	subwfb	(___awdiv@dividend+1)^0,w,c
  4394  0012FE  A0D8               	btfss	status,0,c
  4395  001300  EF84  F009         	goto	u1901
  4396  001304  EF86  F009         	goto	u1900
  4397  001308                     u1901:
  4398  001308  EF8B  F009         	goto	l2168
  4399  00130C                     u1900:
  4400  00130C  5037               	movf	___awdiv@divisor^0,w,c
  4401  00130E  5E35               	subwf	___awdiv@dividend^0,f,c
  4402  001310  5038               	movf	(___awdiv@divisor+1)^0,w,c
  4403  001312  5A36               	subwfb	(___awdiv@dividend+1)^0,f,c
  4404  001314  803B               	bsf	___awdiv@quotient^0,0,c
  4405  001316                     l2168:
  4406  001316  90D8               	bcf	status,0,c
  4407  001318  3238               	rrcf	(___awdiv@divisor+1)^0,f,c
  4408  00131A  3237               	rrcf	___awdiv@divisor^0,f,c
  4409  00131C  2E39               	decfsz	___awdiv@counter^0,f,c
  4410  00131E  EF78  F009         	goto	l2160
  4411  001322                     l2172:
  4412  001322  503A               	movf	___awdiv@sign^0,w,c
  4413  001324  B4D8               	btfsc	status,2,c
  4414  001326  EF97  F009         	goto	u1911
  4415  00132A  EF99  F009         	goto	u1910
  4416  00132E                     u1911:
  4417  00132E  EF9D  F009         	goto	l2176
  4418  001332                     u1910:
  4419  001332  6C3B               	negf	___awdiv@quotient^0,c
  4420  001334  1E3C               	comf	(___awdiv@quotient+1)^0,f,c
  4421  001336  B0D8               	btfsc	status,0,c
  4422  001338  2A3C               	incf	(___awdiv@quotient+1)^0,f,c
  4423  00133A                     l2176:
  4424  00133A  C03B  F035         	movff	___awdiv@quotient,?___awdiv
  4425  00133E  C03C  F036         	movff	___awdiv@quotient+1,?___awdiv+1
  4426  001342  0012               	return		;funcret
  4427  001344                     __end_of___awdiv:
  4428                           	callstack 0
  4429                           
  4430                           	psect	rparam
  4431  0000                     
  4432                           	psect	idloc
  4433                           
  4434                           ;Config register IDLOC0 @ 0x200000
  4435                           ;	unspecified, using default values
  4436  200000                     	org	2097152
  4437  200000  FF                 	db	255
  4438                           
  4439                           ;Config register IDLOC1 @ 0x200001
  4440                           ;	unspecified, using default values
  4441  200001                     	org	2097153
  4442  200001  FF                 	db	255
  4443                           
  4444                           ;Config register IDLOC2 @ 0x200002
  4445                           ;	unspecified, using default values
  4446  200002                     	org	2097154
  4447  200002  FF                 	db	255
  4448                           
  4449                           ;Config register IDLOC3 @ 0x200003
  4450                           ;	unspecified, using default values
  4451  200003                     	org	2097155
  4452  200003  FF                 	db	255
  4453                           
  4454                           ;Config register IDLOC4 @ 0x200004
  4455                           ;	unspecified, using default values
  4456  200004                     	org	2097156
  4457  200004  FF                 	db	255
  4458                           
  4459                           ;Config register IDLOC5 @ 0x200005
  4460                           ;	unspecified, using default values
  4461  200005                     	org	2097157
  4462  200005  FF                 	db	255
  4463                           
  4464                           ;Config register IDLOC6 @ 0x200006
  4465                           ;	unspecified, using default values
  4466  200006                     	org	2097158
  4467  200006  FF                 	db	255
  4468                           
  4469                           ;Config register IDLOC7 @ 0x200007
  4470                           ;	unspecified, using default values
  4471  200007                     	org	2097159
  4472  200007  FF                 	db	255
  4473                           
  4474                           	psect	config
  4475                           
  4476                           ; Padding undefined space
  4477  300000                     	org	3145728
  4478  300000  FF                 	db	255
  4479                           
  4480                           ;Config register CONFIG1H @ 0x300001
  4481                           ;	Oscillator Selection bits
  4482                           ;	OSC = HS, HS oscillator
  4483                           ;	Fail-Safe Clock Monitor Enable bit
  4484                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4485                           ;	Internal/External Oscillator Switchover bit
  4486                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4487  300001                     	org	3145729
  4488  300001  02                 	db	2
  4489                           
  4490                           ;Config register CONFIG2L @ 0x300002
  4491                           ;	Power-up Timer Enable bit
  4492                           ;	PWRT = OFF, PWRT disabled
  4493                           ;	Brown-out Reset Enable bits
  4494                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4495                           ;	Brown Out Reset Voltage bits
  4496                           ;	BORV = 0x2E, user specified literal
  4497  300002                     	org	3145730
  4498  300002  71                 	db	369
  4499                           
  4500                           ;Config register CONFIG2H @ 0x300003
  4501                           ;	Watchdog Timer Enable bit
  4502                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4503                           ;	Watchdog Timer Postscale Select bits
  4504                           ;	WDTPS = 1, 1:1
  4505  300003                     	org	3145731
  4506  300003  00                 	db	0
  4507                           
  4508                           ; Padding undefined space
  4509  300004                     	org	3145732
  4510  300004  FF                 	db	255
  4511                           
  4512                           ;Config register CONFIG3H @ 0x300005
  4513                           ;	CCP2 MUX bit
  4514                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4515                           ;	PORTB A/D Enable bit
  4516                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4517                           ;	Low-Power Timer1 Oscillator Enable bit
  4518                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4519                           ;	MCLR Pin Enable bit
  4520                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4521  300005                     	org	3145733
  4522  300005  83                 	db	131
  4523                           
  4524                           ;Config register CONFIG4L @ 0x300006
  4525                           ;	Stack Full/Underflow Reset Enable bit
  4526                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4527                           ;	Single-Supply ICSP Enable bit
  4528                           ;	LVP = OFF, Single-Supply ICSP disabled
  4529                           ;	Extended Instruction Set Enable bit
  4530                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4531                           ;	Background Debugger Enable bit
  4532                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4533  300006                     	org	3145734
  4534  300006  80                 	db	128
  4535                           
  4536                           ; Padding undefined space
  4537  300007                     	org	3145735
  4538  300007  FF                 	db	255
  4539                           
  4540                           ;Config register CONFIG5L @ 0x300008
  4541                           ;	Code Protection bit
  4542                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4543                           ;	Code Protection bit
  4544                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4545                           ;	Code Protection bit
  4546                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4547                           ;	Code Protection bit
  4548                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4549  300008                     	org	3145736
  4550  300008  0F                 	db	15
  4551                           
  4552                           ;Config register CONFIG5H @ 0x300009
  4553                           ;	Boot Block Code Protection bit
  4554                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4555                           ;	Data EEPROM Code Protection bit
  4556                           ;	CPD = OFF, Data EEPROM not code-protected
  4557  300009                     	org	3145737
  4558  300009  C0                 	db	192
  4559                           
  4560                           ;Config register CONFIG6L @ 0x30000A
  4561                           ;	Write Protection bit
  4562                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4563                           ;	Write Protection bit
  4564                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4565                           ;	Write Protection bit
  4566                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4567                           ;	Write Protection bit
  4568                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4569  30000A                     	org	3145738
  4570  30000A  0F                 	db	15
  4571                           
  4572                           ;Config register CONFIG6H @ 0x30000B
  4573                           ;	Configuration Register Write Protection bit
  4574                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4575                           ;	Boot Block Write Protection bit
  4576                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4577                           ;	Data EEPROM Write Protection bit
  4578                           ;	WRTD = OFF, Data EEPROM not write-protected
  4579  30000B                     	org	3145739
  4580  30000B  E0                 	db	224
  4581                           
  4582                           ;Config register CONFIG7L @ 0x30000C
  4583                           ;	Table Read Protection bit
  4584                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4585                           ;	Table Read Protection bit
  4586                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4587                           ;	Table Read Protection bit
  4588                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4589                           ;	Table Read Protection bit
  4590                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4591  30000C                     	org	3145740
  4592  30000C  0F                 	db	15
  4593                           
  4594                           ;Config register CONFIG7H @ 0x30000D
  4595                           ;	Boot Block Table Read Protection bit
  4596                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4597  30000D                     	org	3145741
  4598  30000D  40                 	db	64
  4599                           tosu	equ	0xFFF
  4600                           tosh	equ	0xFFE
  4601                           tosl	equ	0xFFD
  4602                           stkptr	equ	0xFFC
  4603                           pclatu	equ	0xFFB
  4604                           pclath	equ	0xFFA
  4605                           pcl	equ	0xFF9
  4606                           tblptru	equ	0xFF8
  4607                           tblptrh	equ	0xFF7
  4608                           tblptrl	equ	0xFF6
  4609                           tablat	equ	0xFF5
  4610                           prodh	equ	0xFF4
  4611                           prodl	equ	0xFF3
  4612                           indf0	equ	0xFEF
  4613                           postinc0	equ	0xFEE
  4614                           postdec0	equ	0xFED
  4615                           preinc0	equ	0xFEC
  4616                           plusw0	equ	0xFEB
  4617                           fsr0h	equ	0xFEA
  4618                           fsr0l	equ	0xFE9
  4619                           wreg	equ	0xFE8
  4620                           indf1	equ	0xFE7
  4621                           postinc1	equ	0xFE6
  4622                           postdec1	equ	0xFE5
  4623                           preinc1	equ	0xFE4
  4624                           plusw1	equ	0xFE3
  4625                           fsr1h	equ	0xFE2
  4626                           fsr1l	equ	0xFE1
  4627                           bsr	equ	0xFE0
  4628                           indf2	equ	0xFDF
  4629                           postinc2	equ	0xFDE
  4630                           postdec2	equ	0xFDD
  4631                           preinc2	equ	0xFDC
  4632                           plusw2	equ	0xFDB
  4633                           fsr2h	equ	0xFDA
  4634                           fsr2l	equ	0xFD9
  4635                           status	equ	0xFD8

Data Sizes:
    Strings     61
    Constant    16
    Data        201
    BSS         211
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     21      73
    BANK0           128      0       0
    BANK1           256      0     190
    BANK2           256      0     170
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 170
		 -> nomes(BANK2[170]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 170
		 -> nomes(BANK2[170]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    lcdStr@str	PTR const unsigned char  size(2) Largest target is 190
		 -> STR_6(CODE[16]), STR_5(CODE[17]), musicas.nome(BANK1[17]), musicas(BANK1[190]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[7]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_chooseSong
    _ssdInit->_pinMode
    _songsInit->_strcpy
    _strcpy->___wmul
    _lcdInit->_lcdCommand
    _chooseSong->_playSong
    _playSong->___awmod
    _ssdUpdate->_digitalWrite
    _lcdStr->_lcdData
    _lcdData->_digitalWrite
    _lcdPosition->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us
    _alterarVolume->_atraso_ms
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   46743
                          _atraso_ms
                         _chooseSong
                             _kpInit
                         _lcdCommand
                            _lcdInit
                        _lcdPosition
                             _lcdStr
                          _songsInit
                            _ssdInit
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    1352
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _songsInit                                            2     2      0     997
                                             14 COMRAM     2     2      0
                             ___wmul
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     4      4     248
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    4243
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _chooseSong                                           2     2      0   29885
                                             19 COMRAM     2     2      0
                          _atraso_ms
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                        _lcdPosition
                             _lcdStr
                           _playSong
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _playSong                                             5     5      0   16176
                                             14 COMRAM     5     5      0
                            ___awdiv
                            ___awmod
                      _alterarVolume
                          _atraso_ms
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                        _lcdPosition
                             _lcdStr
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _ssdUpdate                                            2     2      0    2572
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1     556
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _lcdStr                                               5     3      2    3361
                                              8 COMRAM     5     3      2
                            _lcdData
 ---------------------------------------------------------------------------------
 (2) _lcdData                                              2     2      0    2663
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _lcdPosition                                          3     2      1    3588
                                              8 COMRAM     3     2      1
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    2799
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    2572
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      92
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _kpDebounce                                          10    10      0     315
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (3) _alterarVolume                                        3     3      0     563
                                              6 COMRAM     2     2      0
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            6     4      2     518
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     904
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _chooseSong
     _atraso_ms
     _kpDebounce
     _kpRead
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _lcdPosition
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
     _lcdStr
       _lcdData
         _Delay40us
         _digitalWrite
     _playSong
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _alterarVolume
         _atraso_ms
       _atraso_ms
       _kpDebounce
       _kpRead
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
       _lcdPosition
         _lcdCommand
           _Delay2ms
             _Delay40us
           _Delay40us
           _digitalWrite
       _lcdStr
         _lcdData
           _Delay40us
           _digitalWrite
       _ssdDigit
       _ssdUpdate
         _digitalWrite
     _ssdDigit
     _ssdUpdate
       _digitalWrite
   _kpInit
   _lcdCommand
     _Delay2ms
       _Delay40us
     _Delay40us
     _digitalWrite
   _lcdInit
     _Delay2ms
       _Delay40us
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _pinMode
   _lcdPosition
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
   _lcdStr
     _lcdData
       _Delay40us
       _digitalWrite
   _songsInit
     ___wmul
     _strcpy
       ___wmul (ARG)
   _ssdInit
     _pinMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      AA       9       66.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      BE       7       74.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     15      49       1       57.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B1      15        0.0%
DATA                 0      0     1B1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Dec 08 17:09:17 2020

                      _i 0027          ??_alterarVolume 003B                       l42 0D3A  
                     l76 0AEC                       l86 17A0             ___awdiv@sign 003A  
                     _v0 002B                       _v1 002A                       _v2 0029  
                     _v3 0028      ___wmul@multiplicand 0037                      l124 1A16  
                    l142 16C4                      l136 164C                      l312 18B4  
                    l232 1218                      l129 19FE                      l145 1820  
                    l146 1846                      l322 1004                      l218 1542  
                    l139 195E                      l155 173C                      l228 11EA  
                    l149 185C                      l261 089E                      l325 190A  
                    l342 1A2A                      l238 127E                      l360 0E94  
                    l361 0EAC                      l362 0EB4                      l285 1142  
                    l365 1A20                      l622 1342                      l279 1132  
                    l391 19C2                      l635 13F2                      _cnt 002D  
           ___awmod@sign 0042                      prod 000FF3                      wreg 000FE8  
                   l2000 0E48                     l2010 0E88                     l2002 0E58  
                   l2100 1066                     l2012 0E8C                     l2004 0E5A  
                   l2020 0EB6                     l2110 10AA                     l2102 1076  
                   l2014 0EA4                     l2006 0E6A                     l2030 0F12  
                   l2022 0EBA                     l2200 13A8                     l2120 10E6  
                   l2112 10B2                     l2104 107E                     l2016 0EB0  
                   l2008 0E82                     l2040 0F66                     l2032 0F24  
                   l2024 0ECE                     l2210 13E2                     l2202 13BE  
                   l2130 112C                     l2122 10F8                     l2114 10C4  
                   l2106 1090                     l2018 1A22                     l2050 0FAE  
                   l2042 0F6E                     l2034 0F38                     l2026 0EE2  
                   l2140 1292                     l2212 13EA                     l2204 13C6  
                   l2124 1100                     l2116 10CC                     l2108 1098  
                   l2132 1132                     l2052 0FC2                     l2044 0F80  
                   l2036 0F40                     l2028 0EF6                     l2300 07D8  
                   l2220 08CE                     l1068 199C                     l2150 12B8  
                   l2142 129A                     l2206 13CC                     l2134 113E  
                   l2126 1112                     l2118 10DE                     l2070 1884  
                   l2046 0F94                     l2038 0F52                     l2310 07FA  
                   l2230 0962                     l2222 08EE                     l2160 12F0  
                   l2152 12C0                     l2144 129E                     l2136 1280  
                   l2208 13D2                     l2128 111A                     l2080 1008  
                   l2072 1888                     l2064 1860                     l2048 0F9C  
                   l2320 0824                     l2312 0808                     l2304 07EA  
                   l2240 0A00                     l2232 0988                     l2224 0910  
                   l2216 08A0                     l2400 18B6                     l2170 131C  
                   l2162 12F6                     l2154 12D2                     l2146 12AC  
                   l2138 1284                     l2090 1042                     l2082 1018  
                   l2074 189A                     l2066 1870                     l2058 0FCA  
                   l2330 0856                     l2322 0828                     l2306 07EE  
                   l2314 080E                     l2410 115E                     l2250 0A94  
                   l2242 0A1C                     l2234 09A4                     l2226 092C  
                   l2218 08BC                     l2402 1906                     l2164 130C  
                   l2156 12DA                     l2172 1322                     l2148 12B4  
                   l2180 1344                     l2092 1046                     l2084 102A  
                   l2076 189E                     l2068 1874                     l2324 0830  
                   l2332 085A                     l2308 07F2                     l2340 087E  
                   l2260 0650                     l2420 1184                     l2412 116C  
                   l2404 1144                     l2252 0AA6                     l2244 0A2E  
                   l2236 09B6                     l2228 093E                     l2174 1332  
                   l2166 1314                     l2158 12E2                     l2190 1370  
                   l2182 1348                     l2094 104A                     l2086 1030  
                   l2078 18B0                     l2342 088E                     l2334 085C  
                   l2326 083E                     l2318 0820                     l2270 06A2  
                   l2262 0660                     l2430 11DC                     l2422 11A6  
                   l2414 1170                     l2406 1148                     l2254 0ACA  
                   l2246 0A52                     l2238 09DA                     l2350 19BA  
                   l2176 133A                     l2168 1316                     l2192 1378  
                   l2184 1356                     l2096 104E                     l2088 1040  
                   l2344 0890                     l2336 086C                     l2328 084E  
                   l2280 078A                     l2272 0782                     l2264 0674  
                   l2440 1226                     l2432 11E4                     l2424 11B6  
                   l2416 1174                     l2408 1150                     l2248 0A78  
                   l2256 1960                     l2360 14AA                     l2194 138A  
                   l2186 135E                     l2098 105E                     l2346 089C  
                   l2338 087C                     l2290 07B4                     l2282 0796  
                   l2266 067E                     l2450 1268                     l2434 11F8  
                   l2442 122E                     l2426 11BE                     l2418 1178  
                   l2370 167A                     l2258 1970                     l2362 1528  
                   l2354 149E                     l2196 1392                     l2188 1362  
                   l1820 1A06                     l1812 1A00                     l1900 15D2  
                   l2292 07B8                     l2284 079A                     l2268 068A  
                   l2452 1272                     l2444 123E                     l2436 120A  
                   l2428 11CC                     l2380 168E                     l2372 167E  
                   l2348 199E                     l2364 152C                     l2460 154C  
                   l2198 139A                     l1830 0B5E                     l1822 0AEE  
                   l1910 1606                     l1902 15D6                     l2294 07BC  
                   l2286 07A2                     l2278 0786                     l2446 124A  
                   l2454 127A                     l2438 1212                     l1662 1A18  
                   l2390 16A6                     l2382 1694                     l2374 1682  
                   l2366 164E                     l2470 1570                     l2462 1550  
                   l1840 0BF2                     l1832 0B7A                     l1824 0B0A  
                   l1920 1648                     l1912 161A                     l1904 15DA  
                   l2296 07C4                     l2448 1254                     l2392 16AC  
                   l2384 1698                     l2376 1686                     l2368 1676  
                   l2480 15A2                     l2472 157A                     l2464 1554  
                   l2456 1544                     l1818 1A04                     l1850 0C84  
                   l1842 0C0C                     l1834 0B94                     l1826 0B1C  
                   l1914 161E                     l1906 15EE                     l1930 192E  
                   l1922 190E                     l2298 07D2                     l2394 16B2  
                   l2386 169C                     l2378 168A                     l2482 15AE  
                   l2474 1586                     l2466 155A                     l2458 1548  
                   l1860 0D1C                     l1852 0CA4                     l1844 0C2C  
                   l1836 0BB4                     l1828 0B3C                     l1916 1630  
                   l1908 15F2                     l1940 180A                     l1932 1942  
                   l1924 1912                     l2492 0FDE                     l2396 16B8  
                   l2388 16A2                     l2484 15B8                     l2476 1592  
                   l2468 1564                     l1870 19EC                     l1862 19E4  
                   l1854 0CC6                     l1846 0C4E                     l1838 0BD6  
                   l1918 1640                     l1950 1856                     l1942 181A  
                   l1934 1956                     l1926 1916                     l2398 16BE  
                   l2486 15C4                     l2478 1598                     l1872 19EE  
                   l1856 0CE2                     l1848 0C6A                     l1944 181A  
                   l1936 195A                     l1928 192A                     l1960 16FE  
                   l1882 1762                     l1874 173E                     l1858 0CFC  
                   l1954 1856                     l1946 1830                     l1938 1806  
                   l1962 1700                     l1892 1780                     l1884 1766  
                   l1876 174A                     l1964 0D3C                     l1868 19E8  
                   l1948 1840                     l1956 16C6                     l1878 174E  
                   l1982 0D92                     l1974 0D48                     l1966 0D40  
                   l1958 16CE                     l1888 177A                     l1896 1786  
                   l1992 0DB6                     l1984 0D96                     l1976 0D8A  
                   l1968 0D44                     l1898 178A                     l1994 0DE2  
                   l1986 0DB2                     l1996 0E12                     l1998 0E46  
                   STR_1 064A                     STR_2 0643                     STR_3 0622  
                   STR_4 0611                     STR_5 0611                     STR_6 0633  
                   u1300 0B7A                     u2100 0A1C                     u2020 092C  
                   u2004 08E0                     u1301 0B76                     u2101 0A18  
                   u2021 0928                     u2005 08DC                     u1310 0B94  
                   u2110 0A2E                     u2030 093E                     u2014 0900  
                   u1311 0B90                     u2111 0A2A                     u2031 093A  
                   u2015 08FC                     u2200 07D2                     u2201 07CE  
                   u1250 1A16                     u2210 07E6                     u1251 1A12  
                   u2211 07E2                     u1420 0CE2                     u1404 0C96  
                   u1340 0BF2                     u1324 0BA6                     u1260 0B0A  
                   u1500 1630                     u2220 0808                     u2300 115E  
                   u2140 0A94                     u2124 0A44                     u2060 09A4  
                   u2044 0954                     u1421 0CDE                     u1405 0C92  
                   u1341 0BEE                     u1325 0BA2                     u1261 0B06  
                   u1501 162C                     u2221 0804                     u2301 115A  
                   u2141 0A90                     u2125 0A40                     u2061 09A0  
                   u2045 0950                     u1430 0CFC                     u1414 0CB6  
                   u1350 0C0C                     u1334 0BC6                     u1270 0B1C  
                   u1510 1640                     u2230 081C                     u2310 116C  
                   u2150 0AA6                     u2134 0A68                     u2070 09B6  
                   u2054 0978                     u1431 0CF8                     u1415 0CB2  
                   u1351 0C08                     u1335 0BC2                     u1271 0B18  
                   u1511 163C                     u2231 0818                     u2311 1168  
                   u2151 0AA2                     u2135 0A64                     u2071 09B2  
                   u2055 0974                     u1520 181A                     u2240 083E  
                   u2320 11A6                     u1521 1816                     u2241 083A  
                   u2321 11A2                     u1610 0DB2                     u1530 1830  
                   u2250 084E                     u2330 11B6                     u1611 0DAE  
                   u1531 182C                     u2251 084A                     u2331 11B2  
                   u1604 0D7E                     u1460 19FE                     u1444 0D0E  
                   u1380 0C6A                     u1364 0C1E                     u1284 0B2E  
                   u1540 1840                     u1700 1870                     u2260 086C  
                   u2340 11CC                     u2164 0ABC                     u2084 09CC  
                   u2180 199C                     u1605 0D7A                     u1461 19FA  
                   u1445 0D0A                     u1381 0C66                     u1365 0C1A  
                   u1285 0B2A                     u1541 183C                     u1701 186C  
                   u2261 0868                     u2341 11C8                     u2165 0AB8  
                   u2085 09C8                     u2181 1998                     u1470 175E  
                   u1630 0DE2                     u1454 0D2E                     u1390 0C84  
                   u1374 0C3E                     u1294 0B4E                     u1550 1856  
                   u1710 1884                     u2270 087C                     u2190 07B0  
                   u2350 11DC                     u2174 0AE0                     u2094 09F0  
                   u1471 175A                     u1631 0DDE                     u1455 0D2A  
                   u1391 0C80                     u1375 0C3A                     u1295 0B4A  
                   u1551 1852                     u1711 1880                     u2271 0878  
                   u2191 07AC                     u2351 11D8                     u2175 0ADC  
                   u2095 09EC                     u1480 1776                     u1800 10AA  
                   u1624 0DC8                     u1560 16FA                     u1720 189A  
                   u2280 088E                     u2360 11F8                     u1481 1772  
                   u1801 10A6                     u1625 0DC4                     u1721 1896  
                   u2281 088A                     u2361 11F4                     u1490 17A0  
                   u1810 10C4                     u1570 172C                     u1730 18B0  
                   u2370 120A                     u2290 1542                     u1491 179C  
                   u1811 10C0                     u1731 18AC                     u2371 1206  
                   u2291 153E                     u1900 130C                     u1820 10DE  
                   u1740 1018                     u1660 0E58                     u1644 0E00  
                   u1580 173C                     u2380 1226                     u1901 1308  
                   u1821 10DA                     u1741 1014                     u1661 0E54  
                   u1645 0DFA                     u1581 1738                     u2381 1222  
                   u1910 1332                     u1830 10F8                     u1750 102A  
                   u1670 0E6A                     u1654 0E30                     u1911 132E  
                   u1831 10F4                     u1751 1026                     u1671 0E66  
                   u1655 0E2A                     u1567 16F0                     u1920 1356  
                   u1840 1112                     u1760 1040                     u1680 0E82  
                   u1921 1352                     u1841 110E                     u1761 103C  
                   u1681 0E7E                     u1577 1722                     u1930 1370  
                   u1850 112C                     u1770 105E                     u1690 0EA4  
                   u1594 0D5E                     u1931 136C                     u1851 1128  
                   u1771 105A                     u1691 0EA0                     u1595 0D5A  
                   u1860 1292                     u1940 138A                     u1780 1076  
                   u1861 128E                     u1941 1386                     u1781 1072  
                   u1870 12AC                     u1950 13A8                     u1790 1090  
                   u1871 12A8                     u1951 13A4                     u1791 108C  
                   u1880 12D2                     u1960 13BE                     u1881 12CE  
                   u1961 13BA                     u1890 12F0                     u1970 13E2  
                   u1891 12EC                     u1971 13DE                     u1980 08BC  
                   u1981 08B8                     u1990 08CE                     u1991 08CA  
                   _flag 0033                     _main 1544                     fsr0h 000FEA  
                   fsr1h 000FE2                     indf0 000FEF                     fsr2h 000FDA  
                   fsr0l 000FE9                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     prodh 000FF4  
                   prodl 000FF3                     start 0000             ___param_bank 000000  
                  ?_main 0035          __end_of___awdiv 1344          __end_of___awmod 13F4  
                  _T0CON 000FD5          ___awdiv@divisor 0037       alterarVolume@old_D 003C  
        ___awdiv@counter 0039                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _PORTE 000F84                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96          __end_of_lcdData 1960          __end_of_lcdInit 16C6  
                  _pause 001E                    _tecla 001F                    _nomes 0200  
        __end_of_pinMode 0AEE                    _valor 0601                    _tempo 0032  
                  tablat 000FF5          __end_of_ssdInit 190C                    status 000FD8  
       __end_of_Delay2ms 1A00     __end_of_digitalWrite 0D3C          __initialization 17A2  
           __end_of_main 15D0       __size_of_Delay40us 0018                   ??_main 004A  
          __activetblptr 000002         ___awdiv@dividend 0035                   _INTCON 000FF2  
   __size_of_lcdPosition 005A        lcdPosition@coluna 003D                   ___wmul 199E  
              ??___awdiv 0039                ??___awmod 0041                   _lcdStr 16C6  
                 _kpInit 1A18                   _kpRead 1A22                   _indice 0034  
                 clear_0 17E8                   clear_1 17F4         ___awdiv@quotient 003B  
                 _teclas 0015          ___awmod@divisor 003F                ??_lcdData 003B  
              ??_lcdInit 003D          ___awmod@counter 0041                   _strcpy 1960  
                 _volume 001D         __end_of_playSong 08A0         __end_of_ssdDigit 18B6  
           __pdataCOMRAM 0001                ??_pinMode 0039             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_ssdInit 003B        __end_of_Delay40us 1A18               __accesstop 0080  
__end_of__initialization 17FA            ___rparam_used 000001              pinMode@type 0037  
         __pcstackCOMRAM 0035             __pidataBANK2 13F4         alterarVolume@opt 003B  
          __end_of_valor 0611                ?_Delay2ms 0035       __size_of_atraso_ms 0064  
             __pbssBANK1 0100    __size_of_digitalWrite 024E               _lcdCommand 15D0  
                ?___wmul 0035                  ?_lcdStr 003D                  ?_kpInit 0035  
                ?_kpRead 0035               _kpDebounce 0D3C    __end_of_alterarVolume 1144  
             _chooseSong 1144                  ?_strcpy 003B       __size_of_ssdUpdate 0150  
             ??_Delay2ms 0036             _digitalWrite 0AEE       __size_of_songsInit 00A6  
              ?_playSong 0035                  __Hparam 0000                  __Lparam 0000  
              ?_ssdDigit 0035          kpDebounce@old_D 003A       lcdPosition@comando 003F  
        kpDebounce@tempo 0026                  ___awdiv 1280                  ___awmod 1344  
        __size_of___wmul 0026        __end_of_atraso_ms 17A2             __psmallconst 0600  
        __size_of_lcdStr 0078          __size_of_kpInit 000A          __size_of_kpRead 000A  
            ssdDigit@val 0036              ssdDigit@pos 0035                  __pcinit 17A2  
                _lcdData 190C                  __ramtop 0600                  _lcdInit 164E  
                __ptext0 1544                  __ptext1 18B6                  __ptext2 149E  
                __ptext3 1960                  __ptext4 199E                  __ptext5 164E  
                __ptext6 08A0                  __ptext7 1A18                  __ptext8 1144  
                __ptext9 0650                  _display 002C          __size_of_strcpy 003E  
                _pinMode 08A0         ___awmod@dividend 003D                  _minuto1 0031  
                _minuto2 0030                  _ssdInit 18B6                  _musicas 0100  
                lcdStr@i 0041                Delay2ms@i 0036      kpDebounce@valorNovo 0022  
   end_of_initialization 17FA            __Lmediumconst 0000               ??_playSong 0043  
      __end_of_ssdUpdate 1006               ??_ssdDigit 0036        __end_of_songsInit 1544  
                postdec1 000FE5                  postdec2 000FDD              ?_lcdCommand 0035  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
                strcpy@d 0041                  strcpy@s 003F              ?_kpDebounce 0035  
            ?_chooseSong 0035            ??_lcdPosition 003E                _Delay40us 1A00  
             atraso_ms@i 0037               atraso_ms@j 0039               atraso_ms@k 003A  
             atraso_ms@t 0035           __end_of___wmul 19C4            __pidataCOMRAM 19C4  
         __end_of_lcdStr 173E           __end_of_kpInit 1A22           __end_of_kpRead 1A2C  
         __end_of_strcpy 199E      start_initialization 17A2        __size_of_Delay2ms 001C  
    __size_of_lcdCommand 007E      __size_of_kpDebounce 017A               ?_Delay40us 0035  
    __size_of_chooseSong 013C      __end_of_lcdPosition 185E         lcdPosition@linha 003E  
               ??___wmul 0039                 ??_lcdStr 003F                 ??_kpInit 0035  
               ??_kpRead 0037              __pdataBANK2 0200                 ??_strcpy 003F  
            __pbssCOMRAM 0020               pinMode@pin 0035        __size_of_playSong 0250  
               ?___awdiv 0035                 ?___awmod 003D        __size_of_ssdDigit 0058  
               ?_lcdData 0035                 ?_lcdInit 0035            lcdCommand@cmd 003C  
              _atraso_ms 173E              __smallconst 0600                 ?_pinMode 0035  
               ?_ssdInit 0035              _lcdPosition 1804              ??_Delay40us 0035  
         ___wmul@product 0039   __size_of_alterarVolume 013E             ??_lcdCommand 003B  
              _ssdUpdate 0EB6                lcdStr@str 003D             ??_kpDebounce 0035  
           ??_chooseSong 0048                _songsInit 149E        ___wmul@multiplier 0035  
             ?_atraso_ms 0035          lcdCommand@old_D 003B    kpDebounce@valorAntigo 0020  
               _Delay2ms 19E4                copy_data0 17B6                copy_data1 17D6  
           _playSong$957 0043             _playSong$958 0045       __end_of_lcdCommand 164E  
           lcdData@old_D 003C             lcdData@valor 003B               songsInit@i 0043  
     __end_of_kpDebounce 0EB6       __end_of_chooseSong 1280                 __Hrparam 0000  
               __Lrparam 0000               ?_ssdUpdate 0035         __size_of___awdiv 00C4  
       __size_of___awmod 00B0               ?_songsInit 0035            _alterarVolume 1006  
       __size_of_lcdData 0054         __size_of_lcdInit 0078         __size_of_pinMode 024E  
               __ptext10 0EB6                 __ptext11 185E                 __ptext20 0D3C  
               __ptext12 16C6                 __ptext21 1006                 __ptext13 190C  
               __ptext22 173E                 __ptext14 1804                 __ptext23 1344  
               __ptext15 15D0                 __ptext24 1280                 __ptext16 0AEE  
               __ptext17 19E4                 __ptext18 1A00                 __ptext19 1A22  
              playSong@j 0047         __size_of_ssdInit 0056               strcpy@dest 003B  
               _duracoes 0001            __size_of_main 008C                 _playSong 0650  
               _segundo1 002F                 _segundo2 002E               Delay40us@i 0035  
               _ssdDigit 185E           ?_alterarVolume 0035              ??_atraso_ms 0037  
          ?_digitalWrite 0035        digitalWrite@value 0037                strcpy@src 003D  
            ??_ssdUpdate 003B              ??_songsInit 0043              kpDebounce@i 003E  
            kpDebounce@j 003D              kpDebounce@k 003B           ??_digitalWrite 0039  
           ?_lcdPosition 003D          digitalWrite@pin 0035        _valor@keypad$F294 0024  
