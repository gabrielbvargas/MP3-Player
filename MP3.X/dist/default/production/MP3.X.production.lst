

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Dec 08 15:52:32 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4520 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78                           	psect	idataCOMRAM
    79  00187C                     __pidataCOMRAM:
    80                           	callstack 0
    81                           
    82                           ;initializer for _duracoes
    83  00187C  0708               	dw	1800
    84  00187E  0708               	dw	1800
    85  001880  00B4               	dw	180
    86  001882  00B4               	dw	180
    87  001884  00B4               	dw	180
    88  001886  00B4               	dw	180
    89  001888  00B4               	dw	180
    90  00188A  00B4               	dw	180
    91  00188C  00B4               	dw	180
    92  00188E  00B4               	dw	180
    93                           
    94                           ;initializer for _teclas
    95  001890  0A                 	db	10
    96  001891  07                 	db	7
    97  001892  04                 	db	4
    98  001893  01                 	db	1
    99  001894  00                 	db	0
   100  001895  08                 	db	8
   101  001896  05                 	db	5
   102  001897  02                 	db	2
   103                           
   104                           ;initializer for _pause
   105  001898  01                 	db	1
   106                           
   107                           ;initializer for _tecla
   108  001899  10                 	db	16
   109                           
   110                           	psect	idataBANK2
   111  0012B0                     __pidataBANK2:
   112                           	callstack 0
   113                           
   114                           ;initializer for _nomes
   115  0012B0  45                 	db	69
   116  0012B1  73                 	db	115
   117  0012B2  74                 	db	116
   118  0012B3  61                 	db	97
   119  0012B4  6D                 	db	109
   120  0012B5  6F                 	db	111
   121  0012B6  73                 	db	115
   122  0012B7  20                 	db	32
   123  0012B8  56                 	db	86
   124  0012B9  69                 	db	105
   125  0012BA  76                 	db	118
   126  0012BB  6F                 	db	111
   127  0012BC  73                 	db	115
   128  0012BD  00                 	db	0
   129  0012BE  00                 	db	0
   130  0012BF  00                 	db	0
   131  0012C0  00                 	db	0
   132  0012C1  43                 	db	67
   133  0012C2  68                 	db	104
   134  0012C3  65                 	db	101
   135  0012C4  69                 	db	105
   136  0012C5  61                 	db	97
   137  0012C6  20                 	db	32
   138  0012C7  64                 	db	100
   139  0012C8  65                 	db	101
   140  0012C9  20                 	db	32
   141  0012CA  4D                 	db	77
   142  0012CB  61                 	db	97
   143  0012CC  6E                 	db	110
   144  0012CD  69                 	db	105
   145  0012CE  61                 	db	97
   146  0012CF  73                 	db	115
   147  0012D0  00                 	db	0
   148  0012D1  00                 	db	0
   149  0012D2  45                 	db	69
   150  0012D3  20                 	db	32
   151  0012D4  54                 	db	84
   152  0012D5  61                 	db	97
   153  0012D6  72                 	db	114
   154  0012D7  64                 	db	100
   155  0012D8  65                 	db	101
   156  0012D9  20                 	db	32
   157  0012DA  44                 	db	68
   158  0012DB  65                 	db	101
   159  0012DC  6D                 	db	109
   160  0012DD  61                 	db	97
   161  0012DE  69                 	db	105
   162  0012DF  73                 	db	115
   163  0012E0  00                 	db	0
   164  0012E1  00                 	db	0
   165  0012E2  00                 	db	0
   166  0012E3  53                 	db	83
   167  0012E4  6F                 	db	111
   168  0012E5  7A                 	db	122
   169  0012E6  69                 	db	105
   170  0012E7  6E                 	db	110
   171  0012E8  68                 	db	104
   172  0012E9  6F                 	db	111
   173  0012EA  00                 	db	0
   174  0012EB  00                 	db	0
   175  0012EC  00                 	db	0
   176  0012ED  00                 	db	0
   177  0012EE  00                 	db	0
   178  0012EF  00                 	db	0
   179  0012F0  00                 	db	0
   180  0012F1  00                 	db	0
   181  0012F2  00                 	db	0
   182  0012F3  00                 	db	0
   183  0012F4  43                 	db	67
   184  0012F5  69                 	db	105
   185  0012F6  67                 	db	103
   186  0012F7  61                 	db	97
   187  0012F8  6E                 	db	110
   188  0012F9  61                 	db	97
   189  0012FA  00                 	db	0
   190  0012FB  00                 	db	0
   191  0012FC  00                 	db	0
   192  0012FD  00                 	db	0
   193  0012FE  00                 	db	0
   194  0012FF  00                 	db	0
   195  001300  00                 	db	0
   196  001301  00                 	db	0
   197  001302  00                 	db	0
   198  001303  00                 	db	0
   199  001304  00                 	db	0
   200  001305  43                 	db	67
   201  001306  69                 	db	105
   202  001307  75                 	db	117
   203  001308  6D                 	db	109
   204  001309  65                 	db	101
   205  00130A  73                 	db	115
   206  00130B  20                 	db	32
   207  00130C  64                 	db	100
   208  00130D  65                 	db	101
   209  00130E  20                 	db	32
   210  00130F  56                 	db	86
   211  001310  6F                 	db	111
   212  001311  63                 	db	99
   213  001312  65                 	db	101
   214  001313  00                 	db	0
   215  001314  00                 	db	0
   216  001315  00                 	db	0
   217  001316  45                 	db	69
   218  001317  78                 	db	120
   219  001318  74                 	db	116
   220  001319  72                 	db	114
   221  00131A  61                 	db	97
   222  00131B  70                 	db	112
   223  00131C  6F                 	db	111
   224  00131D  6C                 	db	108
   225  00131E  65                 	db	101
   226  00131F  69                 	db	105
   227  001320  00                 	db	0
   228  001321  00                 	db	0
   229  001322  00                 	db	0
   230  001323  00                 	db	0
   231  001324  00                 	db	0
   232  001325  00                 	db	0
   233  001326  00                 	db	0
   234  001327  44                 	db	68
   235  001328  65                 	db	101
   236  001329  75                 	db	117
   237  00132A  73                 	db	115
   238  00132B  20                 	db	32
   239  00132C  6D                 	db	109
   240  00132D  65                 	db	101
   241  00132E  20                 	db	32
   242  00132F  4C                 	db	76
   243  001330  69                 	db	105
   244  001331  76                 	db	118
   245  001332  72                 	db	114
   246  001333  65                 	db	101
   247  001334  00                 	db	0
   248  001335  00                 	db	0
   249  001336  00                 	db	0
   250  001337  00                 	db	0
   251  001338  4D                 	db	77
   252  001339  61                 	db	97
   253  00133A  72                 	db	114
   254  00133B  61                 	db	97
   255  00133C  76                 	db	118
   256  00133D  69                 	db	105
   257  00133E  6C                 	db	108
   258  00133F  68                 	db	104
   259  001340  61                 	db	97
   260  001341  00                 	db	0
   261  001342  00                 	db	0
   262  001343  00                 	db	0
   263  001344  00                 	db	0
   264  001345  00                 	db	0
   265  001346  00                 	db	0
   266  001347  00                 	db	0
   267  001348  00                 	db	0
   268  001349  4D                 	db	77
   269  00134A  65                 	db	101
   270  00134B  64                 	db	100
   271  00134C  69                 	db	105
   272  00134D  64                 	db	100
   273  00134E  61                 	db	97
   274  00134F  20                 	db	32
   275  001350  45                 	db	69
   276  001351  78                 	db	120
   277  001352  61                 	db	97
   278  001353  74                 	db	116
   279  001354  61                 	db	97
   280  001355  00                 	db	0
   281  001356  00                 	db	0
   282  001357  00                 	db	0
   283  001358  00                 	db	0
   284  001359  00                 	db	0
   285                           
   286                           	psect	smallconst
   287  000600                     __psmallconst:
   288                           	callstack 0
   289  000600  00                 	db	0
   290  000601                     _valor:
   291                           	callstack 0
   292  000601  3F                 	db	63
   293  000602  06                 	db	6
   294  000603  5B                 	db	91
   295  000604  4F                 	db	79
   296  000605  66                 	db	102
   297  000606  6D                 	db	109
   298  000607  7D                 	db	125
   299  000608  07                 	db	7
   300  000609  7F                 	db	127
   301  00060A  6F                 	db	111
   302  00060B  77                 	db	119
   303  00060C  7C                 	db	124
   304  00060D  39                 	db	57
   305  00060E  5E                 	db	94
   306  00060F  79                 	db	121
   307  000610  71                 	db	113
   308  000611                     __end_of_valor:
   309                           	callstack 0
   310  0000                     _T0CON	set	4053
   311  0000                     _TMR0L	set	4054
   312  0000                     _TMR0H	set	4055
   313  0000                     _INTCON	set	4082
   314  0000                     _TRISE	set	3990
   315  0000                     _TRISD	set	3989
   316  0000                     _TRISC	set	3988
   317  0000                     _TRISB	set	3987
   318  0000                     _TRISA	set	3986
   319  0000                     _PORTE	set	3972
   320  0000                     _PORTD	set	3971
   321  0000                     _PORTC	set	3970
   322  0000                     _PORTB	set	3969
   323  0000                     _PORTA	set	3968
   324  000611                     STR_4:
   325  000611  3C                 	db	60	;'<'
   326  000612  2D                 	db	45
   327  000613  28                 	db	40
   328  000614  31                 	db	49	;'1'
   329  000615  29                 	db	41
   330  000616  20                 	db	32
   331  000617  28                 	db	40
   332  000618  2A                 	db	42
   333  000619  29                 	db	41
   334  00061A  20                 	db	32
   335  00061B  20                 	db	32
   336  00061C  28                 	db	40
   337  00061D  32                 	db	50	;'2'
   338  00061E  29                 	db	41
   339  00061F  2D                 	db	45
   340  000620  3E                 	db	62	;'>'
   341  000621  00                 	db	0
   342  000622                     STR_3:
   343  000622  45                 	db	69	;'E'
   344  000623  73                 	db	115	;'s'
   345  000624  63                 	db	99	;'c'
   346  000625  6F                 	db	111	;'o'
   347  000626  6C                 	db	108	;'l'
   348  000627  68                 	db	104	;'h'
   349  000628  61                 	db	97	;'a'
   350  000629  20                 	db	32
   351  00062A  61                 	db	97	;'a'
   352  00062B  20                 	db	32
   353  00062C  6D                 	db	109	;'m'
   354  00062D  75                 	db	117	;'u'
   355  00062E  73                 	db	115	;'s'
   356  00062F  69                 	db	105	;'i'
   357  000630  63                 	db	99	;'c'
   358  000631  61                 	db	97	;'a'
   359  000632  00                 	db	0
   360  000633                     STR_6:
   361  000633  2B                 	db	43
   362  000634  28                 	db	40
   363  000635  31                 	db	49	;'1'
   364  000636  29                 	db	41
   365  000637  20                 	db	32
   366  000638  20                 	db	32
   367  000639  28                 	db	40
   368  00063A  2A                 	db	42
   369  00063B  29                 	db	41
   370  00063C  20                 	db	32
   371  00063D  20                 	db	32
   372  00063E  28                 	db	40
   373  00063F  32                 	db	50	;'2'
   374  000640  29                 	db	41
   375  000641  2D                 	db	45
   376  000642  00                 	db	0
   377  000643                     STR_2:
   378  000643  50                 	db	80	;'P'
   379  000644  6C                 	db	108	;'l'
   380  000645  61                 	db	97	;'a'
   381  000646  79                 	db	121	;'y'
   382  000647  65                 	db	101	;'e'
   383  000648  72                 	db	114	;'r'
   384  000649  00                 	db	0
   385  00064A                     STR_1:
   386  00064A  4D                 	db	77	;'M'
   387  00064B  50                 	db	80	;'P'
   388  00064C  33                 	db	51	;'3'
   389  00064D  00                 	db	0
   390  00064E  00                 	db	0	; dummy byte at the end
   391  0000                     
   392                           ; #config settings
   393                           
   394                           	psect	cinit
   395  00165A                     __pcinit:
   396                           	callstack 0
   397  00165A                     start_initialization:
   398                           	callstack 0
   399  00165A                     __initialization:
   400                           	callstack 0
   401                           
   402                           ; Initialize objects allocated to BANK2 (170 bytes)
   403                           ; load TBLPTR registers with __pidataBANK2
   404  00165A  0EB0               	movlw	low __pidataBANK2
   405  00165C  6EF6               	movwf	tblptrl,c
   406  00165E  0E12               	movlw	high __pidataBANK2
   407  001660  6EF7               	movwf	tblptrh,c
   408  001662  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   409  001664  6EF8               	movwf	tblptru,c
   410  001666  EE02  F000         	lfsr	0,__pdataBANK2
   411  00166A  EE10 F0AA          	lfsr	1,170
   412  00166E                     copy_data0:
   413  00166E  0009               	tblrd		*+
   414  001670  CFF5 FFEE          	movff	tablat,postinc0
   415  001674  50E5               	movf	postdec1,w,c
   416  001676  50E1               	movf	fsr1l,w,c
   417  001678  E1FA               	bnz	copy_data0
   418                           
   419                           ; Initialize objects allocated to COMRAM (30 bytes)
   420                           ; load TBLPTR registers with __pidataCOMRAM
   421  00167A  0E7C               	movlw	low __pidataCOMRAM
   422  00167C  6EF6               	movwf	tblptrl,c
   423  00167E  0E18               	movlw	high __pidataCOMRAM
   424  001680  6EF7               	movwf	tblptrh,c
   425  001682  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   426  001684  6EF8               	movwf	tblptru,c
   427  001686  EE00  F001         	lfsr	0,__pdataCOMRAM
   428  00168A  EE10 F01E          	lfsr	1,30
   429  00168E                     copy_data1:
   430  00168E  0009               	tblrd		*+
   431  001690  CFF5 FFEE          	movff	tablat,postinc0
   432  001694  50E5               	movf	postdec1,w,c
   433  001696  50E1               	movf	fsr1l,w,c
   434  001698  E1FA               	bnz	copy_data1
   435                           
   436                           ; Clear objects allocated to BANK1 (190 bytes)
   437  00169A  EE01  F000         	lfsr	0,__pbssBANK1
   438  00169E  0EBE               	movlw	190
   439  0016A0                     clear_0:
   440  0016A0  6AEE               	clrf	postinc0,c
   441  0016A2  06E8               	decf	wreg,f,c
   442  0016A4  E1FD               	bnz	clear_0
   443                           
   444                           ; Clear objects allocated to COMRAM (22 bytes)
   445  0016A6  EE00  F036         	lfsr	0,__pbssCOMRAM
   446  0016AA  0E16               	movlw	22
   447  0016AC                     clear_1:
   448  0016AC  6AEE               	clrf	postinc0,c
   449  0016AE  06E8               	decf	wreg,f,c
   450  0016B0  E1FD               	bnz	clear_1
   451  0016B2                     end_of_initialization:
   452                           	callstack 0
   453  0016B2                     __end_of__initialization:
   454                           	callstack 0
   455  0016B2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   456  0016B4  6EF8               	movwf	tblptru,c
   457  0016B6  0100               	movlb	0
   458  0016B8  EFFE  F009         	goto	_main	;jump to C main() function
   459                           
   460                           	psect	bssCOMRAM
   461  000036                     __pbssCOMRAM:
   462                           	callstack 0
   463  000036                     kpDebounce@valorAntigo:
   464                           	callstack 0
   465  000036                     	ds	2
   466  000038                     kpDebounce@valorNovo:
   467                           	callstack 0
   468  000038                     	ds	2
   469  00003A                     _valor@keypad$F283:
   470                           	callstack 0
   471  00003A                     	ds	2
   472  00003C                     kpDebounce@tempo:
   473                           	callstack 0
   474  00003C                     	ds	1
   475  00003D                     _i:
   476                           	callstack 0
   477  00003D                     	ds	1
   478  00003E                     _v3:
   479                           	callstack 0
   480  00003E                     	ds	1
   481  00003F                     _v2:
   482                           	callstack 0
   483  00003F                     	ds	1
   484  000040                     _v1:
   485                           	callstack 0
   486  000040                     	ds	1
   487  000041                     _v0:
   488                           	callstack 0
   489  000041                     	ds	1
   490  000042                     _display:
   491                           	callstack 0
   492  000042                     	ds	1
   493  000043                     _cnt:
   494                           	callstack 0
   495  000043                     	ds	1
   496  000044                     _segundo2:
   497                           	callstack 0
   498  000044                     	ds	1
   499  000045                     _segundo1:
   500                           	callstack 0
   501  000045                     	ds	1
   502  000046                     _minuto2:
   503                           	callstack 0
   504  000046                     	ds	1
   505  000047                     _minuto1:
   506                           	callstack 0
   507  000047                     	ds	1
   508  000048                     _tempo:
   509                           	callstack 0
   510  000048                     	ds	1
   511  000049                     _flag:
   512                           	callstack 0
   513  000049                     	ds	1
   514  00004A                     _cont:
   515                           	callstack 0
   516  00004A                     	ds	1
   517  00004B                     _indice:
   518                           	callstack 0
   519  00004B                     	ds	1
   520                           
   521                           	psect	dataCOMRAM
   522  000001                     __pdataCOMRAM:
   523                           	callstack 0
   524  000001                     _duracoes:
   525                           	callstack 0
   526  000001                     	ds	20
   527  000015                     _teclas:
   528                           	callstack 0
   529  000015                     	ds	8
   530  00001D                     _pause:
   531                           	callstack 0
   532  00001D                     	ds	1
   533  00001E                     _tecla:
   534                           	callstack 0
   535  00001E                     	ds	1
   536                           
   537                           	psect	bssBANK1
   538  000100                     __pbssBANK1:
   539                           	callstack 0
   540  000100                     _musicas:
   541                           	callstack 0
   542  000100                     	ds	190
   543                           
   544                           	psect	dataBANK2
   545  000200                     __pdataBANK2:
   546                           	callstack 0
   547  000200                     _nomes:
   548                           	callstack 0
   549  000200                     	ds	170
   550                           
   551                           	psect	cstackCOMRAM
   552  00001F                     __pcstackCOMRAM:
   553                           	callstack 0
   554  00001F                     ??_kpDebounce:
   555  00001F                     ?_kpRead:
   556                           	callstack 0
   557  00001F                     ?___wmul:
   558                           	callstack 0
   559  00001F                     ?___awdiv:
   560                           	callstack 0
   561  00001F                     Delay40us@i:
   562                           	callstack 0
   563  00001F                     ssdDigit@pos:
   564                           	callstack 0
   565  00001F                     digitalWrite@pin:
   566                           	callstack 0
   567  00001F                     pinMode@pin:
   568                           	callstack 0
   569  00001F                     atraso_ms@t:
   570                           	callstack 0
   571  00001F                     ___wmul@multiplier:
   572                           	callstack 0
   573  00001F                     ___awdiv@dividend:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x0
   577  00001F                     	ds	1
   578  000020                     Delay2ms@i:
   579                           	callstack 0
   580  000020                     ssdDigit@val:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x1
   584  000020                     	ds	1
   585  000021                     digitalWrite@value:
   586                           	callstack 0
   587  000021                     pinMode@type:
   588                           	callstack 0
   589  000021                     atraso_ms@i:
   590                           	callstack 0
   591  000021                     ___wmul@multiplicand:
   592                           	callstack 0
   593  000021                     ___awdiv@divisor:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x2
   597  000021                     	ds	2
   598  000023                     ??_digitalWrite:
   599  000023                     ??_pinMode:
   600  000023                     atraso_ms@j:
   601                           	callstack 0
   602  000023                     ___awdiv@counter:
   603                           	callstack 0
   604  000023                     ___wmul@product:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x4
   608  000023                     	ds	1
   609  000024                     atraso_ms@k:
   610                           	callstack 0
   611  000024                     kpDebounce@old_D:
   612                           	callstack 0
   613  000024                     ___awdiv@sign:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x5
   617  000024                     	ds	1
   618  000025                     ??_ssdUpdate:
   619  000025                     lcdCommand@old_D:
   620                           	callstack 0
   621  000025                     lcdData@valor:
   622                           	callstack 0
   623  000025                     kpDebounce@k:
   624                           	callstack 0
   625  000025                     ___awdiv@quotient:
   626                           	callstack 0
   627  000025                     strcpy@dest:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x6
   631  000025                     	ds	1
   632  000026                     lcdCommand@cmd:
   633                           	callstack 0
   634  000026                     lcdData@old_D:
   635                           	callstack 0
   636                           
   637                           ; 1 bytes @ 0x7
   638  000026                     	ds	1
   639  000027                     ?___awmod:
   640                           	callstack 0
   641  000027                     lcdPosition@coluna:
   642                           	callstack 0
   643  000027                     kpDebounce@j:
   644                           	callstack 0
   645  000027                     lcdStr@str:
   646                           	callstack 0
   647  000027                     ___awmod@dividend:
   648                           	callstack 0
   649  000027                     strcpy@src:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x8
   653  000027                     	ds	1
   654  000028                     lcdPosition@linha:
   655                           	callstack 0
   656  000028                     kpDebounce@i:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x9
   660  000028                     	ds	1
   661  000029                     ??_lcdStr:
   662  000029                     lcdPosition@comando:
   663                           	callstack 0
   664  000029                     ___awmod@divisor:
   665                           	callstack 0
   666  000029                     strcpy@s:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0xA
   670  000029                     	ds	2
   671  00002B                     lcdStr@i:
   672                           	callstack 0
   673  00002B                     ___awmod@counter:
   674                           	callstack 0
   675  00002B                     strcpy@d:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0xC
   679  00002B                     	ds	1
   680  00002C                     ___awmod@sign:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0xD
   684  00002C                     	ds	1
   685  00002D                     ??_playSong:
   686  00002D                     songsInit@i:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0xE
   690  00002D                     	ds	2
   691  00002F                     _playSong$949:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x10
   695  00002F                     	ds	2
   696  000031                     _playSong$950:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x12
   700  000031                     	ds	2
   701  000033                     playSong@j:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x14
   705  000033                     	ds	1
   706  000034                     ??_chooseSong:
   707                           
   708                           ; 1 bytes @ 0x15
   709  000034                     	ds	2
   710  000036                     
   711                           ; 1 bytes @ 0x17
   712 ;;
   713 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   714 ;;
   715 ;; *************** function _main *****************
   716 ;; Defined at:
   717 ;;		line 9 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   731 ;;      Params:         0       0       0       0       0       0       0
   732 ;;      Locals:         0       0       0       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0       0       0
   734 ;;      Totals:         0       0       0       0       0       0       0
   735 ;;Total ram usage:        0 bytes
   736 ;; Hardware stack levels required when called:    6
   737 ;; This function calls:
   738 ;;		_atraso_ms
   739 ;;		_chooseSong
   740 ;;		_kpInit
   741 ;;		_lcdCommand
   742 ;;		_lcdInit
   743 ;;		_lcdPosition
   744 ;;		_lcdStr
   745 ;;		_songsInit
   746 ;;		_ssdInit
   747 ;; This function is called by:
   748 ;;		Startup code after reset
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text0
   753  0013FC                     __ptext0:
   754                           	callstack 0
   755  0013FC                     _main:
   756                           	callstack 25
   757  0013FC                     
   758                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 10:     songsInit();
   759  0013FC  ECAD  F009         	call	_songsInit	;wreg free
   760  001400                     
   761                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 11:     lcdInit();
   762  001400  EC83  F00A         	call	_lcdInit	;wreg free
   763  001404                     
   764                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 12:     ssdInit();
   765  001404  ECB7  F00B         	call	_ssdInit	;wreg free
   766  001408                     
   767                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 13:     kpInit();
   768  001408  EC67  F00C         	call	_kpInit	;wreg free
   769  00140C                     
   770                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 14:     lcdCommand(0x0F);
   771  00140C  0E0F               	movlw	15
   772  00140E  EC44  F00A         	call	_lcdCommand
   773  001412                     
   774                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 16:     lcdPosition(0, 6);
   775  001412  0E06               	movlw	6
   776  001414  6E27               	movwf	lcdPosition@coluna^0,c
   777  001416  0E00               	movlw	0
   778  001418  EC5E  F00B         	call	_lcdPosition
   779  00141C                     
   780                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 17:     lcdStr("MP3");
   781  00141C  0E4A               	movlw	low STR_1
   782  00141E  6E27               	movwf	lcdStr@str^0,c
   783  001420  0E06               	movlw	high STR_1
   784  001422  6E28               	movwf	(lcdStr@str+1)^0,c
   785  001424  ECBF  F00A         	call	_lcdStr	;wreg free
   786  001428                     
   787                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 18:     lcdPosition(1, 6);
   788  001428  0E06               	movlw	6
   789  00142A  6E27               	movwf	lcdPosition@coluna^0,c
   790  00142C  0E01               	movlw	1
   791  00142E  EC5E  F00B         	call	_lcdPosition
   792  001432                     
   793                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 19:     lcdStr("Player");
   794  001432  0E43               	movlw	low STR_2
   795  001434  6E27               	movwf	lcdStr@str^0,c
   796  001436  0E06               	movlw	high STR_2
   797  001438  6E28               	movwf	(lcdStr@str+1)^0,c
   798  00143A  ECBF  F00A         	call	_lcdStr	;wreg free
   799  00143E                     
   800                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 20:     atraso_ms(2000);
   801  00143E  0E07               	movlw	7
   802  001440  6E20               	movwf	(atraso_ms@t+1)^0,c
   803  001442  0ED0               	movlw	208
   804  001444  6E1F               	movwf	atraso_ms@t^0,c
   805  001446  ECFB  F00A         	call	_atraso_ms	;wreg free
   806  00144A                     
   807                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 22:     lcdCommand(0x01);
   808  00144A  0E01               	movlw	1
   809  00144C  EC44  F00A         	call	_lcdCommand
   810  001450                     
   811                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 23:     lcdPosition(0, 0);
   812  001450  0E00               	movlw	0
   813  001452  6E27               	movwf	lcdPosition@coluna^0,c
   814  001454  0E00               	movlw	0
   815  001456  EC5E  F00B         	call	_lcdPosition
   816  00145A                     
   817                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 24:     lcdStr("Escolha a musica"
      +                          );
   818  00145A  0E22               	movlw	low STR_3
   819  00145C  6E27               	movwf	lcdStr@str^0,c
   820  00145E  0E06               	movlw	high STR_3
   821  001460  6E28               	movwf	(lcdStr@str+1)^0,c
   822  001462  ECBF  F00A         	call	_lcdStr	;wreg free
   823  001466                     l2325:
   824                           
   825                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 26:         lcdPosition(1, 0);
   826  001466  0E00               	movlw	0
   827  001468  6E27               	movwf	lcdPosition@coluna^0,c
   828  00146A  0E01               	movlw	1
   829  00146C  EC5E  F00B         	call	_lcdPosition
   830  001470                     
   831                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 27:         lcdStr("<-(1) (*)  (2
      +                          )->");
   832  001470  0E11               	movlw	low STR_4
   833  001472  6E27               	movwf	lcdStr@str^0,c
   834  001474  0E06               	movlw	high STR_4
   835  001476  6E28               	movwf	(lcdStr@str+1)^0,c
   836  001478  ECBF  F00A         	call	_lcdStr	;wreg free
   837  00147C                     
   838                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 28:         chooseSong();
   839  00147C  EC00  F008         	call	_chooseSong	;wreg free
   840                           
   841                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 29:     }
   842  001480  EF33  F00A         	goto	l2325
   843  001484  EF00  F000         	goto	start
   844  001488                     __end_of_main:
   845                           	callstack 0
   846                           
   847 ;; *************** function _ssdInit *****************
   848 ;; Defined at:
   849 ;;		line 101 in file "ssd.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		wreg, status,2, status,0, cstack
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   863 ;;      Params:         0       0       0       0       0       0       0
   864 ;;      Locals:         0       0       0       0       0       0       0
   865 ;;      Temps:          0       0       0       0       0       0       0
   866 ;;      Totals:         0       0       0       0       0       0       0
   867 ;;Total ram usage:        0 bytes
   868 ;; Hardware stack levels used:    1
   869 ;; Hardware stack levels required when called:    1
   870 ;; This function calls:
   871 ;;		_pinMode
   872 ;; This function is called by:
   873 ;;		_main
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           	psect	text1
   878  00176E                     __ptext1:
   879                           	callstack 0
   880  00176E                     _ssdInit:
   881                           	callstack 29
   882  00176E                     
   883                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
   884  00176E  0E00               	movlw	0
   885  001770  6E20               	movwf	(pinMode@pin+1)^0,c
   886  001772  0E02               	movlw	2
   887  001774  6E1F               	movwf	pinMode@pin^0,c
   888  001776  0E00               	movlw	0
   889  001778  6E22               	movwf	(pinMode@type+1)^0,c
   890  00177A  0E00               	movlw	0
   891  00177C  6E21               	movwf	pinMode@type^0,c
   892  00177E  EC28  F003         	call	_pinMode	;wreg free
   893                           
   894                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
   895  001782  0E00               	movlw	0
   896  001784  6E20               	movwf	(pinMode@pin+1)^0,c
   897  001786  0E03               	movlw	3
   898  001788  6E1F               	movwf	pinMode@pin^0,c
   899  00178A  0E00               	movlw	0
   900  00178C  6E22               	movwf	(pinMode@type+1)^0,c
   901  00178E  0E00               	movlw	0
   902  001790  6E21               	movwf	pinMode@type^0,c
   903  001792  EC28  F003         	call	_pinMode	;wreg free
   904                           
   905                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
   906  001796  0E00               	movlw	0
   907  001798  6E20               	movwf	(pinMode@pin+1)^0,c
   908  00179A  0E04               	movlw	4
   909  00179C  6E1F               	movwf	pinMode@pin^0,c
   910  00179E  0E00               	movlw	0
   911  0017A0  6E22               	movwf	(pinMode@type+1)^0,c
   912  0017A2  0E00               	movlw	0
   913  0017A4  6E21               	movwf	pinMode@type^0,c
   914  0017A6  EC28  F003         	call	_pinMode	;wreg free
   915                           
   916                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
   917  0017AA  0E00               	movlw	0
   918  0017AC  6E20               	movwf	(pinMode@pin+1)^0,c
   919  0017AE  0E05               	movlw	5
   920  0017B0  6E1F               	movwf	pinMode@pin^0,c
   921  0017B2  0E00               	movlw	0
   922  0017B4  6E22               	movwf	(pinMode@type+1)^0,c
   923  0017B6  0E00               	movlw	0
   924  0017B8  6E21               	movwf	pinMode@type^0,c
   925  0017BA  EC28  F003         	call	_pinMode	;wreg free
   926  0017BE                     
   927                           ;ssd.c: 109:     TRISD = 0x00;
   928  0017BE  0E00               	movlw	0
   929  0017C0  6E95               	movwf	149,c	;volatile
   930  0017C2  0012               	return		;funcret
   931  0017C4                     __end_of_ssdInit:
   932                           	callstack 0
   933                           
   934 ;; *************** function _songsInit *****************
   935 ;; Defined at:
   936 ;;		line 23 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;  i               2   14[COMRAM] unsigned int 
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   950 ;;      Params:         0       0       0       0       0       0       0
   951 ;;      Locals:         2       0       0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0       0       0
   953 ;;      Totals:         2       0       0       0       0       0       0
   954 ;;Total ram usage:        2 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; Hardware stack levels required when called:    1
   957 ;; This function calls:
   958 ;;		___wmul
   959 ;;		_strcpy
   960 ;; This function is called by:
   961 ;;		_main
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text2
   966  00135A                     __ptext2:
   967                           	callstack 0
   968  00135A                     _songsInit:
   969                           	callstack 29
   970  00135A                     
   971                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 25:     for (unsigned int i = 0;
      +                           i < 10; i++) {
   972  00135A  0E00               	movlw	0
   973  00135C  6E2E               	movwf	(songsInit@i+1)^0,c
   974  00135E  0E00               	movlw	0
   975  001360  6E2D               	movwf	songsInit@i^0,c
   976  001362                     l2203:
   977                           
   978                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 26:         musicas[i].duracao =
      +                           duracoes[i];
   979  001362  90D8               	bcf	status,0,c
   980  001364  342D               	rlcf	songsInit@i^0,w,c
   981  001366  6ED9               	movwf	fsr2l,c
   982  001368  342E               	rlcf	(songsInit@i+1)^0,w,c
   983  00136A  6EDA               	movwf	fsr2h,c
   984  00136C  0E01               	movlw	low _duracoes
   985  00136E  26D9               	addwf	fsr2l,f,c
   986  001370  0E00               	movlw	high _duracoes
   987  001372  22DA               	addwfc	fsr2h,f,c
   988  001374  C02D  F01F         	movff	songsInit@i,___wmul@multiplier
   989  001378  C02E  F020         	movff	songsInit@i+1,___wmul@multiplier+1
   990  00137C  0E00               	movlw	0
   991  00137E  6E22               	movwf	(___wmul@multiplicand+1)^0,c
   992  001380  0E13               	movlw	19
   993  001382  6E21               	movwf	___wmul@multiplicand^0,c
   994  001384  EC2B  F00C         	call	___wmul	;wreg free
   995  001388  0E00               	movlw	low _musicas
   996  00138A  241F               	addwf	?___wmul^0,w,c
   997  00138C  6EE1               	movwf	fsr1l,c
   998  00138E  0E01               	movlw	high _musicas
   999  001390  2020               	addwfc	(?___wmul+1)^0,w,c
  1000  001392  6EE2               	movwf	fsr1h,c
  1001  001394  CFDE FFE6          	movff	postinc2,postinc1
  1002  001398  CFDD FFE5          	movff	postdec2,postdec1
  1003                           
  1004                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 27:         strcpy(musicas[i].no
      +                          me, (char*) nomes[i]);
  1005  00139C  C02D  F01F         	movff	songsInit@i,___wmul@multiplier
  1006  0013A0  C02E  F020         	movff	songsInit@i+1,___wmul@multiplier+1
  1007  0013A4  0E00               	movlw	0
  1008  0013A6  6E22               	movwf	(___wmul@multiplicand+1)^0,c
  1009  0013A8  0E13               	movlw	19
  1010  0013AA  6E21               	movwf	___wmul@multiplicand^0,c
  1011  0013AC  EC2B  F00C         	call	___wmul	;wreg free
  1012  0013B0  0E02               	movlw	low (_musicas+2)
  1013  0013B2  241F               	addwf	?___wmul^0,w,c
  1014  0013B4  6E25               	movwf	strcpy@dest^0,c
  1015  0013B6  0E01               	movlw	high (_musicas+2)
  1016  0013B8  2020               	addwfc	(?___wmul+1)^0,w,c
  1017  0013BA  6E26               	movwf	(strcpy@dest+1)^0,c
  1018  0013BC  C02D  F01F         	movff	songsInit@i,___wmul@multiplier
  1019  0013C0  C02E  F020         	movff	songsInit@i+1,___wmul@multiplier+1
  1020  0013C4  0E00               	movlw	0
  1021  0013C6  6E22               	movwf	(___wmul@multiplicand+1)^0,c
  1022  0013C8  0E11               	movlw	17
  1023  0013CA  6E21               	movwf	___wmul@multiplicand^0,c
  1024  0013CC  EC2B  F00C         	call	___wmul	;wreg free
  1025  0013D0  0E00               	movlw	low _nomes
  1026  0013D2  241F               	addwf	?___wmul^0,w,c
  1027  0013D4  6E27               	movwf	strcpy@src^0,c
  1028  0013D6  0E02               	movlw	high _nomes
  1029  0013D8  2020               	addwfc	(?___wmul+1)^0,w,c
  1030  0013DA  6E28               	movwf	(strcpy@src+1)^0,c
  1031  0013DC  EC0C  F00C         	call	_strcpy	;wreg free
  1032  0013E0                     
  1033                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 28:     }
  1034  0013E0  4A2D               	infsnz	songsInit@i^0,f,c
  1035  0013E2  2A2E               	incf	(songsInit@i+1)^0,f,c
  1036  0013E4  502E               	movf	(songsInit@i+1)^0,w,c
  1037  0013E6  E109               	bnz	u2090
  1038  0013E8  0E0A               	movlw	10
  1039  0013EA  5C2D               	subwf	songsInit@i^0,w,c
  1040  0013EC  A0D8               	btfss	status,0,c
  1041  0013EE  EFFB  F009         	goto	u2091
  1042  0013F2  EFFD  F009         	goto	u2090
  1043  0013F6                     u2091:
  1044  0013F6  EFB1  F009         	goto	l2203
  1045  0013FA                     u2090:
  1046  0013FA  0012               	return		;funcret
  1047  0013FC                     __end_of_songsInit:
  1048                           	callstack 0
  1049                           
  1050 ;; *************** function _strcpy *****************
  1051 ;; Defined at:
  1052 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  dest            2    6[COMRAM] PTR unsigned char 
  1055 ;;		 -> musicas(190), 
  1056 ;;  src             2    8[COMRAM] PTR const unsigned char 
  1057 ;;		 -> nomes(170), 
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;  d               2   12[COMRAM] PTR unsigned char 
  1060 ;;		 -> musicas(190), 
  1061 ;;  s               2   10[COMRAM] PTR const unsigned char 
  1062 ;;		 -> nomes(170), 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  2    6[COMRAM] PTR unsigned char 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1072 ;;      Params:         4       0       0       0       0       0       0
  1073 ;;      Locals:         4       0       0       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0       0       0
  1075 ;;      Totals:         8       0       0       0       0       0       0
  1076 ;;Total ram usage:        8 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; This function calls:
  1079 ;;		Nothing
  1080 ;; This function is called by:
  1081 ;;		_songsInit
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text3
  1086  001818                     __ptext3:
  1087                           	callstack 0
  1088  001818                     _strcpy:
  1089                           	callstack 29
  1090  001818  C027  F029         	movff	strcpy@src,strcpy@s
  1091  00181C  C028  F02A         	movff	strcpy@src+1,strcpy@s+1
  1092  001820  C025  F02B         	movff	strcpy@dest,strcpy@d
  1093  001824  C026  F02C         	movff	strcpy@dest+1,strcpy@d+1
  1094  001828                     l2123:
  1095  001828  C029  FFD9         	movff	strcpy@s,fsr2l
  1096  00182C  C02A  FFDA         	movff	strcpy@s+1,fsr2h
  1097  001830  4A29               	infsnz	strcpy@s^0,f,c
  1098  001832  2A2A               	incf	(strcpy@s+1)^0,f,c
  1099  001834  C02B  FFE1         	movff	strcpy@d,fsr1l
  1100  001838  C02C  FFE2         	movff	strcpy@d+1,fsr1h
  1101  00183C  4A2B               	infsnz	strcpy@d^0,f,c
  1102  00183E  2A2C               	incf	(strcpy@d+1)^0,f,c
  1103  001840  CFDF FFE7          	movff	indf2,indf1
  1104  001844  50E7               	movf	indf1,w,c
  1105  001846  A4D8               	btfss	status,2,c
  1106  001848  EF28  F00C         	goto	u1961
  1107  00184C  EF2A  F00C         	goto	u1960
  1108  001850                     u1961:
  1109  001850  EF14  F00C         	goto	l2123
  1110  001854                     u1960:
  1111  001854  0012               	return		;funcret
  1112  001856                     __end_of_strcpy:
  1113                           	callstack 0
  1114                           
  1115 ;; *************** function ___wmul *****************
  1116 ;; Defined at:
  1117 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  multiplier      2    0[COMRAM] unsigned int 
  1120 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  product         2    4[COMRAM] unsigned int 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  2    0[COMRAM] unsigned int 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2, status,0, prodl, prodh
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1132 ;;      Params:         4       0       0       0       0       0       0
  1133 ;;      Locals:         2       0       0       0       0       0       0
  1134 ;;      Temps:          0       0       0       0       0       0       0
  1135 ;;      Totals:         6       0       0       0       0       0       0
  1136 ;;Total ram usage:        6 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		_songsInit
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text4
  1146  001856                     __ptext4:
  1147                           	callstack 0
  1148  001856                     ___wmul:
  1149                           	callstack 29
  1150  001856  501F               	movf	___wmul@multiplier^0,w,c
  1151  001858  0221               	mulwf	___wmul@multiplicand^0,c
  1152  00185A  CFF3 F023          	movff	prodl,___wmul@product
  1153  00185E  CFF4 F024          	movff	prodh,___wmul@product+1
  1154  001862  501F               	movf	___wmul@multiplier^0,w,c
  1155  001864  0222               	mulwf	(___wmul@multiplicand+1)^0,c
  1156  001866  50F3               	movf	243,w,c
  1157  001868  2624               	addwf	(___wmul@product+1)^0,f,c
  1158  00186A  5020               	movf	(___wmul@multiplier+1)^0,w,c
  1159  00186C  0221               	mulwf	___wmul@multiplicand^0,c
  1160  00186E  50F3               	movf	243,w,c
  1161  001870  2624               	addwf	(___wmul@product+1)^0,f,c
  1162  001872  C023  F01F         	movff	___wmul@product,?___wmul
  1163  001876  C024  F020         	movff	___wmul@product+1,?___wmul+1
  1164  00187A  0012               	return		;funcret
  1165  00187C                     __end_of___wmul:
  1166                           	callstack 0
  1167                           
  1168 ;; *************** function _lcdInit *****************
  1169 ;; Defined at:
  1170 ;;		line 87 in file "lcd.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;		None
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;		None
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		wreg, status,2, status,0, cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1184 ;;      Params:         0       0       0       0       0       0       0
  1185 ;;      Locals:         0       0       0       0       0       0       0
  1186 ;;      Temps:          0       0       0       0       0       0       0
  1187 ;;      Totals:         0       0       0       0       0       0       0
  1188 ;;Total ram usage:        0 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    3
  1191 ;; This function calls:
  1192 ;;		_Delay2ms
  1193 ;;		_lcdCommand
  1194 ;;		_pinMode
  1195 ;; This function is called by:
  1196 ;;		_main
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text5
  1201  001506                     __ptext5:
  1202                           	callstack 0
  1203  001506                     _lcdInit:
  1204                           	callstack 27
  1205  001506                     
  1206                           ;lcd.c: 89:     pinMode(PIN_E2, 0);
  1207  001506  0E00               	movlw	0
  1208  001508  6E20               	movwf	(pinMode@pin+1)^0,c
  1209  00150A  0E22               	movlw	34
  1210  00150C  6E1F               	movwf	pinMode@pin^0,c
  1211  00150E  0E00               	movlw	0
  1212  001510  6E22               	movwf	(pinMode@type+1)^0,c
  1213  001512  0E00               	movlw	0
  1214  001514  6E21               	movwf	pinMode@type^0,c
  1215  001516  EC28  F003         	call	_pinMode	;wreg free
  1216                           
  1217                           ;lcd.c: 90:     pinMode(PIN_E1, 0);
  1218  00151A  0E00               	movlw	0
  1219  00151C  6E20               	movwf	(pinMode@pin+1)^0,c
  1220  00151E  0E21               	movlw	33
  1221  001520  6E1F               	movwf	pinMode@pin^0,c
  1222  001522  0E00               	movlw	0
  1223  001524  6E22               	movwf	(pinMode@type+1)^0,c
  1224  001526  0E00               	movlw	0
  1225  001528  6E21               	movwf	pinMode@type^0,c
  1226  00152A  EC28  F003         	call	_pinMode	;wreg free
  1227  00152E                     
  1228                           ;lcd.c: 91:     TRISD = 0x00;
  1229  00152E  0E00               	movlw	0
  1230  001530  6E95               	movwf	149,c	;volatile
  1231  001532                     
  1232                           ;lcd.c: 94:     Delay2ms();
  1233  001532  EC4D  F00C         	call	_Delay2ms	;wreg free
  1234  001536                     
  1235                           ;lcd.c: 95:     Delay2ms();
  1236  001536  EC4D  F00C         	call	_Delay2ms	;wreg free
  1237  00153A                     
  1238                           ;lcd.c: 96:     Delay2ms();
  1239  00153A  EC4D  F00C         	call	_Delay2ms	;wreg free
  1240  00153E                     
  1241                           ;lcd.c: 97:     Delay2ms();
  1242  00153E  EC4D  F00C         	call	_Delay2ms	;wreg free
  1243  001542                     
  1244                           ;lcd.c: 98:     Delay2ms();
  1245  001542  EC4D  F00C         	call	_Delay2ms	;wreg free
  1246  001546                     
  1247                           ;lcd.c: 100:     lcdCommand(0x38);
  1248  001546  0E38               	movlw	56
  1249  001548  EC44  F00A         	call	_lcdCommand
  1250  00154C                     
  1251                           ;lcd.c: 101:     Delay2ms();
  1252  00154C  EC4D  F00C         	call	_Delay2ms	;wreg free
  1253  001550                     
  1254                           ;lcd.c: 102:     Delay2ms();
  1255  001550  EC4D  F00C         	call	_Delay2ms	;wreg free
  1256  001554                     
  1257                           ;lcd.c: 103:     lcdCommand(0x38);
  1258  001554  0E38               	movlw	56
  1259  001556  EC44  F00A         	call	_lcdCommand
  1260  00155A                     
  1261                           ;lcd.c: 104:     Delay2ms();
  1262  00155A  EC4D  F00C         	call	_Delay2ms	;wreg free
  1263  00155E                     
  1264                           ;lcd.c: 105:     lcdCommand(0x38);
  1265  00155E  0E38               	movlw	56
  1266  001560  EC44  F00A         	call	_lcdCommand
  1267  001564                     
  1268                           ;lcd.c: 107:     lcdCommand(0x38);
  1269  001564  0E38               	movlw	56
  1270  001566  EC44  F00A         	call	_lcdCommand
  1271  00156A                     
  1272                           ;lcd.c: 108:     lcdCommand(0x06);
  1273  00156A  0E06               	movlw	6
  1274  00156C  EC44  F00A         	call	_lcdCommand
  1275  001570                     
  1276                           ;lcd.c: 111:     lcdCommand(0x0C);
  1277  001570  0E0C               	movlw	12
  1278  001572  EC44  F00A         	call	_lcdCommand
  1279  001576                     
  1280                           ;lcd.c: 112:     lcdCommand(0x01);
  1281  001576  0E01               	movlw	1
  1282  001578  EC44  F00A         	call	_lcdCommand
  1283  00157C  0012               	return		;funcret
  1284  00157E                     __end_of_lcdInit:
  1285                           	callstack 0
  1286                           
  1287 ;; *************** function _pinMode *****************
  1288 ;; Defined at:
  1289 ;;		line 54 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;  pin             2    0[COMRAM] int 
  1292 ;;  type            2    2[COMRAM] int 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;		None
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, status,2, status,0
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1304 ;;      Params:         4       0       0       0       0       0       0
  1305 ;;      Locals:         0       0       0       0       0       0       0
  1306 ;;      Temps:          2       0       0       0       0       0       0
  1307 ;;      Totals:         6       0       0       0       0       0       0
  1308 ;;Total ram usage:        6 bytes
  1309 ;; Hardware stack levels used:    1
  1310 ;; This function calls:
  1311 ;;		Nothing
  1312 ;; This function is called by:
  1313 ;;		_lcdInit
  1314 ;;		_ssdInit
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           	psect	text6
  1319  000650                     __ptext6:
  1320                           	callstack 0
  1321  000650                     _pinMode:
  1322                           	callstack 29
  1323  000650                     
  1324                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 56:     if(pin <8){
  1325  000650  BE20               	btfsc	(pinMode@pin+1)^0,7,c
  1326  000652  EF36  F003         	goto	u1760
  1327  000656  5020               	movf	(pinMode@pin+1)^0,w,c
  1328  000658  E107               	bnz	u1761
  1329  00065A  0E08               	movlw	8
  1330  00065C  5C1F               	subwf	pinMode@pin^0,w,c
  1331  00065E  B0D8               	btfsc	status,0,c
  1332  000660  EF34  F003         	goto	u1761
  1333  000664  EF36  F003         	goto	u1760
  1334  000668                     u1761:
  1335  000668  EF60  F003         	goto	l2089
  1336  00066C                     u1760:
  1337  00066C                     
  1338                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 57:         if (type){ ((TRISA) |= 
      +                          (1<<(pin)));}
  1339  00066C  5021               	movf	pinMode@type^0,w,c
  1340  00066E  1022               	iorwf	(pinMode@type+1)^0,w,c
  1341  000670  B4D8               	btfsc	status,2,c
  1342  000672  EF3D  F003         	goto	u1771
  1343  000676  EF3F  F003         	goto	u1770
  1344  00067A                     u1771:
  1345  00067A  EF4F  F003         	goto	l2087
  1346  00067E                     u1770:
  1347  00067E  C01F  F023         	movff	pinMode@pin,??_pinMode
  1348  000682  0E01               	movlw	1
  1349  000684  6E24               	movwf	(??_pinMode+1)^0,c
  1350  000686  2A23               	incf	??_pinMode^0,f,c
  1351  000688  EF48  F003         	goto	u1784
  1352  00068C                     u1785:
  1353  00068C  90D8               	bcf	status,0,c
  1354  00068E  3624               	rlcf	(??_pinMode+1)^0,f,c
  1355  000690                     u1784:
  1356  000690  2E23               	decfsz	??_pinMode^0,f,c
  1357  000692  EF46  F003         	goto	u1785
  1358  000696  5024               	movf	(??_pinMode+1)^0,w,c
  1359  000698  1292               	iorwf	146,f,c	;volatile
  1360  00069A  EF4E  F004         	goto	l76
  1361  00069E                     l2087:
  1362  00069E  C01F  F023         	movff	pinMode@pin,??_pinMode
  1363  0006A2  0E01               	movlw	1
  1364  0006A4  6E24               	movwf	(??_pinMode+1)^0,c
  1365  0006A6  2A23               	incf	??_pinMode^0,f,c
  1366  0006A8  EF58  F003         	goto	u1794
  1367  0006AC                     u1795:
  1368  0006AC  90D8               	bcf	status,0,c
  1369  0006AE  3624               	rlcf	(??_pinMode+1)^0,f,c
  1370  0006B0                     u1794:
  1371  0006B0  2E23               	decfsz	??_pinMode^0,f,c
  1372  0006B2  EF56  F003         	goto	u1795
  1373  0006B6  5024               	movf	(??_pinMode+1)^0,w,c
  1374  0006B8  0AFF               	xorlw	255
  1375  0006BA  1692               	andwf	146,f,c	;volatile
  1376  0006BC  EF4E  F004         	goto	l76
  1377  0006C0                     l2089:
  1378  0006C0  BE20               	btfsc	(pinMode@pin+1)^0,7,c
  1379  0006C2  EF6E  F003         	goto	u1800
  1380  0006C6  5020               	movf	(pinMode@pin+1)^0,w,c
  1381  0006C8  E107               	bnz	u1801
  1382  0006CA  0E10               	movlw	16
  1383  0006CC  5C1F               	subwf	pinMode@pin^0,w,c
  1384  0006CE  B0D8               	btfsc	status,0,c
  1385  0006D0  EF6C  F003         	goto	u1801
  1386  0006D4  EF6E  F003         	goto	u1800
  1387  0006D8                     u1801:
  1388  0006D8  EF9C  F003         	goto	l2097
  1389  0006DC                     u1800:
  1390  0006DC                     
  1391                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 60:         if (type){ ((TRISB) |= 
      +                          (1<<(pin-8)));}
  1392  0006DC  5021               	movf	pinMode@type^0,w,c
  1393  0006DE  1022               	iorwf	(pinMode@type+1)^0,w,c
  1394  0006E0  B4D8               	btfsc	status,2,c
  1395  0006E2  EF75  F003         	goto	u1811
  1396  0006E6  EF77  F003         	goto	u1810
  1397  0006EA                     u1811:
  1398  0006EA  EF89  F003         	goto	l2095
  1399  0006EE                     u1810:
  1400  0006EE  C01F  F023         	movff	pinMode@pin,??_pinMode
  1401  0006F2  0EF8               	movlw	-8
  1402  0006F4  2623               	addwf	??_pinMode^0,f,c
  1403  0006F6  0E01               	movlw	1
  1404  0006F8  6E24               	movwf	(??_pinMode+1)^0,c
  1405  0006FA  2A23               	incf	??_pinMode^0,f,c
  1406  0006FC  EF82  F003         	goto	u1824
  1407  000700                     u1825:
  1408  000700  90D8               	bcf	status,0,c
  1409  000702  3624               	rlcf	(??_pinMode+1)^0,f,c
  1410  000704                     u1824:
  1411  000704  2E23               	decfsz	??_pinMode^0,f,c
  1412  000706  EF80  F003         	goto	u1825
  1413  00070A  5024               	movf	(??_pinMode+1)^0,w,c
  1414  00070C  1293               	iorwf	147,f,c	;volatile
  1415  00070E  EF4E  F004         	goto	l76
  1416  000712                     l2095:
  1417  000712  C01F  F023         	movff	pinMode@pin,??_pinMode
  1418  000716  0EF8               	movlw	-8
  1419  000718  2623               	addwf	??_pinMode^0,f,c
  1420  00071A  0E01               	movlw	1
  1421  00071C  6E24               	movwf	(??_pinMode+1)^0,c
  1422  00071E  2A23               	incf	??_pinMode^0,f,c
  1423  000720  EF94  F003         	goto	u1834
  1424  000724                     u1835:
  1425  000724  90D8               	bcf	status,0,c
  1426  000726  3624               	rlcf	(??_pinMode+1)^0,f,c
  1427  000728                     u1834:
  1428  000728  2E23               	decfsz	??_pinMode^0,f,c
  1429  00072A  EF92  F003         	goto	u1835
  1430  00072E  5024               	movf	(??_pinMode+1)^0,w,c
  1431  000730  0AFF               	xorlw	255
  1432  000732  1693               	andwf	147,f,c	;volatile
  1433  000734  EF4E  F004         	goto	l76
  1434  000738                     l2097:
  1435  000738  BE20               	btfsc	(pinMode@pin+1)^0,7,c
  1436  00073A  EFAA  F003         	goto	u1840
  1437  00073E  5020               	movf	(pinMode@pin+1)^0,w,c
  1438  000740  E107               	bnz	u1841
  1439  000742  0E18               	movlw	24
  1440  000744  5C1F               	subwf	pinMode@pin^0,w,c
  1441  000746  B0D8               	btfsc	status,0,c
  1442  000748  EFA8  F003         	goto	u1841
  1443  00074C  EFAA  F003         	goto	u1840
  1444  000750                     u1841:
  1445  000750  EFD8  F003         	goto	l2105
  1446  000754                     u1840:
  1447  000754                     
  1448                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 63:         if (type){ ((TRISC) |= 
      +                          (1<<(pin-16)));}
  1449  000754  5021               	movf	pinMode@type^0,w,c
  1450  000756  1022               	iorwf	(pinMode@type+1)^0,w,c
  1451  000758  B4D8               	btfsc	status,2,c
  1452  00075A  EFB1  F003         	goto	u1851
  1453  00075E  EFB3  F003         	goto	u1850
  1454  000762                     u1851:
  1455  000762  EFC5  F003         	goto	l2103
  1456  000766                     u1850:
  1457  000766  C01F  F023         	movff	pinMode@pin,??_pinMode
  1458  00076A  0EF0               	movlw	-16
  1459  00076C  2623               	addwf	??_pinMode^0,f,c
  1460  00076E  0E01               	movlw	1
  1461  000770  6E24               	movwf	(??_pinMode+1)^0,c
  1462  000772  2A23               	incf	??_pinMode^0,f,c
  1463  000774  EFBE  F003         	goto	u1864
  1464  000778                     u1865:
  1465  000778  90D8               	bcf	status,0,c
  1466  00077A  3624               	rlcf	(??_pinMode+1)^0,f,c
  1467  00077C                     u1864:
  1468  00077C  2E23               	decfsz	??_pinMode^0,f,c
  1469  00077E  EFBC  F003         	goto	u1865
  1470  000782  5024               	movf	(??_pinMode+1)^0,w,c
  1471  000784  1294               	iorwf	148,f,c	;volatile
  1472  000786  EF4E  F004         	goto	l76
  1473  00078A                     l2103:
  1474  00078A  C01F  F023         	movff	pinMode@pin,??_pinMode
  1475  00078E  0EF0               	movlw	-16
  1476  000790  2623               	addwf	??_pinMode^0,f,c
  1477  000792  0E01               	movlw	1
  1478  000794  6E24               	movwf	(??_pinMode+1)^0,c
  1479  000796  2A23               	incf	??_pinMode^0,f,c
  1480  000798  EFD0  F003         	goto	u1874
  1481  00079C                     u1875:
  1482  00079C  90D8               	bcf	status,0,c
  1483  00079E  3624               	rlcf	(??_pinMode+1)^0,f,c
  1484  0007A0                     u1874:
  1485  0007A0  2E23               	decfsz	??_pinMode^0,f,c
  1486  0007A2  EFCE  F003         	goto	u1875
  1487  0007A6  5024               	movf	(??_pinMode+1)^0,w,c
  1488  0007A8  0AFF               	xorlw	255
  1489  0007AA  1694               	andwf	148,f,c	;volatile
  1490  0007AC  EF4E  F004         	goto	l76
  1491  0007B0                     l2105:
  1492  0007B0  BE20               	btfsc	(pinMode@pin+1)^0,7,c
  1493  0007B2  EFE6  F003         	goto	u1880
  1494  0007B6  5020               	movf	(pinMode@pin+1)^0,w,c
  1495  0007B8  E107               	bnz	u1881
  1496  0007BA  0E20               	movlw	32
  1497  0007BC  5C1F               	subwf	pinMode@pin^0,w,c
  1498  0007BE  B0D8               	btfsc	status,0,c
  1499  0007C0  EFE4  F003         	goto	u1881
  1500  0007C4  EFE6  F003         	goto	u1880
  1501  0007C8                     u1881:
  1502  0007C8  EF14  F004         	goto	l2113
  1503  0007CC                     u1880:
  1504  0007CC                     
  1505                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 66:         if (type){ ((TRISD) |= 
      +                          (1<<(pin-24)));}
  1506  0007CC  5021               	movf	pinMode@type^0,w,c
  1507  0007CE  1022               	iorwf	(pinMode@type+1)^0,w,c
  1508  0007D0  B4D8               	btfsc	status,2,c
  1509  0007D2  EFED  F003         	goto	u1891
  1510  0007D6  EFEF  F003         	goto	u1890
  1511  0007DA                     u1891:
  1512  0007DA  EF01  F004         	goto	l2111
  1513  0007DE                     u1890:
  1514  0007DE  C01F  F023         	movff	pinMode@pin,??_pinMode
  1515  0007E2  0EE8               	movlw	-24
  1516  0007E4  2623               	addwf	??_pinMode^0,f,c
  1517  0007E6  0E01               	movlw	1
  1518  0007E8  6E24               	movwf	(??_pinMode+1)^0,c
  1519  0007EA  2A23               	incf	??_pinMode^0,f,c
  1520  0007EC  EFFA  F003         	goto	u1904
  1521  0007F0                     u1905:
  1522  0007F0  90D8               	bcf	status,0,c
  1523  0007F2  3624               	rlcf	(??_pinMode+1)^0,f,c
  1524  0007F4                     u1904:
  1525  0007F4  2E23               	decfsz	??_pinMode^0,f,c
  1526  0007F6  EFF8  F003         	goto	u1905
  1527  0007FA  5024               	movf	(??_pinMode+1)^0,w,c
  1528  0007FC  1295               	iorwf	149,f,c	;volatile
  1529  0007FE  EF4E  F004         	goto	l76
  1530  000802                     l2111:
  1531  000802  C01F  F023         	movff	pinMode@pin,??_pinMode
  1532  000806  0EE8               	movlw	-24
  1533  000808  2623               	addwf	??_pinMode^0,f,c
  1534  00080A  0E01               	movlw	1
  1535  00080C  6E24               	movwf	(??_pinMode+1)^0,c
  1536  00080E  2A23               	incf	??_pinMode^0,f,c
  1537  000810  EF0C  F004         	goto	u1914
  1538  000814                     u1915:
  1539  000814  90D8               	bcf	status,0,c
  1540  000816  3624               	rlcf	(??_pinMode+1)^0,f,c
  1541  000818                     u1914:
  1542  000818  2E23               	decfsz	??_pinMode^0,f,c
  1543  00081A  EF0A  F004         	goto	u1915
  1544  00081E  5024               	movf	(??_pinMode+1)^0,w,c
  1545  000820  0AFF               	xorlw	255
  1546  000822  1695               	andwf	149,f,c	;volatile
  1547  000824  EF4E  F004         	goto	l76
  1548  000828                     l2113:
  1549  000828  BE20               	btfsc	(pinMode@pin+1)^0,7,c
  1550  00082A  EF22  F004         	goto	u1920
  1551  00082E  5020               	movf	(pinMode@pin+1)^0,w,c
  1552  000830  E107               	bnz	u1921
  1553  000832  0E28               	movlw	40
  1554  000834  5C1F               	subwf	pinMode@pin^0,w,c
  1555  000836  B0D8               	btfsc	status,0,c
  1556  000838  EF20  F004         	goto	u1921
  1557  00083C  EF22  F004         	goto	u1920
  1558  000840                     u1921:
  1559  000840  EF4E  F004         	goto	l76
  1560  000844                     u1920:
  1561  000844                     
  1562                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 69:         if (type){ ((TRISE) |= 
      +                          (1<<(pin-32)));}
  1563  000844  5021               	movf	pinMode@type^0,w,c
  1564  000846  1022               	iorwf	(pinMode@type+1)^0,w,c
  1565  000848  B4D8               	btfsc	status,2,c
  1566  00084A  EF29  F004         	goto	u1931
  1567  00084E  EF2B  F004         	goto	u1930
  1568  000852                     u1931:
  1569  000852  EF3D  F004         	goto	l2119
  1570  000856                     u1930:
  1571  000856  C01F  F023         	movff	pinMode@pin,??_pinMode
  1572  00085A  0EE0               	movlw	-32
  1573  00085C  2623               	addwf	??_pinMode^0,f,c
  1574  00085E  0E01               	movlw	1
  1575  000860  6E24               	movwf	(??_pinMode+1)^0,c
  1576  000862  2A23               	incf	??_pinMode^0,f,c
  1577  000864  EF36  F004         	goto	u1944
  1578  000868                     u1945:
  1579  000868  90D8               	bcf	status,0,c
  1580  00086A  3624               	rlcf	(??_pinMode+1)^0,f,c
  1581  00086C                     u1944:
  1582  00086C  2E23               	decfsz	??_pinMode^0,f,c
  1583  00086E  EF34  F004         	goto	u1945
  1584  000872  5024               	movf	(??_pinMode+1)^0,w,c
  1585  000874  1296               	iorwf	150,f,c	;volatile
  1586  000876  EF4E  F004         	goto	l76
  1587  00087A                     l2119:
  1588  00087A  C01F  F023         	movff	pinMode@pin,??_pinMode
  1589  00087E  0EE0               	movlw	-32
  1590  000880  2623               	addwf	??_pinMode^0,f,c
  1591  000882  0E01               	movlw	1
  1592  000884  6E24               	movwf	(??_pinMode+1)^0,c
  1593  000886  2A23               	incf	??_pinMode^0,f,c
  1594  000888  EF48  F004         	goto	u1954
  1595  00088C                     u1955:
  1596  00088C  90D8               	bcf	status,0,c
  1597  00088E  3624               	rlcf	(??_pinMode+1)^0,f,c
  1598  000890                     u1954:
  1599  000890  2E23               	decfsz	??_pinMode^0,f,c
  1600  000892  EF46  F004         	goto	u1955
  1601  000896  5024               	movf	(??_pinMode+1)^0,w,c
  1602  000898  0AFF               	xorlw	255
  1603  00089A  1696               	andwf	150,f,c	;volatile
  1604  00089C                     l76:
  1605  00089C  0012               	return		;funcret
  1606  00089E                     __end_of_pinMode:
  1607                           	callstack 0
  1608                           
  1609 ;; *************** function _kpInit *****************
  1610 ;; Defined at:
  1611 ;;		line 89 in file "keypad.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;		None
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;		None
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		wreg, status,2, status,0
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1625 ;;      Params:         0       0       0       0       0       0       0
  1626 ;;      Locals:         0       0       0       0       0       0       0
  1627 ;;      Temps:          0       0       0       0       0       0       0
  1628 ;;      Totals:         0       0       0       0       0       0       0
  1629 ;;Total ram usage:        0 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; This function calls:
  1632 ;;		Nothing
  1633 ;; This function is called by:
  1634 ;;		_main
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text7
  1639  0018CE                     __ptext7:
  1640                           	callstack 0
  1641  0018CE                     _kpInit:
  1642                           	callstack 30
  1643  0018CE                     
  1644                           ;keypad.c: 91:     TRISB &= 0x07;
  1645  0018CE  0E07               	movlw	7
  1646  0018D0  1693               	andwf	147,f,c	;volatile
  1647                           
  1648                           ;keypad.c: 93:     TRISD |= 0x0f;
  1649  0018D2  0E0F               	movlw	15
  1650  0018D4  1295               	iorwf	149,f,c	;volatile
  1651  0018D6  0012               	return		;funcret
  1652  0018D8                     __end_of_kpInit:
  1653                           	callstack 0
  1654                           
  1655 ;; *************** function _chooseSong *****************
  1656 ;; Defined at:
  1657 ;;		line 32 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1671 ;;      Params:         0       0       0       0       0       0       0
  1672 ;;      Locals:         0       0       0       0       0       0       0
  1673 ;;      Temps:          2       0       0       0       0       0       0
  1674 ;;      Totals:         2       0       0       0       0       0       0
  1675 ;;Total ram usage:        2 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    5
  1678 ;; This function calls:
  1679 ;;		_atraso_ms
  1680 ;;		_kpDebounce
  1681 ;;		_kpRead
  1682 ;;		_lcdCommand
  1683 ;;		_lcdPosition
  1684 ;;		_lcdStr
  1685 ;;		_playSong
  1686 ;;		_ssdDigit
  1687 ;;		_ssdUpdate
  1688 ;; This function is called by:
  1689 ;;		_main
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	text8
  1694  001000                     __ptext8:
  1695                           	callstack 0
  1696  001000                     _chooseSong:
  1697                           	callstack 25
  1698  001000                     
  1699                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 33:     kpDebounce();
  1700  001000  EC9B  F006         	call	_kpDebounce	;wreg free
  1701  001004                     
  1702                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 34:     tecla = kpRead();
  1703  001004  EC6C  F00C         	call	_kpRead	;wreg free
  1704  001008  501F               	movf	?_kpRead^0,w,c
  1705  00100A  6E1E               	movwf	_tecla^0,c
  1706  00100C                     
  1707                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 35:     if (((tecla) & (1<<(3)))
      +                           || ((tecla) & (1<<(7)))) {
  1708  00100C  B61E               	btfsc	_tecla^0,3,c
  1709  00100E  EF0B  F008         	goto	u2101
  1710  001012  EF0D  F008         	goto	u2100
  1711  001016                     u2101:
  1712  001016  EF14  F008         	goto	l2255
  1713  00101A                     u2100:
  1714  00101A  AE1E               	btfss	_tecla^0,7,c
  1715  00101C  EF12  F008         	goto	u2111
  1716  001020  EF14  F008         	goto	u2110
  1717  001024                     u2111:
  1718  001024  EF9D  F008         	goto	l250
  1719  001028                     u2110:
  1720  001028                     l2255:
  1721                           
  1722                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 36:         flag = 1;
  1723  001028  0E01               	movlw	1
  1724  00102A  6E49               	movwf	_flag^0,c
  1725  00102C                     l2257:
  1726                           
  1727                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 38:             ssdUpdate();
  1728  00102C  EC58  F007         	call	_ssdUpdate	;wreg free
  1729  001030                     
  1730                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 39:             kpDebounce();
  1731  001030  EC9B  F006         	call	_kpDebounce	;wreg free
  1732  001034                     
  1733                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 40:             atraso_ms(10);
  1734  001034  0E00               	movlw	0
  1735  001036  6E20               	movwf	(atraso_ms@t+1)^0,c
  1736  001038  0E0A               	movlw	10
  1737  00103A  6E1F               	movwf	atraso_ms@t^0,c
  1738  00103C  ECFB  F00A         	call	_atraso_ms	;wreg free
  1739  001040                     
  1740                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 41:             if ((kpRead() !=
      +                           tecla) || flag == 1) {
  1741  001040  501E               	movf	_tecla^0,w,c
  1742  001042  6E34               	movwf	??_chooseSong^0,c
  1743  001044  6A35               	clrf	(??_chooseSong+1)^0,c
  1744  001046  EC6C  F00C         	call	_kpRead	;wreg free
  1745  00104A  5034               	movf	??_chooseSong^0,w,c
  1746  00104C  181F               	xorwf	?_kpRead^0,w,c
  1747  00104E  E107               	bnz	u2121
  1748  001050  5035               	movf	(??_chooseSong+1)^0,w,c
  1749  001052  1820               	xorwf	(?_kpRead+1)^0,w,c
  1750  001054  A4D8               	btfss	status,2,c
  1751  001056  EF2F  F008         	goto	u2121
  1752  00105A  EF31  F008         	goto	u2120
  1753  00105E                     u2121:
  1754  00105E  EF39  F008         	goto	l2267
  1755  001062                     u2120:
  1756  001062  0449               	decf	_flag^0,w,c
  1757  001064  A4D8               	btfss	status,2,c
  1758  001066  EF37  F008         	goto	u2131
  1759  00106A  EF39  F008         	goto	u2130
  1760  00106E                     u2131:
  1761  00106E  EF16  F008         	goto	l2257
  1762  001072                     u2130:
  1763  001072                     l2267:
  1764                           
  1765                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 42:                 tecla = kpRe
      +                          ad();
  1766  001072  EC6C  F00C         	call	_kpRead	;wreg free
  1767  001076  501F               	movf	?_kpRead^0,w,c
  1768  001078  6E1E               	movwf	_tecla^0,c
  1769  00107A                     
  1770                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 43:                 if (((tecla)
      +                           & (1<<(3)))) {
  1771  00107A  A61E               	btfss	_tecla^0,3,c
  1772  00107C  EF42  F008         	goto	u2141
  1773  001080  EF44  F008         	goto	u2140
  1774  001084                     u2141:
  1775  001084  EF53  F008         	goto	l240
  1776  001088                     u2140:
  1777  001088                     
  1778                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 44:                     if (indi
      +                          ce == 0) {
  1779  001088  504B               	movf	_indice^0,w,c
  1780  00108A  A4D8               	btfss	status,2,c
  1781  00108C  EF4A  F008         	goto	u2151
  1782  001090  EF4C  F008         	goto	u2150
  1783  001094                     u2151:
  1784  001094  EF50  F008         	goto	l2275
  1785  001098                     u2150:
  1786  001098                     
  1787                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 45:                         indi
      +                          ce = 9;
  1788  001098  0E09               	movlw	9
  1789  00109A  6E4B               	movwf	_indice^0,c
  1790                           
  1791                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 46:                     } else {
  1792  00109C  EF75  F008         	goto	l2285
  1793  0010A0                     l2275:
  1794                           
  1795                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 47:                         indi
      +                          ce -= 1;
  1796  0010A0  064B               	decf	_indice^0,f,c
  1797  0010A2  EF75  F008         	goto	l2285
  1798  0010A6                     l240:
  1799  0010A6  AE1E               	btfss	_tecla^0,7,c
  1800  0010A8  EF58  F008         	goto	u2161
  1801  0010AC  EF5A  F008         	goto	u2160
  1802  0010B0                     u2161:
  1803  0010B0  EF6A  F008         	goto	l244
  1804  0010B4                     u2160:
  1805  0010B4                     
  1806                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 50:                     if (indi
      +                          ce == 9) {
  1807  0010B4  0E09               	movlw	9
  1808  0010B6  184B               	xorwf	_indice^0,w,c
  1809  0010B8  A4D8               	btfss	status,2,c
  1810  0010BA  EF61  F008         	goto	u2171
  1811  0010BE  EF63  F008         	goto	u2170
  1812  0010C2                     u2171:
  1813  0010C2  EF67  F008         	goto	l2281
  1814  0010C6                     u2170:
  1815  0010C6                     
  1816                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 51:                         indi
      +                          ce = 0;
  1817  0010C6  0E00               	movlw	0
  1818  0010C8  6E4B               	movwf	_indice^0,c
  1819                           
  1820                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 52:                     } else {
  1821  0010CA  EF75  F008         	goto	l2285
  1822  0010CE                     l2281:
  1823                           
  1824                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 53:                         indi
      +                          ce += 1;
  1825  0010CE  2A4B               	incf	_indice^0,f,c
  1826  0010D0  EF75  F008         	goto	l2285
  1827  0010D4                     l244:
  1828  0010D4  A01E               	btfss	_tecla^0,0,c
  1829  0010D6  EF6F  F008         	goto	u2181
  1830  0010DA  EF71  F008         	goto	u2180
  1831  0010DE                     u2181:
  1832  0010DE  EF75  F008         	goto	l2285
  1833  0010E2                     u2180:
  1834  0010E2                     
  1835                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 56:                     flag = 0
      +                          ;
  1836  0010E2  0E00               	movlw	0
  1837  0010E4  6E49               	movwf	_flag^0,c
  1838                           
  1839                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 57:                     break;
  1840  0010E6  EF9B  F008         	goto	l2297
  1841  0010EA                     l2285:
  1842                           
  1843                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 68:                 lcdCommand(0
      +                          x01);
  1844  0010EA  0E01               	movlw	1
  1845  0010EC  EC44  F00A         	call	_lcdCommand
  1846                           
  1847                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 69:                 lcdPosition(
      +                          1, 0);
  1848  0010F0  0E00               	movlw	0
  1849  0010F2  6E27               	movwf	lcdPosition@coluna^0,c
  1850  0010F4  0E01               	movlw	1
  1851  0010F6  EC5E  F00B         	call	_lcdPosition
  1852  0010FA                     
  1853                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 70:                 lcdStr("<-(1
      +                          ) (*)  (2)->");
  1854  0010FA  0E11               	movlw	low STR_4
  1855  0010FC  6E27               	movwf	lcdStr@str^0,c
  1856  0010FE  0E06               	movlw	high STR_4
  1857  001100  6E28               	movwf	(lcdStr@str+1)^0,c
  1858  001102  ECBF  F00A         	call	_lcdStr	;wreg free
  1859  001106                     
  1860                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 71:                 lcdPosition(
      +                          0, 0);
  1861  001106  0E00               	movlw	0
  1862  001108  6E27               	movwf	lcdPosition@coluna^0,c
  1863  00110A  0E00               	movlw	0
  1864  00110C  EC5E  F00B         	call	_lcdPosition
  1865  001110                     
  1866                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 72:                 lcdStr(music
      +                          as[indice].nome);
  1867  001110  504B               	movf	_indice^0,w,c
  1868  001112  0D13               	mullw	19
  1869  001114  0E02               	movlw	low (_musicas+2)
  1870  001116  24F3               	addwf	243,w,c
  1871  001118  6E27               	movwf	lcdStr@str^0,c
  1872  00111A  0E01               	movlw	high (_musicas+2)
  1873  00111C  20F4               	addwfc	prodh,w,c
  1874  00111E  6E28               	movwf	(lcdStr@str+1)^0,c
  1875  001120  ECBF  F00A         	call	_lcdStr	;wreg free
  1876  001124                     
  1877                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 73:                 ssdDigit(ind
      +                          ice, 3);
  1878  001124  0E03               	movlw	3
  1879  001126  6E1F               	movwf	ssdDigit@pos^0,c
  1880  001128  504B               	movf	_indice^0,w,c
  1881  00112A  EC8B  F00B         	call	_ssdDigit
  1882  00112E                     
  1883                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 74:                 flag = 0;
  1884  00112E  0E00               	movlw	0
  1885  001130  6E49               	movwf	_flag^0,c
  1886  001132  EF16  F008         	goto	l2257
  1887  001136                     l2297:
  1888                           
  1889                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 77:         playSong();
  1890  001136  EC76  F005         	call	_playSong	;wreg free
  1891  00113A                     l250:
  1892  00113A  0012               	return		;funcret
  1893  00113C                     __end_of_chooseSong:
  1894                           	callstack 0
  1895                           
  1896 ;; *************** function _playSong *****************
  1897 ;; Defined at:
  1898 ;;		line 81 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;		None
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  j               1   20[COMRAM] unsigned char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1912 ;;      Params:         0       0       0       0       0       0       0
  1913 ;;      Locals:         5       0       0       0       0       0       0
  1914 ;;      Temps:          2       0       0       0       0       0       0
  1915 ;;      Totals:         7       0       0       0       0       0       0
  1916 ;;Total ram usage:        7 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    4
  1919 ;; This function calls:
  1920 ;;		___awdiv
  1921 ;;		___awmod
  1922 ;;		_atraso_ms
  1923 ;;		_kpDebounce
  1924 ;;		_kpRead
  1925 ;;		_lcdCommand
  1926 ;;		_lcdPosition
  1927 ;;		_lcdStr
  1928 ;;		_ssdDigit
  1929 ;;		_ssdUpdate
  1930 ;; This function is called by:
  1931 ;;		_chooseSong
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text9
  1936  000AEC                     __ptext9:
  1937                           	callstack 0
  1938  000AEC                     _playSong:
  1939                           	callstack 25
  1940  000AEC                     
  1941                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 82:     lcdCommand(0x01);
  1942  000AEC  0E01               	movlw	1
  1943  000AEE  EC44  F00A         	call	_lcdCommand
  1944                           
  1945                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 83:     lcdPosition(0, 0);
  1946  000AF2  0E00               	movlw	0
  1947  000AF4  6E27               	movwf	lcdPosition@coluna^0,c
  1948  000AF6  0E00               	movlw	0
  1949  000AF8  EC5E  F00B         	call	_lcdPosition
  1950  000AFC                     
  1951                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 84:     lcdStr(musicas[indice].n
      +                          ome);
  1952  000AFC  504B               	movf	_indice^0,w,c
  1953  000AFE  0D13               	mullw	19
  1954  000B00  0E02               	movlw	low (_musicas+2)
  1955  000B02  24F3               	addwf	243,w,c
  1956  000B04  6E27               	movwf	lcdStr@str^0,c
  1957  000B06  0E01               	movlw	high (_musicas+2)
  1958  000B08  20F4               	addwfc	prodh,w,c
  1959  000B0A  6E28               	movwf	(lcdStr@str+1)^0,c
  1960  000B0C  ECBF  F00A         	call	_lcdStr	;wreg free
  1961  000B10                     
  1962                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 85:     lcdPosition(1, 0);
  1963  000B10  0E00               	movlw	0
  1964  000B12  6E27               	movwf	lcdPosition@coluna^0,c
  1965  000B14  0E01               	movlw	1
  1966  000B16  EC5E  F00B         	call	_lcdPosition
  1967  000B1A                     
  1968                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 86:     lcdStr("+(1)  (*)  (2)-"
      +                          );
  1969  000B1A  0E33               	movlw	low STR_6
  1970  000B1C  6E27               	movwf	lcdStr@str^0,c
  1971  000B1E  0E06               	movlw	high STR_6
  1972  000B20  6E28               	movwf	(lcdStr@str+1)^0,c
  1973  000B22  ECBF  F00A         	call	_lcdStr	;wreg free
  1974  000B26                     
  1975                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 88:     tempo = musicas[indice].
      +                          duracao;
  1976  000B26  504B               	movf	_indice^0,w,c
  1977  000B28  0D13               	mullw	19
  1978  000B2A  0E00               	movlw	low _musicas
  1979  000B2C  24F3               	addwf	243,w,c
  1980  000B2E  6ED9               	movwf	fsr2l,c
  1981  000B30  0E01               	movlw	high _musicas
  1982  000B32  20F4               	addwfc	prodh,w,c
  1983  000B34  6EDA               	movwf	fsr2h,c
  1984  000B36  50DF               	movf	indf2,w,c
  1985  000B38  6E48               	movwf	_tempo^0,c
  1986                           
  1987                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 89:     while (tempo != 0) {
  1988  000B3A  EF92  F006         	goto	l2189
  1989  000B3E                     l2135:
  1990                           
  1991                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 90:         minuto1 = (tempo / 6
      +                          0) % 10;
  1992  000B3E  0E00               	movlw	0
  1993  000B40  6E22               	movwf	(___awdiv@divisor+1)^0,c
  1994  000B42  0E3C               	movlw	60
  1995  000B44  6E21               	movwf	___awdiv@divisor^0,c
  1996  000B46  C048  F01F         	movff	_tempo,___awdiv@dividend
  1997  000B4A  6A20               	clrf	(___awdiv@dividend+1)^0,c
  1998  000B4C  EC9E  F008         	call	___awdiv	;wreg free
  1999  000B50  C01F  F027         	movff	?___awdiv,___awmod@dividend
  2000  000B54  C020  F028         	movff	?___awdiv+1,___awmod@dividend+1
  2001  000B58  0E00               	movlw	0
  2002  000B5A  6E2A               	movwf	(___awmod@divisor+1)^0,c
  2003  000B5C  0E0A               	movlw	10
  2004  000B5E  6E29               	movwf	___awmod@divisor^0,c
  2005  000B60  EC00  F009         	call	___awmod	;wreg free
  2006  000B64  5027               	movf	?___awmod^0,w,c
  2007  000B66  6E47               	movwf	_minuto1^0,c
  2008                           
  2009                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 91:         minuto2 = (tempo / 6
      +                          0) / 10;
  2010  000B68  0E00               	movlw	0
  2011  000B6A  6E22               	movwf	(___awdiv@divisor+1)^0,c
  2012  000B6C  0E3C               	movlw	60
  2013  000B6E  6E21               	movwf	___awdiv@divisor^0,c
  2014  000B70  C048  F01F         	movff	_tempo,___awdiv@dividend
  2015  000B74  6A20               	clrf	(___awdiv@dividend+1)^0,c
  2016  000B76  EC9E  F008         	call	___awdiv	;wreg free
  2017  000B7A  C01F  F02F         	movff	?___awdiv,_playSong$949
  2018  000B7E  C020  F030         	movff	?___awdiv+1,_playSong$949+1
  2019                           
  2020                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 91:         minuto2 = (tempo / 6
      +                          0) / 10;
  2021  000B82  C02F  F01F         	movff	_playSong$949,___awdiv@dividend
  2022  000B86  C030  F020         	movff	_playSong$949+1,___awdiv@dividend+1
  2023  000B8A  0E00               	movlw	0
  2024  000B8C  6E22               	movwf	(___awdiv@divisor+1)^0,c
  2025  000B8E  0E0A               	movlw	10
  2026  000B90  6E21               	movwf	___awdiv@divisor^0,c
  2027  000B92  EC9E  F008         	call	___awdiv	;wreg free
  2028  000B96  501F               	movf	?___awdiv^0,w,c
  2029  000B98  6E46               	movwf	_minuto2^0,c
  2030                           
  2031                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 92:         segundo1 = (tempo % 
      +                          60) % 10;
  2032  000B9A  0E00               	movlw	0
  2033  000B9C  6E2A               	movwf	(___awmod@divisor+1)^0,c
  2034  000B9E  0E3C               	movlw	60
  2035  000BA0  6E29               	movwf	___awmod@divisor^0,c
  2036  000BA2  C048  F027         	movff	_tempo,___awmod@dividend
  2037  000BA6  6A28               	clrf	(___awmod@dividend+1)^0,c
  2038  000BA8  EC00  F009         	call	___awmod	;wreg free
  2039  000BAC  C027  F031         	movff	?___awmod,_playSong$950
  2040  000BB0  C028  F032         	movff	?___awmod+1,_playSong$950+1
  2041                           
  2042                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 92:         segundo1 = (tempo % 
      +                          60) % 10;
  2043  000BB4  C031  F027         	movff	_playSong$950,___awmod@dividend
  2044  000BB8  C032  F028         	movff	_playSong$950+1,___awmod@dividend+1
  2045  000BBC  0E00               	movlw	0
  2046  000BBE  6E2A               	movwf	(___awmod@divisor+1)^0,c
  2047  000BC0  0E0A               	movlw	10
  2048  000BC2  6E29               	movwf	___awmod@divisor^0,c
  2049  000BC4  EC00  F009         	call	___awmod	;wreg free
  2050  000BC8  5027               	movf	?___awmod^0,w,c
  2051  000BCA  6E45               	movwf	_segundo1^0,c
  2052                           
  2053                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 93:         segundo2 = (tempo % 
      +                          60) / 10;
  2054  000BCC  0E00               	movlw	0
  2055  000BCE  6E2A               	movwf	(___awmod@divisor+1)^0,c
  2056  000BD0  0E3C               	movlw	60
  2057  000BD2  6E29               	movwf	___awmod@divisor^0,c
  2058  000BD4  C048  F027         	movff	_tempo,___awmod@dividend
  2059  000BD8  6A28               	clrf	(___awmod@dividend+1)^0,c
  2060  000BDA  EC00  F009         	call	___awmod	;wreg free
  2061  000BDE  C027  F01F         	movff	?___awmod,___awdiv@dividend
  2062  000BE2  C028  F020         	movff	?___awmod+1,___awdiv@dividend+1
  2063  000BE6  0E00               	movlw	0
  2064  000BE8  6E22               	movwf	(___awdiv@divisor+1)^0,c
  2065  000BEA  0E0A               	movlw	10
  2066  000BEC  6E21               	movwf	___awdiv@divisor^0,c
  2067  000BEE  EC9E  F008         	call	___awdiv	;wreg free
  2068  000BF2  501F               	movf	?___awdiv^0,w,c
  2069  000BF4  6E44               	movwf	_segundo2^0,c
  2070                           
  2071                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 95:         ssdDigit(minuto2, 0)
      +                          ;
  2072  000BF6  0E00               	movlw	0
  2073  000BF8  6E1F               	movwf	ssdDigit@pos^0,c
  2074  000BFA  5046               	movf	_minuto2^0,w,c
  2075  000BFC  EC8B  F00B         	call	_ssdDigit
  2076                           
  2077                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 96:         ssdDigit(minuto1, 1)
      +                          ;
  2078  000C00  0E01               	movlw	1
  2079  000C02  6E1F               	movwf	ssdDigit@pos^0,c
  2080  000C04  5047               	movf	_minuto1^0,w,c
  2081  000C06  EC8B  F00B         	call	_ssdDigit
  2082                           
  2083                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 97:         ssdDigit(segundo2, 2
      +                          );
  2084  000C0A  0E02               	movlw	2
  2085  000C0C  6E1F               	movwf	ssdDigit@pos^0,c
  2086  000C0E  5044               	movf	_segundo2^0,w,c
  2087  000C10  EC8B  F00B         	call	_ssdDigit
  2088                           
  2089                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 98:         ssdDigit(segundo1, 3
      +                          );
  2090  000C14  0E03               	movlw	3
  2091  000C16  6E1F               	movwf	ssdDigit@pos^0,c
  2092  000C18  5045               	movf	_segundo1^0,w,c
  2093  000C1A  EC8B  F00B         	call	_ssdDigit
  2094  000C1E                     
  2095                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 100:         for (unsigned char 
      +                          j = 0; j < 100; j++) {
  2096  000C1E  0E00               	movlw	0
  2097  000C20  6E33               	movwf	playSong@j^0,c
  2098  000C22                     l2143:
  2099                           
  2100                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 101:             ssdUpdate();
  2101  000C22  EC58  F007         	call	_ssdUpdate	;wreg free
  2102  000C26                     
  2103                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 102:             atraso_ms(10);
  2104  000C26  0E00               	movlw	0
  2105  000C28  6E20               	movwf	(atraso_ms@t+1)^0,c
  2106  000C2A  0E0A               	movlw	10
  2107  000C2C  6E1F               	movwf	atraso_ms@t^0,c
  2108  000C2E  ECFB  F00A         	call	_atraso_ms	;wreg free
  2109  000C32                     
  2110                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 103:             kpDebounce();
  2111  000C32  EC9B  F006         	call	_kpDebounce	;wreg free
  2112  000C36                     
  2113                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 104:             tecla = kpRead(
      +                          );
  2114  000C36  EC6C  F00C         	call	_kpRead	;wreg free
  2115  000C3A  501F               	movf	?_kpRead^0,w,c
  2116  000C3C  6E1E               	movwf	_tecla^0,c
  2117  000C3E                     
  2118                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 105:             if (((tecla) & 
      +                          (1<<(3))) || ((tecla) & (1<<(7))) || ((tecla) & (1<<(0)))) {
  2119  000C3E  B61E               	btfsc	_tecla^0,3,c
  2120  000C40  EF24  F006         	goto	u1971
  2121  000C44  EF26  F006         	goto	u1970
  2122  000C48                     u1971:
  2123  000C48  EF34  F006         	goto	l2157
  2124  000C4C                     u1970:
  2125  000C4C  BE1E               	btfsc	_tecla^0,7,c
  2126  000C4E  EF2B  F006         	goto	u1981
  2127  000C52  EF2D  F006         	goto	u1980
  2128  000C56                     u1981:
  2129  000C56  EF34  F006         	goto	l2157
  2130  000C5A                     u1980:
  2131  000C5A  A01E               	btfss	_tecla^0,0,c
  2132  000C5C  EF32  F006         	goto	u1991
  2133  000C60  EF34  F006         	goto	u1990
  2134  000C64                     u1991:
  2135  000C64  EF80  F006         	goto	l2181
  2136  000C68                     u1990:
  2137  000C68                     l2157:
  2138                           
  2139                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 106:                 flag=1;
  2140  000C68  0E01               	movlw	1
  2141  000C6A  6E49               	movwf	_flag^0,c
  2142  000C6C                     l2159:
  2143                           
  2144                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 108:                     kpDebou
      +                          nce();
  2145  000C6C  EC9B  F006         	call	_kpDebounce	;wreg free
  2146  000C70                     
  2147                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 109:                     tecla =
      +                           kpRead();
  2148  000C70  EC6C  F00C         	call	_kpRead	;wreg free
  2149  000C74  501F               	movf	?_kpRead^0,w,c
  2150  000C76  6E1E               	movwf	_tecla^0,c
  2151  000C78                     
  2152                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 110:                     if ((kp
      +                          Read() != tecla) || flag == 1) {
  2153  000C78  501E               	movf	_tecla^0,w,c
  2154  000C7A  6E2D               	movwf	??_playSong^0,c
  2155  000C7C  6A2E               	clrf	(??_playSong+1)^0,c
  2156  000C7E  EC6C  F00C         	call	_kpRead	;wreg free
  2157  000C82  502D               	movf	??_playSong^0,w,c
  2158  000C84  181F               	xorwf	?_kpRead^0,w,c
  2159  000C86  E107               	bnz	u2001
  2160  000C88  502E               	movf	(??_playSong+1)^0,w,c
  2161  000C8A  1820               	xorwf	(?_kpRead+1)^0,w,c
  2162  000C8C  A4D8               	btfss	status,2,c
  2163  000C8E  EF4B  F006         	goto	u2001
  2164  000C92  EF4D  F006         	goto	u2000
  2165  000C96                     u2001:
  2166  000C96  EF55  F006         	goto	l263
  2167  000C9A                     u2000:
  2168  000C9A  0449               	decf	_flag^0,w,c
  2169  000C9C  A4D8               	btfss	status,2,c
  2170  000C9E  EF53  F006         	goto	u2011
  2171  000CA2  EF55  F006         	goto	u2010
  2172  000CA6                     u2011:
  2173  000CA6  EF36  F006         	goto	l2159
  2174  000CAA                     u2010:
  2175  000CAA                     l263:
  2176                           
  2177                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 111:                         if 
      +                          (((tecla) & (1<<(3)))) {
  2178  000CAA  A61E               	btfss	_tecla^0,3,c
  2179  000CAC  EF5A  F006         	goto	u2021
  2180  000CB0  EF5C  F006         	goto	u2020
  2181  000CB4                     u2021:
  2182  000CB4  EF5E  F006         	goto	l264
  2183  000CB8                     u2020:
  2184  000CB8  EF80  F006         	goto	l2181
  2185  000CBC                     l264:
  2186  000CBC  AE1E               	btfss	_tecla^0,7,c
  2187  000CBE  EF63  F006         	goto	u2031
  2188  000CC2  EF65  F006         	goto	u2030
  2189  000CC6                     u2031:
  2190  000CC6  EF67  F006         	goto	l267
  2191  000CCA                     u2030:
  2192  000CCA  EF80  F006         	goto	l2181
  2193  000CCE                     l267:
  2194  000CCE  A01E               	btfss	_tecla^0,0,c
  2195  000CD0  EF6C  F006         	goto	u2041
  2196  000CD4  EF6E  F006         	goto	u2040
  2197  000CD8                     u2041:
  2198  000CD8  EF7E  F006         	goto	l266
  2199  000CDC                     u2040:
  2200  000CDC                     
  2201                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 116:                            
      +                           if(pause==0) {pause=1;} else {pause = 0;}
  2202  000CDC  501D               	movf	_pause^0,w,c
  2203  000CDE  A4D8               	btfss	status,2,c
  2204  000CE0  EF74  F006         	goto	u2051
  2205  000CE4  EF76  F006         	goto	u2050
  2206  000CE8                     u2051:
  2207  000CE8  EF7A  F006         	goto	l2179
  2208  000CEC                     u2050:
  2209  000CEC  0E01               	movlw	1
  2210  000CEE  6E1D               	movwf	_pause^0,c
  2211  000CF0  EF80  F006         	goto	l2181
  2212  000CF4                     l2179:
  2213  000CF4  0E00               	movlw	0
  2214  000CF6  6E1D               	movwf	_pause^0,c
  2215  000CF8  EF80  F006         	goto	l2181
  2216  000CFC                     l266:
  2217  000CFC  EF36  F006         	goto	l2159
  2218  000D00                     l2181:
  2219                           
  2220                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 123:         }
  2221  000D00  2A33               	incf	playSong@j^0,f,c
  2222  000D02  0E63               	movlw	99
  2223  000D04  6433               	cpfsgt	playSong@j^0,c
  2224  000D06  EF87  F006         	goto	u2061
  2225  000D0A  EF89  F006         	goto	u2060
  2226  000D0E                     u2061:
  2227  000D0E  EF11  F006         	goto	l2143
  2228  000D12                     u2060:
  2229  000D12                     
  2230                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 124:         if (pause == 0) {
  2231  000D12  501D               	movf	_pause^0,w,c
  2232  000D14  A4D8               	btfss	status,2,c
  2233  000D16  EF8F  F006         	goto	u2071
  2234  000D1A  EF91  F006         	goto	u2070
  2235  000D1E                     u2071:
  2236  000D1E  EF92  F006         	goto	l2189
  2237  000D22                     u2070:
  2238  000D22                     
  2239                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 125:             tempo -= 1;
  2240  000D22  0648               	decf	_tempo^0,f,c
  2241  000D24                     l2189:
  2242                           
  2243                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 89:     while (tempo != 0) {
  2244  000D24  5048               	movf	_tempo^0,w,c
  2245  000D26  A4D8               	btfss	status,2,c
  2246  000D28  EF98  F006         	goto	u2081
  2247  000D2C  EF9A  F006         	goto	u2080
  2248  000D30                     u2081:
  2249  000D30  EF9F  F005         	goto	l2135
  2250  000D34                     u2080:
  2251  000D34  0012               	return		;funcret
  2252  000D36                     __end_of_playSong:
  2253                           	callstack 0
  2254                           
  2255 ;; *************** function _ssdUpdate *****************
  2256 ;; Defined at:
  2257 ;;		line 54 in file "ssd.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;		None
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;		None
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2271 ;;      Params:         0       0       0       0       0       0       0
  2272 ;;      Locals:         0       0       0       0       0       0       0
  2273 ;;      Temps:          2       0       0       0       0       0       0
  2274 ;;      Totals:         2       0       0       0       0       0       0
  2275 ;;Total ram usage:        2 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:    1
  2278 ;; This function calls:
  2279 ;;		_digitalWrite
  2280 ;; This function is called by:
  2281 ;;		_chooseSong
  2282 ;;		_playSong
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text10
  2287  000EB0                     __ptext10:
  2288                           	callstack 0
  2289  000EB0                     _ssdUpdate:
  2290                           	callstack 28
  2291  000EB0                     
  2292                           ;ssd.c: 58:     TRISD= 0x00;
  2293  000EB0  0E00               	movlw	0
  2294  000EB2  6E95               	movwf	149,c	;volatile
  2295  000EB4                     
  2296                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  2297  000EB4  0E00               	movlw	0
  2298  000EB6  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2299  000EB8  0E02               	movlw	2
  2300  000EBA  6E1F               	movwf	digitalWrite@pin^0,c
  2301  000EBC  0E00               	movlw	0
  2302  000EBE  6E22               	movwf	(digitalWrite@value+1)^0,c
  2303  000EC0  0E00               	movlw	0
  2304  000EC2  6E21               	movwf	digitalWrite@value^0,c
  2305  000EC4  EC4F  F004         	call	_digitalWrite	;wreg free
  2306  000EC8                     
  2307                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  2308  000EC8  0E00               	movlw	0
  2309  000ECA  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2310  000ECC  0E03               	movlw	3
  2311  000ECE  6E1F               	movwf	digitalWrite@pin^0,c
  2312  000ED0  0E00               	movlw	0
  2313  000ED2  6E22               	movwf	(digitalWrite@value+1)^0,c
  2314  000ED4  0E00               	movlw	0
  2315  000ED6  6E21               	movwf	digitalWrite@value^0,c
  2316  000ED8  EC4F  F004         	call	_digitalWrite	;wreg free
  2317  000EDC                     
  2318                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  2319  000EDC  0E00               	movlw	0
  2320  000EDE  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2321  000EE0  0E04               	movlw	4
  2322  000EE2  6E1F               	movwf	digitalWrite@pin^0,c
  2323  000EE4  0E00               	movlw	0
  2324  000EE6  6E22               	movwf	(digitalWrite@value+1)^0,c
  2325  000EE8  0E00               	movlw	0
  2326  000EEA  6E21               	movwf	digitalWrite@value^0,c
  2327  000EEC  EC4F  F004         	call	_digitalWrite	;wreg free
  2328  000EF0                     
  2329                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  2330  000EF0  0E00               	movlw	0
  2331  000EF2  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2332  000EF4  0E05               	movlw	5
  2333  000EF6  6E1F               	movwf	digitalWrite@pin^0,c
  2334  000EF8  0E00               	movlw	0
  2335  000EFA  6E22               	movwf	(digitalWrite@value+1)^0,c
  2336  000EFC  0E00               	movlw	0
  2337  000EFE  6E21               	movwf	digitalWrite@value^0,c
  2338  000F00  EC4F  F004         	call	_digitalWrite	;wreg free
  2339                           
  2340                           ;ssd.c: 66:     PORTD = 0x00;
  2341  000F04  0E00               	movlw	0
  2342  000F06  6E83               	movwf	131,c	;volatile
  2343                           
  2344                           ;ssd.c: 69:     switch (display)
  2345  000F08  EFE2  F007         	goto	l1979
  2346  000F0C                     l1951:
  2347                           
  2348                           ;ssd.c: 72:             PORTD = valor[v0];
  2349  000F0C  0E01               	movlw	low _valor
  2350  000F0E  2441               	addwf	_v0^0,w,c
  2351  000F10  6EF6               	movwf	tblptrl,c
  2352  000F12  6AF7               	clrf	tblptrh,c
  2353  000F14  0E06               	movlw	high _valor
  2354  000F16  22F7               	addwfc	tblptrh,f,c
  2355  000F18                     	if	0	;There are less than 3 active tblptr bytes
  2356  000F18                     	endif
  2357  000F18  0008               	tblrd		*
  2358  000F1A  CFF5 FF83          	movff	tablat,3971	;volatile
  2359  000F1E                     
  2360                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  2361  000F1E  0E00               	movlw	0
  2362  000F20  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2363  000F22  0E02               	movlw	2
  2364  000F24  6E1F               	movwf	digitalWrite@pin^0,c
  2365  000F26  0E00               	movlw	0
  2366  000F28  6E22               	movwf	(digitalWrite@value+1)^0,c
  2367  000F2A  0E01               	movlw	1
  2368  000F2C  6E21               	movwf	digitalWrite@value^0,c
  2369  000F2E  EC4F  F004         	call	_digitalWrite	;wreg free
  2370  000F32                     
  2371                           ;ssd.c: 74:             display = 1;
  2372  000F32  0E01               	movlw	1
  2373  000F34  6E42               	movwf	_display^0,c
  2374                           
  2375                           ;ssd.c: 75:             break;
  2376  000F36  EFFF  F007         	goto	l311
  2377  000F3A                     l1957:
  2378                           
  2379                           ;ssd.c: 78:             PORTD = valor[v1];
  2380  000F3A  0E01               	movlw	low _valor
  2381  000F3C  2440               	addwf	_v1^0,w,c
  2382  000F3E  6EF6               	movwf	tblptrl,c
  2383  000F40  6AF7               	clrf	tblptrh,c
  2384  000F42  0E06               	movlw	high _valor
  2385  000F44  22F7               	addwfc	tblptrh,f,c
  2386  000F46                     	if	0	;There are less than 3 active tblptr bytes
  2387  000F46                     	endif
  2388  000F46  0008               	tblrd		*
  2389  000F48  CFF5 FF83          	movff	tablat,3971	;volatile
  2390  000F4C                     
  2391                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  2392  000F4C  0E00               	movlw	0
  2393  000F4E  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2394  000F50  0E03               	movlw	3
  2395  000F52  6E1F               	movwf	digitalWrite@pin^0,c
  2396  000F54  0E00               	movlw	0
  2397  000F56  6E22               	movwf	(digitalWrite@value+1)^0,c
  2398  000F58  0E01               	movlw	1
  2399  000F5A  6E21               	movwf	digitalWrite@value^0,c
  2400  000F5C  EC4F  F004         	call	_digitalWrite	;wreg free
  2401  000F60                     
  2402                           ;ssd.c: 80:             display = 2;
  2403  000F60  0E02               	movlw	2
  2404  000F62  6E42               	movwf	_display^0,c
  2405                           
  2406                           ;ssd.c: 81:             break;
  2407  000F64  EFFF  F007         	goto	l311
  2408  000F68                     l1963:
  2409                           
  2410                           ;ssd.c: 84:             PORTD = valor[v2];
  2411  000F68  0E01               	movlw	low _valor
  2412  000F6A  243F               	addwf	_v2^0,w,c
  2413  000F6C  6EF6               	movwf	tblptrl,c
  2414  000F6E  6AF7               	clrf	tblptrh,c
  2415  000F70  0E06               	movlw	high _valor
  2416  000F72  22F7               	addwfc	tblptrh,f,c
  2417  000F74                     	if	0	;There are less than 3 active tblptr bytes
  2418  000F74                     	endif
  2419  000F74  0008               	tblrd		*
  2420  000F76  CFF5 FF83          	movff	tablat,3971	;volatile
  2421  000F7A                     
  2422                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  2423  000F7A  0E00               	movlw	0
  2424  000F7C  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2425  000F7E  0E04               	movlw	4
  2426  000F80  6E1F               	movwf	digitalWrite@pin^0,c
  2427  000F82  0E00               	movlw	0
  2428  000F84  6E22               	movwf	(digitalWrite@value+1)^0,c
  2429  000F86  0E01               	movlw	1
  2430  000F88  6E21               	movwf	digitalWrite@value^0,c
  2431  000F8A  EC4F  F004         	call	_digitalWrite	;wreg free
  2432  000F8E                     
  2433                           ;ssd.c: 86:             display = 3;
  2434  000F8E  0E03               	movlw	3
  2435  000F90  6E42               	movwf	_display^0,c
  2436                           
  2437                           ;ssd.c: 87:             break;
  2438  000F92  EFFF  F007         	goto	l311
  2439  000F96                     l1969:
  2440                           
  2441                           ;ssd.c: 90:             PORTD = valor[v3];
  2442  000F96  0E01               	movlw	low _valor
  2443  000F98  243E               	addwf	_v3^0,w,c
  2444  000F9A  6EF6               	movwf	tblptrl,c
  2445  000F9C  6AF7               	clrf	tblptrh,c
  2446  000F9E  0E06               	movlw	high _valor
  2447  000FA0  22F7               	addwfc	tblptrh,f,c
  2448  000FA2                     	if	0	;There are less than 3 active tblptr bytes
  2449  000FA2                     	endif
  2450  000FA2  0008               	tblrd		*
  2451  000FA4  CFF5 FF83          	movff	tablat,3971	;volatile
  2452  000FA8                     
  2453                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  2454  000FA8  0E00               	movlw	0
  2455  000FAA  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2456  000FAC  0E05               	movlw	5
  2457  000FAE  6E1F               	movwf	digitalWrite@pin^0,c
  2458  000FB0  0E00               	movlw	0
  2459  000FB2  6E22               	movwf	(digitalWrite@value+1)^0,c
  2460  000FB4  0E01               	movlw	1
  2461  000FB6  6E21               	movwf	digitalWrite@value^0,c
  2462  000FB8  EC4F  F004         	call	_digitalWrite	;wreg free
  2463  000FBC                     l1973:
  2464                           
  2465                           ;ssd.c: 92:             display = 0;
  2466  000FBC  0E00               	movlw	0
  2467  000FBE  6E42               	movwf	_display^0,c
  2468                           
  2469                           ;ssd.c: 93:             break;
  2470  000FC0  EFFF  F007         	goto	l311
  2471  000FC4                     l1979:
  2472  000FC4  5042               	movf	_display^0,w,c
  2473  000FC6  6E25               	movwf	??_ssdUpdate^0,c
  2474  000FC8  6A26               	clrf	(??_ssdUpdate+1)^0,c
  2475                           
  2476                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2477                           ; Switch size 1, requested type "simple"
  2478                           ; Number of cases is 1, Range of values is 0 to 0
  2479                           ; switch strategies available:
  2480                           ; Name         Instructions Cycles
  2481                           ; simple_byte            4     3 (average)
  2482                           ;	Chosen strategy is simple_byte
  2483  000FCA  5026               	movf	(??_ssdUpdate+1)^0,w,c
  2484  000FCC  0A00               	xorlw	0	; case 0
  2485  000FCE  B4D8               	btfsc	status,2,c
  2486  000FD0  EFEC  F007         	goto	l2335
  2487  000FD4  EFDE  F007         	goto	l1973
  2488  000FD8                     l2335:
  2489                           
  2490                           ; Switch size 1, requested type "simple"
  2491                           ; Number of cases is 4, Range of values is 0 to 3
  2492                           ; switch strategies available:
  2493                           ; Name         Instructions Cycles
  2494                           ; simple_byte           13     7 (average)
  2495                           ;	Chosen strategy is simple_byte
  2496  000FD8  5025               	movf	??_ssdUpdate^0,w,c
  2497  000FDA  0A00               	xorlw	0	; case 0
  2498  000FDC  B4D8               	btfsc	status,2,c
  2499  000FDE  EF86  F007         	goto	l1951
  2500  000FE2  0A01               	xorlw	1	; case 1
  2501  000FE4  B4D8               	btfsc	status,2,c
  2502  000FE6  EF9D  F007         	goto	l1957
  2503  000FEA  0A03               	xorlw	3	; case 2
  2504  000FEC  B4D8               	btfsc	status,2,c
  2505  000FEE  EFB4  F007         	goto	l1963
  2506  000FF2  0A01               	xorlw	1	; case 3
  2507  000FF4  B4D8               	btfsc	status,2,c
  2508  000FF6  EFCB  F007         	goto	l1969
  2509  000FFA  EFDE  F007         	goto	l1973
  2510  000FFE                     l311:
  2511  000FFE  0012               	return		;funcret
  2512  001000                     __end_of_ssdUpdate:
  2513                           	callstack 0
  2514                           
  2515 ;; *************** function _ssdDigit *****************
  2516 ;; Defined at:
  2517 ;;		line 38 in file "ssd.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  val             1    wreg     unsigned char 
  2520 ;;  pos             1    0[COMRAM] unsigned char 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  val             1    1[COMRAM] unsigned char 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2532 ;;      Params:         1       0       0       0       0       0       0
  2533 ;;      Locals:         1       0       0       0       0       0       0
  2534 ;;      Temps:          0       0       0       0       0       0       0
  2535 ;;      Totals:         2       0       0       0       0       0       0
  2536 ;;Total ram usage:        2 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_chooseSong
  2542 ;;		_playSong
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           	psect	text11
  2547  001716                     __ptext11:
  2548                           	callstack 0
  2549  001716                     _ssdDigit:
  2550                           	callstack 29
  2551                           
  2552                           ;incstack = 0
  2553                           ;ssdDigit@val stored from wreg
  2554  001716  6E20               	movwf	ssdDigit@val^0,c
  2555  001718                     
  2556                           ;ssd.c: 39:     if (pos == 0) {
  2557  001718  501F               	movf	ssdDigit@pos^0,w,c
  2558  00171A  A4D8               	btfss	status,2,c
  2559  00171C  EF92  F00B         	goto	u1601
  2560  001720  EF94  F00B         	goto	u1600
  2561  001724                     u1601:
  2562  001724  EF96  F00B         	goto	l1989
  2563  001728                     u1600:
  2564  001728                     
  2565                           ;ssd.c: 40:         v0 = val;
  2566  001728  C020  F041         	movff	ssdDigit@val,_v0
  2567  00172C                     l1989:
  2568                           
  2569                           ;ssd.c: 42:     if (pos == 1) {
  2570  00172C  041F               	decf	ssdDigit@pos^0,w,c
  2571  00172E  A4D8               	btfss	status,2,c
  2572  001730  EF9C  F00B         	goto	u1611
  2573  001734  EF9E  F00B         	goto	u1610
  2574  001738                     u1611:
  2575  001738  EFA0  F00B         	goto	l1993
  2576  00173C                     u1610:
  2577  00173C                     
  2578                           ;ssd.c: 43:         v1 = val;
  2579  00173C  C020  F040         	movff	ssdDigit@val,_v1
  2580  001740                     l1993:
  2581                           
  2582                           ;ssd.c: 45:     if (pos == 2) {
  2583  001740  0E02               	movlw	2
  2584  001742  181F               	xorwf	ssdDigit@pos^0,w,c
  2585  001744  A4D8               	btfss	status,2,c
  2586  001746  EFA7  F00B         	goto	u1621
  2587  00174A  EFA9  F00B         	goto	u1620
  2588  00174E                     u1621:
  2589  00174E  EFAB  F00B         	goto	l1997
  2590  001752                     u1620:
  2591  001752                     
  2592                           ;ssd.c: 46:         v2 = val;
  2593  001752  C020  F03F         	movff	ssdDigit@val,_v2
  2594  001756                     l1997:
  2595                           
  2596                           ;ssd.c: 48:     if (pos == 3) {
  2597  001756  0E03               	movlw	3
  2598  001758  181F               	xorwf	ssdDigit@pos^0,w,c
  2599  00175A  A4D8               	btfss	status,2,c
  2600  00175C  EFB2  F00B         	goto	u1631
  2601  001760  EFB4  F00B         	goto	u1630
  2602  001764                     u1631:
  2603  001764  EFB6  F00B         	goto	l301
  2604  001768                     u1630:
  2605  001768                     
  2606                           ;ssd.c: 49:         v3 = val;
  2607  001768  C020  F03E         	movff	ssdDigit@val,_v3
  2608  00176C                     l301:
  2609  00176C  0012               	return		;funcret
  2610  00176E                     __end_of_ssdDigit:
  2611                           	callstack 0
  2612                           
  2613 ;; *************** function _lcdStr *****************
  2614 ;; Defined at:
  2615 ;;		line 128 in file "lcd.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;  str             2    8[COMRAM] PTR const unsigned char 
  2618 ;;		 -> STR_6(16), STR_5(17), musicas.nome(17), musicas(190), 
  2619 ;;		 -> STR_4(17), STR_3(17), STR_2(7), STR_1(4), 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;  i               1   12[COMRAM] unsigned char 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2631 ;;      Params:         2       0       0       0       0       0       0
  2632 ;;      Locals:         1       0       0       0       0       0       0
  2633 ;;      Temps:          2       0       0       0       0       0       0
  2634 ;;      Totals:         5       0       0       0       0       0       0
  2635 ;;Total ram usage:        5 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    2
  2638 ;; This function calls:
  2639 ;;		_lcdData
  2640 ;; This function is called by:
  2641 ;;		_main
  2642 ;;		_chooseSong
  2643 ;;		_playSong
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           	psect	text12
  2648  00157E                     __ptext12:
  2649                           	callstack 0
  2650  00157E                     _lcdStr:
  2651                           	callstack 28
  2652  00157E                     
  2653                           ;lcd.c: 129:     unsigned char i = 0;
  2654  00157E  0E00               	movlw	0
  2655  001580  6E2B               	movwf	lcdStr@i^0,c
  2656                           
  2657                           ;lcd.c: 131:     while (str[i] != 0) {
  2658  001582  EFDC  F00A         	goto	l1883
  2659  001586                     l1879:
  2660                           
  2661                           ;lcd.c: 132:         lcdData(str[i]);
  2662  001586  502B               	movf	lcdStr@i^0,w,c
  2663  001588  2427               	addwf	lcdStr@str^0,w,c
  2664  00158A  6E29               	movwf	??_lcdStr^0,c
  2665  00158C  0E00               	movlw	0
  2666  00158E  2028               	addwfc	(lcdStr@str+1)^0,w,c
  2667  001590  6E2A               	movwf	(??_lcdStr+1)^0,c
  2668  001592  C029  FFF6         	movff	??_lcdStr,tblptrl
  2669  001596  C02A  FFF7         	movff	??_lcdStr+1,tblptrh
  2670  00159A  6AF8               	clrf	tblptru,c
  2671  00159C  0E05               	movlw	(high __ramtop+-1)
  2672  00159E  64F7               	cpfsgt	tblptrh,c
  2673  0015A0  D003               	bra	u1467
  2674  0015A2  0008               	tblrd		*
  2675  0015A4  50F5               	movf	tablat,w,c
  2676  0015A6  D005               	bra	u1460
  2677  0015A8                     u1467:
  2678  0015A8  CFF6 FFE9          	movff	tblptrl,fsr0l
  2679  0015AC  CFF7 FFEA          	movff	tblptrh,fsr0h
  2680  0015B0  50EF               	movf	indf0,w,c
  2681  0015B2                     u1460:
  2682  0015B2  ECE2  F00B         	call	_lcdData
  2683  0015B6                     
  2684                           ;lcd.c: 133:         i++;
  2685  0015B6  2A2B               	incf	lcdStr@i^0,f,c
  2686  0015B8                     l1883:
  2687                           
  2688                           ;lcd.c: 131:     while (str[i] != 0) {
  2689  0015B8  502B               	movf	lcdStr@i^0,w,c
  2690  0015BA  2427               	addwf	lcdStr@str^0,w,c
  2691  0015BC  6E29               	movwf	??_lcdStr^0,c
  2692  0015BE  0E00               	movlw	0
  2693  0015C0  2028               	addwfc	(lcdStr@str+1)^0,w,c
  2694  0015C2  6E2A               	movwf	(??_lcdStr+1)^0,c
  2695  0015C4  C029  FFF6         	movff	??_lcdStr,tblptrl
  2696  0015C8  C02A  FFF7         	movff	??_lcdStr+1,tblptrh
  2697  0015CC  6AF8               	clrf	tblptru,c
  2698  0015CE  0E05               	movlw	(high __ramtop+-1)
  2699  0015D0  64F7               	cpfsgt	tblptrh,c
  2700  0015D2  D003               	bra	u1477
  2701  0015D4  0008               	tblrd		*
  2702  0015D6  50F5               	movf	tablat,w,c
  2703  0015D8  D005               	bra	u1470
  2704  0015DA                     u1477:
  2705  0015DA  CFF6 FFE9          	movff	tblptrl,fsr0l
  2706  0015DE  CFF7 FFEA          	movff	tblptrh,fsr0h
  2707  0015E2  50EF               	movf	indf0,w,c
  2708  0015E4                     u1470:
  2709  0015E4  0900               	iorlw	0
  2710  0015E6  A4D8               	btfss	status,2,c
  2711  0015E8  EFF8  F00A         	goto	u1481
  2712  0015EC  EFFA  F00A         	goto	u1480
  2713  0015F0                     u1481:
  2714  0015F0  EFC3  F00A         	goto	l1879
  2715  0015F4                     u1480:
  2716  0015F4  0012               	return		;funcret
  2717  0015F6                     __end_of_lcdStr:
  2718                           	callstack 0
  2719                           
  2720 ;; *************** function _lcdData *****************
  2721 ;; Defined at:
  2722 ;;		line 68 in file "lcd.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  valor           1    wreg     unsigned char 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  valor           1    6[COMRAM] unsigned char 
  2727 ;;  old_D           1    7[COMRAM] unsigned char 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      void 
  2730 ;; Registers used:
  2731 ;;		wreg, status,2, status,0, cstack
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2737 ;;      Params:         0       0       0       0       0       0       0
  2738 ;;      Locals:         2       0       0       0       0       0       0
  2739 ;;      Temps:          0       0       0       0       0       0       0
  2740 ;;      Totals:         2       0       0       0       0       0       0
  2741 ;;Total ram usage:        2 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    1
  2744 ;; This function calls:
  2745 ;;		_Delay40us
  2746 ;;		_digitalWrite
  2747 ;; This function is called by:
  2748 ;;		_lcdStr
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text13
  2753  0017C4                     __ptext13:
  2754                           	callstack 0
  2755  0017C4                     _lcdData:
  2756                           	callstack 28
  2757                           
  2758                           ;incstack = 0
  2759                           ;lcdData@valor stored from wreg
  2760  0017C4  6E25               	movwf	lcdData@valor^0,c
  2761  0017C6                     
  2762                           ;lcd.c: 70:     unsigned char old_D;;lcd.c: 71:     old_D = PORTD;
  2763  0017C6  CF83 F026          	movff	3971,lcdData@old_D	;volatile
  2764  0017CA                     
  2765                           ;lcd.c: 73:     TRISD = 0x00;
  2766  0017CA  0E00               	movlw	0
  2767  0017CC  6E95               	movwf	149,c	;volatile
  2768  0017CE                     
  2769                           ;lcd.c: 74:     digitalWrite(PIN_E2, 1);
  2770  0017CE  0E00               	movlw	0
  2771  0017D0  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2772  0017D2  0E22               	movlw	34
  2773  0017D4  6E1F               	movwf	digitalWrite@pin^0,c
  2774  0017D6  0E00               	movlw	0
  2775  0017D8  6E22               	movwf	(digitalWrite@value+1)^0,c
  2776  0017DA  0E01               	movlw	1
  2777  0017DC  6E21               	movwf	digitalWrite@value^0,c
  2778  0017DE  EC4F  F004         	call	_digitalWrite	;wreg free
  2779  0017E2                     
  2780                           ;lcd.c: 76:     PORTD = valor;
  2781  0017E2  C025  FF83         	movff	lcdData@valor,3971	;volatile
  2782  0017E6                     
  2783                           ;lcd.c: 78:     digitalWrite(PIN_E1, 1);
  2784  0017E6  0E00               	movlw	0
  2785  0017E8  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2786  0017EA  0E21               	movlw	33
  2787  0017EC  6E1F               	movwf	digitalWrite@pin^0,c
  2788  0017EE  0E00               	movlw	0
  2789  0017F0  6E22               	movwf	(digitalWrite@value+1)^0,c
  2790  0017F2  0E01               	movlw	1
  2791  0017F4  6E21               	movwf	digitalWrite@value^0,c
  2792  0017F6  EC4F  F004         	call	_digitalWrite	;wreg free
  2793  0017FA                     
  2794                           ;lcd.c: 79:     digitalWrite(PIN_E1, 0);
  2795  0017FA  0E00               	movlw	0
  2796  0017FC  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2797  0017FE  0E21               	movlw	33
  2798  001800  6E1F               	movwf	digitalWrite@pin^0,c
  2799  001802  0E00               	movlw	0
  2800  001804  6E22               	movwf	(digitalWrite@value+1)^0,c
  2801  001806  0E00               	movlw	0
  2802  001808  6E21               	movwf	digitalWrite@value^0,c
  2803  00180A  EC4F  F004         	call	_digitalWrite	;wreg free
  2804  00180E                     
  2805                           ;lcd.c: 81:     PORTD = old_D;
  2806  00180E  C026  FF83         	movff	lcdData@old_D,3971	;volatile
  2807  001812                     
  2808                           ;lcd.c: 83:     Delay40us();
  2809  001812  EC5B  F00C         	call	_Delay40us	;wreg free
  2810  001816  0012               	return		;funcret
  2811  001818                     __end_of_lcdData:
  2812                           	callstack 0
  2813                           
  2814 ;; *************** function _lcdPosition *****************
  2815 ;; Defined at:
  2816 ;;		line 115 in file "lcd.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  linha           1    wreg     unsigned char 
  2819 ;;  coluna          1    8[COMRAM] unsigned char 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  linha           1    9[COMRAM] unsigned char 
  2822 ;;  comando         1   10[COMRAM] unsigned char 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      void 
  2825 ;; Registers used:
  2826 ;;		wreg, status,2, status,0, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2832 ;;      Params:         1       0       0       0       0       0       0
  2833 ;;      Locals:         2       0       0       0       0       0       0
  2834 ;;      Temps:          0       0       0       0       0       0       0
  2835 ;;      Totals:         3       0       0       0       0       0       0
  2836 ;;Total ram usage:        3 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    3
  2839 ;; This function calls:
  2840 ;;		_lcdCommand
  2841 ;; This function is called by:
  2842 ;;		_main
  2843 ;;		_chooseSong
  2844 ;;		_playSong
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           	psect	text14
  2849  0016BC                     __ptext14:
  2850                           	callstack 0
  2851  0016BC                     _lcdPosition:
  2852                           	callstack 27
  2853                           
  2854                           ;incstack = 0
  2855                           ;lcdPosition@linha stored from wreg
  2856  0016BC  6E28               	movwf	lcdPosition@linha^0,c
  2857  0016BE                     
  2858                           ;lcd.c: 116:     char comando = 0;
  2859  0016BE  0E00               	movlw	0
  2860  0016C0  6E29               	movwf	lcdPosition@comando^0,c
  2861  0016C2                     
  2862                           ;lcd.c: 117:     if (linha == 0 && comando != 0x01) comando = 0x80 + coluna;
  2863  0016C2  5028               	movf	lcdPosition@linha^0,w,c
  2864  0016C4  A4D8               	btfss	status,2,c
  2865  0016C6  EF67  F00B         	goto	u1421
  2866  0016CA  EF69  F00B         	goto	u1420
  2867  0016CE                     u1421:
  2868  0016CE  EF6C  F00B         	goto	l167
  2869  0016D2                     u1420:
  2870  0016D2  5027               	movf	lcdPosition@coluna^0,w,c
  2871  0016D4  0F80               	addlw	128
  2872  0016D6  6E29               	movwf	lcdPosition@comando^0,c
  2873  0016D8                     l167:
  2874                           
  2875                           ;lcd.c: 118:     if (linha == 1 && comando != 0x01) comando = 0xC0 + coluna;
  2876  0016D8  0428               	decf	lcdPosition@linha^0,w,c
  2877  0016DA  A4D8               	btfss	status,2,c
  2878  0016DC  EF72  F00B         	goto	u1431
  2879  0016E0  EF74  F00B         	goto	u1430
  2880  0016E4                     u1431:
  2881  0016E4  EF7F  F00B         	goto	l168
  2882  0016E8                     u1430:
  2883  0016E8  0429               	decf	lcdPosition@comando^0,w,c
  2884  0016EA  B4D8               	btfsc	status,2,c
  2885  0016EC  EF7A  F00B         	goto	u1441
  2886  0016F0  EF7C  F00B         	goto	u1440
  2887  0016F4                     u1441:
  2888  0016F4  EF7F  F00B         	goto	l168
  2889  0016F8                     u1440:
  2890  0016F8  5027               	movf	lcdPosition@coluna^0,w,c
  2891  0016FA  0FC0               	addlw	192
  2892  0016FC  6E29               	movwf	lcdPosition@comando^0,c
  2893  0016FE                     l168:
  2894                           
  2895                           ;lcd.c: 119:     if (coluna > 15) {
  2896  0016FE  0E0F               	movlw	15
  2897  001700  6427               	cpfsgt	lcdPosition@coluna^0,c
  2898  001702  EF85  F00B         	goto	u1451
  2899  001706  EF87  F00B         	goto	u1450
  2900  00170A                     u1451:
  2901  00170A  EF87  F00B         	goto	l1875
  2902  00170E                     u1450:
  2903  00170E                     l1875:
  2904                           
  2905                           ;lcd.c: 125:     lcdCommand(comando);
  2906  00170E  5029               	movf	lcdPosition@comando^0,w,c
  2907  001710  EC44  F00A         	call	_lcdCommand
  2908  001714  0012               	return		;funcret
  2909  001716                     __end_of_lcdPosition:
  2910                           	callstack 0
  2911                           
  2912 ;; *************** function _lcdCommand *****************
  2913 ;; Defined at:
  2914 ;;		line 43 in file "lcd.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  cmd             1    wreg     unsigned char 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  cmd             1    7[COMRAM] unsigned char 
  2919 ;;  old_D           1    6[COMRAM] unsigned char 
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  1    wreg      void 
  2922 ;; Registers used:
  2923 ;;		wreg, status,2, status,0, cstack
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2929 ;;      Params:         0       0       0       0       0       0       0
  2930 ;;      Locals:         2       0       0       0       0       0       0
  2931 ;;      Temps:          0       0       0       0       0       0       0
  2932 ;;      Totals:         2       0       0       0       0       0       0
  2933 ;;Total ram usage:        2 bytes
  2934 ;; Hardware stack levels used:    1
  2935 ;; Hardware stack levels required when called:    2
  2936 ;; This function calls:
  2937 ;;		_Delay2ms
  2938 ;;		_Delay40us
  2939 ;;		_digitalWrite
  2940 ;; This function is called by:
  2941 ;;		_main
  2942 ;;		_lcdInit
  2943 ;;		_lcdPosition
  2944 ;;		_chooseSong
  2945 ;;		_playSong
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text15
  2950  001488                     __ptext15:
  2951                           	callstack 0
  2952  001488                     _lcdCommand:
  2953                           	callstack 27
  2954                           
  2955                           ;incstack = 0
  2956                           ;lcdCommand@cmd stored from wreg
  2957  001488  6E26               	movwf	lcdCommand@cmd^0,c
  2958  00148A                     
  2959                           ;lcd.c: 44:     unsigned char old_D;;lcd.c: 45:     old_D = PORTD;
  2960  00148A  CF83 F025          	movff	3971,lcdCommand@old_D	;volatile
  2961  00148E                     
  2962                           ;lcd.c: 48:     TRISD = 0x00;
  2963  00148E  0E00               	movlw	0
  2964  001490  6E95               	movwf	149,c	;volatile
  2965  001492                     
  2966                           ;lcd.c: 50:     digitalWrite(PIN_E2, 0);
  2967  001492  0E00               	movlw	0
  2968  001494  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2969  001496  0E22               	movlw	34
  2970  001498  6E1F               	movwf	digitalWrite@pin^0,c
  2971  00149A  0E00               	movlw	0
  2972  00149C  6E22               	movwf	(digitalWrite@value+1)^0,c
  2973  00149E  0E00               	movlw	0
  2974  0014A0  6E21               	movwf	digitalWrite@value^0,c
  2975  0014A2  EC4F  F004         	call	_digitalWrite	;wreg free
  2976  0014A6                     
  2977                           ;lcd.c: 51:     PORTD = cmd;
  2978  0014A6  C026  FF83         	movff	lcdCommand@cmd,3971	;volatile
  2979  0014AA                     
  2980                           ;lcd.c: 53:     digitalWrite(PIN_E1, 1);
  2981  0014AA  0E00               	movlw	0
  2982  0014AC  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2983  0014AE  0E21               	movlw	33
  2984  0014B0  6E1F               	movwf	digitalWrite@pin^0,c
  2985  0014B2  0E00               	movlw	0
  2986  0014B4  6E22               	movwf	(digitalWrite@value+1)^0,c
  2987  0014B6  0E01               	movlw	1
  2988  0014B8  6E21               	movwf	digitalWrite@value^0,c
  2989  0014BA  EC4F  F004         	call	_digitalWrite	;wreg free
  2990  0014BE                     
  2991                           ;lcd.c: 54:     digitalWrite(PIN_E1, 0);
  2992  0014BE  0E00               	movlw	0
  2993  0014C0  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2994  0014C2  0E21               	movlw	33
  2995  0014C4  6E1F               	movwf	digitalWrite@pin^0,c
  2996  0014C6  0E00               	movlw	0
  2997  0014C8  6E22               	movwf	(digitalWrite@value+1)^0,c
  2998  0014CA  0E00               	movlw	0
  2999  0014CC  6E21               	movwf	digitalWrite@value^0,c
  3000  0014CE  EC4F  F004         	call	_digitalWrite	;wreg free
  3001  0014D2                     
  3002                           ;lcd.c: 57:     PORTD = old_D;
  3003  0014D2  C025  FF83         	movff	lcdCommand@old_D,3971	;volatile
  3004  0014D6                     
  3005                           ;lcd.c: 59:     if ((cmd == 0x02) || (cmd == 0x01)) {
  3006  0014D6  0E02               	movlw	2
  3007  0014D8  1826               	xorwf	lcdCommand@cmd^0,w,c
  3008  0014DA  B4D8               	btfsc	status,2,c
  3009  0014DC  EF72  F00A         	goto	u1371
  3010  0014E0  EF74  F00A         	goto	u1370
  3011  0014E4                     u1371:
  3012  0014E4  EF7C  F00A         	goto	l1813
  3013  0014E8                     u1370:
  3014  0014E8  0426               	decf	lcdCommand@cmd^0,w,c
  3015  0014EA  A4D8               	btfss	status,2,c
  3016  0014EC  EF7A  F00A         	goto	u1381
  3017  0014F0  EF7C  F00A         	goto	u1380
  3018  0014F4                     u1381:
  3019  0014F4  EF80  F00A         	goto	l1815
  3020  0014F8                     u1380:
  3021  0014F8                     l1813:
  3022                           
  3023                           ;lcd.c: 60:         Delay2ms();
  3024  0014F8  EC4D  F00C         	call	_Delay2ms	;wreg free
  3025                           
  3026                           ;lcd.c: 61:     } else {
  3027  0014FC  EF82  F00A         	goto	l158
  3028  001500                     l1815:
  3029                           
  3030                           ;lcd.c: 62:         Delay40us();
  3031  001500  EC5B  F00C         	call	_Delay40us	;wreg free
  3032  001504                     l158:
  3033  001504  0012               	return		;funcret
  3034  001506                     __end_of_lcdCommand:
  3035                           	callstack 0
  3036                           
  3037 ;; *************** function _digitalWrite *****************
  3038 ;; Defined at:
  3039 ;;		line 14 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  pin             2    0[COMRAM] int 
  3042 ;;  value           2    2[COMRAM] int 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;		None
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      void 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3054 ;;      Params:         4       0       0       0       0       0       0
  3055 ;;      Locals:         0       0       0       0       0       0       0
  3056 ;;      Temps:          2       0       0       0       0       0       0
  3057 ;;      Totals:         6       0       0       0       0       0       0
  3058 ;;Total ram usage:        6 bytes
  3059 ;; Hardware stack levels used:    1
  3060 ;; This function calls:
  3061 ;;		Nothing
  3062 ;; This function is called by:
  3063 ;;		_lcdCommand
  3064 ;;		_lcdData
  3065 ;;		_ssdUpdate
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text16
  3070  00089E                     __ptext16:
  3071                           	callstack 0
  3072  00089E                     _digitalWrite:
  3073                           	callstack 28
  3074  00089E                     
  3075                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 16:     if(pin <8){
  3076  00089E  BE20               	btfsc	(digitalWrite@pin+1)^0,7,c
  3077  0008A0  EF5D  F004         	goto	u1160
  3078  0008A4  5020               	movf	(digitalWrite@pin+1)^0,w,c
  3079  0008A6  E107               	bnz	u1161
  3080  0008A8  0E08               	movlw	8
  3081  0008AA  5C1F               	subwf	digitalWrite@pin^0,w,c
  3082  0008AC  B0D8               	btfsc	status,0,c
  3083  0008AE  EF5B  F004         	goto	u1161
  3084  0008B2  EF5D  F004         	goto	u1160
  3085  0008B6                     u1161:
  3086  0008B6  EF87  F004         	goto	l1751
  3087  0008BA                     u1160:
  3088  0008BA                     
  3089                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 17:         if (value){ ((PORTA) |=
      +                           (1<<(pin)));}
  3090  0008BA  5021               	movf	digitalWrite@value^0,w,c
  3091  0008BC  1022               	iorwf	(digitalWrite@value+1)^0,w,c
  3092  0008BE  B4D8               	btfsc	status,2,c
  3093  0008C0  EF64  F004         	goto	u1171
  3094  0008C4  EF66  F004         	goto	u1170
  3095  0008C8                     u1171:
  3096  0008C8  EF76  F004         	goto	l1749
  3097  0008CC                     u1170:
  3098  0008CC  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  3099  0008D0  0E01               	movlw	1
  3100  0008D2  6E24               	movwf	(??_digitalWrite+1)^0,c
  3101  0008D4  2A23               	incf	??_digitalWrite^0,f,c
  3102  0008D6  EF6F  F004         	goto	u1184
  3103  0008DA                     u1185:
  3104  0008DA  90D8               	bcf	status,0,c
  3105  0008DC  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  3106  0008DE                     u1184:
  3107  0008DE  2E23               	decfsz	??_digitalWrite^0,f,c
  3108  0008E0  EF6D  F004         	goto	u1185
  3109  0008E4  5024               	movf	(??_digitalWrite+1)^0,w,c
  3110  0008E6  1280               	iorwf	128,f,c	;volatile
  3111  0008E8  EF75  F005         	goto	l42
  3112  0008EC                     l1749:
  3113  0008EC  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  3114  0008F0  0E01               	movlw	1
  3115  0008F2  6E24               	movwf	(??_digitalWrite+1)^0,c
  3116  0008F4  2A23               	incf	??_digitalWrite^0,f,c
  3117  0008F6  EF7F  F004         	goto	u1194
  3118  0008FA                     u1195:
  3119  0008FA  90D8               	bcf	status,0,c
  3120  0008FC  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  3121  0008FE                     u1194:
  3122  0008FE  2E23               	decfsz	??_digitalWrite^0,f,c
  3123  000900  EF7D  F004         	goto	u1195
  3124  000904  5024               	movf	(??_digitalWrite+1)^0,w,c
  3125  000906  0AFF               	xorlw	255
  3126  000908  1680               	andwf	128,f,c	;volatile
  3127  00090A  EF75  F005         	goto	l42
  3128  00090E                     l1751:
  3129  00090E  BE20               	btfsc	(digitalWrite@pin+1)^0,7,c
  3130  000910  EF95  F004         	goto	u1200
  3131  000914  5020               	movf	(digitalWrite@pin+1)^0,w,c
  3132  000916  E107               	bnz	u1201
  3133  000918  0E10               	movlw	16
  3134  00091A  5C1F               	subwf	digitalWrite@pin^0,w,c
  3135  00091C  B0D8               	btfsc	status,0,c
  3136  00091E  EF93  F004         	goto	u1201
  3137  000922  EF95  F004         	goto	u1200
  3138  000926                     u1201:
  3139  000926  EFC3  F004         	goto	l1759
  3140  00092A                     u1200:
  3141  00092A                     
  3142                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 20:         pin -=8;
  3143  00092A  0EF8               	movlw	248
  3144  00092C  261F               	addwf	digitalWrite@pin^0,f,c
  3145  00092E  0EFF               	movlw	255
  3146  000930  2220               	addwfc	(digitalWrite@pin+1)^0,f,c
  3147                           
  3148                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 21:         if (value){ ((PORTB) |=
      +                           (1<<(pin)));}
  3149  000932  5021               	movf	digitalWrite@value^0,w,c
  3150  000934  1022               	iorwf	(digitalWrite@value+1)^0,w,c
  3151  000936  B4D8               	btfsc	status,2,c
  3152  000938  EFA0  F004         	goto	u1211
  3153  00093C  EFA2  F004         	goto	u1210
  3154  000940                     u1211:
  3155  000940  EFB2  F004         	goto	l1757
  3156  000944                     u1210:
  3157  000944  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  3158  000948  0E01               	movlw	1
  3159  00094A  6E24               	movwf	(??_digitalWrite+1)^0,c
  3160  00094C  2A23               	incf	??_digitalWrite^0,f,c
  3161  00094E  EFAB  F004         	goto	u1224
  3162  000952                     u1225:
  3163  000952  90D8               	bcf	status,0,c
  3164  000954  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  3165  000956                     u1224:
  3166  000956  2E23               	decfsz	??_digitalWrite^0,f,c
  3167  000958  EFA9  F004         	goto	u1225
  3168  00095C  5024               	movf	(??_digitalWrite+1)^0,w,c
  3169  00095E  1281               	iorwf	129,f,c	;volatile
  3170  000960  EF75  F005         	goto	l42
  3171  000964                     l1757:
  3172  000964  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  3173  000968  0E01               	movlw	1
  3174  00096A  6E24               	movwf	(??_digitalWrite+1)^0,c
  3175  00096C  2A23               	incf	??_digitalWrite^0,f,c
  3176  00096E  EFBB  F004         	goto	u1234
  3177  000972                     u1235:
  3178  000972  90D8               	bcf	status,0,c
  3179  000974  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  3180  000976                     u1234:
  3181  000976  2E23               	decfsz	??_digitalWrite^0,f,c
  3182  000978  EFB9  F004         	goto	u1235
  3183  00097C  5024               	movf	(??_digitalWrite+1)^0,w,c
  3184  00097E  0AFF               	xorlw	255
  3185  000980  1681               	andwf	129,f,c	;volatile
  3186  000982  EF75  F005         	goto	l42
  3187  000986                     l1759:
  3188  000986  BE20               	btfsc	(digitalWrite@pin+1)^0,7,c
  3189  000988  EFD1  F004         	goto	u1240
  3190  00098C  5020               	movf	(digitalWrite@pin+1)^0,w,c
  3191  00098E  E107               	bnz	u1241
  3192  000990  0E18               	movlw	24
  3193  000992  5C1F               	subwf	digitalWrite@pin^0,w,c
  3194  000994  B0D8               	btfsc	status,0,c
  3195  000996  EFCF  F004         	goto	u1241
  3196  00099A  EFD1  F004         	goto	u1240
  3197  00099E                     u1241:
  3198  00099E  EFFF  F004         	goto	l1767
  3199  0009A2                     u1240:
  3200  0009A2                     
  3201                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 24:         pin -=16;
  3202  0009A2  0EF0               	movlw	240
  3203  0009A4  261F               	addwf	digitalWrite@pin^0,f,c
  3204  0009A6  0EFF               	movlw	255
  3205  0009A8  2220               	addwfc	(digitalWrite@pin+1)^0,f,c
  3206                           
  3207                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 25:         if (value){ ((PORTC) |=
      +                           (1<<(pin)));}
  3208  0009AA  5021               	movf	digitalWrite@value^0,w,c
  3209  0009AC  1022               	iorwf	(digitalWrite@value+1)^0,w,c
  3210  0009AE  B4D8               	btfsc	status,2,c
  3211  0009B0  EFDC  F004         	goto	u1251
  3212  0009B4  EFDE  F004         	goto	u1250
  3213  0009B8                     u1251:
  3214  0009B8  EFEE  F004         	goto	l1765
  3215  0009BC                     u1250:
  3216  0009BC  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  3217  0009C0  0E01               	movlw	1
  3218  0009C2  6E24               	movwf	(??_digitalWrite+1)^0,c
  3219  0009C4  2A23               	incf	??_digitalWrite^0,f,c
  3220  0009C6  EFE7  F004         	goto	u1264
  3221  0009CA                     u1265:
  3222  0009CA  90D8               	bcf	status,0,c
  3223  0009CC  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  3224  0009CE                     u1264:
  3225  0009CE  2E23               	decfsz	??_digitalWrite^0,f,c
  3226  0009D0  EFE5  F004         	goto	u1265
  3227  0009D4  5024               	movf	(??_digitalWrite+1)^0,w,c
  3228  0009D6  1282               	iorwf	130,f,c	;volatile
  3229  0009D8  EF75  F005         	goto	l42
  3230  0009DC                     l1765:
  3231  0009DC  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  3232  0009E0  0E01               	movlw	1
  3233  0009E2  6E24               	movwf	(??_digitalWrite+1)^0,c
  3234  0009E4  2A23               	incf	??_digitalWrite^0,f,c
  3235  0009E6  EFF7  F004         	goto	u1274
  3236  0009EA                     u1275:
  3237  0009EA  90D8               	bcf	status,0,c
  3238  0009EC  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  3239  0009EE                     u1274:
  3240  0009EE  2E23               	decfsz	??_digitalWrite^0,f,c
  3241  0009F0  EFF5  F004         	goto	u1275
  3242  0009F4  5024               	movf	(??_digitalWrite+1)^0,w,c
  3243  0009F6  0AFF               	xorlw	255
  3244  0009F8  1682               	andwf	130,f,c	;volatile
  3245  0009FA  EF75  F005         	goto	l42
  3246  0009FE                     l1767:
  3247  0009FE  BE20               	btfsc	(digitalWrite@pin+1)^0,7,c
  3248  000A00  EF0D  F005         	goto	u1280
  3249  000A04  5020               	movf	(digitalWrite@pin+1)^0,w,c
  3250  000A06  E107               	bnz	u1281
  3251  000A08  0E20               	movlw	32
  3252  000A0A  5C1F               	subwf	digitalWrite@pin^0,w,c
  3253  000A0C  B0D8               	btfsc	status,0,c
  3254  000A0E  EF0B  F005         	goto	u1281
  3255  000A12  EF0D  F005         	goto	u1280
  3256  000A16                     u1281:
  3257  000A16  EF3B  F005         	goto	l1775
  3258  000A1A                     u1280:
  3259  000A1A                     
  3260                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 28:         pin -=24;
  3261  000A1A  0EE8               	movlw	232
  3262  000A1C  261F               	addwf	digitalWrite@pin^0,f,c
  3263  000A1E  0EFF               	movlw	255
  3264  000A20  2220               	addwfc	(digitalWrite@pin+1)^0,f,c
  3265                           
  3266                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 29:         if (value){ ((PORTD) |=
      +                           (1<<(pin)));}
  3267  000A22  5021               	movf	digitalWrite@value^0,w,c
  3268  000A24  1022               	iorwf	(digitalWrite@value+1)^0,w,c
  3269  000A26  B4D8               	btfsc	status,2,c
  3270  000A28  EF18  F005         	goto	u1291
  3271  000A2C  EF1A  F005         	goto	u1290
  3272  000A30                     u1291:
  3273  000A30  EF2A  F005         	goto	l1773
  3274  000A34                     u1290:
  3275  000A34  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  3276  000A38  0E01               	movlw	1
  3277  000A3A  6E24               	movwf	(??_digitalWrite+1)^0,c
  3278  000A3C  2A23               	incf	??_digitalWrite^0,f,c
  3279  000A3E  EF23  F005         	goto	u1304
  3280  000A42                     u1305:
  3281  000A42  90D8               	bcf	status,0,c
  3282  000A44  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  3283  000A46                     u1304:
  3284  000A46  2E23               	decfsz	??_digitalWrite^0,f,c
  3285  000A48  EF21  F005         	goto	u1305
  3286  000A4C  5024               	movf	(??_digitalWrite+1)^0,w,c
  3287  000A4E  1283               	iorwf	131,f,c	;volatile
  3288  000A50  EF75  F005         	goto	l42
  3289  000A54                     l1773:
  3290  000A54  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  3291  000A58  0E01               	movlw	1
  3292  000A5A  6E24               	movwf	(??_digitalWrite+1)^0,c
  3293  000A5C  2A23               	incf	??_digitalWrite^0,f,c
  3294  000A5E  EF33  F005         	goto	u1314
  3295  000A62                     u1315:
  3296  000A62  90D8               	bcf	status,0,c
  3297  000A64  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  3298  000A66                     u1314:
  3299  000A66  2E23               	decfsz	??_digitalWrite^0,f,c
  3300  000A68  EF31  F005         	goto	u1315
  3301  000A6C  5024               	movf	(??_digitalWrite+1)^0,w,c
  3302  000A6E  0AFF               	xorlw	255
  3303  000A70  1683               	andwf	131,f,c	;volatile
  3304  000A72  EF75  F005         	goto	l42
  3305  000A76                     l1775:
  3306  000A76  BE20               	btfsc	(digitalWrite@pin+1)^0,7,c
  3307  000A78  EF49  F005         	goto	u1320
  3308  000A7C  5020               	movf	(digitalWrite@pin+1)^0,w,c
  3309  000A7E  E107               	bnz	u1321
  3310  000A80  0E28               	movlw	40
  3311  000A82  5C1F               	subwf	digitalWrite@pin^0,w,c
  3312  000A84  B0D8               	btfsc	status,0,c
  3313  000A86  EF47  F005         	goto	u1321
  3314  000A8A  EF49  F005         	goto	u1320
  3315  000A8E                     u1321:
  3316  000A8E  EF75  F005         	goto	l42
  3317  000A92                     u1320:
  3318  000A92                     
  3319                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 32:         pin -=32;
  3320  000A92  0EE0               	movlw	224
  3321  000A94  261F               	addwf	digitalWrite@pin^0,f,c
  3322  000A96  0EFF               	movlw	255
  3323  000A98  2220               	addwfc	(digitalWrite@pin+1)^0,f,c
  3324                           
  3325                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 33:         if (value){ ((PORTE) |=
      +                           (1<<(pin)));}
  3326  000A9A  5021               	movf	digitalWrite@value^0,w,c
  3327  000A9C  1022               	iorwf	(digitalWrite@value+1)^0,w,c
  3328  000A9E  B4D8               	btfsc	status,2,c
  3329  000AA0  EF54  F005         	goto	u1331
  3330  000AA4  EF56  F005         	goto	u1330
  3331  000AA8                     u1331:
  3332  000AA8  EF66  F005         	goto	l1781
  3333  000AAC                     u1330:
  3334  000AAC  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  3335  000AB0  0E01               	movlw	1
  3336  000AB2  6E24               	movwf	(??_digitalWrite+1)^0,c
  3337  000AB4  2A23               	incf	??_digitalWrite^0,f,c
  3338  000AB6  EF5F  F005         	goto	u1344
  3339  000ABA                     u1345:
  3340  000ABA  90D8               	bcf	status,0,c
  3341  000ABC  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  3342  000ABE                     u1344:
  3343  000ABE  2E23               	decfsz	??_digitalWrite^0,f,c
  3344  000AC0  EF5D  F005         	goto	u1345
  3345  000AC4  5024               	movf	(??_digitalWrite+1)^0,w,c
  3346  000AC6  1284               	iorwf	132,f,c	;volatile
  3347  000AC8  EF75  F005         	goto	l42
  3348  000ACC                     l1781:
  3349  000ACC  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  3350  000AD0  0E01               	movlw	1
  3351  000AD2  6E24               	movwf	(??_digitalWrite+1)^0,c
  3352  000AD4  2A23               	incf	??_digitalWrite^0,f,c
  3353  000AD6  EF6F  F005         	goto	u1354
  3354  000ADA                     u1355:
  3355  000ADA  90D8               	bcf	status,0,c
  3356  000ADC  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  3357  000ADE                     u1354:
  3358  000ADE  2E23               	decfsz	??_digitalWrite^0,f,c
  3359  000AE0  EF6D  F005         	goto	u1355
  3360  000AE4  5024               	movf	(??_digitalWrite+1)^0,w,c
  3361  000AE6  0AFF               	xorlw	255
  3362  000AE8  1684               	andwf	132,f,c	;volatile
  3363  000AEA                     l42:
  3364  000AEA  0012               	return		;funcret
  3365  000AEC                     __end_of_digitalWrite:
  3366                           	callstack 0
  3367                           
  3368 ;; *************** function _Delay2ms *****************
  3369 ;; Defined at:
  3370 ;;		line 36 in file "lcd.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;		None
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  i               1    1[COMRAM] unsigned char 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1    wreg      void 
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3384 ;;      Params:         0       0       0       0       0       0       0
  3385 ;;      Locals:         1       0       0       0       0       0       0
  3386 ;;      Temps:          0       0       0       0       0       0       0
  3387 ;;      Totals:         1       0       0       0       0       0       0
  3388 ;;Total ram usage:        1 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:    1
  3391 ;; This function calls:
  3392 ;;		_Delay40us
  3393 ;; This function is called by:
  3394 ;;		_lcdCommand
  3395 ;;		_lcdInit
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text17
  3400  00189A                     __ptext17:
  3401                           	callstack 0
  3402  00189A                     _Delay2ms:
  3403                           	callstack 27
  3404  00189A                     
  3405                           ;lcd.c: 37:     unsigned char i;;lcd.c: 38:     for (i = 0; i < 50; i++) {
  3406  00189A  0E00               	movlw	0
  3407  00189C  6E20               	movwf	Delay2ms@i^0,c
  3408  00189E                     l1789:
  3409                           
  3410                           ;lcd.c: 39:         Delay40us();
  3411  00189E  EC5B  F00C         	call	_Delay40us	;wreg free
  3412  0018A2                     
  3413                           ;lcd.c: 40:     }
  3414  0018A2  2A20               	incf	Delay2ms@i^0,f,c
  3415  0018A4  0E31               	movlw	49
  3416  0018A6  6420               	cpfsgt	Delay2ms@i^0,c
  3417  0018A8  EF58  F00C         	goto	u1361
  3418  0018AC  EF5A  F00C         	goto	u1360
  3419  0018B0                     u1361:
  3420  0018B0  EF4F  F00C         	goto	l1789
  3421  0018B4                     u1360:
  3422  0018B4  0012               	return		;funcret
  3423  0018B6                     __end_of_Delay2ms:
  3424                           	callstack 0
  3425                           
  3426 ;; *************** function _Delay40us *****************
  3427 ;; Defined at:
  3428 ;;		line 31 in file "lcd.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;		None
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  i               1    0[COMRAM] unsigned char 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, status,2, status,0
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3442 ;;      Params:         0       0       0       0       0       0       0
  3443 ;;      Locals:         1       0       0       0       0       0       0
  3444 ;;      Temps:          0       0       0       0       0       0       0
  3445 ;;      Totals:         1       0       0       0       0       0       0
  3446 ;;Total ram usage:        1 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_Delay2ms
  3452 ;;		_lcdCommand
  3453 ;;		_lcdData
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	text18
  3458  0018B6                     __ptext18:
  3459                           	callstack 0
  3460  0018B6                     _Delay40us:
  3461                           	callstack 28
  3462  0018B6                     
  3463                           ;lcd.c: 32:     unsigned char i;;lcd.c: 33:     for (i = 0; i < 25; i++);
  3464  0018B6  0E00               	movlw	0
  3465  0018B8  6E1F               	movwf	Delay40us@i^0,c
  3466  0018BA                     l1739:
  3467  0018BA  2A1F               	incf	Delay40us@i^0,f,c
  3468  0018BC  0E18               	movlw	24
  3469  0018BE  641F               	cpfsgt	Delay40us@i^0,c
  3470  0018C0  EF64  F00C         	goto	u1151
  3471  0018C4  EF66  F00C         	goto	u1150
  3472  0018C8                     u1151:
  3473  0018C8  EF5D  F00C         	goto	l1739
  3474  0018CC                     u1150:
  3475  0018CC  0012               	return		;funcret
  3476  0018CE                     __end_of_Delay40us:
  3477                           	callstack 0
  3478                           
  3479 ;; *************** function _kpRead *****************
  3480 ;; Defined at:
  3481 ;;		line 37 in file "keypad.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;		None
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;		None
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  2    0[COMRAM] unsigned int 
  3488 ;; Registers used:
  3489 ;;		None
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3495 ;;      Params:         2       0       0       0       0       0       0
  3496 ;;      Locals:         0       0       0       0       0       0       0
  3497 ;;      Temps:          0       0       0       0       0       0       0
  3498 ;;      Totals:         2       0       0       0       0       0       0
  3499 ;;Total ram usage:        2 bytes
  3500 ;; Hardware stack levels used:    1
  3501 ;; This function calls:
  3502 ;;		Nothing
  3503 ;; This function is called by:
  3504 ;;		_chooseSong
  3505 ;;		_playSong
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           	psect	text19
  3510  0018D8                     __ptext19:
  3511                           	callstack 0
  3512  0018D8                     _kpRead:
  3513                           	callstack 28
  3514  0018D8                     
  3515                           ;keypad.c: 38:     return valor;
  3516  0018D8  C03A  F01F         	movff	_valor@keypad$F283,?_kpRead
  3517  0018DC  C03B  F020         	movff	_valor@keypad$F283+1,?_kpRead+1
  3518  0018E0  0012               	return		;funcret
  3519  0018E2                     __end_of_kpRead:
  3520                           	callstack 0
  3521                           
  3522 ;; *************** function _kpDebounce *****************
  3523 ;; Defined at:
  3524 ;;		line 41 in file "keypad.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;		None
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  k               2    6[COMRAM] int 
  3529 ;;  i               1    9[COMRAM] unsigned char 
  3530 ;;  j               1    8[COMRAM] unsigned char 
  3531 ;;  old_D           1    5[COMRAM] unsigned char 
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  1    wreg      void 
  3534 ;; Registers used:
  3535 ;;		wreg, status,2, status,0, prodl, prodh
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3541 ;;      Params:         0       0       0       0       0       0       0
  3542 ;;      Locals:         5       0       0       0       0       0       0
  3543 ;;      Temps:          5       0       0       0       0       0       0
  3544 ;;      Totals:        10       0       0       0       0       0       0
  3545 ;;Total ram usage:       10 bytes
  3546 ;; Hardware stack levels used:    1
  3547 ;; This function calls:
  3548 ;;		Nothing
  3549 ;; This function is called by:
  3550 ;;		_chooseSong
  3551 ;;		_playSong
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text20
  3556  000D36                     __ptext20:
  3557                           	callstack 0
  3558  000D36                     _kpDebounce:
  3559                           	callstack 28
  3560  000D36                     
  3561                           ;keypad.c: 42:     unsigned char i, j;;keypad.c: 43:     static unsigned char tempo;;key
      +                          pad.c: 44:     static unsigned int valorNovo = 0x0000;;keypad.c: 45:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 48:     unsigned char old_D;;keypad.c: 49:     old_
      +                          D = PORTD;
  3562  000D36  CF83 F024          	movff	3971,kpDebounce@old_D	;volatile
  3563  000D3A                     
  3564                           ;keypad.c: 53:     TRISD |= 0x0f;
  3565  000D3A  0E0F               	movlw	15
  3566  000D3C  1295               	iorwf	149,f,c	;volatile
  3567  000D3E                     
  3568                           ;keypad.c: 55:     for (i = 0; i < 3; i++) {
  3569  000D3E  0E00               	movlw	0
  3570  000D40  6E28               	movwf	kpDebounce@i^0,c
  3571  000D42                     l1895:
  3572                           
  3573                           ;keypad.c: 57:         TRISB &= 0xF8;
  3574  000D42  0EF8               	movlw	248
  3575  000D44  1693               	andwf	147,f,c	;volatile
  3576                           
  3577                           ;keypad.c: 59:         ((TRISB) |= (1<<(i)));
  3578  000D46  C028  F01F         	movff	kpDebounce@i,??_kpDebounce
  3579  000D4A  0E01               	movlw	1
  3580  000D4C  6E20               	movwf	(??_kpDebounce+1)^0,c
  3581  000D4E  2A1F               	incf	??_kpDebounce^0,f,c
  3582  000D50  EFAC  F006         	goto	u1494
  3583  000D54                     u1495:
  3584  000D54  90D8               	bcf	status,0,c
  3585  000D56  3620               	rlcf	(??_kpDebounce+1)^0,f,c
  3586  000D58                     u1494:
  3587  000D58  2E1F               	decfsz	??_kpDebounce^0,f,c
  3588  000D5A  EFAA  F006         	goto	u1495
  3589  000D5E  5020               	movf	(??_kpDebounce+1)^0,w,c
  3590  000D60  1293               	iorwf	147,f,c	;volatile
  3591                           
  3592                           ;keypad.c: 61:         PORTB |= 0x07;
  3593  000D62  0E07               	movlw	7
  3594  000D64  1281               	iorwf	129,f,c	;volatile
  3595                           
  3596                           ;keypad.c: 62:         ((PORTB) &= ~(1<<(i)));
  3597  000D66  C028  F01F         	movff	kpDebounce@i,??_kpDebounce
  3598  000D6A  0E01               	movlw	1
  3599  000D6C  6E20               	movwf	(??_kpDebounce+1)^0,c
  3600  000D6E  2A1F               	incf	??_kpDebounce^0,f,c
  3601  000D70  EFBC  F006         	goto	u1504
  3602  000D74                     u1505:
  3603  000D74  90D8               	bcf	status,0,c
  3604  000D76  3620               	rlcf	(??_kpDebounce+1)^0,f,c
  3605  000D78                     u1504:
  3606  000D78  2E1F               	decfsz	??_kpDebounce^0,f,c
  3607  000D7A  EFBA  F006         	goto	u1505
  3608  000D7E  5020               	movf	(??_kpDebounce+1)^0,w,c
  3609  000D80  0AFF               	xorlw	255
  3610  000D82  1681               	andwf	129,f,c	;volatile
  3611  000D84                     
  3612                           ;keypad.c: 65:         for (int k = 0; k < 10; k++);
  3613  000D84  0E00               	movlw	0
  3614  000D86  6E26               	movwf	(kpDebounce@k+1)^0,c
  3615  000D88  0E00               	movlw	0
  3616  000D8A  6E25               	movwf	kpDebounce@k^0,c
  3617  000D8C                     l1903:
  3618  000D8C  4A25               	infsnz	kpDebounce@k^0,f,c
  3619  000D8E  2A26               	incf	(kpDebounce@k+1)^0,f,c
  3620  000D90  BE26               	btfsc	(kpDebounce@k+1)^0,7,c
  3621  000D92  EFD4  F006         	goto	u1511
  3622  000D96  5026               	movf	(kpDebounce@k+1)^0,w,c
  3623  000D98  E109               	bnz	u1510
  3624  000D9A  0E0A               	movlw	10
  3625  000D9C  5C25               	subwf	kpDebounce@k^0,w,c
  3626  000D9E  A0D8               	btfss	status,0,c
  3627  000DA0  EFD4  F006         	goto	u1511
  3628  000DA4  EFD6  F006         	goto	u1510
  3629  000DA8                     u1511:
  3630  000DA8  EFC6  F006         	goto	l1903
  3631  000DAC                     u1510:
  3632  000DAC                     
  3633                           ;keypad.c: 68:         for (j = 0; j < 4; j++) {
  3634  000DAC  0E00               	movlw	0
  3635  000DAE  6E27               	movwf	kpDebounce@j^0,c
  3636  000DB0                     l1913:
  3637                           
  3638                           ;keypad.c: 69:             if (!((PORTD) & (1<<(j)))) {
  3639  000DB0  C027  F01F         	movff	kpDebounce@j,??_kpDebounce
  3640  000DB4  0E01               	movlw	1
  3641  000DB6  6E20               	movwf	(??_kpDebounce+1)^0,c
  3642  000DB8  2A1F               	incf	??_kpDebounce^0,f,c
  3643  000DBA  EFE1  F006         	goto	u1524
  3644  000DBE                     u1525:
  3645  000DBE  90D8               	bcf	status,0,c
  3646  000DC0  3620               	rlcf	(??_kpDebounce+1)^0,f,c
  3647  000DC2                     u1524:
  3648  000DC2  2E1F               	decfsz	??_kpDebounce^0,f,c
  3649  000DC4  EFDF  F006         	goto	u1525
  3650  000DC8  5020               	movf	(??_kpDebounce+1)^0,w,c
  3651  000DCA  1483               	andwf	131,w,c	;volatile
  3652  000DCC  0900               	iorlw	0
  3653  000DCE  A4D8               	btfss	status,2,c
  3654  000DD0  EFEC  F006         	goto	u1531
  3655  000DD4  EFEE  F006         	goto	u1530
  3656  000DD8                     u1531:
  3657  000DD8  EF06  F007         	goto	l1917
  3658  000DDC                     u1530:
  3659  000DDC                     
  3660                           ;keypad.c: 70:                 ((valorNovo) |= (1<<((i * 4) + j)));
  3661  000DDC  5028               	movf	kpDebounce@i^0,w,c
  3662  000DDE  0D04               	mullw	4
  3663  000DE0  50F3               	movf	243,w,c
  3664  000DE2  2427               	addwf	kpDebounce@j^0,w,c
  3665  000DE4  6E1F               	movwf	??_kpDebounce^0,c
  3666  000DE6  0E01               	movlw	1
  3667  000DE8  6E20               	movwf	(??_kpDebounce+1)^0,c
  3668  000DEA  0E00               	movlw	0
  3669  000DEC  6E21               	movwf	(??_kpDebounce+2)^0,c
  3670  000DEE  2A1F               	incf	??_kpDebounce^0,f,c
  3671  000DF0  EFFD  F006         	goto	u1544
  3672  000DF4                     u1545:
  3673  000DF4  90D8               	bcf	status,0,c
  3674  000DF6  3620               	rlcf	(??_kpDebounce+1)^0,f,c
  3675  000DF8  3621               	rlcf	(??_kpDebounce+2)^0,f,c
  3676  000DFA                     u1544:
  3677  000DFA  2E1F               	decfsz	??_kpDebounce^0,f,c
  3678  000DFC  EFFA  F006         	goto	u1545
  3679  000E00  5020               	movf	(??_kpDebounce+1)^0,w,c
  3680  000E02  1238               	iorwf	kpDebounce@valorNovo^0,f,c
  3681  000E04  5021               	movf	(??_kpDebounce+2)^0,w,c
  3682  000E06  1239               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  3683                           
  3684                           ;keypad.c: 71:             } else {
  3685  000E08  EF20  F007         	goto	l1919
  3686  000E0C                     l1917:
  3687                           
  3688                           ;keypad.c: 72:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  3689  000E0C  5028               	movf	kpDebounce@i^0,w,c
  3690  000E0E  0D04               	mullw	4
  3691  000E10  50F3               	movf	243,w,c
  3692  000E12  2427               	addwf	kpDebounce@j^0,w,c
  3693  000E14  6E1F               	movwf	??_kpDebounce^0,c
  3694  000E16  0E01               	movlw	1
  3695  000E18  6E20               	movwf	(??_kpDebounce+1)^0,c
  3696  000E1A  0E00               	movlw	0
  3697  000E1C  6E21               	movwf	(??_kpDebounce+2)^0,c
  3698  000E1E  2A1F               	incf	??_kpDebounce^0,f,c
  3699  000E20  EF15  F007         	goto	u1554
  3700  000E24                     u1555:
  3701  000E24  90D8               	bcf	status,0,c
  3702  000E26  3620               	rlcf	(??_kpDebounce+1)^0,f,c
  3703  000E28  3621               	rlcf	(??_kpDebounce+2)^0,f,c
  3704  000E2A                     u1554:
  3705  000E2A  2E1F               	decfsz	??_kpDebounce^0,f,c
  3706  000E2C  EF12  F007         	goto	u1555
  3707  000E30  1C20               	comf	(??_kpDebounce+1)^0,w,c
  3708  000E32  6E22               	movwf	(??_kpDebounce+3)^0,c
  3709  000E34  1C21               	comf	(??_kpDebounce+2)^0,w,c
  3710  000E36  6E23               	movwf	(??_kpDebounce+4)^0,c
  3711  000E38  5022               	movf	(??_kpDebounce+3)^0,w,c
  3712  000E3A  1638               	andwf	kpDebounce@valorNovo^0,f,c
  3713  000E3C  5023               	movf	(??_kpDebounce+4)^0,w,c
  3714  000E3E  1639               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  3715  000E40                     l1919:
  3716                           
  3717                           ;keypad.c: 74:         }
  3718  000E40  2A27               	incf	kpDebounce@j^0,f,c
  3719  000E42  0E03               	movlw	3
  3720  000E44  6427               	cpfsgt	kpDebounce@j^0,c
  3721  000E46  EF27  F007         	goto	u1561
  3722  000E4A  EF29  F007         	goto	u1560
  3723  000E4E                     u1561:
  3724  000E4E  EFD8  F006         	goto	l1913
  3725  000E52                     u1560:
  3726  000E52                     
  3727                           ;keypad.c: 75:     }
  3728  000E52  2A28               	incf	kpDebounce@i^0,f,c
  3729  000E54  0E02               	movlw	2
  3730  000E56  6428               	cpfsgt	kpDebounce@i^0,c
  3731  000E58  EF30  F007         	goto	u1571
  3732  000E5C  EF32  F007         	goto	u1570
  3733  000E60                     u1571:
  3734  000E60  EFA1  F006         	goto	l1895
  3735  000E64                     u1570:
  3736  000E64                     
  3737                           ;keypad.c: 76:     if (valorAntigo == valorNovo) {
  3738  000E64  5038               	movf	kpDebounce@valorNovo^0,w,c
  3739  000E66  1836               	xorwf	kpDebounce@valorAntigo^0,w,c
  3740  000E68  E107               	bnz	u1581
  3741  000E6A  5039               	movf	(kpDebounce@valorNovo+1)^0,w,c
  3742  000E6C  1837               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  3743  000E6E  A4D8               	btfss	status,2,c
  3744  000E70  EF3C  F007         	goto	u1581
  3745  000E74  EF3E  F007         	goto	u1580
  3746  000E78                     u1581:
  3747  000E78  EF41  F007         	goto	l1931
  3748  000E7C                     u1580:
  3749  000E7C                     
  3750                           ;keypad.c: 77:         tempo--;
  3751  000E7C  063C               	decf	kpDebounce@tempo^0,f,c
  3752                           
  3753                           ;keypad.c: 78:     } else {
  3754  000E7E  EF47  F007         	goto	l349
  3755  000E82                     l1931:
  3756                           
  3757                           ;keypad.c: 79:         tempo = 10;
  3758  000E82  0E0A               	movlw	10
  3759  000E84  6E3C               	movwf	kpDebounce@tempo^0,c
  3760  000E86                     
  3761                           ;keypad.c: 80:         valorAntigo = valorNovo;
  3762  000E86  C038  F036         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  3763  000E8A  C039  F037         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  3764  000E8E                     l349:
  3765                           
  3766                           ;keypad.c: 82:     if (tempo == 0) {
  3767  000E8E  503C               	movf	kpDebounce@tempo^0,w,c
  3768  000E90  A4D8               	btfss	status,2,c
  3769  000E92  EF4D  F007         	goto	u1591
  3770  000E96  EF4F  F007         	goto	u1590
  3771  000E9A                     u1591:
  3772  000E9A  EF53  F007         	goto	l350
  3773  000E9E                     u1590:
  3774  000E9E                     
  3775                           ;keypad.c: 83:         valor = valorAntigo;
  3776  000E9E  C036  F03A         	movff	kpDebounce@valorAntigo,_valor@keypad$F283
  3777  000EA2  C037  F03B         	movff	kpDebounce@valorAntigo+1,_valor@keypad$F283+1
  3778  000EA6                     l350:
  3779                           
  3780                           ;keypad.c: 85:     PORTD = old_D;
  3781  000EA6  C024  FF83         	movff	kpDebounce@old_D,3971	;volatile
  3782  000EAA                     
  3783                           ;keypad.c: 86:     TRISD = 0x00;
  3784  000EAA  0E00               	movlw	0
  3785  000EAC  6E95               	movwf	149,c	;volatile
  3786  000EAE  0012               	return		;funcret
  3787  000EB0                     __end_of_kpDebounce:
  3788                           	callstack 0
  3789                           
  3790 ;; *************** function _atraso_ms *****************
  3791 ;; Defined at:
  3792 ;;		line 3 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;  t               2    0[COMRAM] int 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  i               2    2[COMRAM] volatile unsigned int 
  3797 ;;  k               1    5[COMRAM] volatile unsigned char 
  3798 ;;  j               1    4[COMRAM] volatile unsigned char 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      void 
  3801 ;; Registers used:
  3802 ;;		wreg, status,2, status,0
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3808 ;;      Params:         2       0       0       0       0       0       0
  3809 ;;      Locals:         4       0       0       0       0       0       0
  3810 ;;      Temps:          0       0       0       0       0       0       0
  3811 ;;      Totals:         6       0       0       0       0       0       0
  3812 ;;Total ram usage:        6 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; This function calls:
  3815 ;;		Nothing
  3816 ;; This function is called by:
  3817 ;;		_main
  3818 ;;		_chooseSong
  3819 ;;		_playSong
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           	psect	text21
  3824  0015F6                     __ptext21:
  3825                           	callstack 0
  3826  0015F6                     _atraso_ms:
  3827                           	callstack 28
  3828  0015F6                     
  3829                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 4:     volatile unsigned char j,
      +                           k;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 5:     volatile unsigned int 
      +                          i;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 7:     for (i = 0; i < (t); i+
      +                          +) {
  3830  0015F6  0E00               	movlw	0
  3831  0015F8  6E22               	movwf	(atraso_ms@i+1)^0,c	;volatile
  3832  0015FA  0E00               	movlw	0
  3833  0015FC  6E21               	movwf	atraso_ms@i^0,c	;volatile
  3834  0015FE  EF21  F00B         	goto	l1857
  3835  001602                     l1835:
  3836                           
  3837                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 8:         for (j = 0; j < 41; j
      +                          ++) {
  3838  001602  0E00               	movlw	0
  3839  001604  6E23               	movwf	atraso_ms@j^0,c	;volatile
  3840  001606                     l1837:
  3841  001606  0E28               	movlw	40
  3842  001608  6423               	cpfsgt	atraso_ms@j^0,c	;volatile
  3843  00160A  EF09  F00B         	goto	u1391
  3844  00160E  EF0B  F00B         	goto	u1390
  3845  001612                     u1391:
  3846  001612  EF0D  F00B         	goto	l1841
  3847  001616                     u1390:
  3848  001616  EF1F  F00B         	goto	l1855
  3849  00161A                     l1841:
  3850                           
  3851                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 9:             for (k = 0; k < 3
      +                          ; k++);
  3852  00161A  0E00               	movlw	0
  3853  00161C  6E24               	movwf	atraso_ms@k^0,c	;volatile
  3854  00161E                     l1843:
  3855  00161E  0E02               	movlw	2
  3856  001620  6424               	cpfsgt	atraso_ms@k^0,c	;volatile
  3857  001622  EF15  F00B         	goto	u1401
  3858  001626  EF17  F00B         	goto	u1400
  3859  00162A                     u1401:
  3860  00162A  EF19  F00B         	goto	l1847
  3861  00162E                     u1400:
  3862  00162E  EF1C  F00B         	goto	l1851
  3863  001632                     l1847:
  3864  001632  2A24               	incf	atraso_ms@k^0,f,c	;volatile
  3865  001634  EF0F  F00B         	goto	l1843
  3866  001638                     l1851:
  3867                           
  3868                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 10:         }
  3869  001638  2A23               	incf	atraso_ms@j^0,f,c	;volatile
  3870  00163A  EF03  F00B         	goto	l1837
  3871  00163E                     l1855:
  3872                           
  3873                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 11:     }
  3874  00163E  4A21               	infsnz	atraso_ms@i^0,f,c	;volatile
  3875  001640  2A22               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  3876  001642                     l1857:
  3877  001642  501F               	movf	atraso_ms@t^0,w,c
  3878  001644  5C21               	subwf	atraso_ms@i^0,w,c	;volatile
  3879  001646  5020               	movf	(atraso_ms@t+1)^0,w,c
  3880  001648  5822               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  3881  00164A  A0D8               	btfss	status,0,c
  3882  00164C  EF2A  F00B         	goto	u1411
  3883  001650  EF2C  F00B         	goto	u1410
  3884  001654                     u1411:
  3885  001654  EF01  F00B         	goto	l1835
  3886  001658                     u1410:
  3887  001658  0012               	return		;funcret
  3888  00165A                     __end_of_atraso_ms:
  3889                           	callstack 0
  3890                           
  3891 ;; *************** function ___awmod *****************
  3892 ;; Defined at:
  3893 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awmod.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  dividend        2    8[COMRAM] int 
  3896 ;;  divisor         2   10[COMRAM] int 
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;  sign            1   13[COMRAM] unsigned char 
  3899 ;;  counter         1   12[COMRAM] unsigned char 
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  2    8[COMRAM] int 
  3902 ;; Registers used:
  3903 ;;		wreg, status,2, status,0
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3909 ;;      Params:         4       0       0       0       0       0       0
  3910 ;;      Locals:         2       0       0       0       0       0       0
  3911 ;;      Temps:          0       0       0       0       0       0       0
  3912 ;;      Totals:         6       0       0       0       0       0       0
  3913 ;;Total ram usage:        6 bytes
  3914 ;; Hardware stack levels used:    1
  3915 ;; This function calls:
  3916 ;;		Nothing
  3917 ;; This function is called by:
  3918 ;;		_playSong
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           	psect	text22
  3923  001200                     __ptext22:
  3924                           	callstack 0
  3925  001200                     ___awmod:
  3926                           	callstack 28
  3927  001200  0E00               	movlw	0
  3928  001202  6E2C               	movwf	___awmod@sign^0,c
  3929  001204  BE28               	btfsc	(___awmod@dividend+1)^0,7,c
  3930  001206  EF09  F009         	goto	u1700
  3931  00120A  EF07  F009         	goto	u1701
  3932  00120E                     u1701:
  3933  00120E  EF0F  F009         	goto	l2053
  3934  001212                     u1700:
  3935  001212  6C27               	negf	___awmod@dividend^0,c
  3936  001214  1E28               	comf	(___awmod@dividend+1)^0,f,c
  3937  001216  B0D8               	btfsc	status,0,c
  3938  001218  2A28               	incf	(___awmod@dividend+1)^0,f,c
  3939  00121A  0E01               	movlw	1
  3940  00121C  6E2C               	movwf	___awmod@sign^0,c
  3941  00121E                     l2053:
  3942  00121E  BE2A               	btfsc	(___awmod@divisor+1)^0,7,c
  3943  001220  EF16  F009         	goto	u1710
  3944  001224  EF14  F009         	goto	u1711
  3945  001228                     u1711:
  3946  001228  EF1A  F009         	goto	l2057
  3947  00122C                     u1710:
  3948  00122C  6C29               	negf	___awmod@divisor^0,c
  3949  00122E  1E2A               	comf	(___awmod@divisor+1)^0,f,c
  3950  001230  B0D8               	btfsc	status,0,c
  3951  001232  2A2A               	incf	(___awmod@divisor+1)^0,f,c
  3952  001234                     l2057:
  3953  001234  5029               	movf	___awmod@divisor^0,w,c
  3954  001236  102A               	iorwf	(___awmod@divisor+1)^0,w,c
  3955  001238  B4D8               	btfsc	status,2,c
  3956  00123A  EF21  F009         	goto	u1721
  3957  00123E  EF23  F009         	goto	u1720
  3958  001242                     u1721:
  3959  001242  EF47  F009         	goto	l2073
  3960  001246                     u1720:
  3961  001246  0E01               	movlw	1
  3962  001248  6E2B               	movwf	___awmod@counter^0,c
  3963  00124A  EF2B  F009         	goto	l2063
  3964  00124E                     l2061:
  3965  00124E  90D8               	bcf	status,0,c
  3966  001250  3629               	rlcf	___awmod@divisor^0,f,c
  3967  001252  362A               	rlcf	(___awmod@divisor+1)^0,f,c
  3968  001254  2A2B               	incf	___awmod@counter^0,f,c
  3969  001256                     l2063:
  3970  001256  AE2A               	btfss	(___awmod@divisor+1)^0,7,c
  3971  001258  EF30  F009         	goto	u1731
  3972  00125C  EF32  F009         	goto	u1730
  3973  001260                     u1731:
  3974  001260  EF27  F009         	goto	l2061
  3975  001264                     u1730:
  3976  001264                     l2065:
  3977  001264  5029               	movf	___awmod@divisor^0,w,c
  3978  001266  5C27               	subwf	___awmod@dividend^0,w,c
  3979  001268  502A               	movf	(___awmod@divisor+1)^0,w,c
  3980  00126A  5828               	subwfb	(___awmod@dividend+1)^0,w,c
  3981  00126C  A0D8               	btfss	status,0,c
  3982  00126E  EF3B  F009         	goto	u1741
  3983  001272  EF3D  F009         	goto	u1740
  3984  001276                     u1741:
  3985  001276  EF41  F009         	goto	l2069
  3986  00127A                     u1740:
  3987  00127A  5029               	movf	___awmod@divisor^0,w,c
  3988  00127C  5E27               	subwf	___awmod@dividend^0,f,c
  3989  00127E  502A               	movf	(___awmod@divisor+1)^0,w,c
  3990  001280  5A28               	subwfb	(___awmod@dividend+1)^0,f,c
  3991  001282                     l2069:
  3992  001282  90D8               	bcf	status,0,c
  3993  001284  322A               	rrcf	(___awmod@divisor+1)^0,f,c
  3994  001286  3229               	rrcf	___awmod@divisor^0,f,c
  3995  001288  2E2B               	decfsz	___awmod@counter^0,f,c
  3996  00128A  EF32  F009         	goto	l2065
  3997  00128E                     l2073:
  3998  00128E  502C               	movf	___awmod@sign^0,w,c
  3999  001290  B4D8               	btfsc	status,2,c
  4000  001292  EF4D  F009         	goto	u1751
  4001  001296  EF4F  F009         	goto	u1750
  4002  00129A                     u1751:
  4003  00129A  EF53  F009         	goto	l2077
  4004  00129E                     u1750:
  4005  00129E  6C27               	negf	___awmod@dividend^0,c
  4006  0012A0  1E28               	comf	(___awmod@dividend+1)^0,f,c
  4007  0012A2  B0D8               	btfsc	status,0,c
  4008  0012A4  2A28               	incf	(___awmod@dividend+1)^0,f,c
  4009  0012A6                     l2077:
  4010  0012A6  C027  F027         	movff	___awmod@dividend,?___awmod
  4011  0012AA  C028  F028         	movff	___awmod@dividend+1,?___awmod+1
  4012  0012AE  0012               	return		;funcret
  4013  0012B0                     __end_of___awmod:
  4014                           	callstack 0
  4015                           
  4016 ;; *************** function ___awdiv *****************
  4017 ;; Defined at:
  4018 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  dividend        2    0[COMRAM] int 
  4021 ;;  divisor         2    2[COMRAM] int 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;  quotient        2    6[COMRAM] int 
  4024 ;;  sign            1    5[COMRAM] unsigned char 
  4025 ;;  counter         1    4[COMRAM] unsigned char 
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  2    0[COMRAM] int 
  4028 ;; Registers used:
  4029 ;;		wreg, status,2, status,0
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4035 ;;      Params:         4       0       0       0       0       0       0
  4036 ;;      Locals:         4       0       0       0       0       0       0
  4037 ;;      Temps:          0       0       0       0       0       0       0
  4038 ;;      Totals:         8       0       0       0       0       0       0
  4039 ;;Total ram usage:        8 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; This function calls:
  4042 ;;		Nothing
  4043 ;; This function is called by:
  4044 ;;		_playSong
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           	psect	text23
  4049  00113C                     __ptext23:
  4050                           	callstack 0
  4051  00113C                     ___awdiv:
  4052                           	callstack 28
  4053  00113C  0E00               	movlw	0
  4054  00113E  6E24               	movwf	___awdiv@sign^0,c
  4055  001140  BE22               	btfsc	(___awdiv@divisor+1)^0,7,c
  4056  001142  EFA7  F008         	goto	u1640
  4057  001146  EFA5  F008         	goto	u1641
  4058  00114A                     u1641:
  4059  00114A  EFAD  F008         	goto	l2009
  4060  00114E                     u1640:
  4061  00114E  6C21               	negf	___awdiv@divisor^0,c
  4062  001150  1E22               	comf	(___awdiv@divisor+1)^0,f,c
  4063  001152  B0D8               	btfsc	status,0,c
  4064  001154  2A22               	incf	(___awdiv@divisor+1)^0,f,c
  4065  001156  0E01               	movlw	1
  4066  001158  6E24               	movwf	___awdiv@sign^0,c
  4067  00115A                     l2009:
  4068  00115A  BE20               	btfsc	(___awdiv@dividend+1)^0,7,c
  4069  00115C  EFB4  F008         	goto	u1650
  4070  001160  EFB2  F008         	goto	u1651
  4071  001164                     u1651:
  4072  001164  EFBA  F008         	goto	l2015
  4073  001168                     u1650:
  4074  001168  6C1F               	negf	___awdiv@dividend^0,c
  4075  00116A  1E20               	comf	(___awdiv@dividend+1)^0,f,c
  4076  00116C  B0D8               	btfsc	status,0,c
  4077  00116E  2A20               	incf	(___awdiv@dividend+1)^0,f,c
  4078  001170  0E01               	movlw	1
  4079  001172  1A24               	xorwf	___awdiv@sign^0,f,c
  4080  001174                     l2015:
  4081  001174  0E00               	movlw	0
  4082  001176  6E26               	movwf	(___awdiv@quotient+1)^0,c
  4083  001178  0E00               	movlw	0
  4084  00117A  6E25               	movwf	___awdiv@quotient^0,c
  4085  00117C  5021               	movf	___awdiv@divisor^0,w,c
  4086  00117E  1022               	iorwf	(___awdiv@divisor+1)^0,w,c
  4087  001180  B4D8               	btfsc	status,2,c
  4088  001182  EFC5  F008         	goto	u1661
  4089  001186  EFC7  F008         	goto	u1660
  4090  00118A                     u1661:
  4091  00118A  EFEF  F008         	goto	l2037
  4092  00118E                     u1660:
  4093  00118E  0E01               	movlw	1
  4094  001190  6E23               	movwf	___awdiv@counter^0,c
  4095  001192  EFCF  F008         	goto	l2023
  4096  001196                     l2021:
  4097  001196  90D8               	bcf	status,0,c
  4098  001198  3621               	rlcf	___awdiv@divisor^0,f,c
  4099  00119A  3622               	rlcf	(___awdiv@divisor+1)^0,f,c
  4100  00119C  2A23               	incf	___awdiv@counter^0,f,c
  4101  00119E                     l2023:
  4102  00119E  AE22               	btfss	(___awdiv@divisor+1)^0,7,c
  4103  0011A0  EFD4  F008         	goto	u1671
  4104  0011A4  EFD6  F008         	goto	u1670
  4105  0011A8                     u1671:
  4106  0011A8  EFCB  F008         	goto	l2021
  4107  0011AC                     u1670:
  4108  0011AC                     l2025:
  4109  0011AC  90D8               	bcf	status,0,c
  4110  0011AE  3625               	rlcf	___awdiv@quotient^0,f,c
  4111  0011B0  3626               	rlcf	(___awdiv@quotient+1)^0,f,c
  4112  0011B2  5021               	movf	___awdiv@divisor^0,w,c
  4113  0011B4  5C1F               	subwf	___awdiv@dividend^0,w,c
  4114  0011B6  5022               	movf	(___awdiv@divisor+1)^0,w,c
  4115  0011B8  5820               	subwfb	(___awdiv@dividend+1)^0,w,c
  4116  0011BA  A0D8               	btfss	status,0,c
  4117  0011BC  EFE2  F008         	goto	u1681
  4118  0011C0  EFE4  F008         	goto	u1680
  4119  0011C4                     u1681:
  4120  0011C4  EFE9  F008         	goto	l2033
  4121  0011C8                     u1680:
  4122  0011C8  5021               	movf	___awdiv@divisor^0,w,c
  4123  0011CA  5E1F               	subwf	___awdiv@dividend^0,f,c
  4124  0011CC  5022               	movf	(___awdiv@divisor+1)^0,w,c
  4125  0011CE  5A20               	subwfb	(___awdiv@dividend+1)^0,f,c
  4126  0011D0  8025               	bsf	___awdiv@quotient^0,0,c
  4127  0011D2                     l2033:
  4128  0011D2  90D8               	bcf	status,0,c
  4129  0011D4  3222               	rrcf	(___awdiv@divisor+1)^0,f,c
  4130  0011D6  3221               	rrcf	___awdiv@divisor^0,f,c
  4131  0011D8  2E23               	decfsz	___awdiv@counter^0,f,c
  4132  0011DA  EFD6  F008         	goto	l2025
  4133  0011DE                     l2037:
  4134  0011DE  5024               	movf	___awdiv@sign^0,w,c
  4135  0011E0  B4D8               	btfsc	status,2,c
  4136  0011E2  EFF5  F008         	goto	u1691
  4137  0011E6  EFF7  F008         	goto	u1690
  4138  0011EA                     u1691:
  4139  0011EA  EFFB  F008         	goto	l2041
  4140  0011EE                     u1690:
  4141  0011EE  6C25               	negf	___awdiv@quotient^0,c
  4142  0011F0  1E26               	comf	(___awdiv@quotient+1)^0,f,c
  4143  0011F2  B0D8               	btfsc	status,0,c
  4144  0011F4  2A26               	incf	(___awdiv@quotient+1)^0,f,c
  4145  0011F6                     l2041:
  4146  0011F6  C025  F01F         	movff	___awdiv@quotient,?___awdiv
  4147  0011FA  C026  F020         	movff	___awdiv@quotient+1,?___awdiv+1
  4148  0011FE  0012               	return		;funcret
  4149  001200                     __end_of___awdiv:
  4150                           	callstack 0
  4151                           
  4152                           	psect	rparam
  4153  0000                     
  4154                           	psect	idloc
  4155                           
  4156                           ;Config register IDLOC0 @ 0x200000
  4157                           ;	unspecified, using default values
  4158  200000                     	org	2097152
  4159  200000  FF                 	db	255
  4160                           
  4161                           ;Config register IDLOC1 @ 0x200001
  4162                           ;	unspecified, using default values
  4163  200001                     	org	2097153
  4164  200001  FF                 	db	255
  4165                           
  4166                           ;Config register IDLOC2 @ 0x200002
  4167                           ;	unspecified, using default values
  4168  200002                     	org	2097154
  4169  200002  FF                 	db	255
  4170                           
  4171                           ;Config register IDLOC3 @ 0x200003
  4172                           ;	unspecified, using default values
  4173  200003                     	org	2097155
  4174  200003  FF                 	db	255
  4175                           
  4176                           ;Config register IDLOC4 @ 0x200004
  4177                           ;	unspecified, using default values
  4178  200004                     	org	2097156
  4179  200004  FF                 	db	255
  4180                           
  4181                           ;Config register IDLOC5 @ 0x200005
  4182                           ;	unspecified, using default values
  4183  200005                     	org	2097157
  4184  200005  FF                 	db	255
  4185                           
  4186                           ;Config register IDLOC6 @ 0x200006
  4187                           ;	unspecified, using default values
  4188  200006                     	org	2097158
  4189  200006  FF                 	db	255
  4190                           
  4191                           ;Config register IDLOC7 @ 0x200007
  4192                           ;	unspecified, using default values
  4193  200007                     	org	2097159
  4194  200007  FF                 	db	255
  4195                           
  4196                           	psect	config
  4197                           
  4198                           ; Padding undefined space
  4199  300000                     	org	3145728
  4200  300000  FF                 	db	255
  4201                           
  4202                           ;Config register CONFIG1H @ 0x300001
  4203                           ;	Oscillator Selection bits
  4204                           ;	OSC = HS, HS oscillator
  4205                           ;	Fail-Safe Clock Monitor Enable bit
  4206                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4207                           ;	Internal/External Oscillator Switchover bit
  4208                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4209  300001                     	org	3145729
  4210  300001  02                 	db	2
  4211                           
  4212                           ;Config register CONFIG2L @ 0x300002
  4213                           ;	Power-up Timer Enable bit
  4214                           ;	PWRT = OFF, PWRT disabled
  4215                           ;	Brown-out Reset Enable bits
  4216                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4217                           ;	Brown Out Reset Voltage bits
  4218                           ;	BORV = 0x2E, user specified literal
  4219  300002                     	org	3145730
  4220  300002  71                 	db	369
  4221                           
  4222                           ;Config register CONFIG2H @ 0x300003
  4223                           ;	Watchdog Timer Enable bit
  4224                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4225                           ;	Watchdog Timer Postscale Select bits
  4226                           ;	WDTPS = 1, 1:1
  4227  300003                     	org	3145731
  4228  300003  00                 	db	0
  4229                           
  4230                           ; Padding undefined space
  4231  300004                     	org	3145732
  4232  300004  FF                 	db	255
  4233                           
  4234                           ;Config register CONFIG3H @ 0x300005
  4235                           ;	CCP2 MUX bit
  4236                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4237                           ;	PORTB A/D Enable bit
  4238                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4239                           ;	Low-Power Timer1 Oscillator Enable bit
  4240                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4241                           ;	MCLR Pin Enable bit
  4242                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4243  300005                     	org	3145733
  4244  300005  83                 	db	131
  4245                           
  4246                           ;Config register CONFIG4L @ 0x300006
  4247                           ;	Stack Full/Underflow Reset Enable bit
  4248                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4249                           ;	Single-Supply ICSP Enable bit
  4250                           ;	LVP = OFF, Single-Supply ICSP disabled
  4251                           ;	Extended Instruction Set Enable bit
  4252                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4253                           ;	Background Debugger Enable bit
  4254                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4255  300006                     	org	3145734
  4256  300006  80                 	db	128
  4257                           
  4258                           ; Padding undefined space
  4259  300007                     	org	3145735
  4260  300007  FF                 	db	255
  4261                           
  4262                           ;Config register CONFIG5L @ 0x300008
  4263                           ;	Code Protection bit
  4264                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4265                           ;	Code Protection bit
  4266                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4267                           ;	Code Protection bit
  4268                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4269                           ;	Code Protection bit
  4270                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4271  300008                     	org	3145736
  4272  300008  0F                 	db	15
  4273                           
  4274                           ;Config register CONFIG5H @ 0x300009
  4275                           ;	Boot Block Code Protection bit
  4276                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4277                           ;	Data EEPROM Code Protection bit
  4278                           ;	CPD = OFF, Data EEPROM not code-protected
  4279  300009                     	org	3145737
  4280  300009  C0                 	db	192
  4281                           
  4282                           ;Config register CONFIG6L @ 0x30000A
  4283                           ;	Write Protection bit
  4284                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4285                           ;	Write Protection bit
  4286                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4287                           ;	Write Protection bit
  4288                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4289                           ;	Write Protection bit
  4290                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4291  30000A                     	org	3145738
  4292  30000A  0F                 	db	15
  4293                           
  4294                           ;Config register CONFIG6H @ 0x30000B
  4295                           ;	Configuration Register Write Protection bit
  4296                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4297                           ;	Boot Block Write Protection bit
  4298                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4299                           ;	Data EEPROM Write Protection bit
  4300                           ;	WRTD = OFF, Data EEPROM not write-protected
  4301  30000B                     	org	3145739
  4302  30000B  E0                 	db	224
  4303                           
  4304                           ;Config register CONFIG7L @ 0x30000C
  4305                           ;	Table Read Protection bit
  4306                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4307                           ;	Table Read Protection bit
  4308                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4309                           ;	Table Read Protection bit
  4310                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4311                           ;	Table Read Protection bit
  4312                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4313  30000C                     	org	3145740
  4314  30000C  0F                 	db	15
  4315                           
  4316                           ;Config register CONFIG7H @ 0x30000D
  4317                           ;	Boot Block Table Read Protection bit
  4318                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4319  30000D                     	org	3145741
  4320  30000D  40                 	db	64
  4321                           tosu	equ	0xFFF
  4322                           tosh	equ	0xFFE
  4323                           tosl	equ	0xFFD
  4324                           stkptr	equ	0xFFC
  4325                           pclatu	equ	0xFFB
  4326                           pclath	equ	0xFFA
  4327                           pcl	equ	0xFF9
  4328                           tblptru	equ	0xFF8
  4329                           tblptrh	equ	0xFF7
  4330                           tblptrl	equ	0xFF6
  4331                           tablat	equ	0xFF5
  4332                           prodh	equ	0xFF4
  4333                           prodl	equ	0xFF3
  4334                           indf0	equ	0xFEF
  4335                           postinc0	equ	0xFEE
  4336                           postdec0	equ	0xFED
  4337                           preinc0	equ	0xFEC
  4338                           plusw0	equ	0xFEB
  4339                           fsr0h	equ	0xFEA
  4340                           fsr0l	equ	0xFE9
  4341                           wreg	equ	0xFE8
  4342                           indf1	equ	0xFE7
  4343                           postinc1	equ	0xFE6
  4344                           postdec1	equ	0xFE5
  4345                           preinc1	equ	0xFE4
  4346                           plusw1	equ	0xFE3
  4347                           fsr1h	equ	0xFE2
  4348                           fsr1l	equ	0xFE1
  4349                           bsr	equ	0xFE0
  4350                           indf2	equ	0xFDF
  4351                           postinc2	equ	0xFDE
  4352                           postdec2	equ	0xFDD
  4353                           preinc2	equ	0xFDC
  4354                           plusw2	equ	0xFDB
  4355                           fsr2h	equ	0xFDA
  4356                           fsr2l	equ	0xFD9
  4357                           status	equ	0xFD8

Data Sizes:
    Strings     61
    Constant    16
    Data        200
    BSS         212
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     23      75
    BANK0           128      0       0
    BANK1           256      0     190
    BANK2           256      0     170
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 170
		 -> nomes(BANK2[170]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 170
		 -> nomes(BANK2[170]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    lcdStr@str	PTR const unsigned char  size(2) Largest target is 190
		 -> STR_6(CODE[16]), STR_5(CODE[17]), musicas.nome(BANK1[17]), musicas(BANK1[190]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[7]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_chooseSong
    _ssdInit->_pinMode
    _songsInit->_strcpy
    _strcpy->___wmul
    _lcdInit->_lcdCommand
    _chooseSong->_playSong
    _playSong->___awmod
    _ssdUpdate->_digitalWrite
    _lcdStr->_lcdData
    _lcdData->_digitalWrite
    _lcdPosition->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   45724
                          _atraso_ms
                         _chooseSong
                             _kpInit
                         _lcdCommand
                            _lcdInit
                        _lcdPosition
                             _lcdStr
                          _songsInit
                            _ssdInit
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    1352
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _songsInit                                            2     2      0     997
                                             14 COMRAM     2     2      0
                             ___wmul
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     4      4     248
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    4243
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _chooseSong                                           2     2      0   29018
                                             21 COMRAM     2     2      0
                          _atraso_ms
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                        _lcdPosition
                             _lcdStr
                           _playSong
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _playSong                                             7     7      0   15461
                                             14 COMRAM     7     7      0
                            ___awdiv
                            ___awmod
                          _atraso_ms
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                        _lcdPosition
                             _lcdStr
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _ssdUpdate                                            2     2      0    2572
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1     556
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _lcdStr                                               5     3      2    3361
                                              8 COMRAM     5     3      2
                            _lcdData
 ---------------------------------------------------------------------------------
 (2) _lcdData                                              2     2      0    2663
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _lcdPosition                                          3     2      1    3588
                                              8 COMRAM     3     2      1
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    2799
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    2572
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      92
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _kpDebounce                                          10    10      0     315
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            6     4      2     366
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     904
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _chooseSong
     _atraso_ms
     _kpDebounce
     _kpRead
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _lcdPosition
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
     _lcdStr
       _lcdData
         _Delay40us
         _digitalWrite
     _playSong
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _atraso_ms
       _kpDebounce
       _kpRead
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
       _lcdPosition
         _lcdCommand
           _Delay2ms
             _Delay40us
           _Delay40us
           _digitalWrite
       _lcdStr
         _lcdData
           _Delay40us
           _digitalWrite
       _ssdDigit
       _ssdUpdate
         _digitalWrite
     _ssdDigit
     _ssdUpdate
       _digitalWrite
   _kpInit
   _lcdCommand
     _Delay2ms
       _Delay40us
     _Delay40us
     _digitalWrite
   _lcdInit
     _Delay2ms
       _Delay40us
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _pinMode
   _lcdPosition
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
   _lcdStr
     _lcdData
       _Delay40us
       _digitalWrite
   _songsInit
     ___wmul
     _strcpy
       ___wmul (ARG)
   _ssdInit
     _pinMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      AA       9       66.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      BE       7       74.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     17      4B       1       59.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B3      15        0.0%
DATA                 0      0     1B3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Dec 08 15:52:32 2020

                      _i 003D                       l42 0AEA                       l76 089C  
           ___awdiv@sign 0024                       _v0 0041                       _v1 0040  
                     _v2 003F                       _v3 003E      ___wmul@multiplicand 0021  
                    l108 1658                      l301 176C                      l230 13FA  
                    l151 18B4                      l311 0FFE                      l240 10A6  
                    l161 1816                      l146 18CC                      l250 113A  
                    l314 17C2                      l331 18E0                      l171 1714  
                    l244 10D4                      l164 157C                      l350 0EA6  
                    l158 1504                      l351 0EAE                      l167 16D8  
                    l263 0CAA                      l168 16FE                      l264 0CBC  
                    l177 15F4                      l274 0D34                      l266 0CFC  
                    l354 18D6                      l611 11FE                      l267 0CCE  
                    l380 187A                      l349 0E8E                      l624 12AE  
                    _cnt 0043             ___awmod@sign 002C                      prod 000FF3  
                    wreg 000FE8                     l2001 113C                     l2011 1168  
                   l2003 1140                     l2021 1196                     l2013 1170  
                   l2005 114E                     l2101 0766                     l2031 11D0  
                   l2023 119E                     l2015 1174                     l2007 1156  
                   l2111 0802                     l2103 078A                     l2041 11F6  
                   l2033 11D2                     l2025 11AC                     l2017 117C  
                   l2009 115A                     l2113 0828                     l2105 07B0  
                   l1057 1854                     l2121 1818                     l2035 11D8  
                   l2027 11B2                     l2019 118E                     l2051 121A  
                   l2131 0B1A                     l2115 0844                     l2107 07CC  
                   l2211 152E                     l2123 1828                     l2203 1362  
                   l2029 11C8                     l2037 11DE                     l2061 124E  
                   l2053 121E                     l2045 1200                     l2133 0B26  
                   l2125 0AEC                     l2117 0856                     l2109 07DE  
                   l2221 1542                     l2213 1532                     l2205 13E0  
                   l2301 1400                     l2039 11EE                     l2071 1288  
                   l2063 1256                     l2055 122C                     l2047 1204  
                   l2151 0C3E                     l2143 0C22                     l2135 0B3E  
                   l2127 0AFC                     l2119 087A                     l2231 155A  
                   l2223 1546                     l2215 1536                     l2207 13E4  
                   l2311 141C                     l2303 1404                     l2065 1264  
                   l2073 128E                     l2057 1234                     l2049 1212  
                   l2161 0C70                     l2153 0C4C                     l2145 0C26  
                   l2137 0C1E                     l2129 0B10                     l2081 0650  
                   l2241 1576                     l2233 155E                     l2225 154C  
                   l2217 153A                     l2209 1506                     l2321 1450  
                   l2313 1428                     l2305 1408                     l2075 129E  
                   l2067 127A                     l2059 1246                     l2163 0C78  
                   l2155 0C5A                     l2147 0C32                     l2251 100C  
                   l2091 06DC                     l2083 066C                     l2235 1564  
                   l2227 1550                     l2219 153E                     l2243 176E  
                   l2323 145A                     l2315 1432                     l2307 140C  
                   l2077 12A6                     l2069 1282                     l2165 0C9A  
                   l2181 0D00                     l2157 0C68                     l2149 0C36  
                   l2261 1034                     l2253 101A                     l2093 06EE  
                   l2085 067E                     l2237 156A                     l2229 1554  
                   l2245 17BE                     l2325 1466                     l2317 143E  
                   l2309 1412                     l2335 0FD8                     l2183 0D02  
                   l2175 0CDC                     l2159 0C6C                     l2271 1088  
                   l2263 1040                     l2255 1028                     l2247 1000  
                   l2095 0712                     l2087 069E                     l2239 1570  
                   l2191 1856                     l2327 1470                     l2319 144A  
                   l1801 14A6                     l2185 0D12                     l2177 0CEC  
                   l2281 10CE                     l2273 1098                     l2265 1062  
                   l2257 102C                     l2249 1004                     l2097 0738  
                   l2089 06C0                     l2193 1872                     l2329 147C  
                   l1811 14E8                     l1803 14AA                     l2187 0D22  
                   l2179 0CF4                     l2291 1110                     l2283 10E2  
                   l2275 10A0                     l2267 1072                     l2259 1030  
                   l2099 0754                     l1741 18BC                     l1733 18B6  
                   l1813 14F8                     l1805 14BE                     l1821 17CE  
                   l2189 0D24                     l2293 1124                     l2277 10B4  
                   l2285 10EA                     l2269 107A                     l1573 18CE  
                   l2197 135A                     l1903 0D8C                     l1751 090E  
                   l1743 089E                     l1815 1500                     l1807 14D2  
                   l1831 1812                     l1823 17E2                     l2295 112E  
                   l2287 10FA                     l2279 10C6                     l1841 161A  
                   l1833 15F6                     l1921 0E42                     l1913 0DB0  
                   l1905 0D90                     l1761 09A2                     l1753 092A  
                   l1745 08BA                     l1809 14D6                     l1825 17E6  
                   l1817 17C6                     l2289 1106                     l2297 1136  
                   l1851 1638                     l1843 161E                     l1835 1602  
                   l1931 0E82                     l1923 0E52                     l1915 0DDC  
                   l1907 0DAC                     l1739 18BA                     l1771 0A34  
                   l1763 09BC                     l1755 0944                     l1747 08CC  
                   l1827 17FA                     l1819 17CA                     l2299 13FC  
                   l1837 1606                     l1933 0E86                     l1925 0E54  
                   l1917 0E0C                     l1781 0ACC                     l1773 0A54  
                   l1765 09DC                     l1757 0964                     l1749 08EC  
                   l1861 16C2                     l1829 180E                     l1941 0EB0  
                   l1847 1632                     l1855 163E                     l1935 0E9E  
                   l1927 0E64                     l1919 0E40                     l1791 18A2  
                   l1783 189A                     l1775 0A76                     l1767 09FE  
                   l1759 0986                     l1871 170E                     l1863 16D2  
                   l1951 0F0C                     l1943 0EB4                     l1857 1642  
                   l1937 0EAA                     l1929 0E7C                     l1793 18A4  
                   l1777 0A92                     l1769 0A1A                     l1865 16D2  
                   l1881 15B6                     l1961 0F60                     l1953 0F1E  
                   l1945 0EC8                     l1939 18D8                     l1779 0AAC  
                   l1795 148A                     l1875 170E                     l1867 16E8  
                   l1859 16BE                     l1883 15B8                     l1971 0FA8  
                   l1963 0F68                     l1955 0F32                     l1947 0EDC  
                   l1885 0D36                     l1789 189E                     l1797 148E  
                   l1869 16F8                     l1877 157E                     l1973 0FBC  
                   l1965 0F7A                     l1957 0F3A                     l1949 0EF0  
                   l1895 0D42                     l1887 0D3A                     l1799 1492  
                   l1879 1586                     l1991 173C                     l1967 0F8E  
                   l1959 0F4C                     l1897 0D84                     l1889 0D3E  
                   l1993 1740                     l1985 1718                     l1969 0F96  
                   l1995 1752                     l1987 1728                     l1979 0FC4  
                   l1997 1756                     l1989 172C                     l1999 1768  
                   STR_1 064A                     STR_2 0643                     STR_3 0622  
                   STR_4 0611                     STR_5 0611                     STR_6 0633  
                   u1200 092A                     u2000 0C9A                     u1201 0926  
                   u2001 0C96                     u1210 0944                     u2010 0CAA  
                   u1211 0940                     u2011 0CA6                     u2020 0CB8  
                   u2100 101A                     u2021 0CB4                     u2101 1016  
                   u1150 18CC                     u2030 0CCA                     u2110 1028  
                   u1151 18C8                     u2031 0CC6                     u2111 1024  
                   u1400 162E                     u1320 0A92                     u1304 0A46  
                   u1240 09A2                     u1224 0956                     u1160 08BA  
                   u2040 0CDC                     u2120 1062                     u1401 162A  
                   u1321 0A8E                     u1305 0A42                     u1241 099E  
                   u1225 0952                     u1161 08B6                     u2041 0CD8  
                   u2121 105E                     u1410 1658                     u1330 0AAC  
                   u1314 0A66                     u1250 09BC                     u1234 0976  
                   u1170 08CC                     u2050 0CEC                     u2130 1072  
                   u1411 1654                     u1331 0AA8                     u1315 0A62  
                   u1251 09B8                     u1235 0972                     u1171 08C8  
                   u2051 0CE8                     u2131 106E                     u1420 16D2  
                   u2060 0D12                     u2140 1088                     u1421 16CE  
                   u2061 0D0E                     u2141 1084                     u1510 0DAC  
                   u1430 16E8                     u2070 0D22                     u2150 1098  
                   u1511 0DA8                     u1431 16E4                     u2071 0D1E  
                   u2151 1094                     u1504 0D78                     u1360 18B4  
                   u1344 0ABE                     u1280 0A1A                     u1264 09CE  
                   u1184 08DE                     u1440 16F8                     u1600 1728  
                   u2080 0D34                     u2160 10B4                     u1505 0D74  
                   u1361 18B0                     u1345 0ABA                     u1281 0A16  
                   u1265 09CA                     u1185 08DA                     u1441 16F4  
                   u1601 1724                     u2081 0D30                     u2161 10B0  
                   u1530 0DDC                     u1354 0ADE                     u1290 0A34  
                   u1274 09EE                     u1194 08FE                     u1370 14E8  
                   u1450 170E                     u1610 173C                     u2170 10C6  
                   u2090 13FA                     u1531 0DD8                     u1355 0ADA  
                   u1291 0A30                     u1275 09EA                     u1195 08FA  
                   u1371 14E4                     u1451 170A                     u1611 1738  
                   u2171 10C2                     u2091 13F6                     u1700 1212  
                   u1524 0DC2                     u1380 14F8                     u1460 15B2  
                   u1620 1752                     u2180 10E2                     u1701 120E  
                   u1525 0DBE                     u1381 14F4                     u1621 174E  
                   u2181 10DE                     u1710 122C                     u1390 1616  
                   u1470 15E4                     u1630 1768                     u1711 1228  
                   u1391 1612                     u1631 1764                     u1640 114E  
                   u1720 1246                     u1560 0E52                     u1544 0DFA  
                   u1480 15F4                     u1800 06DC                     u1641 114A  
                   u1721 1242                     u1561 0E4E                     u1545 0DF4  
                   u1481 15F0                     u1801 06D8                     u1650 1168  
                   u1730 1264                     u1570 0E64                     u1554 0E2A  
                   u1810 06EE                     u1651 1164                     u1731 1260  
                   u1571 0E60                     u1555 0E24                     u1467 15A8  
                   u1811 06EA                     u1660 118E                     u1740 127A  
                   u1580 0E7C                     u1661 118A                     u1741 1276  
                   u1581 0E78                     u1477 15DA                     u1670 11AC  
                   u1750 129E                     u1590 0E9E                     u1494 0D58  
                   u1671 11A8                     u1751 129A                     u1591 0E9A  
                   u1495 0D54                     u1680 11C8                     u1920 0844  
                   u1904 07F4                     u1840 0754                     u1824 0704  
                   u1760 066C                     u1681 11C4                     u1921 0840  
                   u1905 07F0                     u1841 0750                     u1825 0700  
                   u1761 0668                     u1690 11EE                     u1930 0856  
                   u1914 0818                     u1850 0766                     u1834 0728  
                   u1770 067E                     u1691 11EA                     u1931 0852  
                   u1915 0814                     u1851 0762                     u1835 0724  
                   u1771 067A                     u1944 086C                     u1880 07CC  
                   u1864 077C                     u1784 0690                     u1960 1854  
                   u1945 0868                     u1881 07C8                     u1865 0778  
                   u1785 068C                     u1961 1850                     u1970 0C4C  
                   u1954 0890                     u1890 07DE                     u1874 07A0  
                   u1794 06B0                     u1971 0C48                     u1955 088C  
                   u1891 07DA                     u1875 079C                     u1795 06AC  
                   u1980 0C5A                     u1981 0C56                     u1990 0C68  
                   u1991 0C64                     _flag 0049                     _cont 004A  
                   _main 13FC                     fsr0h 000FEA                     fsr1h 000FE2  
                   indf0 000FEF                     fsr2h 000FDA                     fsr0l 000FE9  
                   indf1 000FE7                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     prodh 000FF4                     prodl 000FF3  
                   start 0000             ___param_bank 000000                    ?_main 001F  
        __end_of___awdiv 1200          __end_of___awmod 12B0                    _T0CON 000FD5  
        ___awdiv@divisor 0021          ___awdiv@counter 0023                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96          __end_of_lcdData 1818  
        __end_of_lcdInit 157E                    _pause 001D                    _tecla 001E  
                  _nomes 0200          __end_of_pinMode 089E                    _valor 0601  
                  _tempo 0048                    tablat 000FF5          __end_of_ssdInit 17C4  
                  status 000FD8         __end_of_Delay2ms 18B6     __end_of_digitalWrite 0AEC  
        __initialization 165A             __end_of_main 1488       __size_of_Delay40us 0018  
                 ??_main 0036            __activetblptr 000002         ___awdiv@dividend 001F  
                 _INTCON 000FF2     __size_of_lcdPosition 005A        lcdPosition@coluna 0027  
                 ___wmul 1856                ??___awdiv 0023                ??___awmod 002B  
                 _lcdStr 157E                   _kpInit 18CE                   _kpRead 18D8  
                 _indice 004B                   clear_0 16A0                   clear_1 16AC  
       ___awdiv@quotient 0025                   _teclas 0015          ___awmod@divisor 0029  
              ??_lcdData 0025                ??_lcdInit 0027          ___awmod@counter 002B  
                 _strcpy 1818         __end_of_playSong 0D36         __end_of_ssdDigit 176E  
           __pdataCOMRAM 0001                ??_pinMode 0023             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_ssdInit 0025        __end_of_Delay40us 18CE               __accesstop 0080  
__end_of__initialization 16B2            ___rparam_used 000001              pinMode@type 0021  
         __pcstackCOMRAM 001F             __pidataBANK2 12B0            __end_of_valor 0611  
              ?_Delay2ms 001F       __size_of_atraso_ms 0064               __pbssBANK1 0100  
  __size_of_digitalWrite 024E               _lcdCommand 1488                  ?___wmul 001F  
                ?_lcdStr 0027                  ?_kpInit 001F                  ?_kpRead 001F  
             _kpDebounce 0D36               _chooseSong 1000                  ?_strcpy 0025  
     __size_of_ssdUpdate 0150               ??_Delay2ms 0020             _digitalWrite 089E  
     __size_of_songsInit 00A2                ?_playSong 001F                  __Hparam 0000  
                __Lparam 0000                ?_ssdDigit 001F          kpDebounce@old_D 0024  
     lcdPosition@comando 0029          kpDebounce@tempo 003C                  ___awdiv 113C  
                ___awmod 1200          __size_of___wmul 0026        __end_of_atraso_ms 165A  
           __psmallconst 0600          __size_of_lcdStr 0078          __size_of_kpInit 000A  
        __size_of_kpRead 000A              ssdDigit@val 0020              ssdDigit@pos 001F  
                __pcinit 165A                  _lcdData 17C4                  __ramtop 0600  
                _lcdInit 1506                  __ptext0 13FC                  __ptext1 176E  
                __ptext2 135A                  __ptext3 1818                  __ptext4 1856  
                __ptext5 1506                  __ptext6 0650                  __ptext7 18CE  
                __ptext8 1000                  __ptext9 0AEC                  _display 0042  
        __size_of_strcpy 003E                  _pinMode 0650         ___awmod@dividend 0027  
                _minuto1 0047                  _minuto2 0046                  _ssdInit 176E  
                _musicas 0100                  lcdStr@i 002B                Delay2ms@i 0020  
    kpDebounce@valorNovo 0038     end_of_initialization 16B2            __Lmediumconst 0000  
             ??_playSong 002D        __end_of_ssdUpdate 1000               ??_ssdDigit 0020  
      __end_of_songsInit 13FC                  postdec1 000FE5                  postdec2 000FDD  
            ?_lcdCommand 001F                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE                  strcpy@d 002B                  strcpy@s 0029  
            ?_kpDebounce 001F              ?_chooseSong 001F            ??_lcdPosition 0028  
              _Delay40us 18B6               atraso_ms@i 0021               atraso_ms@j 0023  
             atraso_ms@k 0024               atraso_ms@t 001F           __end_of___wmul 187C  
          __pidataCOMRAM 187C           __end_of_lcdStr 15F6           __end_of_kpInit 18D8  
         __end_of_kpRead 18E2           __end_of_strcpy 1856      start_initialization 165A  
      __size_of_Delay2ms 001C      __size_of_lcdCommand 007E      __size_of_kpDebounce 017A  
             ?_Delay40us 001F      __size_of_chooseSong 013C      __end_of_lcdPosition 1716  
       lcdPosition@linha 0028                 ??___wmul 0023                 ??_lcdStr 0029  
               ??_kpInit 001F                 ??_kpRead 0021              __pdataBANK2 0200  
               ??_strcpy 0029              __pbssCOMRAM 0036               pinMode@pin 001F  
      __size_of_playSong 024A                 ?___awdiv 001F                 ?___awmod 0027  
      __size_of_ssdDigit 0058                 ?_lcdData 001F                 ?_lcdInit 001F  
          lcdCommand@cmd 0026                _atraso_ms 15F6              __smallconst 0600  
               ?_pinMode 001F                 ?_ssdInit 001F              _lcdPosition 16BC  
            ??_Delay40us 001F           ___wmul@product 0023             ??_lcdCommand 0025  
              _ssdUpdate 0EB0                lcdStr@str 0027             ??_kpDebounce 001F  
           ??_chooseSong 0034                _songsInit 135A        ___wmul@multiplier 001F  
             ?_atraso_ms 001F          lcdCommand@old_D 0025    kpDebounce@valorAntigo 0036  
               _Delay2ms 189A                copy_data0 166E                copy_data1 168E  
           _playSong$950 0031             _playSong$949 002F       __end_of_lcdCommand 1506  
           lcdData@old_D 0026             lcdData@valor 0025               songsInit@i 002D  
     __end_of_kpDebounce 0EB0       __end_of_chooseSong 113C                 __Hrparam 0000  
               __Lrparam 0000               ?_ssdUpdate 001F         __size_of___awdiv 00C4  
       __size_of___awmod 00B0               ?_songsInit 001F         __size_of_lcdData 0054  
       __size_of_lcdInit 0078         __size_of_pinMode 024E                 __ptext10 0EB0  
               __ptext11 1716                 __ptext20 0D36                 __ptext12 157E  
               __ptext21 15F6                 __ptext13 17C4                 __ptext22 1200  
               __ptext14 16BC                 __ptext23 113C                 __ptext15 1488  
               __ptext16 089E                 __ptext17 189A                 __ptext18 18B6  
               __ptext19 18D8                playSong@j 0033         __size_of_ssdInit 0056  
             strcpy@dest 0025                 _duracoes 0001            __size_of_main 008C  
               _playSong 0AEC                 _segundo1 0045                 _segundo2 0044  
             Delay40us@i 001F                 _ssdDigit 1716              ??_atraso_ms 0021  
          ?_digitalWrite 001F        digitalWrite@value 0021                strcpy@src 0027  
            ??_ssdUpdate 0025              ??_songsInit 002D              kpDebounce@i 0028  
            kpDebounce@j 0027              kpDebounce@k 0025           ??_digitalWrite 0023  
           ?_lcdPosition 0027          digitalWrite@pin 001F        _valor@keypad$F283 003A  
