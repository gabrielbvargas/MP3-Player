

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Dec 08 17:56:15 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4520 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	idataCOMRAM
    80  001A2C                     __pidataCOMRAM:
    81                           	callstack 0
    82                           
    83                           ;initializer for _duracoes
    84  001A2C  0046               	dw	70
    85  001A2E  000F               	dw	15
    86  001A30  0078               	dw	120
    87  001A32  003C               	dw	60
    88  001A34  000A               	dw	10
    89  001A36  0028               	dw	40
    90  001A38  0014               	dw	20
    91  001A3A  001E               	dw	30
    92  001A3C  008C               	dw	140
    93  001A3E  000A               	dw	10
    94                           
    95                           ;initializer for _teclas
    96  001A40  0A                 	db	10
    97  001A41  07                 	db	7
    98  001A42  04                 	db	4
    99  001A43  01                 	db	1
   100  001A44  00                 	db	0
   101  001A45  08                 	db	8
   102  001A46  05                 	db	5
   103  001A47  02                 	db	2
   104                           
   105                           ;initializer for _volume
   106  001A48  03                 	db	3
   107                           
   108                           ;initializer for _pause
   109  001A49  01                 	db	1
   110                           
   111                           ;initializer for _tecla
   112  001A4A  10                 	db	16
   113                           
   114                           	psect	idataBANK2
   115  00145C                     __pidataBANK2:
   116                           	callstack 0
   117                           
   118                           ;initializer for _nomes
   119  00145C  54                 	db	84
   120  00145D  65                 	db	101
   121  00145E  6D                 	db	109
   122  00145F  70                 	db	112
   123  001460  6F                 	db	111
   124  001461  72                 	db	114
   125  001462  61                 	db	97
   126  001463  6C                 	db	108
   127  001464  00                 	db	0
   128  001465  00                 	db	0
   129  001466  00                 	db	0
   130  001467  00                 	db	0
   131  001468  00                 	db	0
   132  001469  00                 	db	0
   133  00146A  00                 	db	0
   134  00146B  00                 	db	0
   135  00146C  00                 	db	0
   136  00146D  43                 	db	67
   137  00146E  68                 	db	104
   138  00146F  65                 	db	101
   139  001470  69                 	db	105
   140  001471  61                 	db	97
   141  001472  20                 	db	32
   142  001473  64                 	db	100
   143  001474  65                 	db	101
   144  001475  20                 	db	32
   145  001476  4D                 	db	77
   146  001477  61                 	db	97
   147  001478  6E                 	db	110
   148  001479  69                 	db	105
   149  00147A  61                 	db	97
   150  00147B  73                 	db	115
   151  00147C  00                 	db	0
   152  00147D  00                 	db	0
   153  00147E  45                 	db	69
   154  00147F  20                 	db	32
   155  001480  54                 	db	84
   156  001481  61                 	db	97
   157  001482  72                 	db	114
   158  001483  64                 	db	100
   159  001484  65                 	db	101
   160  001485  20                 	db	32
   161  001486  44                 	db	68
   162  001487  65                 	db	101
   163  001488  6D                 	db	109
   164  001489  61                 	db	97
   165  00148A  69                 	db	105
   166  00148B  73                 	db	115
   167  00148C  00                 	db	0
   168  00148D  00                 	db	0
   169  00148E  00                 	db	0
   170  00148F  53                 	db	83
   171  001490  6F                 	db	111
   172  001491  7A                 	db	122
   173  001492  69                 	db	105
   174  001493  6E                 	db	110
   175  001494  68                 	db	104
   176  001495  6F                 	db	111
   177  001496  00                 	db	0
   178  001497  00                 	db	0
   179  001498  00                 	db	0
   180  001499  00                 	db	0
   181  00149A  00                 	db	0
   182  00149B  00                 	db	0
   183  00149C  00                 	db	0
   184  00149D  00                 	db	0
   185  00149E  00                 	db	0
   186  00149F  00                 	db	0
   187  0014A0  43                 	db	67
   188  0014A1  69                 	db	105
   189  0014A2  67                 	db	103
   190  0014A3  61                 	db	97
   191  0014A4  6E                 	db	110
   192  0014A5  61                 	db	97
   193  0014A6  00                 	db	0
   194  0014A7  00                 	db	0
   195  0014A8  00                 	db	0
   196  0014A9  00                 	db	0
   197  0014AA  00                 	db	0
   198  0014AB  00                 	db	0
   199  0014AC  00                 	db	0
   200  0014AD  00                 	db	0
   201  0014AE  00                 	db	0
   202  0014AF  00                 	db	0
   203  0014B0  00                 	db	0
   204  0014B1  43                 	db	67
   205  0014B2  69                 	db	105
   206  0014B3  75                 	db	117
   207  0014B4  6D                 	db	109
   208  0014B5  65                 	db	101
   209  0014B6  73                 	db	115
   210  0014B7  20                 	db	32
   211  0014B8  64                 	db	100
   212  0014B9  65                 	db	101
   213  0014BA  20                 	db	32
   214  0014BB  56                 	db	86
   215  0014BC  6F                 	db	111
   216  0014BD  63                 	db	99
   217  0014BE  65                 	db	101
   218  0014BF  00                 	db	0
   219  0014C0  00                 	db	0
   220  0014C1  00                 	db	0
   221  0014C2  45                 	db	69
   222  0014C3  78                 	db	120
   223  0014C4  74                 	db	116
   224  0014C5  72                 	db	114
   225  0014C6  61                 	db	97
   226  0014C7  70                 	db	112
   227  0014C8  6F                 	db	111
   228  0014C9  6C                 	db	108
   229  0014CA  65                 	db	101
   230  0014CB  69                 	db	105
   231  0014CC  00                 	db	0
   232  0014CD  00                 	db	0
   233  0014CE  00                 	db	0
   234  0014CF  00                 	db	0
   235  0014D0  00                 	db	0
   236  0014D1  00                 	db	0
   237  0014D2  00                 	db	0
   238  0014D3  44                 	db	68
   239  0014D4  65                 	db	101
   240  0014D5  75                 	db	117
   241  0014D6  73                 	db	115
   242  0014D7  20                 	db	32
   243  0014D8  6D                 	db	109
   244  0014D9  65                 	db	101
   245  0014DA  20                 	db	32
   246  0014DB  4C                 	db	76
   247  0014DC  69                 	db	105
   248  0014DD  76                 	db	118
   249  0014DE  72                 	db	114
   250  0014DF  65                 	db	101
   251  0014E0  00                 	db	0
   252  0014E1  00                 	db	0
   253  0014E2  00                 	db	0
   254  0014E3  00                 	db	0
   255  0014E4  4D                 	db	77
   256  0014E5  61                 	db	97
   257  0014E6  72                 	db	114
   258  0014E7  61                 	db	97
   259  0014E8  76                 	db	118
   260  0014E9  69                 	db	105
   261  0014EA  6C                 	db	108
   262  0014EB  68                 	db	104
   263  0014EC  61                 	db	97
   264  0014ED  00                 	db	0
   265  0014EE  00                 	db	0
   266  0014EF  00                 	db	0
   267  0014F0  00                 	db	0
   268  0014F1  00                 	db	0
   269  0014F2  00                 	db	0
   270  0014F3  00                 	db	0
   271  0014F4  00                 	db	0
   272  0014F5  4D                 	db	77
   273  0014F6  65                 	db	101
   274  0014F7  64                 	db	100
   275  0014F8  69                 	db	105
   276  0014F9  64                 	db	100
   277  0014FA  61                 	db	97
   278  0014FB  20                 	db	32
   279  0014FC  45                 	db	69
   280  0014FD  78                 	db	120
   281  0014FE  61                 	db	97
   282  0014FF  74                 	db	116
   283  001500  61                 	db	97
   284  001501  00                 	db	0
   285  001502  00                 	db	0
   286  001503  00                 	db	0
   287  001504  00                 	db	0
   288  001505  00                 	db	0
   289                           
   290                           	psect	smallconst
   291  000600                     __psmallconst:
   292                           	callstack 0
   293  000600  00                 	db	0
   294  000601                     _valor:
   295                           	callstack 0
   296  000601  3F                 	db	63
   297  000602  06                 	db	6
   298  000603  5B                 	db	91
   299  000604  4F                 	db	79
   300  000605  66                 	db	102
   301  000606  6D                 	db	109
   302  000607  7D                 	db	125
   303  000608  07                 	db	7
   304  000609  7F                 	db	127
   305  00060A  6F                 	db	111
   306  00060B  77                 	db	119
   307  00060C  7C                 	db	124
   308  00060D  39                 	db	57
   309  00060E  5E                 	db	94
   310  00060F  79                 	db	121
   311  000610  71                 	db	113
   312  000611                     __end_of_valor:
   313                           	callstack 0
   314  0000                     _T0CON	set	4053
   315  0000                     _TMR0L	set	4054
   316  0000                     _TMR0H	set	4055
   317  0000                     _INTCON	set	4082
   318  0000                     _TRISE	set	3990
   319  0000                     _TRISD	set	3989
   320  0000                     _TRISC	set	3988
   321  0000                     _TRISB	set	3987
   322  0000                     _TRISA	set	3986
   323  0000                     _PORTE	set	3972
   324  0000                     _PORTD	set	3971
   325  0000                     _PORTC	set	3970
   326  0000                     _PORTB	set	3969
   327  0000                     _PORTA	set	3968
   328  000611                     STR_4:
   329  000611  3C                 	db	60	;'<'
   330  000612  2D                 	db	45
   331  000613  28                 	db	40
   332  000614  31                 	db	49	;'1'
   333  000615  29                 	db	41
   334  000616  20                 	db	32
   335  000617  28                 	db	40
   336  000618  2A                 	db	42
   337  000619  29                 	db	41
   338  00061A  20                 	db	32
   339  00061B  20                 	db	32
   340  00061C  28                 	db	40
   341  00061D  32                 	db	50	;'2'
   342  00061E  29                 	db	41
   343  00061F  2D                 	db	45
   344  000620  3E                 	db	62	;'>'
   345  000621  00                 	db	0
   346  000622                     STR_3:
   347  000622  45                 	db	69	;'E'
   348  000623  73                 	db	115	;'s'
   349  000624  63                 	db	99	;'c'
   350  000625  6F                 	db	111	;'o'
   351  000626  6C                 	db	108	;'l'
   352  000627  68                 	db	104	;'h'
   353  000628  61                 	db	97	;'a'
   354  000629  20                 	db	32
   355  00062A  61                 	db	97	;'a'
   356  00062B  20                 	db	32
   357  00062C  6D                 	db	109	;'m'
   358  00062D  75                 	db	117	;'u'
   359  00062E  73                 	db	115	;'s'
   360  00062F  69                 	db	105	;'i'
   361  000630  63                 	db	99	;'c'
   362  000631  61                 	db	97	;'a'
   363  000632  00                 	db	0
   364  000633                     STR_6:
   365  000633  2D                 	db	45
   366  000634  28                 	db	40
   367  000635  31                 	db	49	;'1'
   368  000636  29                 	db	41
   369  000637  20                 	db	32
   370  000638  20                 	db	32
   371  000639  28                 	db	40
   372  00063A  2A                 	db	42
   373  00063B  29                 	db	41
   374  00063C  20                 	db	32
   375  00063D  20                 	db	32
   376  00063E  28                 	db	40
   377  00063F  32                 	db	50	;'2'
   378  000640  29                 	db	41
   379  000641  2B                 	db	43
   380  000642  00                 	db	0
   381  000643                     STR_2:
   382  000643  50                 	db	80	;'P'
   383  000644  6C                 	db	108	;'l'
   384  000645  61                 	db	97	;'a'
   385  000646  79                 	db	121	;'y'
   386  000647  65                 	db	101	;'e'
   387  000648  72                 	db	114	;'r'
   388  000649  00                 	db	0
   389  00064A                     STR_1:
   390  00064A  4D                 	db	77	;'M'
   391  00064B  50                 	db	80	;'P'
   392  00064C  33                 	db	51	;'3'
   393  00064D  00                 	db	0
   394  00064E  00                 	db	0	; dummy byte at the end
   395  0000                     
   396                           ; #config settings
   397                           
   398                           	psect	cinit
   399  00180A                     __pcinit:
   400                           	callstack 0
   401  00180A                     start_initialization:
   402                           	callstack 0
   403  00180A                     __initialization:
   404                           	callstack 0
   405                           
   406                           ; Initialize objects allocated to BANK2 (170 bytes)
   407                           ; load TBLPTR registers with __pidataBANK2
   408  00180A  0E5C               	movlw	low __pidataBANK2
   409  00180C  6EF6               	movwf	tblptrl,c
   410  00180E  0E14               	movlw	high __pidataBANK2
   411  001810  6EF7               	movwf	tblptrh,c
   412  001812  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   413  001814  6EF8               	movwf	tblptru,c
   414  001816  EE02  F000         	lfsr	0,__pdataBANK2
   415  00181A  EE10 F0AA          	lfsr	1,170
   416  00181E                     copy_data0:
   417  00181E  0009               	tblrd		*+
   418  001820  CFF5 FFEE          	movff	tablat,postinc0
   419  001824  50E5               	movf	postdec1,w,c
   420  001826  50E1               	movf	fsr1l,w,c
   421  001828  E1FA               	bnz	copy_data0
   422                           
   423                           ; Initialize objects allocated to COMRAM (31 bytes)
   424                           ; load TBLPTR registers with __pidataCOMRAM
   425  00182A  0E2C               	movlw	low __pidataCOMRAM
   426  00182C  6EF6               	movwf	tblptrl,c
   427  00182E  0E1A               	movlw	high __pidataCOMRAM
   428  001830  6EF7               	movwf	tblptrh,c
   429  001832  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   430  001834  6EF8               	movwf	tblptru,c
   431  001836  EE00  F001         	lfsr	0,__pdataCOMRAM
   432  00183A  EE10 F01F          	lfsr	1,31
   433  00183E                     copy_data1:
   434  00183E  0009               	tblrd		*+
   435  001840  CFF5 FFEE          	movff	tablat,postinc0
   436  001844  50E5               	movf	postdec1,w,c
   437  001846  50E1               	movf	fsr1l,w,c
   438  001848  E1FA               	bnz	copy_data1
   439                           
   440                           ; Clear objects allocated to BANK1 (190 bytes)
   441  00184A  EE01  F000         	lfsr	0,__pbssBANK1
   442  00184E  0EBE               	movlw	190
   443  001850                     clear_0:
   444  001850  6AEE               	clrf	postinc0,c
   445  001852  06E8               	decf	wreg,f,c
   446  001854  E1FD               	bnz	clear_0
   447                           
   448                           ; Clear objects allocated to COMRAM (21 bytes)
   449  001856  EE00  F020         	lfsr	0,__pbssCOMRAM
   450  00185A  0E15               	movlw	21
   451  00185C                     clear_1:
   452  00185C  6AEE               	clrf	postinc0,c
   453  00185E  06E8               	decf	wreg,f,c
   454  001860  E1FD               	bnz	clear_1
   455  001862                     end_of_initialization:
   456                           	callstack 0
   457  001862                     __end_of__initialization:
   458                           	callstack 0
   459  001862  0E00               	movlw	low (__Lmediumconst shr (0+16))
   460  001864  6EF8               	movwf	tblptru,c
   461  001866  0100               	movlb	0
   462  001868  EFD6  F00A         	goto	_main	;jump to C main() function
   463                           
   464                           	psect	bssCOMRAM
   465  000020                     __pbssCOMRAM:
   466                           	callstack 0
   467  000020                     kpDebounce@valorAntigo:
   468                           	callstack 0
   469  000020                     	ds	2
   470  000022                     kpDebounce@valorNovo:
   471                           	callstack 0
   472  000022                     	ds	2
   473  000024                     _valor@keypad$F294:
   474                           	callstack 0
   475  000024                     	ds	2
   476  000026                     kpDebounce@tempo:
   477                           	callstack 0
   478  000026                     	ds	1
   479  000027                     _i:
   480                           	callstack 0
   481  000027                     	ds	1
   482  000028                     _v3:
   483                           	callstack 0
   484  000028                     	ds	1
   485  000029                     _v2:
   486                           	callstack 0
   487  000029                     	ds	1
   488  00002A                     _v1:
   489                           	callstack 0
   490  00002A                     	ds	1
   491  00002B                     _v0:
   492                           	callstack 0
   493  00002B                     	ds	1
   494  00002C                     _display:
   495                           	callstack 0
   496  00002C                     	ds	1
   497  00002D                     _cnt:
   498                           	callstack 0
   499  00002D                     	ds	1
   500  00002E                     _segundo2:
   501                           	callstack 0
   502  00002E                     	ds	1
   503  00002F                     _segundo1:
   504                           	callstack 0
   505  00002F                     	ds	1
   506  000030                     _minuto2:
   507                           	callstack 0
   508  000030                     	ds	1
   509  000031                     _minuto1:
   510                           	callstack 0
   511  000031                     	ds	1
   512  000032                     _tempo:
   513                           	callstack 0
   514  000032                     	ds	1
   515  000033                     _flag:
   516                           	callstack 0
   517  000033                     	ds	1
   518  000034                     _indice:
   519                           	callstack 0
   520  000034                     	ds	1
   521                           
   522                           	psect	dataCOMRAM
   523  000001                     __pdataCOMRAM:
   524                           	callstack 0
   525  000001                     _duracoes:
   526                           	callstack 0
   527  000001                     	ds	20
   528  000015                     _teclas:
   529                           	callstack 0
   530  000015                     	ds	8
   531  00001D                     _volume:
   532                           	callstack 0
   533  00001D                     	ds	1
   534  00001E                     _pause:
   535                           	callstack 0
   536  00001E                     	ds	1
   537  00001F                     _tecla:
   538                           	callstack 0
   539  00001F                     	ds	1
   540                           
   541                           	psect	bssBANK1
   542  000100                     __pbssBANK1:
   543                           	callstack 0
   544  000100                     _musicas:
   545                           	callstack 0
   546  000100                     	ds	190
   547                           
   548                           	psect	dataBANK2
   549  000200                     __pdataBANK2:
   550                           	callstack 0
   551  000200                     _nomes:
   552                           	callstack 0
   553  000200                     	ds	170
   554                           
   555                           	psect	cstackCOMRAM
   556  000035                     __pcstackCOMRAM:
   557                           	callstack 0
   558  000035                     ??_kpDebounce:
   559  000035                     ?_kpRead:
   560                           	callstack 0
   561  000035                     ?___wmul:
   562                           	callstack 0
   563  000035                     ?___awdiv:
   564                           	callstack 0
   565  000035                     Delay40us@i:
   566                           	callstack 0
   567  000035                     ssdDigit@pos:
   568                           	callstack 0
   569  000035                     digitalWrite@pin:
   570                           	callstack 0
   571  000035                     pinMode@pin:
   572                           	callstack 0
   573  000035                     atraso_ms@t:
   574                           	callstack 0
   575  000035                     ___wmul@multiplier:
   576                           	callstack 0
   577  000035                     ___awdiv@dividend:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x0
   581  000035                     	ds	1
   582  000036                     Delay2ms@i:
   583                           	callstack 0
   584  000036                     ssdDigit@val:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x1
   588  000036                     	ds	1
   589  000037                     digitalWrite@value:
   590                           	callstack 0
   591  000037                     pinMode@type:
   592                           	callstack 0
   593  000037                     atraso_ms@i:
   594                           	callstack 0
   595  000037                     ___wmul@multiplicand:
   596                           	callstack 0
   597  000037                     ___awdiv@divisor:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x2
   601  000037                     	ds	2
   602  000039                     ??_digitalWrite:
   603  000039                     ??_pinMode:
   604  000039                     atraso_ms@j:
   605                           	callstack 0
   606  000039                     ___awdiv@counter:
   607                           	callstack 0
   608  000039                     ___wmul@product:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x4
   612  000039                     	ds	1
   613  00003A                     atraso_ms@k:
   614                           	callstack 0
   615  00003A                     kpDebounce@old_D:
   616                           	callstack 0
   617  00003A                     ___awdiv@sign:
   618                           	callstack 0
   619                           
   620                           ; 1 bytes @ 0x5
   621  00003A                     	ds	1
   622  00003B                     ??_ssdUpdate:
   623  00003B                     lcdCommand@old_D:
   624                           	callstack 0
   625  00003B                     lcdData@valor:
   626                           	callstack 0
   627  00003B                     alterarVolume@opt:
   628                           	callstack 0
   629  00003B                     kpDebounce@k:
   630                           	callstack 0
   631  00003B                     ___awdiv@quotient:
   632                           	callstack 0
   633  00003B                     strcpy@dest:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x6
   637  00003B                     	ds	1
   638  00003C                     lcdCommand@cmd:
   639                           	callstack 0
   640  00003C                     lcdData@old_D:
   641                           	callstack 0
   642  00003C                     alterarVolume@old_D:
   643                           	callstack 0
   644                           
   645                           ; 1 bytes @ 0x7
   646  00003C                     	ds	1
   647  00003D                     ?___awmod:
   648                           	callstack 0
   649  00003D                     lcdPosition@coluna:
   650                           	callstack 0
   651  00003D                     kpDebounce@j:
   652                           	callstack 0
   653  00003D                     lcdStr@str:
   654                           	callstack 0
   655  00003D                     ___awmod@dividend:
   656                           	callstack 0
   657  00003D                     strcpy@src:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x8
   661  00003D                     	ds	1
   662  00003E                     lcdPosition@linha:
   663                           	callstack 0
   664  00003E                     kpDebounce@i:
   665                           	callstack 0
   666                           
   667                           ; 1 bytes @ 0x9
   668  00003E                     	ds	1
   669  00003F                     ??_lcdStr:
   670  00003F                     lcdPosition@comando:
   671                           	callstack 0
   672  00003F                     ___awmod@divisor:
   673                           	callstack 0
   674  00003F                     strcpy@s:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0xA
   678  00003F                     	ds	2
   679  000041                     lcdStr@i:
   680                           	callstack 0
   681  000041                     ___awmod@counter:
   682                           	callstack 0
   683  000041                     strcpy@d:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0xC
   687  000041                     	ds	1
   688  000042                     ___awmod@sign:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0xD
   692  000042                     	ds	1
   693  000043                     songsInit@i:
   694                           	callstack 0
   695  000043                     _playSong$957:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0xE
   699  000043                     	ds	2
   700  000045                     _playSong$958:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x10
   704  000045                     	ds	2
   705  000047                     playSong@j:
   706                           	callstack 0
   707                           
   708                           ; 1 bytes @ 0x12
   709  000047                     	ds	1
   710  000048                     ??_chooseSong:
   711                           
   712                           ; 1 bytes @ 0x13
   713  000048                     	ds	2
   714  00004A                     
   715                           ; 1 bytes @ 0x15
   716 ;;
   717 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   718 ;;
   719 ;; *************** function _main *****************
   720 ;; Defined at:
   721 ;;		line 11 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;		None
   724 ;; Auto vars:     Size  Location     Type
   725 ;;		None
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   735 ;;      Params:         0       0       0       0       0       0       0
   736 ;;      Locals:         0       0       0       0       0       0       0
   737 ;;      Temps:          0       0       0       0       0       0       0
   738 ;;      Totals:         0       0       0       0       0       0       0
   739 ;;Total ram usage:        0 bytes
   740 ;; Hardware stack levels required when called:    6
   741 ;; This function calls:
   742 ;;		_atraso_ms
   743 ;;		_chooseSong
   744 ;;		_kpInit
   745 ;;		_lcdCommand
   746 ;;		_lcdInit
   747 ;;		_lcdPosition
   748 ;;		_lcdStr
   749 ;;		_songsInit
   750 ;;		_ssdInit
   751 ;; This function is called by:
   752 ;;		Startup code after reset
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           	psect	text0
   757  0015AC                     __ptext0:
   758                           	callstack 0
   759  0015AC                     _main:
   760                           	callstack 25
   761  0015AC                     
   762                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 13:     songsInit();
   763  0015AC  EC83  F00A         	call	_songsInit	;wreg free
   764  0015B0                     
   765                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 14:     lcdInit();
   766  0015B0  EC5B  F00B         	call	_lcdInit	;wreg free
   767  0015B4                     
   768                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 15:     ssdInit();
   769  0015B4  EC8F  F00C         	call	_ssdInit	;wreg free
   770  0015B8                     
   771                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 16:     kpInit();
   772  0015B8  EC40  F00D         	call	_kpInit	;wreg free
   773  0015BC                     
   774                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 17:     lcdCommand(0x0F);
   775  0015BC  0E0F               	movlw	15
   776  0015BE  EC1C  F00B         	call	_lcdCommand
   777  0015C2                     
   778                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 19:     lcdPosition(0, 6);
   779  0015C2  0E06               	movlw	6
   780  0015C4  6E3D               	movwf	lcdPosition@coluna^0,c
   781  0015C6  0E00               	movlw	0
   782  0015C8  EC36  F00C         	call	_lcdPosition
   783  0015CC                     
   784                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 20:     lcdStr("MP3");
   785  0015CC  0E4A               	movlw	low STR_1
   786  0015CE  6E3D               	movwf	lcdStr@str^0,c
   787  0015D0  0E06               	movlw	high STR_1
   788  0015D2  6E3E               	movwf	(lcdStr@str+1)^0,c
   789  0015D4  EC97  F00B         	call	_lcdStr	;wreg free
   790  0015D8                     
   791                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 21:     lcdPosition(1, 4);
   792  0015D8  0E04               	movlw	4
   793  0015DA  6E3D               	movwf	lcdPosition@coluna^0,c
   794  0015DC  0E01               	movlw	1
   795  0015DE  EC36  F00C         	call	_lcdPosition
   796  0015E2                     
   797                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 22:     lcdStr("Player");
   798  0015E2  0E43               	movlw	low STR_2
   799  0015E4  6E3D               	movwf	lcdStr@str^0,c
   800  0015E6  0E06               	movlw	high STR_2
   801  0015E8  6E3E               	movwf	(lcdStr@str+1)^0,c
   802  0015EA  EC97  F00B         	call	_lcdStr	;wreg free
   803  0015EE                     
   804                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 23:     atraso_ms(2000);
   805  0015EE  0E07               	movlw	7
   806  0015F0  6E36               	movwf	(atraso_ms@t+1)^0,c
   807  0015F2  0ED0               	movlw	208
   808  0015F4  6E35               	movwf	atraso_ms@t^0,c
   809  0015F6  ECD3  F00B         	call	_atraso_ms	;wreg free
   810  0015FA                     
   811                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 25:     lcdCommand(0x01);
   812  0015FA  0E01               	movlw	1
   813  0015FC  EC1C  F00B         	call	_lcdCommand
   814  001600                     
   815                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 26:     lcdPosition(0, 0);
   816  001600  0E00               	movlw	0
   817  001602  6E3D               	movwf	lcdPosition@coluna^0,c
   818  001604  0E00               	movlw	0
   819  001606  EC36  F00C         	call	_lcdPosition
   820  00160A                     
   821                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 27:     lcdStr("Escolha a musica"
      +                          );
   822  00160A  0E22               	movlw	low STR_3
   823  00160C  6E3D               	movwf	lcdStr@str^0,c
   824  00160E  0E06               	movlw	high STR_3
   825  001610  6E3E               	movwf	(lcdStr@str+1)^0,c
   826  001612  EC97  F00B         	call	_lcdStr	;wreg free
   827  001616                     l2513:
   828                           
   829                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 29:         lcdPosition(1, 0);
   830  001616  0E00               	movlw	0
   831  001618  6E3D               	movwf	lcdPosition@coluna^0,c
   832  00161A  0E01               	movlw	1
   833  00161C  EC36  F00C         	call	_lcdPosition
   834  001620                     
   835                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 30:         lcdStr("<-(1) (*)  (2
      +                          )->");
   836  001620  0E11               	movlw	low STR_4
   837  001622  6E3D               	movwf	lcdStr@str^0,c
   838  001624  0E06               	movlw	high STR_4
   839  001626  6E3E               	movwf	(lcdStr@str+1)^0,c
   840  001628  EC97  F00B         	call	_lcdStr	;wreg free
   841  00162C                     
   842                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 31:         chooseSong();
   843  00162C  ECD6  F008         	call	_chooseSong	;wreg free
   844                           
   845                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 32:     }
   846  001630  EF0B  F00B         	goto	l2513
   847  001634  EF00  F000         	goto	start
   848  001638                     __end_of_main:
   849                           	callstack 0
   850                           
   851 ;; *************** function _ssdInit *****************
   852 ;; Defined at:
   853 ;;		line 101 in file "ssd.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		wreg, status,2, status,0, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   867 ;;      Params:         0       0       0       0       0       0       0
   868 ;;      Locals:         0       0       0       0       0       0       0
   869 ;;      Temps:          0       0       0       0       0       0       0
   870 ;;      Totals:         0       0       0       0       0       0       0
   871 ;;Total ram usage:        0 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; Hardware stack levels required when called:    1
   874 ;; This function calls:
   875 ;;		_pinMode
   876 ;; This function is called by:
   877 ;;		_main
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           	psect	text1
   882  00191E                     __ptext1:
   883                           	callstack 0
   884  00191E                     _ssdInit:
   885                           	callstack 29
   886  00191E                     
   887                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
   888  00191E  0E00               	movlw	0
   889  001920  6E36               	movwf	(pinMode@pin+1)^0,c
   890  001922  0E02               	movlw	2
   891  001924  6E35               	movwf	pinMode@pin^0,c
   892  001926  0E00               	movlw	0
   893  001928  6E38               	movwf	(pinMode@type+1)^0,c
   894  00192A  0E00               	movlw	0
   895  00192C  6E37               	movwf	pinMode@type^0,c
   896  00192E  EC84  F004         	call	_pinMode	;wreg free
   897                           
   898                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
   899  001932  0E00               	movlw	0
   900  001934  6E36               	movwf	(pinMode@pin+1)^0,c
   901  001936  0E03               	movlw	3
   902  001938  6E35               	movwf	pinMode@pin^0,c
   903  00193A  0E00               	movlw	0
   904  00193C  6E38               	movwf	(pinMode@type+1)^0,c
   905  00193E  0E00               	movlw	0
   906  001940  6E37               	movwf	pinMode@type^0,c
   907  001942  EC84  F004         	call	_pinMode	;wreg free
   908                           
   909                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
   910  001946  0E00               	movlw	0
   911  001948  6E36               	movwf	(pinMode@pin+1)^0,c
   912  00194A  0E04               	movlw	4
   913  00194C  6E35               	movwf	pinMode@pin^0,c
   914  00194E  0E00               	movlw	0
   915  001950  6E38               	movwf	(pinMode@type+1)^0,c
   916  001952  0E00               	movlw	0
   917  001954  6E37               	movwf	pinMode@type^0,c
   918  001956  EC84  F004         	call	_pinMode	;wreg free
   919                           
   920                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
   921  00195A  0E00               	movlw	0
   922  00195C  6E36               	movwf	(pinMode@pin+1)^0,c
   923  00195E  0E05               	movlw	5
   924  001960  6E35               	movwf	pinMode@pin^0,c
   925  001962  0E00               	movlw	0
   926  001964  6E38               	movwf	(pinMode@type+1)^0,c
   927  001966  0E00               	movlw	0
   928  001968  6E37               	movwf	pinMode@type^0,c
   929  00196A  EC84  F004         	call	_pinMode	;wreg free
   930  00196E                     
   931                           ;ssd.c: 109:     TRISD = 0x00;
   932  00196E  0E00               	movlw	0
   933  001970  6E95               	movwf	149,c	;volatile
   934  001972  0012               	return		;funcret
   935  001974                     __end_of_ssdInit:
   936                           	callstack 0
   937                           
   938 ;; *************** function _songsInit *****************
   939 ;; Defined at:
   940 ;;		line 22 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  i               2   14[COMRAM] unsigned int 
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   954 ;;      Params:         0       0       0       0       0       0       0
   955 ;;      Locals:         2       0       0       0       0       0       0
   956 ;;      Temps:          0       0       0       0       0       0       0
   957 ;;      Totals:         2       0       0       0       0       0       0
   958 ;;Total ram usage:        2 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; Hardware stack levels required when called:    1
   961 ;; This function calls:
   962 ;;		___wmul
   963 ;;		_strcpy
   964 ;; This function is called by:
   965 ;;		_main
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	text2
   970  001506                     __ptext2:
   971                           	callstack 0
   972  001506                     _songsInit:
   973                           	callstack 29
   974  001506                     
   975                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 23:     TRISC = 0x00;
   976  001506  0E00               	movlw	0
   977  001508  6E94               	movwf	148,c	;volatile
   978                           
   979                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 24:     for (unsigned int i = 0;
      +                           i < 10; i++) {
   980  00150A  0E00               	movlw	0
   981  00150C  6E44               	movwf	(songsInit@i+1)^0,c
   982  00150E  0E00               	movlw	0
   983  001510  6E43               	movwf	songsInit@i^0,c
   984  001512                     l2391:
   985                           
   986                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 25:         musicas[i].duracao =
      +                           duracoes[i];
   987  001512  90D8               	bcf	status,0,c
   988  001514  3443               	rlcf	songsInit@i^0,w,c
   989  001516  6ED9               	movwf	fsr2l,c
   990  001518  3444               	rlcf	(songsInit@i+1)^0,w,c
   991  00151A  6EDA               	movwf	fsr2h,c
   992  00151C  0E01               	movlw	low _duracoes
   993  00151E  26D9               	addwf	fsr2l,f,c
   994  001520  0E00               	movlw	high _duracoes
   995  001522  22DA               	addwfc	fsr2h,f,c
   996  001524  C043  F035         	movff	songsInit@i,___wmul@multiplier
   997  001528  C044  F036         	movff	songsInit@i+1,___wmul@multiplier+1
   998  00152C  0E00               	movlw	0
   999  00152E  6E38               	movwf	(___wmul@multiplicand+1)^0,c
  1000  001530  0E13               	movlw	19
  1001  001532  6E37               	movwf	___wmul@multiplicand^0,c
  1002  001534  EC03  F00D         	call	___wmul	;wreg free
  1003  001538  0E00               	movlw	low _musicas
  1004  00153A  2435               	addwf	?___wmul^0,w,c
  1005  00153C  6EE1               	movwf	fsr1l,c
  1006  00153E  0E01               	movlw	high _musicas
  1007  001540  2036               	addwfc	(?___wmul+1)^0,w,c
  1008  001542  6EE2               	movwf	fsr1h,c
  1009  001544  CFDE FFE6          	movff	postinc2,postinc1
  1010  001548  CFDD FFE5          	movff	postdec2,postdec1
  1011                           
  1012                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 26:         strcpy(musicas[i].no
      +                          me, (char*) nomes[i]);
  1013  00154C  C043  F035         	movff	songsInit@i,___wmul@multiplier
  1014  001550  C044  F036         	movff	songsInit@i+1,___wmul@multiplier+1
  1015  001554  0E00               	movlw	0
  1016  001556  6E38               	movwf	(___wmul@multiplicand+1)^0,c
  1017  001558  0E13               	movlw	19
  1018  00155A  6E37               	movwf	___wmul@multiplicand^0,c
  1019  00155C  EC03  F00D         	call	___wmul	;wreg free
  1020  001560  0E02               	movlw	low (_musicas+2)
  1021  001562  2435               	addwf	?___wmul^0,w,c
  1022  001564  6E3B               	movwf	strcpy@dest^0,c
  1023  001566  0E01               	movlw	high (_musicas+2)
  1024  001568  2036               	addwfc	(?___wmul+1)^0,w,c
  1025  00156A  6E3C               	movwf	(strcpy@dest+1)^0,c
  1026  00156C  C043  F035         	movff	songsInit@i,___wmul@multiplier
  1027  001570  C044  F036         	movff	songsInit@i+1,___wmul@multiplier+1
  1028  001574  0E00               	movlw	0
  1029  001576  6E38               	movwf	(___wmul@multiplicand+1)^0,c
  1030  001578  0E11               	movlw	17
  1031  00157A  6E37               	movwf	___wmul@multiplicand^0,c
  1032  00157C  EC03  F00D         	call	___wmul	;wreg free
  1033  001580  0E00               	movlw	low _nomes
  1034  001582  2435               	addwf	?___wmul^0,w,c
  1035  001584  6E3D               	movwf	strcpy@src^0,c
  1036  001586  0E02               	movlw	high _nomes
  1037  001588  2036               	addwfc	(?___wmul+1)^0,w,c
  1038  00158A  6E3E               	movwf	(strcpy@src+1)^0,c
  1039  00158C  ECE4  F00C         	call	_strcpy	;wreg free
  1040  001590                     
  1041                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 27:     }
  1042  001590  4A43               	infsnz	songsInit@i^0,f,c
  1043  001592  2A44               	incf	(songsInit@i+1)^0,f,c
  1044  001594  5044               	movf	(songsInit@i+1)^0,w,c
  1045  001596  E109               	bnz	u2330
  1046  001598  0E0A               	movlw	10
  1047  00159A  5C43               	subwf	songsInit@i^0,w,c
  1048  00159C  A0D8               	btfss	status,0,c
  1049  00159E  EFD3  F00A         	goto	u2331
  1050  0015A2  EFD5  F00A         	goto	u2330
  1051  0015A6                     u2331:
  1052  0015A6  EF89  F00A         	goto	l2391
  1053  0015AA                     u2330:
  1054  0015AA  0012               	return		;funcret
  1055  0015AC                     __end_of_songsInit:
  1056                           	callstack 0
  1057                           
  1058 ;; *************** function _strcpy *****************
  1059 ;; Defined at:
  1060 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  dest            2    6[COMRAM] PTR unsigned char 
  1063 ;;		 -> musicas(190), 
  1064 ;;  src             2    8[COMRAM] PTR const unsigned char 
  1065 ;;		 -> nomes(170), 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  d               2   12[COMRAM] PTR unsigned char 
  1068 ;;		 -> musicas(190), 
  1069 ;;  s               2   10[COMRAM] PTR const unsigned char 
  1070 ;;		 -> nomes(170), 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  2    6[COMRAM] PTR unsigned char 
  1073 ;; Registers used:
  1074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1080 ;;      Params:         4       0       0       0       0       0       0
  1081 ;;      Locals:         4       0       0       0       0       0       0
  1082 ;;      Temps:          0       0       0       0       0       0       0
  1083 ;;      Totals:         8       0       0       0       0       0       0
  1084 ;;Total ram usage:        8 bytes
  1085 ;; Hardware stack levels used:    1
  1086 ;; This function calls:
  1087 ;;		Nothing
  1088 ;; This function is called by:
  1089 ;;		_songsInit
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text3
  1094  0019C8                     __ptext3:
  1095                           	callstack 0
  1096  0019C8                     _strcpy:
  1097                           	callstack 29
  1098  0019C8  C03D  F03F         	movff	strcpy@src,strcpy@s
  1099  0019CC  C03E  F040         	movff	strcpy@src+1,strcpy@s+1
  1100  0019D0  C03B  F041         	movff	strcpy@dest,strcpy@d
  1101  0019D4  C03C  F042         	movff	strcpy@dest+1,strcpy@d+1
  1102  0019D8                     l2277:
  1103  0019D8  C03F  FFD9         	movff	strcpy@s,fsr2l
  1104  0019DC  C040  FFDA         	movff	strcpy@s+1,fsr2h
  1105  0019E0  4A3F               	infsnz	strcpy@s^0,f,c
  1106  0019E2  2A40               	incf	(strcpy@s+1)^0,f,c
  1107  0019E4  C041  FFE1         	movff	strcpy@d,fsr1l
  1108  0019E8  C042  FFE2         	movff	strcpy@d+1,fsr1h
  1109  0019EC  4A41               	infsnz	strcpy@d^0,f,c
  1110  0019EE  2A42               	incf	(strcpy@d+1)^0,f,c
  1111  0019F0  CFDF FFE7          	movff	indf2,indf1
  1112  0019F4  50E7               	movf	indf1,w,c
  1113  0019F6  A4D8               	btfss	status,2,c
  1114  0019F8  EF00  F00D         	goto	u2201
  1115  0019FC  EF02  F00D         	goto	u2200
  1116  001A00                     u2201:
  1117  001A00  EFEC  F00C         	goto	l2277
  1118  001A04                     u2200:
  1119  001A04  0012               	return		;funcret
  1120  001A06                     __end_of_strcpy:
  1121                           	callstack 0
  1122                           
  1123 ;; *************** function ___wmul *****************
  1124 ;; Defined at:
  1125 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  multiplier      2    0[COMRAM] unsigned int 
  1128 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  product         2    4[COMRAM] unsigned int 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  2    0[COMRAM] unsigned int 
  1133 ;; Registers used:
  1134 ;;		wreg, status,2, status,0, prodl, prodh
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1140 ;;      Params:         4       0       0       0       0       0       0
  1141 ;;      Locals:         2       0       0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0
  1143 ;;      Totals:         6       0       0       0       0       0       0
  1144 ;;Total ram usage:        6 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_songsInit
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text4
  1154  001A06                     __ptext4:
  1155                           	callstack 0
  1156  001A06                     ___wmul:
  1157                           	callstack 29
  1158  001A06  5035               	movf	___wmul@multiplier^0,w,c
  1159  001A08  0237               	mulwf	___wmul@multiplicand^0,c
  1160  001A0A  CFF3 F039          	movff	prodl,___wmul@product
  1161  001A0E  CFF4 F03A          	movff	prodh,___wmul@product+1
  1162  001A12  5035               	movf	___wmul@multiplier^0,w,c
  1163  001A14  0238               	mulwf	(___wmul@multiplicand+1)^0,c
  1164  001A16  50F3               	movf	243,w,c
  1165  001A18  263A               	addwf	(___wmul@product+1)^0,f,c
  1166  001A1A  5036               	movf	(___wmul@multiplier+1)^0,w,c
  1167  001A1C  0237               	mulwf	___wmul@multiplicand^0,c
  1168  001A1E  50F3               	movf	243,w,c
  1169  001A20  263A               	addwf	(___wmul@product+1)^0,f,c
  1170  001A22  C039  F035         	movff	___wmul@product,?___wmul
  1171  001A26  C03A  F036         	movff	___wmul@product+1,?___wmul+1
  1172  001A2A  0012               	return		;funcret
  1173  001A2C                     __end_of___wmul:
  1174                           	callstack 0
  1175                           
  1176 ;; *************** function _lcdInit *****************
  1177 ;; Defined at:
  1178 ;;		line 87 in file "lcd.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;		None
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;		None
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg, status,2, status,0, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1192 ;;      Params:         0       0       0       0       0       0       0
  1193 ;;      Locals:         0       0       0       0       0       0       0
  1194 ;;      Temps:          0       0       0       0       0       0       0
  1195 ;;      Totals:         0       0       0       0       0       0       0
  1196 ;;Total ram usage:        0 bytes
  1197 ;; Hardware stack levels used:    1
  1198 ;; Hardware stack levels required when called:    3
  1199 ;; This function calls:
  1200 ;;		_Delay2ms
  1201 ;;		_lcdCommand
  1202 ;;		_pinMode
  1203 ;; This function is called by:
  1204 ;;		_main
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text5
  1209  0016B6                     __ptext5:
  1210                           	callstack 0
  1211  0016B6                     _lcdInit:
  1212                           	callstack 27
  1213  0016B6                     
  1214                           ;lcd.c: 89:     pinMode(PIN_E2, 0);
  1215  0016B6  0E00               	movlw	0
  1216  0016B8  6E36               	movwf	(pinMode@pin+1)^0,c
  1217  0016BA  0E22               	movlw	34
  1218  0016BC  6E35               	movwf	pinMode@pin^0,c
  1219  0016BE  0E00               	movlw	0
  1220  0016C0  6E38               	movwf	(pinMode@type+1)^0,c
  1221  0016C2  0E00               	movlw	0
  1222  0016C4  6E37               	movwf	pinMode@type^0,c
  1223  0016C6  EC84  F004         	call	_pinMode	;wreg free
  1224                           
  1225                           ;lcd.c: 90:     pinMode(PIN_E1, 0);
  1226  0016CA  0E00               	movlw	0
  1227  0016CC  6E36               	movwf	(pinMode@pin+1)^0,c
  1228  0016CE  0E21               	movlw	33
  1229  0016D0  6E35               	movwf	pinMode@pin^0,c
  1230  0016D2  0E00               	movlw	0
  1231  0016D4  6E38               	movwf	(pinMode@type+1)^0,c
  1232  0016D6  0E00               	movlw	0
  1233  0016D8  6E37               	movwf	pinMode@type^0,c
  1234  0016DA  EC84  F004         	call	_pinMode	;wreg free
  1235  0016DE                     
  1236                           ;lcd.c: 91:     TRISD = 0x00;
  1237  0016DE  0E00               	movlw	0
  1238  0016E0  6E95               	movwf	149,c	;volatile
  1239  0016E2                     
  1240                           ;lcd.c: 94:     Delay2ms();
  1241  0016E2  EC26  F00D         	call	_Delay2ms	;wreg free
  1242  0016E6                     
  1243                           ;lcd.c: 95:     Delay2ms();
  1244  0016E6  EC26  F00D         	call	_Delay2ms	;wreg free
  1245  0016EA                     
  1246                           ;lcd.c: 96:     Delay2ms();
  1247  0016EA  EC26  F00D         	call	_Delay2ms	;wreg free
  1248  0016EE                     
  1249                           ;lcd.c: 97:     Delay2ms();
  1250  0016EE  EC26  F00D         	call	_Delay2ms	;wreg free
  1251  0016F2                     
  1252                           ;lcd.c: 98:     Delay2ms();
  1253  0016F2  EC26  F00D         	call	_Delay2ms	;wreg free
  1254  0016F6                     
  1255                           ;lcd.c: 100:     lcdCommand(0x38);
  1256  0016F6  0E38               	movlw	56
  1257  0016F8  EC1C  F00B         	call	_lcdCommand
  1258  0016FC                     
  1259                           ;lcd.c: 101:     Delay2ms();
  1260  0016FC  EC26  F00D         	call	_Delay2ms	;wreg free
  1261  001700                     
  1262                           ;lcd.c: 102:     Delay2ms();
  1263  001700  EC26  F00D         	call	_Delay2ms	;wreg free
  1264  001704                     
  1265                           ;lcd.c: 103:     lcdCommand(0x38);
  1266  001704  0E38               	movlw	56
  1267  001706  EC1C  F00B         	call	_lcdCommand
  1268  00170A                     
  1269                           ;lcd.c: 104:     Delay2ms();
  1270  00170A  EC26  F00D         	call	_Delay2ms	;wreg free
  1271  00170E                     
  1272                           ;lcd.c: 105:     lcdCommand(0x38);
  1273  00170E  0E38               	movlw	56
  1274  001710  EC1C  F00B         	call	_lcdCommand
  1275  001714                     
  1276                           ;lcd.c: 107:     lcdCommand(0x38);
  1277  001714  0E38               	movlw	56
  1278  001716  EC1C  F00B         	call	_lcdCommand
  1279  00171A                     
  1280                           ;lcd.c: 108:     lcdCommand(0x06);
  1281  00171A  0E06               	movlw	6
  1282  00171C  EC1C  F00B         	call	_lcdCommand
  1283  001720                     
  1284                           ;lcd.c: 111:     lcdCommand(0x0C);
  1285  001720  0E0C               	movlw	12
  1286  001722  EC1C  F00B         	call	_lcdCommand
  1287  001726                     
  1288                           ;lcd.c: 112:     lcdCommand(0x01);
  1289  001726  0E01               	movlw	1
  1290  001728  EC1C  F00B         	call	_lcdCommand
  1291  00172C  0012               	return		;funcret
  1292  00172E                     __end_of_lcdInit:
  1293                           	callstack 0
  1294                           
  1295 ;; *************** function _pinMode *****************
  1296 ;; Defined at:
  1297 ;;		line 54 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  pin             2    0[COMRAM] int 
  1300 ;;  type            2    2[COMRAM] int 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2, status,0
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1312 ;;      Params:         4       0       0       0       0       0       0
  1313 ;;      Locals:         0       0       0       0       0       0       0
  1314 ;;      Temps:          2       0       0       0       0       0       0
  1315 ;;      Totals:         6       0       0       0       0       0       0
  1316 ;;Total ram usage:        6 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_lcdInit
  1322 ;;		_ssdInit
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text6
  1327  000908                     __ptext6:
  1328                           	callstack 0
  1329  000908                     _pinMode:
  1330                           	callstack 29
  1331  000908                     
  1332                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 56:     if(pin <8){
  1333  000908  BE36               	btfsc	(pinMode@pin+1)^0,7,c
  1334  00090A  EF92  F004         	goto	u2000
  1335  00090E  5036               	movf	(pinMode@pin+1)^0,w,c
  1336  000910  E107               	bnz	u2001
  1337  000912  0E08               	movlw	8
  1338  000914  5C35               	subwf	pinMode@pin^0,w,c
  1339  000916  B0D8               	btfsc	status,0,c
  1340  000918  EF90  F004         	goto	u2001
  1341  00091C  EF92  F004         	goto	u2000
  1342  000920                     u2001:
  1343  000920  EFBC  F004         	goto	l2243
  1344  000924                     u2000:
  1345  000924                     
  1346                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 57:         if (type){ ((TRISA) |= 
      +                          (1<<(pin)));}
  1347  000924  5037               	movf	pinMode@type^0,w,c
  1348  000926  1038               	iorwf	(pinMode@type+1)^0,w,c
  1349  000928  B4D8               	btfsc	status,2,c
  1350  00092A  EF99  F004         	goto	u2011
  1351  00092E  EF9B  F004         	goto	u2010
  1352  000932                     u2011:
  1353  000932  EFAB  F004         	goto	l2241
  1354  000936                     u2010:
  1355  000936  C035  F039         	movff	pinMode@pin,??_pinMode
  1356  00093A  0E01               	movlw	1
  1357  00093C  6E3A               	movwf	(??_pinMode+1)^0,c
  1358  00093E  2A39               	incf	??_pinMode^0,f,c
  1359  000940  EFA4  F004         	goto	u2024
  1360  000944                     u2025:
  1361  000944  90D8               	bcf	status,0,c
  1362  000946  363A               	rlcf	(??_pinMode+1)^0,f,c
  1363  000948                     u2024:
  1364  000948  2E39               	decfsz	??_pinMode^0,f,c
  1365  00094A  EFA2  F004         	goto	u2025
  1366  00094E  503A               	movf	(??_pinMode+1)^0,w,c
  1367  000950  1292               	iorwf	146,f,c	;volatile
  1368  000952  EFAA  F005         	goto	l76
  1369  000956                     l2241:
  1370  000956  C035  F039         	movff	pinMode@pin,??_pinMode
  1371  00095A  0E01               	movlw	1
  1372  00095C  6E3A               	movwf	(??_pinMode+1)^0,c
  1373  00095E  2A39               	incf	??_pinMode^0,f,c
  1374  000960  EFB4  F004         	goto	u2034
  1375  000964                     u2035:
  1376  000964  90D8               	bcf	status,0,c
  1377  000966  363A               	rlcf	(??_pinMode+1)^0,f,c
  1378  000968                     u2034:
  1379  000968  2E39               	decfsz	??_pinMode^0,f,c
  1380  00096A  EFB2  F004         	goto	u2035
  1381  00096E  503A               	movf	(??_pinMode+1)^0,w,c
  1382  000970  0AFF               	xorlw	255
  1383  000972  1692               	andwf	146,f,c	;volatile
  1384  000974  EFAA  F005         	goto	l76
  1385  000978                     l2243:
  1386  000978  BE36               	btfsc	(pinMode@pin+1)^0,7,c
  1387  00097A  EFCA  F004         	goto	u2040
  1388  00097E  5036               	movf	(pinMode@pin+1)^0,w,c
  1389  000980  E107               	bnz	u2041
  1390  000982  0E10               	movlw	16
  1391  000984  5C35               	subwf	pinMode@pin^0,w,c
  1392  000986  B0D8               	btfsc	status,0,c
  1393  000988  EFC8  F004         	goto	u2041
  1394  00098C  EFCA  F004         	goto	u2040
  1395  000990                     u2041:
  1396  000990  EFF8  F004         	goto	l2251
  1397  000994                     u2040:
  1398  000994                     
  1399                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 60:         if (type){ ((TRISB) |= 
      +                          (1<<(pin-8)));}
  1400  000994  5037               	movf	pinMode@type^0,w,c
  1401  000996  1038               	iorwf	(pinMode@type+1)^0,w,c
  1402  000998  B4D8               	btfsc	status,2,c
  1403  00099A  EFD1  F004         	goto	u2051
  1404  00099E  EFD3  F004         	goto	u2050
  1405  0009A2                     u2051:
  1406  0009A2  EFE5  F004         	goto	l2249
  1407  0009A6                     u2050:
  1408  0009A6  C035  F039         	movff	pinMode@pin,??_pinMode
  1409  0009AA  0EF8               	movlw	-8
  1410  0009AC  2639               	addwf	??_pinMode^0,f,c
  1411  0009AE  0E01               	movlw	1
  1412  0009B0  6E3A               	movwf	(??_pinMode+1)^0,c
  1413  0009B2  2A39               	incf	??_pinMode^0,f,c
  1414  0009B4  EFDE  F004         	goto	u2064
  1415  0009B8                     u2065:
  1416  0009B8  90D8               	bcf	status,0,c
  1417  0009BA  363A               	rlcf	(??_pinMode+1)^0,f,c
  1418  0009BC                     u2064:
  1419  0009BC  2E39               	decfsz	??_pinMode^0,f,c
  1420  0009BE  EFDC  F004         	goto	u2065
  1421  0009C2  503A               	movf	(??_pinMode+1)^0,w,c
  1422  0009C4  1293               	iorwf	147,f,c	;volatile
  1423  0009C6  EFAA  F005         	goto	l76
  1424  0009CA                     l2249:
  1425  0009CA  C035  F039         	movff	pinMode@pin,??_pinMode
  1426  0009CE  0EF8               	movlw	-8
  1427  0009D0  2639               	addwf	??_pinMode^0,f,c
  1428  0009D2  0E01               	movlw	1
  1429  0009D4  6E3A               	movwf	(??_pinMode+1)^0,c
  1430  0009D6  2A39               	incf	??_pinMode^0,f,c
  1431  0009D8  EFF0  F004         	goto	u2074
  1432  0009DC                     u2075:
  1433  0009DC  90D8               	bcf	status,0,c
  1434  0009DE  363A               	rlcf	(??_pinMode+1)^0,f,c
  1435  0009E0                     u2074:
  1436  0009E0  2E39               	decfsz	??_pinMode^0,f,c
  1437  0009E2  EFEE  F004         	goto	u2075
  1438  0009E6  503A               	movf	(??_pinMode+1)^0,w,c
  1439  0009E8  0AFF               	xorlw	255
  1440  0009EA  1693               	andwf	147,f,c	;volatile
  1441  0009EC  EFAA  F005         	goto	l76
  1442  0009F0                     l2251:
  1443  0009F0  BE36               	btfsc	(pinMode@pin+1)^0,7,c
  1444  0009F2  EF06  F005         	goto	u2080
  1445  0009F6  5036               	movf	(pinMode@pin+1)^0,w,c
  1446  0009F8  E107               	bnz	u2081
  1447  0009FA  0E18               	movlw	24
  1448  0009FC  5C35               	subwf	pinMode@pin^0,w,c
  1449  0009FE  B0D8               	btfsc	status,0,c
  1450  000A00  EF04  F005         	goto	u2081
  1451  000A04  EF06  F005         	goto	u2080
  1452  000A08                     u2081:
  1453  000A08  EF34  F005         	goto	l2259
  1454  000A0C                     u2080:
  1455  000A0C                     
  1456                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 63:         if (type){ ((TRISC) |= 
      +                          (1<<(pin-16)));}
  1457  000A0C  5037               	movf	pinMode@type^0,w,c
  1458  000A0E  1038               	iorwf	(pinMode@type+1)^0,w,c
  1459  000A10  B4D8               	btfsc	status,2,c
  1460  000A12  EF0D  F005         	goto	u2091
  1461  000A16  EF0F  F005         	goto	u2090
  1462  000A1A                     u2091:
  1463  000A1A  EF21  F005         	goto	l2257
  1464  000A1E                     u2090:
  1465  000A1E  C035  F039         	movff	pinMode@pin,??_pinMode
  1466  000A22  0EF0               	movlw	-16
  1467  000A24  2639               	addwf	??_pinMode^0,f,c
  1468  000A26  0E01               	movlw	1
  1469  000A28  6E3A               	movwf	(??_pinMode+1)^0,c
  1470  000A2A  2A39               	incf	??_pinMode^0,f,c
  1471  000A2C  EF1A  F005         	goto	u2104
  1472  000A30                     u2105:
  1473  000A30  90D8               	bcf	status,0,c
  1474  000A32  363A               	rlcf	(??_pinMode+1)^0,f,c
  1475  000A34                     u2104:
  1476  000A34  2E39               	decfsz	??_pinMode^0,f,c
  1477  000A36  EF18  F005         	goto	u2105
  1478  000A3A  503A               	movf	(??_pinMode+1)^0,w,c
  1479  000A3C  1294               	iorwf	148,f,c	;volatile
  1480  000A3E  EFAA  F005         	goto	l76
  1481  000A42                     l2257:
  1482  000A42  C035  F039         	movff	pinMode@pin,??_pinMode
  1483  000A46  0EF0               	movlw	-16
  1484  000A48  2639               	addwf	??_pinMode^0,f,c
  1485  000A4A  0E01               	movlw	1
  1486  000A4C  6E3A               	movwf	(??_pinMode+1)^0,c
  1487  000A4E  2A39               	incf	??_pinMode^0,f,c
  1488  000A50  EF2C  F005         	goto	u2114
  1489  000A54                     u2115:
  1490  000A54  90D8               	bcf	status,0,c
  1491  000A56  363A               	rlcf	(??_pinMode+1)^0,f,c
  1492  000A58                     u2114:
  1493  000A58  2E39               	decfsz	??_pinMode^0,f,c
  1494  000A5A  EF2A  F005         	goto	u2115
  1495  000A5E  503A               	movf	(??_pinMode+1)^0,w,c
  1496  000A60  0AFF               	xorlw	255
  1497  000A62  1694               	andwf	148,f,c	;volatile
  1498  000A64  EFAA  F005         	goto	l76
  1499  000A68                     l2259:
  1500  000A68  BE36               	btfsc	(pinMode@pin+1)^0,7,c
  1501  000A6A  EF42  F005         	goto	u2120
  1502  000A6E  5036               	movf	(pinMode@pin+1)^0,w,c
  1503  000A70  E107               	bnz	u2121
  1504  000A72  0E20               	movlw	32
  1505  000A74  5C35               	subwf	pinMode@pin^0,w,c
  1506  000A76  B0D8               	btfsc	status,0,c
  1507  000A78  EF40  F005         	goto	u2121
  1508  000A7C  EF42  F005         	goto	u2120
  1509  000A80                     u2121:
  1510  000A80  EF70  F005         	goto	l2267
  1511  000A84                     u2120:
  1512  000A84                     
  1513                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 66:         if (type){ ((TRISD) |= 
      +                          (1<<(pin-24)));}
  1514  000A84  5037               	movf	pinMode@type^0,w,c
  1515  000A86  1038               	iorwf	(pinMode@type+1)^0,w,c
  1516  000A88  B4D8               	btfsc	status,2,c
  1517  000A8A  EF49  F005         	goto	u2131
  1518  000A8E  EF4B  F005         	goto	u2130
  1519  000A92                     u2131:
  1520  000A92  EF5D  F005         	goto	l2265
  1521  000A96                     u2130:
  1522  000A96  C035  F039         	movff	pinMode@pin,??_pinMode
  1523  000A9A  0EE8               	movlw	-24
  1524  000A9C  2639               	addwf	??_pinMode^0,f,c
  1525  000A9E  0E01               	movlw	1
  1526  000AA0  6E3A               	movwf	(??_pinMode+1)^0,c
  1527  000AA2  2A39               	incf	??_pinMode^0,f,c
  1528  000AA4  EF56  F005         	goto	u2144
  1529  000AA8                     u2145:
  1530  000AA8  90D8               	bcf	status,0,c
  1531  000AAA  363A               	rlcf	(??_pinMode+1)^0,f,c
  1532  000AAC                     u2144:
  1533  000AAC  2E39               	decfsz	??_pinMode^0,f,c
  1534  000AAE  EF54  F005         	goto	u2145
  1535  000AB2  503A               	movf	(??_pinMode+1)^0,w,c
  1536  000AB4  1295               	iorwf	149,f,c	;volatile
  1537  000AB6  EFAA  F005         	goto	l76
  1538  000ABA                     l2265:
  1539  000ABA  C035  F039         	movff	pinMode@pin,??_pinMode
  1540  000ABE  0EE8               	movlw	-24
  1541  000AC0  2639               	addwf	??_pinMode^0,f,c
  1542  000AC2  0E01               	movlw	1
  1543  000AC4  6E3A               	movwf	(??_pinMode+1)^0,c
  1544  000AC6  2A39               	incf	??_pinMode^0,f,c
  1545  000AC8  EF68  F005         	goto	u2154
  1546  000ACC                     u2155:
  1547  000ACC  90D8               	bcf	status,0,c
  1548  000ACE  363A               	rlcf	(??_pinMode+1)^0,f,c
  1549  000AD0                     u2154:
  1550  000AD0  2E39               	decfsz	??_pinMode^0,f,c
  1551  000AD2  EF66  F005         	goto	u2155
  1552  000AD6  503A               	movf	(??_pinMode+1)^0,w,c
  1553  000AD8  0AFF               	xorlw	255
  1554  000ADA  1695               	andwf	149,f,c	;volatile
  1555  000ADC  EFAA  F005         	goto	l76
  1556  000AE0                     l2267:
  1557  000AE0  BE36               	btfsc	(pinMode@pin+1)^0,7,c
  1558  000AE2  EF7E  F005         	goto	u2160
  1559  000AE6  5036               	movf	(pinMode@pin+1)^0,w,c
  1560  000AE8  E107               	bnz	u2161
  1561  000AEA  0E28               	movlw	40
  1562  000AEC  5C35               	subwf	pinMode@pin^0,w,c
  1563  000AEE  B0D8               	btfsc	status,0,c
  1564  000AF0  EF7C  F005         	goto	u2161
  1565  000AF4  EF7E  F005         	goto	u2160
  1566  000AF8                     u2161:
  1567  000AF8  EFAA  F005         	goto	l76
  1568  000AFC                     u2160:
  1569  000AFC                     
  1570                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 69:         if (type){ ((TRISE) |= 
      +                          (1<<(pin-32)));}
  1571  000AFC  5037               	movf	pinMode@type^0,w,c
  1572  000AFE  1038               	iorwf	(pinMode@type+1)^0,w,c
  1573  000B00  B4D8               	btfsc	status,2,c
  1574  000B02  EF85  F005         	goto	u2171
  1575  000B06  EF87  F005         	goto	u2170
  1576  000B0A                     u2171:
  1577  000B0A  EF99  F005         	goto	l2273
  1578  000B0E                     u2170:
  1579  000B0E  C035  F039         	movff	pinMode@pin,??_pinMode
  1580  000B12  0EE0               	movlw	-32
  1581  000B14  2639               	addwf	??_pinMode^0,f,c
  1582  000B16  0E01               	movlw	1
  1583  000B18  6E3A               	movwf	(??_pinMode+1)^0,c
  1584  000B1A  2A39               	incf	??_pinMode^0,f,c
  1585  000B1C  EF92  F005         	goto	u2184
  1586  000B20                     u2185:
  1587  000B20  90D8               	bcf	status,0,c
  1588  000B22  363A               	rlcf	(??_pinMode+1)^0,f,c
  1589  000B24                     u2184:
  1590  000B24  2E39               	decfsz	??_pinMode^0,f,c
  1591  000B26  EF90  F005         	goto	u2185
  1592  000B2A  503A               	movf	(??_pinMode+1)^0,w,c
  1593  000B2C  1296               	iorwf	150,f,c	;volatile
  1594  000B2E  EFAA  F005         	goto	l76
  1595  000B32                     l2273:
  1596  000B32  C035  F039         	movff	pinMode@pin,??_pinMode
  1597  000B36  0EE0               	movlw	-32
  1598  000B38  2639               	addwf	??_pinMode^0,f,c
  1599  000B3A  0E01               	movlw	1
  1600  000B3C  6E3A               	movwf	(??_pinMode+1)^0,c
  1601  000B3E  2A39               	incf	??_pinMode^0,f,c
  1602  000B40  EFA4  F005         	goto	u2194
  1603  000B44                     u2195:
  1604  000B44  90D8               	bcf	status,0,c
  1605  000B46  363A               	rlcf	(??_pinMode+1)^0,f,c
  1606  000B48                     u2194:
  1607  000B48  2E39               	decfsz	??_pinMode^0,f,c
  1608  000B4A  EFA2  F005         	goto	u2195
  1609  000B4E  503A               	movf	(??_pinMode+1)^0,w,c
  1610  000B50  0AFF               	xorlw	255
  1611  000B52  1696               	andwf	150,f,c	;volatile
  1612  000B54                     l76:
  1613  000B54  0012               	return		;funcret
  1614  000B56                     __end_of_pinMode:
  1615                           	callstack 0
  1616                           
  1617 ;; *************** function _kpInit *****************
  1618 ;; Defined at:
  1619 ;;		line 89 in file "keypad.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;		None
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg, status,2, status,0
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1633 ;;      Params:         0       0       0       0       0       0       0
  1634 ;;      Locals:         0       0       0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0
  1636 ;;      Totals:         0       0       0       0       0       0       0
  1637 ;;Total ram usage:        0 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text7
  1647  001A80                     __ptext7:
  1648                           	callstack 0
  1649  001A80                     _kpInit:
  1650                           	callstack 30
  1651  001A80                     
  1652                           ;keypad.c: 91:     TRISB &= 0x07;
  1653  001A80  0E07               	movlw	7
  1654  001A82  1693               	andwf	147,f,c	;volatile
  1655                           
  1656                           ;keypad.c: 93:     TRISD |= 0x0f;
  1657  001A84  0E0F               	movlw	15
  1658  001A86  1295               	iorwf	149,f,c	;volatile
  1659  001A88  0012               	return		;funcret
  1660  001A8A                     __end_of_kpInit:
  1661                           	callstack 0
  1662                           
  1663 ;; *************** function _chooseSong *****************
  1664 ;; Defined at:
  1665 ;;		line 31 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1679 ;;      Params:         0       0       0       0       0       0       0
  1680 ;;      Locals:         0       0       0       0       0       0       0
  1681 ;;      Temps:          2       0       0       0       0       0       0
  1682 ;;      Totals:         2       0       0       0       0       0       0
  1683 ;;Total ram usage:        2 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:    5
  1686 ;; This function calls:
  1687 ;;		_atraso_ms
  1688 ;;		_kpDebounce
  1689 ;;		_kpRead
  1690 ;;		_lcdCommand
  1691 ;;		_lcdPosition
  1692 ;;		_lcdStr
  1693 ;;		_playSong
  1694 ;;		_ssdDigit
  1695 ;;		_ssdUpdate
  1696 ;; This function is called by:
  1697 ;;		_main
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text8
  1702  0011AC                     __ptext8:
  1703                           	callstack 0
  1704  0011AC                     _chooseSong:
  1705                           	callstack 25
  1706  0011AC                     
  1707                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 32:     kpDebounce();
  1708  0011AC  ECD2  F006         	call	_kpDebounce	;wreg free
  1709  0011B0                     
  1710                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 33:     tecla = kpRead();
  1711  0011B0  EC45  F00D         	call	_kpRead	;wreg free
  1712  0011B4  5035               	movf	?_kpRead^0,w,c
  1713  0011B6  6E1F               	movwf	_tecla^0,c
  1714  0011B8                     
  1715                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 34:     if (((tecla) & (1<<(3)))
      +                           || ((tecla) & (1<<(7)))) {
  1716  0011B8  B61F               	btfsc	_tecla^0,3,c
  1717  0011BA  EFE1  F008         	goto	u2341
  1718  0011BE  EFE3  F008         	goto	u2340
  1719  0011C2                     u2341:
  1720  0011C2  EFEA  F008         	goto	l2443
  1721  0011C6                     u2340:
  1722  0011C6  AE1F               	btfss	_tecla^0,7,c
  1723  0011C8  EFE8  F008         	goto	u2351
  1724  0011CC  EFEA  F008         	goto	u2350
  1725  0011D0                     u2351:
  1726  0011D0  EF73  F009         	goto	l238
  1727  0011D4                     u2350:
  1728  0011D4                     l2443:
  1729                           
  1730                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 35:         flag = 1;
  1731  0011D4  0E01               	movlw	1
  1732  0011D6  6E33               	movwf	_flag^0,c
  1733  0011D8                     l2445:
  1734                           
  1735                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 37:             ssdUpdate();
  1736  0011D8  EC8F  F007         	call	_ssdUpdate	;wreg free
  1737  0011DC                     
  1738                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 38:             kpDebounce();
  1739  0011DC  ECD2  F006         	call	_kpDebounce	;wreg free
  1740  0011E0                     
  1741                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 39:             atraso_ms(10);
  1742  0011E0  0E00               	movlw	0
  1743  0011E2  6E36               	movwf	(atraso_ms@t+1)^0,c
  1744  0011E4  0E0A               	movlw	10
  1745  0011E6  6E35               	movwf	atraso_ms@t^0,c
  1746  0011E8  ECD3  F00B         	call	_atraso_ms	;wreg free
  1747  0011EC                     
  1748                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 40:             if ((kpRead() !=
      +                           tecla) || flag == 1) {
  1749  0011EC  501F               	movf	_tecla^0,w,c
  1750  0011EE  6E48               	movwf	??_chooseSong^0,c
  1751  0011F0  6A49               	clrf	(??_chooseSong+1)^0,c
  1752  0011F2  EC45  F00D         	call	_kpRead	;wreg free
  1753  0011F6  5048               	movf	??_chooseSong^0,w,c
  1754  0011F8  1835               	xorwf	?_kpRead^0,w,c
  1755  0011FA  E107               	bnz	u2361
  1756  0011FC  5049               	movf	(??_chooseSong+1)^0,w,c
  1757  0011FE  1836               	xorwf	(?_kpRead+1)^0,w,c
  1758  001200  A4D8               	btfss	status,2,c
  1759  001202  EF05  F009         	goto	u2361
  1760  001206  EF07  F009         	goto	u2360
  1761  00120A                     u2361:
  1762  00120A  EF0F  F009         	goto	l2455
  1763  00120E                     u2360:
  1764  00120E  0433               	decf	_flag^0,w,c
  1765  001210  A4D8               	btfss	status,2,c
  1766  001212  EF0D  F009         	goto	u2371
  1767  001216  EF0F  F009         	goto	u2370
  1768  00121A                     u2371:
  1769  00121A  EFEC  F008         	goto	l2445
  1770  00121E                     u2370:
  1771  00121E                     l2455:
  1772                           
  1773                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 41:                 tecla = kpRe
      +                          ad();
  1774  00121E  EC45  F00D         	call	_kpRead	;wreg free
  1775  001222  5035               	movf	?_kpRead^0,w,c
  1776  001224  6E1F               	movwf	_tecla^0,c
  1777  001226                     
  1778                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 42:                 if (((tecla)
      +                           & (1<<(3)))) {
  1779  001226  A61F               	btfss	_tecla^0,3,c
  1780  001228  EF18  F009         	goto	u2381
  1781  00122C  EF1A  F009         	goto	u2380
  1782  001230                     u2381:
  1783  001230  EF29  F009         	goto	l228
  1784  001234                     u2380:
  1785  001234                     
  1786                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 43:                     if (indi
      +                          ce == 0) {
  1787  001234  5034               	movf	_indice^0,w,c
  1788  001236  A4D8               	btfss	status,2,c
  1789  001238  EF20  F009         	goto	u2391
  1790  00123C  EF22  F009         	goto	u2390
  1791  001240                     u2391:
  1792  001240  EF26  F009         	goto	l2463
  1793  001244                     u2390:
  1794  001244                     
  1795                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 44:                         indi
      +                          ce = 9;
  1796  001244  0E09               	movlw	9
  1797  001246  6E34               	movwf	_indice^0,c
  1798                           
  1799                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 45:                     } else {
  1800  001248  EF4B  F009         	goto	l2473
  1801  00124C                     l2463:
  1802                           
  1803                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 46:                         indi
      +                          ce -= 1;
  1804  00124C  0634               	decf	_indice^0,f,c
  1805  00124E  EF4B  F009         	goto	l2473
  1806  001252                     l228:
  1807  001252  AE1F               	btfss	_tecla^0,7,c
  1808  001254  EF2E  F009         	goto	u2401
  1809  001258  EF30  F009         	goto	u2400
  1810  00125C                     u2401:
  1811  00125C  EF40  F009         	goto	l232
  1812  001260                     u2400:
  1813  001260                     
  1814                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 49:                     if (indi
      +                          ce == 9) {
  1815  001260  0E09               	movlw	9
  1816  001262  1834               	xorwf	_indice^0,w,c
  1817  001264  A4D8               	btfss	status,2,c
  1818  001266  EF37  F009         	goto	u2411
  1819  00126A  EF39  F009         	goto	u2410
  1820  00126E                     u2411:
  1821  00126E  EF3D  F009         	goto	l2469
  1822  001272                     u2410:
  1823  001272                     
  1824                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 50:                         indi
      +                          ce = 0;
  1825  001272  0E00               	movlw	0
  1826  001274  6E34               	movwf	_indice^0,c
  1827                           
  1828                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 51:                     } else {
  1829  001276  EF4B  F009         	goto	l2473
  1830  00127A                     l2469:
  1831                           
  1832                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 52:                         indi
      +                          ce += 1;
  1833  00127A  2A34               	incf	_indice^0,f,c
  1834  00127C  EF4B  F009         	goto	l2473
  1835  001280                     l232:
  1836  001280  A01F               	btfss	_tecla^0,0,c
  1837  001282  EF45  F009         	goto	u2421
  1838  001286  EF47  F009         	goto	u2420
  1839  00128A                     u2421:
  1840  00128A  EF4B  F009         	goto	l2473
  1841  00128E                     u2420:
  1842  00128E                     
  1843                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 55:                     flag = 0
      +                          ;
  1844  00128E  0E00               	movlw	0
  1845  001290  6E33               	movwf	_flag^0,c
  1846                           
  1847                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 56:                     break;
  1848  001292  EF71  F009         	goto	l2485
  1849  001296                     l2473:
  1850                           
  1851                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 58:                 lcdCommand(0
      +                          x01);
  1852  001296  0E01               	movlw	1
  1853  001298  EC1C  F00B         	call	_lcdCommand
  1854                           
  1855                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 59:                 lcdPosition(
      +                          1, 0);
  1856  00129C  0E00               	movlw	0
  1857  00129E  6E3D               	movwf	lcdPosition@coluna^0,c
  1858  0012A0  0E01               	movlw	1
  1859  0012A2  EC36  F00C         	call	_lcdPosition
  1860  0012A6                     
  1861                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 60:                 lcdStr("<-(1
      +                          ) (*)  (2)->");
  1862  0012A6  0E11               	movlw	low STR_4
  1863  0012A8  6E3D               	movwf	lcdStr@str^0,c
  1864  0012AA  0E06               	movlw	high STR_4
  1865  0012AC  6E3E               	movwf	(lcdStr@str+1)^0,c
  1866  0012AE  EC97  F00B         	call	_lcdStr	;wreg free
  1867  0012B2                     
  1868                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 61:                 lcdPosition(
      +                          0, 0);
  1869  0012B2  0E00               	movlw	0
  1870  0012B4  6E3D               	movwf	lcdPosition@coluna^0,c
  1871  0012B6  0E00               	movlw	0
  1872  0012B8  EC36  F00C         	call	_lcdPosition
  1873  0012BC                     
  1874                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 62:                 lcdStr(music
      +                          as[indice].nome);
  1875  0012BC  5034               	movf	_indice^0,w,c
  1876  0012BE  0D13               	mullw	19
  1877  0012C0  0E02               	movlw	low (_musicas+2)
  1878  0012C2  24F3               	addwf	243,w,c
  1879  0012C4  6E3D               	movwf	lcdStr@str^0,c
  1880  0012C6  0E01               	movlw	high (_musicas+2)
  1881  0012C8  20F4               	addwfc	prodh,w,c
  1882  0012CA  6E3E               	movwf	(lcdStr@str+1)^0,c
  1883  0012CC  EC97  F00B         	call	_lcdStr	;wreg free
  1884  0012D0                     
  1885                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 63:                 ssdDigit(ind
      +                          ice, 3);
  1886  0012D0  0E03               	movlw	3
  1887  0012D2  6E35               	movwf	ssdDigit@pos^0,c
  1888  0012D4  5034               	movf	_indice^0,w,c
  1889  0012D6  EC63  F00C         	call	_ssdDigit
  1890  0012DA                     
  1891                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 64:                 flag = 0;
  1892  0012DA  0E00               	movlw	0
  1893  0012DC  6E33               	movwf	_flag^0,c
  1894  0012DE  EFEC  F008         	goto	l2445
  1895  0012E2                     l2485:
  1896                           
  1897                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 67:         playSong();
  1898  0012E2  EC28  F003         	call	_playSong	;wreg free
  1899  0012E6                     l238:
  1900  0012E6  0012               	return		;funcret
  1901  0012E8                     __end_of_chooseSong:
  1902                           	callstack 0
  1903                           
  1904 ;; *************** function _playSong *****************
  1905 ;; Defined at:
  1906 ;;		line 71 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;		None
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  j               1   18[COMRAM] unsigned char 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1920 ;;      Params:         0       0       0       0       0       0       0
  1921 ;;      Locals:         5       0       0       0       0       0       0
  1922 ;;      Temps:          0       0       0       0       0       0       0
  1923 ;;      Totals:         5       0       0       0       0       0       0
  1924 ;;Total ram usage:        5 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:    4
  1927 ;; This function calls:
  1928 ;;		___awdiv
  1929 ;;		___awmod
  1930 ;;		_alterarVolume
  1931 ;;		_atraso_ms
  1932 ;;		_kpDebounce
  1933 ;;		_kpRead
  1934 ;;		_lcdCommand
  1935 ;;		_lcdPosition
  1936 ;;		_lcdStr
  1937 ;;		_ssdDigit
  1938 ;;		_ssdUpdate
  1939 ;; This function is called by:
  1940 ;;		_chooseSong
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text9
  1945  000650                     __ptext9:
  1946                           	callstack 0
  1947  000650                     _playSong:
  1948                           	callstack 25
  1949  000650                     
  1950                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 72:     lcdCommand(0x01);
  1951  000650  0E01               	movlw	1
  1952  000652  EC1C  F00B         	call	_lcdCommand
  1953                           
  1954                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 73:     lcdPosition(0, 0);
  1955  000656  0E00               	movlw	0
  1956  000658  6E3D               	movwf	lcdPosition@coluna^0,c
  1957  00065A  0E00               	movlw	0
  1958  00065C  EC36  F00C         	call	_lcdPosition
  1959  000660                     
  1960                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 74:     lcdStr(musicas[indice].n
      +                          ome);
  1961  000660  5034               	movf	_indice^0,w,c
  1962  000662  0D13               	mullw	19
  1963  000664  0E02               	movlw	low (_musicas+2)
  1964  000666  24F3               	addwf	243,w,c
  1965  000668  6E3D               	movwf	lcdStr@str^0,c
  1966  00066A  0E01               	movlw	high (_musicas+2)
  1967  00066C  20F4               	addwfc	prodh,w,c
  1968  00066E  6E3E               	movwf	(lcdStr@str+1)^0,c
  1969  000670  EC97  F00B         	call	_lcdStr	;wreg free
  1970  000674                     
  1971                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 75:     lcdPosition(1, 0);
  1972  000674  0E00               	movlw	0
  1973  000676  6E3D               	movwf	lcdPosition@coluna^0,c
  1974  000678  0E01               	movlw	1
  1975  00067A  EC36  F00C         	call	_lcdPosition
  1976  00067E                     
  1977                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 76:     lcdStr("-(1)  (*)  (2)+"
      +                          );
  1978  00067E  0E33               	movlw	low STR_6
  1979  000680  6E3D               	movwf	lcdStr@str^0,c
  1980  000682  0E06               	movlw	high STR_6
  1981  000684  6E3E               	movwf	(lcdStr@str+1)^0,c
  1982  000686  EC97  F00B         	call	_lcdStr	;wreg free
  1983  00068A                     
  1984                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 78:     tempo = musicas[indice].
      +                          duracao;
  1985  00068A  5034               	movf	_indice^0,w,c
  1986  00068C  0D13               	mullw	19
  1987  00068E  0E00               	movlw	low _musicas
  1988  000690  24F3               	addwf	243,w,c
  1989  000692  6ED9               	movwf	fsr2l,c
  1990  000694  0E01               	movlw	high _musicas
  1991  000696  20F4               	addwfc	prodh,w,c
  1992  000698  6EDA               	movwf	fsr2h,c
  1993  00069A  50DF               	movf	indf2,w,c
  1994  00069C  6E32               	movwf	_tempo^0,c
  1995                           
  1996                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 80:     while (tempo != 0) {
  1997  00069E  EF73  F004         	goto	l2369
  1998  0006A2                     l2289:
  1999                           
  2000                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 81:         minuto1 = (tempo / 6
      +                          0) % 10;
  2001  0006A2  0E00               	movlw	0
  2002  0006A4  6E38               	movwf	(___awdiv@divisor+1)^0,c
  2003  0006A6  0E3C               	movlw	60
  2004  0006A8  6E37               	movwf	___awdiv@divisor^0,c
  2005  0006AA  C032  F035         	movff	_tempo,___awdiv@dividend
  2006  0006AE  6A36               	clrf	(___awdiv@dividend+1)^0,c
  2007  0006B0  EC74  F009         	call	___awdiv	;wreg free
  2008  0006B4  C035  F03D         	movff	?___awdiv,___awmod@dividend
  2009  0006B8  C036  F03E         	movff	?___awdiv+1,___awmod@dividend+1
  2010  0006BC  0E00               	movlw	0
  2011  0006BE  6E40               	movwf	(___awmod@divisor+1)^0,c
  2012  0006C0  0E0A               	movlw	10
  2013  0006C2  6E3F               	movwf	___awmod@divisor^0,c
  2014  0006C4  ECD6  F009         	call	___awmod	;wreg free
  2015  0006C8  503D               	movf	?___awmod^0,w,c
  2016  0006CA  6E31               	movwf	_minuto1^0,c
  2017                           
  2018                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 82:         minuto2 = (tempo / 6
      +                          0) / 10;
  2019  0006CC  0E00               	movlw	0
  2020  0006CE  6E38               	movwf	(___awdiv@divisor+1)^0,c
  2021  0006D0  0E3C               	movlw	60
  2022  0006D2  6E37               	movwf	___awdiv@divisor^0,c
  2023  0006D4  C032  F035         	movff	_tempo,___awdiv@dividend
  2024  0006D8  6A36               	clrf	(___awdiv@dividend+1)^0,c
  2025  0006DA  EC74  F009         	call	___awdiv	;wreg free
  2026  0006DE  C035  F043         	movff	?___awdiv,_playSong$957
  2027  0006E2  C036  F044         	movff	?___awdiv+1,_playSong$957+1
  2028                           
  2029                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 82:         minuto2 = (tempo / 6
      +                          0) / 10;
  2030  0006E6  C043  F035         	movff	_playSong$957,___awdiv@dividend
  2031  0006EA  C044  F036         	movff	_playSong$957+1,___awdiv@dividend+1
  2032  0006EE  0E00               	movlw	0
  2033  0006F0  6E38               	movwf	(___awdiv@divisor+1)^0,c
  2034  0006F2  0E0A               	movlw	10
  2035  0006F4  6E37               	movwf	___awdiv@divisor^0,c
  2036  0006F6  EC74  F009         	call	___awdiv	;wreg free
  2037  0006FA  5035               	movf	?___awdiv^0,w,c
  2038  0006FC  6E30               	movwf	_minuto2^0,c
  2039                           
  2040                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 83:         segundo1 = (tempo % 
      +                          60) % 10;
  2041  0006FE  0E00               	movlw	0
  2042  000700  6E40               	movwf	(___awmod@divisor+1)^0,c
  2043  000702  0E3C               	movlw	60
  2044  000704  6E3F               	movwf	___awmod@divisor^0,c
  2045  000706  C032  F03D         	movff	_tempo,___awmod@dividend
  2046  00070A  6A3E               	clrf	(___awmod@dividend+1)^0,c
  2047  00070C  ECD6  F009         	call	___awmod	;wreg free
  2048  000710  C03D  F045         	movff	?___awmod,_playSong$958
  2049  000714  C03E  F046         	movff	?___awmod+1,_playSong$958+1
  2050                           
  2051                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 83:         segundo1 = (tempo % 
      +                          60) % 10;
  2052  000718  C045  F03D         	movff	_playSong$958,___awmod@dividend
  2053  00071C  C046  F03E         	movff	_playSong$958+1,___awmod@dividend+1
  2054  000720  0E00               	movlw	0
  2055  000722  6E40               	movwf	(___awmod@divisor+1)^0,c
  2056  000724  0E0A               	movlw	10
  2057  000726  6E3F               	movwf	___awmod@divisor^0,c
  2058  000728  ECD6  F009         	call	___awmod	;wreg free
  2059  00072C  503D               	movf	?___awmod^0,w,c
  2060  00072E  6E2F               	movwf	_segundo1^0,c
  2061                           
  2062                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 84:         segundo2 = (tempo % 
      +                          60) / 10;
  2063  000730  0E00               	movlw	0
  2064  000732  6E40               	movwf	(___awmod@divisor+1)^0,c
  2065  000734  0E3C               	movlw	60
  2066  000736  6E3F               	movwf	___awmod@divisor^0,c
  2067  000738  C032  F03D         	movff	_tempo,___awmod@dividend
  2068  00073C  6A3E               	clrf	(___awmod@dividend+1)^0,c
  2069  00073E  ECD6  F009         	call	___awmod	;wreg free
  2070  000742  C03D  F035         	movff	?___awmod,___awdiv@dividend
  2071  000746  C03E  F036         	movff	?___awmod+1,___awdiv@dividend+1
  2072  00074A  0E00               	movlw	0
  2073  00074C  6E38               	movwf	(___awdiv@divisor+1)^0,c
  2074  00074E  0E0A               	movlw	10
  2075  000750  6E37               	movwf	___awdiv@divisor^0,c
  2076  000752  EC74  F009         	call	___awdiv	;wreg free
  2077  000756  5035               	movf	?___awdiv^0,w,c
  2078  000758  6E2E               	movwf	_segundo2^0,c
  2079                           
  2080                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 86:         ssdDigit(minuto2, 0)
      +                          ;
  2081  00075A  0E00               	movlw	0
  2082  00075C  6E35               	movwf	ssdDigit@pos^0,c
  2083  00075E  5030               	movf	_minuto2^0,w,c
  2084  000760  EC63  F00C         	call	_ssdDigit
  2085                           
  2086                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 87:         ssdDigit(minuto1, 1)
      +                          ;
  2087  000764  0E01               	movlw	1
  2088  000766  6E35               	movwf	ssdDigit@pos^0,c
  2089  000768  5031               	movf	_minuto1^0,w,c
  2090  00076A  EC63  F00C         	call	_ssdDigit
  2091                           
  2092                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 88:         ssdDigit(segundo2, 2
      +                          );
  2093  00076E  0E02               	movlw	2
  2094  000770  6E35               	movwf	ssdDigit@pos^0,c
  2095  000772  502E               	movf	_segundo2^0,w,c
  2096  000774  EC63  F00C         	call	_ssdDigit
  2097                           
  2098                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 89:         ssdDigit(segundo1, 3
      +                          );
  2099  000778  0E03               	movlw	3
  2100  00077A  6E35               	movwf	ssdDigit@pos^0,c
  2101  00077C  502F               	movf	_segundo1^0,w,c
  2102  00077E  EC63  F00C         	call	_ssdDigit
  2103  000782                     
  2104                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 91:         for (unsigned char j
      +                           = 0; j < 100; j++) {
  2105  000782  0E00               	movlw	0
  2106  000784  6E47               	movwf	playSong@j^0,c
  2107  000786                     l2297:
  2108                           
  2109                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 92:             ssdUpdate();
  2110  000786  EC8F  F007         	call	_ssdUpdate	;wreg free
  2111  00078A                     
  2112                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 93:             atraso_ms(10);
  2113  00078A  0E00               	movlw	0
  2114  00078C  6E36               	movwf	(atraso_ms@t+1)^0,c
  2115  00078E  0E0A               	movlw	10
  2116  000790  6E35               	movwf	atraso_ms@t^0,c
  2117  000792  ECD3  F00B         	call	_atraso_ms	;wreg free
  2118  000796                     
  2119                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 94:             kpDebounce();
  2120  000796  ECD2  F006         	call	_kpDebounce	;wreg free
  2121  00079A                     
  2122                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 95:             tecla = kpRead()
      +                          ;
  2123  00079A  EC45  F00D         	call	_kpRead	;wreg free
  2124  00079E  5035               	movf	?_kpRead^0,w,c
  2125  0007A0  6E1F               	movwf	_tecla^0,c
  2126  0007A2                     
  2127                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 96:             if (((tecla) & (
      +                          1<<(3)))) {
  2128  0007A2  A61F               	btfss	_tecla^0,3,c
  2129  0007A4  EFD6  F003         	goto	u2211
  2130  0007A8  EFD8  F003         	goto	u2210
  2131  0007AC                     u2211:
  2132  0007AC  EFEE  F003         	goto	l245
  2133  0007B0                     u2210:
  2134  0007B0  EFE2  F003         	goto	l2315
  2135  0007B4                     l2309:
  2136                           
  2137                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 98:                     ssdUpdat
      +                          e();
  2138  0007B4  EC8F  F007         	call	_ssdUpdate	;wreg free
  2139  0007B8                     
  2140                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 99:                     kpDeboun
      +                          ce();
  2141  0007B8  ECD2  F006         	call	_kpDebounce	;wreg free
  2142  0007BC                     
  2143                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 100:                     tecla =
      +                           kpRead();
  2144  0007BC  EC45  F00D         	call	_kpRead	;wreg free
  2145  0007C0  5035               	movf	?_kpRead^0,w,c
  2146  0007C2  6E1F               	movwf	_tecla^0,c
  2147  0007C4                     l2315:
  2148                           
  2149                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 97:                 while(((tecl
      +                          a) & (1<<(3)))) {
  2150  0007C4  B61F               	btfsc	_tecla^0,3,c
  2151  0007C6  EFE7  F003         	goto	u2221
  2152  0007CA  EFE9  F003         	goto	u2220
  2153  0007CE                     u2221:
  2154  0007CE  EFDA  F003         	goto	l2309
  2155  0007D2                     u2220:
  2156  0007D2                     
  2157                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 102:                 alterarVolu
      +                          me(0);
  2158  0007D2  0E00               	movlw	0
  2159  0007D4  EC37  F008         	call	_alterarVolume
  2160                           
  2161                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 103:             }
  2162  0007D8  EF61  F004         	goto	l2361
  2163  0007DC                     l245:
  2164  0007DC  AE1F               	btfss	_tecla^0,7,c
  2165  0007DE  EFF3  F003         	goto	u2231
  2166  0007E2  EFF5  F003         	goto	u2230
  2167  0007E6                     u2231:
  2168  0007E6  EF0B  F004         	goto	l250
  2169  0007EA                     u2230:
  2170  0007EA  EFFF  F003         	goto	l2327
  2171  0007EE                     l2321:
  2172                           
  2173                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 106:                     ssdUpda
      +                          te();
  2174  0007EE  EC8F  F007         	call	_ssdUpdate	;wreg free
  2175  0007F2                     
  2176                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 107:                     kpDebou
      +                          nce();
  2177  0007F2  ECD2  F006         	call	_kpDebounce	;wreg free
  2178  0007F6                     
  2179                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 108:                     tecla =
      +                           kpRead();
  2180  0007F6  EC45  F00D         	call	_kpRead	;wreg free
  2181  0007FA  5035               	movf	?_kpRead^0,w,c
  2182  0007FC  6E1F               	movwf	_tecla^0,c
  2183  0007FE                     l2327:
  2184                           
  2185                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 105:                 while(((tec
      +                          la) & (1<<(7)))) {
  2186  0007FE  BE1F               	btfsc	_tecla^0,7,c
  2187  000800  EF04  F004         	goto	u2241
  2188  000804  EF06  F004         	goto	u2240
  2189  000808                     u2241:
  2190  000808  EFF7  F003         	goto	l2321
  2191  00080C                     u2240:
  2192  00080C                     
  2193                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 110:                 alterarVolu
      +                          me(1);
  2194  00080C  0E01               	movlw	1
  2195  00080E  EC37  F008         	call	_alterarVolume
  2196                           
  2197                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 111:             }
  2198  000812  EF61  F004         	goto	l2361
  2199  000816                     l250:
  2200  000816  A01F               	btfss	_tecla^0,0,c
  2201  000818  EF10  F004         	goto	u2251
  2202  00081C  EF12  F004         	goto	u2250
  2203  000820                     u2251:
  2204  000820  EF33  F004         	goto	l255
  2205  000824                     u2250:
  2206  000824  EF1C  F004         	goto	l2339
  2207  000828                     l2333:
  2208                           
  2209                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 114:                     ssdUpda
      +                          te();
  2210  000828  EC8F  F007         	call	_ssdUpdate	;wreg free
  2211  00082C                     
  2212                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 115:                     kpDebou
      +                          nce();
  2213  00082C  ECD2  F006         	call	_kpDebounce	;wreg free
  2214  000830                     
  2215                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 116:                     tecla =
      +                           kpRead();
  2216  000830  EC45  F00D         	call	_kpRead	;wreg free
  2217  000834  5035               	movf	?_kpRead^0,w,c
  2218  000836  6E1F               	movwf	_tecla^0,c
  2219  000838                     l2339:
  2220                           
  2221                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 113:                 while(((tec
      +                          la) & (1<<(0)))) {
  2222  000838  B01F               	btfsc	_tecla^0,0,c
  2223  00083A  EF21  F004         	goto	u2261
  2224  00083E  EF23  F004         	goto	u2260
  2225  000842                     u2261:
  2226  000842  EF14  F004         	goto	l2333
  2227  000846                     u2260:
  2228  000846                     
  2229                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 118:                 if (pause =
      +                          = 0) {pause = 1;} else {pause = 0;}
  2230  000846  501E               	movf	_pause^0,w,c
  2231  000848  A4D8               	btfss	status,2,c
  2232  00084A  EF29  F004         	goto	u2271
  2233  00084E  EF2B  F004         	goto	u2270
  2234  000852                     u2271:
  2235  000852  EF2F  F004         	goto	l2345
  2236  000856                     u2270:
  2237  000856  0E01               	movlw	1
  2238  000858  6E1E               	movwf	_pause^0,c
  2239  00085A  EF61  F004         	goto	l2361
  2240  00085E                     l2345:
  2241  00085E  0E00               	movlw	0
  2242  000860  6E1E               	movwf	_pause^0,c
  2243  000862  EF61  F004         	goto	l2361
  2244  000866                     l255:
  2245  000866  A81F               	btfss	_tecla^0,4,c
  2246  000868  EF38  F004         	goto	u2281
  2247  00086C  EF3A  F004         	goto	u2280
  2248  000870                     u2281:
  2249  000870  EF61  F004         	goto	l254
  2250  000874                     u2280:
  2251  000874  EF44  F004         	goto	l2355
  2252  000878                     l2349:
  2253                           
  2254                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 122:                     ssdUpda
      +                          te();
  2255  000878  EC8F  F007         	call	_ssdUpdate	;wreg free
  2256  00087C                     
  2257                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 123:                     kpDebou
      +                          nce();
  2258  00087C  ECD2  F006         	call	_kpDebounce	;wreg free
  2259  000880                     
  2260                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 124:                     tecla =
      +                           kpRead();
  2261  000880  EC45  F00D         	call	_kpRead	;wreg free
  2262  000884  5035               	movf	?_kpRead^0,w,c
  2263  000886  6E1F               	movwf	_tecla^0,c
  2264  000888                     l2355:
  2265                           
  2266                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 121:                 while(((tec
      +                          la) & (1<<(4)))) {
  2267  000888  B81F               	btfsc	_tecla^0,4,c
  2268  00088A  EF49  F004         	goto	u2291
  2269  00088E  EF4B  F004         	goto	u2290
  2270  000892                     u2291:
  2271  000892  EF3C  F004         	goto	l2349
  2272  000896                     u2290:
  2273  000896                     
  2274                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 126:                 ssdDigit(0,
      +                           0);
  2275  000896  0E00               	movlw	0
  2276  000898  6E35               	movwf	ssdDigit@pos^0,c
  2277  00089A  0E00               	movlw	0
  2278  00089C  EC63  F00C         	call	_ssdDigit
  2279                           
  2280                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 127:                 ssdDigit(0,
      +                           1);
  2281  0008A0  0E01               	movlw	1
  2282  0008A2  6E35               	movwf	ssdDigit@pos^0,c
  2283  0008A4  0E00               	movlw	0
  2284  0008A6  EC63  F00C         	call	_ssdDigit
  2285                           
  2286                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 128:                 ssdDigit(0,
      +                           2);
  2287  0008AA  0E02               	movlw	2
  2288  0008AC  6E35               	movwf	ssdDigit@pos^0,c
  2289  0008AE  0E00               	movlw	0
  2290  0008B0  EC63  F00C         	call	_ssdDigit
  2291                           
  2292                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 129:                 ssdDigit(0,
      +                           3);
  2293  0008B4  0E03               	movlw	3
  2294  0008B6  6E35               	movwf	ssdDigit@pos^0,c
  2295  0008B8  0E00               	movlw	0
  2296  0008BA  EC63  F00C         	call	_ssdDigit
  2297  0008BE  EF83  F004         	goto	l266
  2298  0008C2                     l254:
  2299  0008C2                     l2361:
  2300                           
  2301                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 132:         }
  2302  0008C2  2A47               	incf	playSong@j^0,f,c
  2303  0008C4  0E63               	movlw	99
  2304  0008C6  6447               	cpfsgt	playSong@j^0,c
  2305  0008C8  EF68  F004         	goto	u2301
  2306  0008CC  EF6A  F004         	goto	u2300
  2307  0008D0                     u2301:
  2308  0008D0  EFC3  F003         	goto	l2297
  2309  0008D4                     u2300:
  2310  0008D4                     
  2311                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 133:         if (pause == 0) {
  2312  0008D4  501E               	movf	_pause^0,w,c
  2313  0008D6  A4D8               	btfss	status,2,c
  2314  0008D8  EF70  F004         	goto	u2311
  2315  0008DC  EF72  F004         	goto	u2310
  2316  0008E0                     u2311:
  2317  0008E0  EF73  F004         	goto	l2369
  2318  0008E4                     u2310:
  2319  0008E4                     
  2320                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 134:             tempo -= 1;
  2321  0008E4  0632               	decf	_tempo^0,f,c
  2322  0008E6                     l2369:
  2323                           
  2324                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 80:     while (tempo != 0) {
  2325  0008E6  5032               	movf	_tempo^0,w,c
  2326  0008E8  A4D8               	btfss	status,2,c
  2327  0008EA  EF79  F004         	goto	u2321
  2328  0008EE  EF7B  F004         	goto	u2320
  2329  0008F2                     u2321:
  2330  0008F2  EF51  F003         	goto	l2289
  2331  0008F6                     u2320:
  2332  0008F6                     
  2333                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 137:     ((TRISC) |= (1<<(1)));
  2334  0008F6  8294               	bsf	148,1,c	;volatile
  2335  0008F8                     
  2336                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 138:     atraso_ms(500);
  2337  0008F8  0E01               	movlw	1
  2338  0008FA  6E36               	movwf	(atraso_ms@t+1)^0,c
  2339  0008FC  0EF4               	movlw	244
  2340  0008FE  6E35               	movwf	atraso_ms@t^0,c
  2341  000900  ECD3  F00B         	call	_atraso_ms	;wreg free
  2342  000904                     
  2343                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 139:     ((TRISC) |= (1<<(0)));
  2344  000904  8094               	bsf	148,0,c	;volatile
  2345  000906                     l266:
  2346  000906  0012               	return		;funcret
  2347  000908                     __end_of_playSong:
  2348                           	callstack 0
  2349                           
  2350 ;; *************** function _ssdUpdate *****************
  2351 ;; Defined at:
  2352 ;;		line 54 in file "ssd.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;		None
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;		None
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      void 
  2359 ;; Registers used:
  2360 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2366 ;;      Params:         0       0       0       0       0       0       0
  2367 ;;      Locals:         0       0       0       0       0       0       0
  2368 ;;      Temps:          2       0       0       0       0       0       0
  2369 ;;      Totals:         2       0       0       0       0       0       0
  2370 ;;Total ram usage:        2 bytes
  2371 ;; Hardware stack levels used:    1
  2372 ;; Hardware stack levels required when called:    1
  2373 ;; This function calls:
  2374 ;;		_digitalWrite
  2375 ;; This function is called by:
  2376 ;;		_chooseSong
  2377 ;;		_playSong
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text10
  2382  000F1E                     __ptext10:
  2383                           	callstack 0
  2384  000F1E                     _ssdUpdate:
  2385                           	callstack 28
  2386  000F1E                     
  2387                           ;ssd.c: 58:     TRISD= 0x00;
  2388  000F1E  0E00               	movlw	0
  2389  000F20  6E95               	movwf	149,c	;volatile
  2390  000F22                     
  2391                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  2392  000F22  0E00               	movlw	0
  2393  000F24  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2394  000F26  0E02               	movlw	2
  2395  000F28  6E35               	movwf	digitalWrite@pin^0,c
  2396  000F2A  0E00               	movlw	0
  2397  000F2C  6E38               	movwf	(digitalWrite@value+1)^0,c
  2398  000F2E  0E00               	movlw	0
  2399  000F30  6E37               	movwf	digitalWrite@value^0,c
  2400  000F32  ECAB  F005         	call	_digitalWrite	;wreg free
  2401  000F36                     
  2402                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  2403  000F36  0E00               	movlw	0
  2404  000F38  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2405  000F3A  0E03               	movlw	3
  2406  000F3C  6E35               	movwf	digitalWrite@pin^0,c
  2407  000F3E  0E00               	movlw	0
  2408  000F40  6E38               	movwf	(digitalWrite@value+1)^0,c
  2409  000F42  0E00               	movlw	0
  2410  000F44  6E37               	movwf	digitalWrite@value^0,c
  2411  000F46  ECAB  F005         	call	_digitalWrite	;wreg free
  2412  000F4A                     
  2413                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  2414  000F4A  0E00               	movlw	0
  2415  000F4C  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2416  000F4E  0E04               	movlw	4
  2417  000F50  6E35               	movwf	digitalWrite@pin^0,c
  2418  000F52  0E00               	movlw	0
  2419  000F54  6E38               	movwf	(digitalWrite@value+1)^0,c
  2420  000F56  0E00               	movlw	0
  2421  000F58  6E37               	movwf	digitalWrite@value^0,c
  2422  000F5A  ECAB  F005         	call	_digitalWrite	;wreg free
  2423  000F5E                     
  2424                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  2425  000F5E  0E00               	movlw	0
  2426  000F60  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2427  000F62  0E05               	movlw	5
  2428  000F64  6E35               	movwf	digitalWrite@pin^0,c
  2429  000F66  0E00               	movlw	0
  2430  000F68  6E38               	movwf	(digitalWrite@value+1)^0,c
  2431  000F6A  0E00               	movlw	0
  2432  000F6C  6E37               	movwf	digitalWrite@value^0,c
  2433  000F6E  ECAB  F005         	call	_digitalWrite	;wreg free
  2434                           
  2435                           ;ssd.c: 66:     PORTD = 0x00;
  2436  000F72  0E00               	movlw	0
  2437  000F74  6E83               	movwf	131,c	;volatile
  2438                           
  2439                           ;ssd.c: 69:     switch (display)
  2440  000F76  EF19  F008         	goto	l2077
  2441  000F7A                     l2049:
  2442                           
  2443                           ;ssd.c: 72:             PORTD = valor[v0];
  2444  000F7A  0E01               	movlw	low _valor
  2445  000F7C  242B               	addwf	_v0^0,w,c
  2446  000F7E  6EF6               	movwf	tblptrl,c
  2447  000F80  6AF7               	clrf	tblptrh,c
  2448  000F82  0E06               	movlw	high _valor
  2449  000F84  22F7               	addwfc	tblptrh,f,c
  2450  000F86                     	if	0	;There are less than 3 active tblptr bytes
  2451  000F86                     	endif
  2452  000F86  0008               	tblrd		*
  2453  000F88  CFF5 FF83          	movff	tablat,3971	;volatile
  2454  000F8C                     
  2455                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  2456  000F8C  0E00               	movlw	0
  2457  000F8E  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2458  000F90  0E02               	movlw	2
  2459  000F92  6E35               	movwf	digitalWrite@pin^0,c
  2460  000F94  0E00               	movlw	0
  2461  000F96  6E38               	movwf	(digitalWrite@value+1)^0,c
  2462  000F98  0E01               	movlw	1
  2463  000F9A  6E37               	movwf	digitalWrite@value^0,c
  2464  000F9C  ECAB  F005         	call	_digitalWrite	;wreg free
  2465  000FA0                     
  2466                           ;ssd.c: 74:             display = 1;
  2467  000FA0  0E01               	movlw	1
  2468  000FA2  6E2C               	movwf	_display^0,c
  2469                           
  2470                           ;ssd.c: 75:             break;
  2471  000FA4  EF36  F008         	goto	l329
  2472  000FA8                     l2055:
  2473                           
  2474                           ;ssd.c: 78:             PORTD = valor[v1];
  2475  000FA8  0E01               	movlw	low _valor
  2476  000FAA  242A               	addwf	_v1^0,w,c
  2477  000FAC  6EF6               	movwf	tblptrl,c
  2478  000FAE  6AF7               	clrf	tblptrh,c
  2479  000FB0  0E06               	movlw	high _valor
  2480  000FB2  22F7               	addwfc	tblptrh,f,c
  2481  000FB4                     	if	0	;There are less than 3 active tblptr bytes
  2482  000FB4                     	endif
  2483  000FB4  0008               	tblrd		*
  2484  000FB6  CFF5 FF83          	movff	tablat,3971	;volatile
  2485  000FBA                     
  2486                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  2487  000FBA  0E00               	movlw	0
  2488  000FBC  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2489  000FBE  0E03               	movlw	3
  2490  000FC0  6E35               	movwf	digitalWrite@pin^0,c
  2491  000FC2  0E00               	movlw	0
  2492  000FC4  6E38               	movwf	(digitalWrite@value+1)^0,c
  2493  000FC6  0E01               	movlw	1
  2494  000FC8  6E37               	movwf	digitalWrite@value^0,c
  2495  000FCA  ECAB  F005         	call	_digitalWrite	;wreg free
  2496  000FCE                     
  2497                           ;ssd.c: 80:             display = 2;
  2498  000FCE  0E02               	movlw	2
  2499  000FD0  6E2C               	movwf	_display^0,c
  2500                           
  2501                           ;ssd.c: 81:             break;
  2502  000FD2  EF36  F008         	goto	l329
  2503  000FD6                     l2061:
  2504                           
  2505                           ;ssd.c: 84:             PORTD = valor[v2];
  2506  000FD6  0E01               	movlw	low _valor
  2507  000FD8  2429               	addwf	_v2^0,w,c
  2508  000FDA  6EF6               	movwf	tblptrl,c
  2509  000FDC  6AF7               	clrf	tblptrh,c
  2510  000FDE  0E06               	movlw	high _valor
  2511  000FE0  22F7               	addwfc	tblptrh,f,c
  2512  000FE2                     	if	0	;There are less than 3 active tblptr bytes
  2513  000FE2                     	endif
  2514  000FE2  0008               	tblrd		*
  2515  000FE4  CFF5 FF83          	movff	tablat,3971	;volatile
  2516  000FE8                     
  2517                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  2518  000FE8  0E00               	movlw	0
  2519  000FEA  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2520  000FEC  0E04               	movlw	4
  2521  000FEE  6E35               	movwf	digitalWrite@pin^0,c
  2522  000FF0  0E00               	movlw	0
  2523  000FF2  6E38               	movwf	(digitalWrite@value+1)^0,c
  2524  000FF4  0E01               	movlw	1
  2525  000FF6  6E37               	movwf	digitalWrite@value^0,c
  2526  000FF8  ECAB  F005         	call	_digitalWrite	;wreg free
  2527  000FFC                     
  2528                           ;ssd.c: 86:             display = 3;
  2529  000FFC  0E03               	movlw	3
  2530  000FFE  6E2C               	movwf	_display^0,c
  2531                           
  2532                           ;ssd.c: 87:             break;
  2533  001000  EF36  F008         	goto	l329
  2534  001004                     l2067:
  2535                           
  2536                           ;ssd.c: 90:             PORTD = valor[v3];
  2537  001004  0E01               	movlw	low _valor
  2538  001006  2428               	addwf	_v3^0,w,c
  2539  001008  6EF6               	movwf	tblptrl,c
  2540  00100A  6AF7               	clrf	tblptrh,c
  2541  00100C  0E06               	movlw	high _valor
  2542  00100E  22F7               	addwfc	tblptrh,f,c
  2543  001010                     	if	0	;There are less than 3 active tblptr bytes
  2544  001010                     	endif
  2545  001010  0008               	tblrd		*
  2546  001012  CFF5 FF83          	movff	tablat,3971	;volatile
  2547  001016                     
  2548                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  2549  001016  0E00               	movlw	0
  2550  001018  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2551  00101A  0E05               	movlw	5
  2552  00101C  6E35               	movwf	digitalWrite@pin^0,c
  2553  00101E  0E00               	movlw	0
  2554  001020  6E38               	movwf	(digitalWrite@value+1)^0,c
  2555  001022  0E01               	movlw	1
  2556  001024  6E37               	movwf	digitalWrite@value^0,c
  2557  001026  ECAB  F005         	call	_digitalWrite	;wreg free
  2558  00102A                     l2071:
  2559                           
  2560                           ;ssd.c: 92:             display = 0;
  2561  00102A  0E00               	movlw	0
  2562  00102C  6E2C               	movwf	_display^0,c
  2563                           
  2564                           ;ssd.c: 93:             break;
  2565  00102E  EF36  F008         	goto	l329
  2566  001032                     l2077:
  2567  001032  502C               	movf	_display^0,w,c
  2568  001034  6E3B               	movwf	??_ssdUpdate^0,c
  2569  001036  6A3C               	clrf	(??_ssdUpdate+1)^0,c
  2570                           
  2571                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2572                           ; Switch size 1, requested type "simple"
  2573                           ; Number of cases is 1, Range of values is 0 to 0
  2574                           ; switch strategies available:
  2575                           ; Name         Instructions Cycles
  2576                           ; simple_byte            4     3 (average)
  2577                           ;	Chosen strategy is simple_byte
  2578  001038  503C               	movf	(??_ssdUpdate+1)^0,w,c
  2579  00103A  0A00               	xorlw	0	; case 0
  2580  00103C  B4D8               	btfsc	status,2,c
  2581  00103E  EF23  F008         	goto	l2523
  2582  001042  EF15  F008         	goto	l2071
  2583  001046                     l2523:
  2584                           
  2585                           ; Switch size 1, requested type "simple"
  2586                           ; Number of cases is 4, Range of values is 0 to 3
  2587                           ; switch strategies available:
  2588                           ; Name         Instructions Cycles
  2589                           ; simple_byte           13     7 (average)
  2590                           ;	Chosen strategy is simple_byte
  2591  001046  503B               	movf	??_ssdUpdate^0,w,c
  2592  001048  0A00               	xorlw	0	; case 0
  2593  00104A  B4D8               	btfsc	status,2,c
  2594  00104C  EFBD  F007         	goto	l2049
  2595  001050  0A01               	xorlw	1	; case 1
  2596  001052  B4D8               	btfsc	status,2,c
  2597  001054  EFD4  F007         	goto	l2055
  2598  001058  0A03               	xorlw	3	; case 2
  2599  00105A  B4D8               	btfsc	status,2,c
  2600  00105C  EFEB  F007         	goto	l2061
  2601  001060  0A01               	xorlw	1	; case 3
  2602  001062  B4D8               	btfsc	status,2,c
  2603  001064  EF02  F008         	goto	l2067
  2604  001068  EF15  F008         	goto	l2071
  2605  00106C                     l329:
  2606  00106C  0012               	return		;funcret
  2607  00106E                     __end_of_ssdUpdate:
  2608                           	callstack 0
  2609                           
  2610 ;; *************** function _ssdDigit *****************
  2611 ;; Defined at:
  2612 ;;		line 38 in file "ssd.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  val             1    wreg     unsigned char 
  2615 ;;  pos             1    0[COMRAM] unsigned char 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  val             1    1[COMRAM] unsigned char 
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      void 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2, status,0
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2627 ;;      Params:         1       0       0       0       0       0       0
  2628 ;;      Locals:         1       0       0       0       0       0       0
  2629 ;;      Temps:          0       0       0       0       0       0       0
  2630 ;;      Totals:         2       0       0       0       0       0       0
  2631 ;;Total ram usage:        2 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; This function calls:
  2634 ;;		Nothing
  2635 ;; This function is called by:
  2636 ;;		_chooseSong
  2637 ;;		_playSong
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           	psect	text11
  2642  0018C6                     __ptext11:
  2643                           	callstack 0
  2644  0018C6                     _ssdDigit:
  2645                           	callstack 29
  2646                           
  2647                           ;incstack = 0
  2648                           ;ssdDigit@val stored from wreg
  2649  0018C6  6E36               	movwf	ssdDigit@val^0,c
  2650  0018C8                     
  2651                           ;ssd.c: 39:     if (pos == 0) {
  2652  0018C8  5035               	movf	ssdDigit@pos^0,w,c
  2653  0018CA  A4D8               	btfss	status,2,c
  2654  0018CC  EF6A  F00C         	goto	u1721
  2655  0018D0  EF6C  F00C         	goto	u1720
  2656  0018D4                     u1721:
  2657  0018D4  EF6E  F00C         	goto	l2087
  2658  0018D8                     u1720:
  2659  0018D8                     
  2660                           ;ssd.c: 40:         v0 = val;
  2661  0018D8  C036  F02B         	movff	ssdDigit@val,_v0
  2662  0018DC                     l2087:
  2663                           
  2664                           ;ssd.c: 42:     if (pos == 1) {
  2665  0018DC  0435               	decf	ssdDigit@pos^0,w,c
  2666  0018DE  A4D8               	btfss	status,2,c
  2667  0018E0  EF74  F00C         	goto	u1731
  2668  0018E4  EF76  F00C         	goto	u1730
  2669  0018E8                     u1731:
  2670  0018E8  EF78  F00C         	goto	l2091
  2671  0018EC                     u1730:
  2672  0018EC                     
  2673                           ;ssd.c: 43:         v1 = val;
  2674  0018EC  C036  F02A         	movff	ssdDigit@val,_v1
  2675  0018F0                     l2091:
  2676                           
  2677                           ;ssd.c: 45:     if (pos == 2) {
  2678  0018F0  0E02               	movlw	2
  2679  0018F2  1835               	xorwf	ssdDigit@pos^0,w,c
  2680  0018F4  A4D8               	btfss	status,2,c
  2681  0018F6  EF7F  F00C         	goto	u1741
  2682  0018FA  EF81  F00C         	goto	u1740
  2683  0018FE                     u1741:
  2684  0018FE  EF83  F00C         	goto	l2095
  2685  001902                     u1740:
  2686  001902                     
  2687                           ;ssd.c: 46:         v2 = val;
  2688  001902  C036  F029         	movff	ssdDigit@val,_v2
  2689  001906                     l2095:
  2690                           
  2691                           ;ssd.c: 48:     if (pos == 3) {
  2692  001906  0E03               	movlw	3
  2693  001908  1835               	xorwf	ssdDigit@pos^0,w,c
  2694  00190A  A4D8               	btfss	status,2,c
  2695  00190C  EF8A  F00C         	goto	u1751
  2696  001910  EF8C  F00C         	goto	u1750
  2697  001914                     u1751:
  2698  001914  EF8E  F00C         	goto	l319
  2699  001918                     u1750:
  2700  001918                     
  2701                           ;ssd.c: 49:         v3 = val;
  2702  001918  C036  F028         	movff	ssdDigit@val,_v3
  2703  00191C                     l319:
  2704  00191C  0012               	return		;funcret
  2705  00191E                     __end_of_ssdDigit:
  2706                           	callstack 0
  2707                           
  2708 ;; *************** function _lcdStr *****************
  2709 ;; Defined at:
  2710 ;;		line 128 in file "lcd.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;  str             2    8[COMRAM] PTR const unsigned char 
  2713 ;;		 -> STR_6(16), STR_5(17), musicas.nome(17), musicas(190), 
  2714 ;;		 -> STR_4(17), STR_3(17), STR_2(7), STR_1(4), 
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;  i               1   12[COMRAM] unsigned char 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      void 
  2719 ;; Registers used:
  2720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2726 ;;      Params:         2       0       0       0       0       0       0
  2727 ;;      Locals:         1       0       0       0       0       0       0
  2728 ;;      Temps:          2       0       0       0       0       0       0
  2729 ;;      Totals:         5       0       0       0       0       0       0
  2730 ;;Total ram usage:        5 bytes
  2731 ;; Hardware stack levels used:    1
  2732 ;; Hardware stack levels required when called:    2
  2733 ;; This function calls:
  2734 ;;		_lcdData
  2735 ;; This function is called by:
  2736 ;;		_main
  2737 ;;		_chooseSong
  2738 ;;		_playSong
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742                           	psect	text12
  2743  00172E                     __ptext12:
  2744                           	callstack 0
  2745  00172E                     _lcdStr:
  2746                           	callstack 28
  2747  00172E                     
  2748                           ;lcd.c: 129:     unsigned char i = 0;
  2749  00172E  0E00               	movlw	0
  2750  001730  6E41               	movwf	lcdStr@i^0,c
  2751                           
  2752                           ;lcd.c: 131:     while (str[i] != 0) {
  2753  001732  EFB4  F00B         	goto	l1981
  2754  001736                     l1977:
  2755                           
  2756                           ;lcd.c: 132:         lcdData(str[i]);
  2757  001736  5041               	movf	lcdStr@i^0,w,c
  2758  001738  243D               	addwf	lcdStr@str^0,w,c
  2759  00173A  6E3F               	movwf	??_lcdStr^0,c
  2760  00173C  0E00               	movlw	0
  2761  00173E  203E               	addwfc	(lcdStr@str+1)^0,w,c
  2762  001740  6E40               	movwf	(??_lcdStr+1)^0,c
  2763  001742  C03F  FFF6         	movff	??_lcdStr,tblptrl
  2764  001746  C040  FFF7         	movff	??_lcdStr+1,tblptrh
  2765  00174A  6AF8               	clrf	tblptru,c
  2766  00174C  0E05               	movlw	(high __ramtop+-1)
  2767  00174E  64F7               	cpfsgt	tblptrh,c
  2768  001750  D003               	bra	u1587
  2769  001752  0008               	tblrd		*
  2770  001754  50F5               	movf	tablat,w,c
  2771  001756  D005               	bra	u1580
  2772  001758                     u1587:
  2773  001758  CFF6 FFE9          	movff	tblptrl,fsr0l
  2774  00175C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2775  001760  50EF               	movf	indf0,w,c
  2776  001762                     u1580:
  2777  001762  ECBA  F00C         	call	_lcdData
  2778  001766                     
  2779                           ;lcd.c: 133:         i++;
  2780  001766  2A41               	incf	lcdStr@i^0,f,c
  2781  001768                     l1981:
  2782                           
  2783                           ;lcd.c: 131:     while (str[i] != 0) {
  2784  001768  5041               	movf	lcdStr@i^0,w,c
  2785  00176A  243D               	addwf	lcdStr@str^0,w,c
  2786  00176C  6E3F               	movwf	??_lcdStr^0,c
  2787  00176E  0E00               	movlw	0
  2788  001770  203E               	addwfc	(lcdStr@str+1)^0,w,c
  2789  001772  6E40               	movwf	(??_lcdStr+1)^0,c
  2790  001774  C03F  FFF6         	movff	??_lcdStr,tblptrl
  2791  001778  C040  FFF7         	movff	??_lcdStr+1,tblptrh
  2792  00177C  6AF8               	clrf	tblptru,c
  2793  00177E  0E05               	movlw	(high __ramtop+-1)
  2794  001780  64F7               	cpfsgt	tblptrh,c
  2795  001782  D003               	bra	u1597
  2796  001784  0008               	tblrd		*
  2797  001786  50F5               	movf	tablat,w,c
  2798  001788  D005               	bra	u1590
  2799  00178A                     u1597:
  2800  00178A  CFF6 FFE9          	movff	tblptrl,fsr0l
  2801  00178E  CFF7 FFEA          	movff	tblptrh,fsr0h
  2802  001792  50EF               	movf	indf0,w,c
  2803  001794                     u1590:
  2804  001794  0900               	iorlw	0
  2805  001796  A4D8               	btfss	status,2,c
  2806  001798  EFD0  F00B         	goto	u1601
  2807  00179C  EFD2  F00B         	goto	u1600
  2808  0017A0                     u1601:
  2809  0017A0  EF9B  F00B         	goto	l1977
  2810  0017A4                     u1600:
  2811  0017A4  0012               	return		;funcret
  2812  0017A6                     __end_of_lcdStr:
  2813                           	callstack 0
  2814                           
  2815 ;; *************** function _lcdData *****************
  2816 ;; Defined at:
  2817 ;;		line 68 in file "lcd.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;  valor           1    wreg     unsigned char 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  valor           1    6[COMRAM] unsigned char 
  2822 ;;  old_D           1    7[COMRAM] unsigned char 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      void 
  2825 ;; Registers used:
  2826 ;;		wreg, status,2, status,0, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2832 ;;      Params:         0       0       0       0       0       0       0
  2833 ;;      Locals:         2       0       0       0       0       0       0
  2834 ;;      Temps:          0       0       0       0       0       0       0
  2835 ;;      Totals:         2       0       0       0       0       0       0
  2836 ;;Total ram usage:        2 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    1
  2839 ;; This function calls:
  2840 ;;		_Delay40us
  2841 ;;		_digitalWrite
  2842 ;; This function is called by:
  2843 ;;		_lcdStr
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           	psect	text13
  2848  001974                     __ptext13:
  2849                           	callstack 0
  2850  001974                     _lcdData:
  2851                           	callstack 28
  2852                           
  2853                           ;incstack = 0
  2854                           ;lcdData@valor stored from wreg
  2855  001974  6E3B               	movwf	lcdData@valor^0,c
  2856  001976                     
  2857                           ;lcd.c: 70:     unsigned char old_D;;lcd.c: 71:     old_D = PORTD;
  2858  001976  CF83 F03C          	movff	3971,lcdData@old_D	;volatile
  2859  00197A                     
  2860                           ;lcd.c: 73:     TRISD = 0x00;
  2861  00197A  0E00               	movlw	0
  2862  00197C  6E95               	movwf	149,c	;volatile
  2863  00197E                     
  2864                           ;lcd.c: 74:     digitalWrite(PIN_E2, 1);
  2865  00197E  0E00               	movlw	0
  2866  001980  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2867  001982  0E22               	movlw	34
  2868  001984  6E35               	movwf	digitalWrite@pin^0,c
  2869  001986  0E00               	movlw	0
  2870  001988  6E38               	movwf	(digitalWrite@value+1)^0,c
  2871  00198A  0E01               	movlw	1
  2872  00198C  6E37               	movwf	digitalWrite@value^0,c
  2873  00198E  ECAB  F005         	call	_digitalWrite	;wreg free
  2874  001992                     
  2875                           ;lcd.c: 76:     PORTD = valor;
  2876  001992  C03B  FF83         	movff	lcdData@valor,3971	;volatile
  2877  001996                     
  2878                           ;lcd.c: 78:     digitalWrite(PIN_E1, 1);
  2879  001996  0E00               	movlw	0
  2880  001998  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2881  00199A  0E21               	movlw	33
  2882  00199C  6E35               	movwf	digitalWrite@pin^0,c
  2883  00199E  0E00               	movlw	0
  2884  0019A0  6E38               	movwf	(digitalWrite@value+1)^0,c
  2885  0019A2  0E01               	movlw	1
  2886  0019A4  6E37               	movwf	digitalWrite@value^0,c
  2887  0019A6  ECAB  F005         	call	_digitalWrite	;wreg free
  2888  0019AA                     
  2889                           ;lcd.c: 79:     digitalWrite(PIN_E1, 0);
  2890  0019AA  0E00               	movlw	0
  2891  0019AC  6E36               	movwf	(digitalWrite@pin+1)^0,c
  2892  0019AE  0E21               	movlw	33
  2893  0019B0  6E35               	movwf	digitalWrite@pin^0,c
  2894  0019B2  0E00               	movlw	0
  2895  0019B4  6E38               	movwf	(digitalWrite@value+1)^0,c
  2896  0019B6  0E00               	movlw	0
  2897  0019B8  6E37               	movwf	digitalWrite@value^0,c
  2898  0019BA  ECAB  F005         	call	_digitalWrite	;wreg free
  2899  0019BE                     
  2900                           ;lcd.c: 81:     PORTD = old_D;
  2901  0019BE  C03C  FF83         	movff	lcdData@old_D,3971	;volatile
  2902  0019C2                     
  2903                           ;lcd.c: 83:     Delay40us();
  2904  0019C2  EC34  F00D         	call	_Delay40us	;wreg free
  2905  0019C6  0012               	return		;funcret
  2906  0019C8                     __end_of_lcdData:
  2907                           	callstack 0
  2908                           
  2909 ;; *************** function _lcdPosition *****************
  2910 ;; Defined at:
  2911 ;;		line 115 in file "lcd.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  linha           1    wreg     unsigned char 
  2914 ;;  coluna          1    8[COMRAM] unsigned char 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  linha           1    9[COMRAM] unsigned char 
  2917 ;;  comando         1   10[COMRAM] unsigned char 
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2927 ;;      Params:         1       0       0       0       0       0       0
  2928 ;;      Locals:         2       0       0       0       0       0       0
  2929 ;;      Temps:          0       0       0       0       0       0       0
  2930 ;;      Totals:         3       0       0       0       0       0       0
  2931 ;;Total ram usage:        3 bytes
  2932 ;; Hardware stack levels used:    1
  2933 ;; Hardware stack levels required when called:    3
  2934 ;; This function calls:
  2935 ;;		_lcdCommand
  2936 ;; This function is called by:
  2937 ;;		_main
  2938 ;;		_chooseSong
  2939 ;;		_playSong
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	text14
  2944  00186C                     __ptext14:
  2945                           	callstack 0
  2946  00186C                     _lcdPosition:
  2947                           	callstack 27
  2948                           
  2949                           ;incstack = 0
  2950                           ;lcdPosition@linha stored from wreg
  2951  00186C  6E3E               	movwf	lcdPosition@linha^0,c
  2952  00186E                     
  2953                           ;lcd.c: 116:     char comando = 0;
  2954  00186E  0E00               	movlw	0
  2955  001870  6E3F               	movwf	lcdPosition@comando^0,c
  2956  001872                     
  2957                           ;lcd.c: 117:     if (linha == 0 && comando != 0x01) comando = 0x80 + coluna;
  2958  001872  503E               	movf	lcdPosition@linha^0,w,c
  2959  001874  A4D8               	btfss	status,2,c
  2960  001876  EF3F  F00C         	goto	u1541
  2961  00187A  EF41  F00C         	goto	u1540
  2962  00187E                     u1541:
  2963  00187E  EF44  F00C         	goto	l145
  2964  001882                     u1540:
  2965  001882  503D               	movf	lcdPosition@coluna^0,w,c
  2966  001884  0F80               	addlw	128
  2967  001886  6E3F               	movwf	lcdPosition@comando^0,c
  2968  001888                     l145:
  2969                           
  2970                           ;lcd.c: 118:     if (linha == 1 && comando != 0x01) comando = 0xC0 + coluna;
  2971  001888  043E               	decf	lcdPosition@linha^0,w,c
  2972  00188A  A4D8               	btfss	status,2,c
  2973  00188C  EF4A  F00C         	goto	u1551
  2974  001890  EF4C  F00C         	goto	u1550
  2975  001894                     u1551:
  2976  001894  EF57  F00C         	goto	l146
  2977  001898                     u1550:
  2978  001898  043F               	decf	lcdPosition@comando^0,w,c
  2979  00189A  B4D8               	btfsc	status,2,c
  2980  00189C  EF52  F00C         	goto	u1561
  2981  0018A0  EF54  F00C         	goto	u1560
  2982  0018A4                     u1561:
  2983  0018A4  EF57  F00C         	goto	l146
  2984  0018A8                     u1560:
  2985  0018A8  503D               	movf	lcdPosition@coluna^0,w,c
  2986  0018AA  0FC0               	addlw	192
  2987  0018AC  6E3F               	movwf	lcdPosition@comando^0,c
  2988  0018AE                     l146:
  2989                           
  2990                           ;lcd.c: 119:     if (coluna > 15) {
  2991  0018AE  0E0F               	movlw	15
  2992  0018B0  643D               	cpfsgt	lcdPosition@coluna^0,c
  2993  0018B2  EF5D  F00C         	goto	u1571
  2994  0018B6  EF5F  F00C         	goto	u1570
  2995  0018BA                     u1571:
  2996  0018BA  EF5F  F00C         	goto	l1973
  2997  0018BE                     u1570:
  2998  0018BE                     l1973:
  2999                           
  3000                           ;lcd.c: 125:     lcdCommand(comando);
  3001  0018BE  503F               	movf	lcdPosition@comando^0,w,c
  3002  0018C0  EC1C  F00B         	call	_lcdCommand
  3003  0018C4  0012               	return		;funcret
  3004  0018C6                     __end_of_lcdPosition:
  3005                           	callstack 0
  3006                           
  3007 ;; *************** function _lcdCommand *****************
  3008 ;; Defined at:
  3009 ;;		line 43 in file "lcd.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  cmd             1    wreg     unsigned char 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  cmd             1    7[COMRAM] unsigned char 
  3014 ;;  old_D           1    6[COMRAM] unsigned char 
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      void 
  3017 ;; Registers used:
  3018 ;;		wreg, status,2, status,0, cstack
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3024 ;;      Params:         0       0       0       0       0       0       0
  3025 ;;      Locals:         2       0       0       0       0       0       0
  3026 ;;      Temps:          0       0       0       0       0       0       0
  3027 ;;      Totals:         2       0       0       0       0       0       0
  3028 ;;Total ram usage:        2 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    2
  3031 ;; This function calls:
  3032 ;;		_Delay2ms
  3033 ;;		_Delay40us
  3034 ;;		_digitalWrite
  3035 ;; This function is called by:
  3036 ;;		_main
  3037 ;;		_lcdInit
  3038 ;;		_lcdPosition
  3039 ;;		_chooseSong
  3040 ;;		_playSong
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           	psect	text15
  3045  001638                     __ptext15:
  3046                           	callstack 0
  3047  001638                     _lcdCommand:
  3048                           	callstack 27
  3049                           
  3050                           ;incstack = 0
  3051                           ;lcdCommand@cmd stored from wreg
  3052  001638  6E3C               	movwf	lcdCommand@cmd^0,c
  3053  00163A                     
  3054                           ;lcd.c: 44:     unsigned char old_D;;lcd.c: 45:     old_D = PORTD;
  3055  00163A  CF83 F03B          	movff	3971,lcdCommand@old_D	;volatile
  3056  00163E                     
  3057                           ;lcd.c: 48:     TRISD = 0x00;
  3058  00163E  0E00               	movlw	0
  3059  001640  6E95               	movwf	149,c	;volatile
  3060  001642                     
  3061                           ;lcd.c: 50:     digitalWrite(PIN_E2, 0);
  3062  001642  0E00               	movlw	0
  3063  001644  6E36               	movwf	(digitalWrite@pin+1)^0,c
  3064  001646  0E22               	movlw	34
  3065  001648  6E35               	movwf	digitalWrite@pin^0,c
  3066  00164A  0E00               	movlw	0
  3067  00164C  6E38               	movwf	(digitalWrite@value+1)^0,c
  3068  00164E  0E00               	movlw	0
  3069  001650  6E37               	movwf	digitalWrite@value^0,c
  3070  001652  ECAB  F005         	call	_digitalWrite	;wreg free
  3071  001656                     
  3072                           ;lcd.c: 51:     PORTD = cmd;
  3073  001656  C03C  FF83         	movff	lcdCommand@cmd,3971	;volatile
  3074  00165A                     
  3075                           ;lcd.c: 53:     digitalWrite(PIN_E1, 1);
  3076  00165A  0E00               	movlw	0
  3077  00165C  6E36               	movwf	(digitalWrite@pin+1)^0,c
  3078  00165E  0E21               	movlw	33
  3079  001660  6E35               	movwf	digitalWrite@pin^0,c
  3080  001662  0E00               	movlw	0
  3081  001664  6E38               	movwf	(digitalWrite@value+1)^0,c
  3082  001666  0E01               	movlw	1
  3083  001668  6E37               	movwf	digitalWrite@value^0,c
  3084  00166A  ECAB  F005         	call	_digitalWrite	;wreg free
  3085  00166E                     
  3086                           ;lcd.c: 54:     digitalWrite(PIN_E1, 0);
  3087  00166E  0E00               	movlw	0
  3088  001670  6E36               	movwf	(digitalWrite@pin+1)^0,c
  3089  001672  0E21               	movlw	33
  3090  001674  6E35               	movwf	digitalWrite@pin^0,c
  3091  001676  0E00               	movlw	0
  3092  001678  6E38               	movwf	(digitalWrite@value+1)^0,c
  3093  00167A  0E00               	movlw	0
  3094  00167C  6E37               	movwf	digitalWrite@value^0,c
  3095  00167E  ECAB  F005         	call	_digitalWrite	;wreg free
  3096  001682                     
  3097                           ;lcd.c: 57:     PORTD = old_D;
  3098  001682  C03B  FF83         	movff	lcdCommand@old_D,3971	;volatile
  3099  001686                     
  3100                           ;lcd.c: 59:     if ((cmd == 0x02) || (cmd == 0x01)) {
  3101  001686  0E02               	movlw	2
  3102  001688  183C               	xorwf	lcdCommand@cmd^0,w,c
  3103  00168A  B4D8               	btfsc	status,2,c
  3104  00168C  EF4A  F00B         	goto	u1521
  3105  001690  EF4C  F00B         	goto	u1520
  3106  001694                     u1521:
  3107  001694  EF54  F00B         	goto	l1937
  3108  001698                     u1520:
  3109  001698  043C               	decf	lcdCommand@cmd^0,w,c
  3110  00169A  A4D8               	btfss	status,2,c
  3111  00169C  EF52  F00B         	goto	u1531
  3112  0016A0  EF54  F00B         	goto	u1530
  3113  0016A4                     u1531:
  3114  0016A4  EF58  F00B         	goto	l1939
  3115  0016A8                     u1530:
  3116  0016A8                     l1937:
  3117                           
  3118                           ;lcd.c: 60:         Delay2ms();
  3119  0016A8  EC26  F00D         	call	_Delay2ms	;wreg free
  3120                           
  3121                           ;lcd.c: 61:     } else {
  3122  0016AC  EF5A  F00B         	goto	l136
  3123  0016B0                     l1939:
  3124                           
  3125                           ;lcd.c: 62:         Delay40us();
  3126  0016B0  EC34  F00D         	call	_Delay40us	;wreg free
  3127  0016B4                     l136:
  3128  0016B4  0012               	return		;funcret
  3129  0016B6                     __end_of_lcdCommand:
  3130                           	callstack 0
  3131                           
  3132 ;; *************** function _digitalWrite *****************
  3133 ;; Defined at:
  3134 ;;		line 14 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;  pin             2    0[COMRAM] int 
  3137 ;;  value           2    2[COMRAM] int 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;		None
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      void 
  3142 ;; Registers used:
  3143 ;;		wreg, status,2, status,0
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3149 ;;      Params:         4       0       0       0       0       0       0
  3150 ;;      Locals:         0       0       0       0       0       0       0
  3151 ;;      Temps:          2       0       0       0       0       0       0
  3152 ;;      Totals:         6       0       0       0       0       0       0
  3153 ;;Total ram usage:        6 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; This function calls:
  3156 ;;		Nothing
  3157 ;; This function is called by:
  3158 ;;		_lcdCommand
  3159 ;;		_lcdData
  3160 ;;		_ssdUpdate
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text16
  3165  000B56                     __ptext16:
  3166                           	callstack 0
  3167  000B56                     _digitalWrite:
  3168                           	callstack 28
  3169  000B56                     
  3170                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 16:     if(pin <8){
  3171  000B56  BE36               	btfsc	(digitalWrite@pin+1)^0,7,c
  3172  000B58  EFB9  F005         	goto	u1280
  3173  000B5C  5036               	movf	(digitalWrite@pin+1)^0,w,c
  3174  000B5E  E107               	bnz	u1281
  3175  000B60  0E08               	movlw	8
  3176  000B62  5C35               	subwf	digitalWrite@pin^0,w,c
  3177  000B64  B0D8               	btfsc	status,0,c
  3178  000B66  EFB7  F005         	goto	u1281
  3179  000B6A  EFB9  F005         	goto	u1280
  3180  000B6E                     u1281:
  3181  000B6E  EFE3  F005         	goto	l1849
  3182  000B72                     u1280:
  3183  000B72                     
  3184                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 17:         if (value){ ((PORTA) |=
      +                           (1<<(pin)));}
  3185  000B72  5037               	movf	digitalWrite@value^0,w,c
  3186  000B74  1038               	iorwf	(digitalWrite@value+1)^0,w,c
  3187  000B76  B4D8               	btfsc	status,2,c
  3188  000B78  EFC0  F005         	goto	u1291
  3189  000B7C  EFC2  F005         	goto	u1290
  3190  000B80                     u1291:
  3191  000B80  EFD2  F005         	goto	l1847
  3192  000B84                     u1290:
  3193  000B84  C035  F039         	movff	digitalWrite@pin,??_digitalWrite
  3194  000B88  0E01               	movlw	1
  3195  000B8A  6E3A               	movwf	(??_digitalWrite+1)^0,c
  3196  000B8C  2A39               	incf	??_digitalWrite^0,f,c
  3197  000B8E  EFCB  F005         	goto	u1304
  3198  000B92                     u1305:
  3199  000B92  90D8               	bcf	status,0,c
  3200  000B94  363A               	rlcf	(??_digitalWrite+1)^0,f,c
  3201  000B96                     u1304:
  3202  000B96  2E39               	decfsz	??_digitalWrite^0,f,c
  3203  000B98  EFC9  F005         	goto	u1305
  3204  000B9C  503A               	movf	(??_digitalWrite+1)^0,w,c
  3205  000B9E  1280               	iorwf	128,f,c	;volatile
  3206  000BA0  EFD1  F006         	goto	l42
  3207  000BA4                     l1847:
  3208  000BA4  C035  F039         	movff	digitalWrite@pin,??_digitalWrite
  3209  000BA8  0E01               	movlw	1
  3210  000BAA  6E3A               	movwf	(??_digitalWrite+1)^0,c
  3211  000BAC  2A39               	incf	??_digitalWrite^0,f,c
  3212  000BAE  EFDB  F005         	goto	u1314
  3213  000BB2                     u1315:
  3214  000BB2  90D8               	bcf	status,0,c
  3215  000BB4  363A               	rlcf	(??_digitalWrite+1)^0,f,c
  3216  000BB6                     u1314:
  3217  000BB6  2E39               	decfsz	??_digitalWrite^0,f,c
  3218  000BB8  EFD9  F005         	goto	u1315
  3219  000BBC  503A               	movf	(??_digitalWrite+1)^0,w,c
  3220  000BBE  0AFF               	xorlw	255
  3221  000BC0  1680               	andwf	128,f,c	;volatile
  3222  000BC2  EFD1  F006         	goto	l42
  3223  000BC6                     l1849:
  3224  000BC6  BE36               	btfsc	(digitalWrite@pin+1)^0,7,c
  3225  000BC8  EFF1  F005         	goto	u1320
  3226  000BCC  5036               	movf	(digitalWrite@pin+1)^0,w,c
  3227  000BCE  E107               	bnz	u1321
  3228  000BD0  0E10               	movlw	16
  3229  000BD2  5C35               	subwf	digitalWrite@pin^0,w,c
  3230  000BD4  B0D8               	btfsc	status,0,c
  3231  000BD6  EFEF  F005         	goto	u1321
  3232  000BDA  EFF1  F005         	goto	u1320
  3233  000BDE                     u1321:
  3234  000BDE  EF1F  F006         	goto	l1857
  3235  000BE2                     u1320:
  3236  000BE2                     
  3237                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 20:         pin -=8;
  3238  000BE2  0EF8               	movlw	248
  3239  000BE4  2635               	addwf	digitalWrite@pin^0,f,c
  3240  000BE6  0EFF               	movlw	255
  3241  000BE8  2236               	addwfc	(digitalWrite@pin+1)^0,f,c
  3242                           
  3243                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 21:         if (value){ ((PORTB) |=
      +                           (1<<(pin)));}
  3244  000BEA  5037               	movf	digitalWrite@value^0,w,c
  3245  000BEC  1038               	iorwf	(digitalWrite@value+1)^0,w,c
  3246  000BEE  B4D8               	btfsc	status,2,c
  3247  000BF0  EFFC  F005         	goto	u1331
  3248  000BF4  EFFE  F005         	goto	u1330
  3249  000BF8                     u1331:
  3250  000BF8  EF0E  F006         	goto	l1855
  3251  000BFC                     u1330:
  3252  000BFC  C035  F039         	movff	digitalWrite@pin,??_digitalWrite
  3253  000C00  0E01               	movlw	1
  3254  000C02  6E3A               	movwf	(??_digitalWrite+1)^0,c
  3255  000C04  2A39               	incf	??_digitalWrite^0,f,c
  3256  000C06  EF07  F006         	goto	u1344
  3257  000C0A                     u1345:
  3258  000C0A  90D8               	bcf	status,0,c
  3259  000C0C  363A               	rlcf	(??_digitalWrite+1)^0,f,c
  3260  000C0E                     u1344:
  3261  000C0E  2E39               	decfsz	??_digitalWrite^0,f,c
  3262  000C10  EF05  F006         	goto	u1345
  3263  000C14  503A               	movf	(??_digitalWrite+1)^0,w,c
  3264  000C16  1281               	iorwf	129,f,c	;volatile
  3265  000C18  EFD1  F006         	goto	l42
  3266  000C1C                     l1855:
  3267  000C1C  C035  F039         	movff	digitalWrite@pin,??_digitalWrite
  3268  000C20  0E01               	movlw	1
  3269  000C22  6E3A               	movwf	(??_digitalWrite+1)^0,c
  3270  000C24  2A39               	incf	??_digitalWrite^0,f,c
  3271  000C26  EF17  F006         	goto	u1354
  3272  000C2A                     u1355:
  3273  000C2A  90D8               	bcf	status,0,c
  3274  000C2C  363A               	rlcf	(??_digitalWrite+1)^0,f,c
  3275  000C2E                     u1354:
  3276  000C2E  2E39               	decfsz	??_digitalWrite^0,f,c
  3277  000C30  EF15  F006         	goto	u1355
  3278  000C34  503A               	movf	(??_digitalWrite+1)^0,w,c
  3279  000C36  0AFF               	xorlw	255
  3280  000C38  1681               	andwf	129,f,c	;volatile
  3281  000C3A  EFD1  F006         	goto	l42
  3282  000C3E                     l1857:
  3283  000C3E  BE36               	btfsc	(digitalWrite@pin+1)^0,7,c
  3284  000C40  EF2D  F006         	goto	u1360
  3285  000C44  5036               	movf	(digitalWrite@pin+1)^0,w,c
  3286  000C46  E107               	bnz	u1361
  3287  000C48  0E18               	movlw	24
  3288  000C4A  5C35               	subwf	digitalWrite@pin^0,w,c
  3289  000C4C  B0D8               	btfsc	status,0,c
  3290  000C4E  EF2B  F006         	goto	u1361
  3291  000C52  EF2D  F006         	goto	u1360
  3292  000C56                     u1361:
  3293  000C56  EF5B  F006         	goto	l1865
  3294  000C5A                     u1360:
  3295  000C5A                     
  3296                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 24:         pin -=16;
  3297  000C5A  0EF0               	movlw	240
  3298  000C5C  2635               	addwf	digitalWrite@pin^0,f,c
  3299  000C5E  0EFF               	movlw	255
  3300  000C60  2236               	addwfc	(digitalWrite@pin+1)^0,f,c
  3301                           
  3302                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 25:         if (value){ ((PORTC) |=
      +                           (1<<(pin)));}
  3303  000C62  5037               	movf	digitalWrite@value^0,w,c
  3304  000C64  1038               	iorwf	(digitalWrite@value+1)^0,w,c
  3305  000C66  B4D8               	btfsc	status,2,c
  3306  000C68  EF38  F006         	goto	u1371
  3307  000C6C  EF3A  F006         	goto	u1370
  3308  000C70                     u1371:
  3309  000C70  EF4A  F006         	goto	l1863
  3310  000C74                     u1370:
  3311  000C74  C035  F039         	movff	digitalWrite@pin,??_digitalWrite
  3312  000C78  0E01               	movlw	1
  3313  000C7A  6E3A               	movwf	(??_digitalWrite+1)^0,c
  3314  000C7C  2A39               	incf	??_digitalWrite^0,f,c
  3315  000C7E  EF43  F006         	goto	u1384
  3316  000C82                     u1385:
  3317  000C82  90D8               	bcf	status,0,c
  3318  000C84  363A               	rlcf	(??_digitalWrite+1)^0,f,c
  3319  000C86                     u1384:
  3320  000C86  2E39               	decfsz	??_digitalWrite^0,f,c
  3321  000C88  EF41  F006         	goto	u1385
  3322  000C8C  503A               	movf	(??_digitalWrite+1)^0,w,c
  3323  000C8E  1282               	iorwf	130,f,c	;volatile
  3324  000C90  EFD1  F006         	goto	l42
  3325  000C94                     l1863:
  3326  000C94  C035  F039         	movff	digitalWrite@pin,??_digitalWrite
  3327  000C98  0E01               	movlw	1
  3328  000C9A  6E3A               	movwf	(??_digitalWrite+1)^0,c
  3329  000C9C  2A39               	incf	??_digitalWrite^0,f,c
  3330  000C9E  EF53  F006         	goto	u1394
  3331  000CA2                     u1395:
  3332  000CA2  90D8               	bcf	status,0,c
  3333  000CA4  363A               	rlcf	(??_digitalWrite+1)^0,f,c
  3334  000CA6                     u1394:
  3335  000CA6  2E39               	decfsz	??_digitalWrite^0,f,c
  3336  000CA8  EF51  F006         	goto	u1395
  3337  000CAC  503A               	movf	(??_digitalWrite+1)^0,w,c
  3338  000CAE  0AFF               	xorlw	255
  3339  000CB0  1682               	andwf	130,f,c	;volatile
  3340  000CB2  EFD1  F006         	goto	l42
  3341  000CB6                     l1865:
  3342  000CB6  BE36               	btfsc	(digitalWrite@pin+1)^0,7,c
  3343  000CB8  EF69  F006         	goto	u1400
  3344  000CBC  5036               	movf	(digitalWrite@pin+1)^0,w,c
  3345  000CBE  E107               	bnz	u1401
  3346  000CC0  0E20               	movlw	32
  3347  000CC2  5C35               	subwf	digitalWrite@pin^0,w,c
  3348  000CC4  B0D8               	btfsc	status,0,c
  3349  000CC6  EF67  F006         	goto	u1401
  3350  000CCA  EF69  F006         	goto	u1400
  3351  000CCE                     u1401:
  3352  000CCE  EF97  F006         	goto	l1873
  3353  000CD2                     u1400:
  3354  000CD2                     
  3355                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 28:         pin -=24;
  3356  000CD2  0EE8               	movlw	232
  3357  000CD4  2635               	addwf	digitalWrite@pin^0,f,c
  3358  000CD6  0EFF               	movlw	255
  3359  000CD8  2236               	addwfc	(digitalWrite@pin+1)^0,f,c
  3360                           
  3361                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 29:         if (value){ ((PORTD) |=
      +                           (1<<(pin)));}
  3362  000CDA  5037               	movf	digitalWrite@value^0,w,c
  3363  000CDC  1038               	iorwf	(digitalWrite@value+1)^0,w,c
  3364  000CDE  B4D8               	btfsc	status,2,c
  3365  000CE0  EF74  F006         	goto	u1411
  3366  000CE4  EF76  F006         	goto	u1410
  3367  000CE8                     u1411:
  3368  000CE8  EF86  F006         	goto	l1871
  3369  000CEC                     u1410:
  3370  000CEC  C035  F039         	movff	digitalWrite@pin,??_digitalWrite
  3371  000CF0  0E01               	movlw	1
  3372  000CF2  6E3A               	movwf	(??_digitalWrite+1)^0,c
  3373  000CF4  2A39               	incf	??_digitalWrite^0,f,c
  3374  000CF6  EF7F  F006         	goto	u1424
  3375  000CFA                     u1425:
  3376  000CFA  90D8               	bcf	status,0,c
  3377  000CFC  363A               	rlcf	(??_digitalWrite+1)^0,f,c
  3378  000CFE                     u1424:
  3379  000CFE  2E39               	decfsz	??_digitalWrite^0,f,c
  3380  000D00  EF7D  F006         	goto	u1425
  3381  000D04  503A               	movf	(??_digitalWrite+1)^0,w,c
  3382  000D06  1283               	iorwf	131,f,c	;volatile
  3383  000D08  EFD1  F006         	goto	l42
  3384  000D0C                     l1871:
  3385  000D0C  C035  F039         	movff	digitalWrite@pin,??_digitalWrite
  3386  000D10  0E01               	movlw	1
  3387  000D12  6E3A               	movwf	(??_digitalWrite+1)^0,c
  3388  000D14  2A39               	incf	??_digitalWrite^0,f,c
  3389  000D16  EF8F  F006         	goto	u1434
  3390  000D1A                     u1435:
  3391  000D1A  90D8               	bcf	status,0,c
  3392  000D1C  363A               	rlcf	(??_digitalWrite+1)^0,f,c
  3393  000D1E                     u1434:
  3394  000D1E  2E39               	decfsz	??_digitalWrite^0,f,c
  3395  000D20  EF8D  F006         	goto	u1435
  3396  000D24  503A               	movf	(??_digitalWrite+1)^0,w,c
  3397  000D26  0AFF               	xorlw	255
  3398  000D28  1683               	andwf	131,f,c	;volatile
  3399  000D2A  EFD1  F006         	goto	l42
  3400  000D2E                     l1873:
  3401  000D2E  BE36               	btfsc	(digitalWrite@pin+1)^0,7,c
  3402  000D30  EFA5  F006         	goto	u1440
  3403  000D34  5036               	movf	(digitalWrite@pin+1)^0,w,c
  3404  000D36  E107               	bnz	u1441
  3405  000D38  0E28               	movlw	40
  3406  000D3A  5C35               	subwf	digitalWrite@pin^0,w,c
  3407  000D3C  B0D8               	btfsc	status,0,c
  3408  000D3E  EFA3  F006         	goto	u1441
  3409  000D42  EFA5  F006         	goto	u1440
  3410  000D46                     u1441:
  3411  000D46  EFD1  F006         	goto	l42
  3412  000D4A                     u1440:
  3413  000D4A                     
  3414                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 32:         pin -=32;
  3415  000D4A  0EE0               	movlw	224
  3416  000D4C  2635               	addwf	digitalWrite@pin^0,f,c
  3417  000D4E  0EFF               	movlw	255
  3418  000D50  2236               	addwfc	(digitalWrite@pin+1)^0,f,c
  3419                           
  3420                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 33:         if (value){ ((PORTE) |=
      +                           (1<<(pin)));}
  3421  000D52  5037               	movf	digitalWrite@value^0,w,c
  3422  000D54  1038               	iorwf	(digitalWrite@value+1)^0,w,c
  3423  000D56  B4D8               	btfsc	status,2,c
  3424  000D58  EFB0  F006         	goto	u1451
  3425  000D5C  EFB2  F006         	goto	u1450
  3426  000D60                     u1451:
  3427  000D60  EFC2  F006         	goto	l1879
  3428  000D64                     u1450:
  3429  000D64  C035  F039         	movff	digitalWrite@pin,??_digitalWrite
  3430  000D68  0E01               	movlw	1
  3431  000D6A  6E3A               	movwf	(??_digitalWrite+1)^0,c
  3432  000D6C  2A39               	incf	??_digitalWrite^0,f,c
  3433  000D6E  EFBB  F006         	goto	u1464
  3434  000D72                     u1465:
  3435  000D72  90D8               	bcf	status,0,c
  3436  000D74  363A               	rlcf	(??_digitalWrite+1)^0,f,c
  3437  000D76                     u1464:
  3438  000D76  2E39               	decfsz	??_digitalWrite^0,f,c
  3439  000D78  EFB9  F006         	goto	u1465
  3440  000D7C  503A               	movf	(??_digitalWrite+1)^0,w,c
  3441  000D7E  1284               	iorwf	132,f,c	;volatile
  3442  000D80  EFD1  F006         	goto	l42
  3443  000D84                     l1879:
  3444  000D84  C035  F039         	movff	digitalWrite@pin,??_digitalWrite
  3445  000D88  0E01               	movlw	1
  3446  000D8A  6E3A               	movwf	(??_digitalWrite+1)^0,c
  3447  000D8C  2A39               	incf	??_digitalWrite^0,f,c
  3448  000D8E  EFCB  F006         	goto	u1474
  3449  000D92                     u1475:
  3450  000D92  90D8               	bcf	status,0,c
  3451  000D94  363A               	rlcf	(??_digitalWrite+1)^0,f,c
  3452  000D96                     u1474:
  3453  000D96  2E39               	decfsz	??_digitalWrite^0,f,c
  3454  000D98  EFC9  F006         	goto	u1475
  3455  000D9C  503A               	movf	(??_digitalWrite+1)^0,w,c
  3456  000D9E  0AFF               	xorlw	255
  3457  000DA0  1684               	andwf	132,f,c	;volatile
  3458  000DA2                     l42:
  3459  000DA2  0012               	return		;funcret
  3460  000DA4                     __end_of_digitalWrite:
  3461                           	callstack 0
  3462                           
  3463 ;; *************** function _Delay2ms *****************
  3464 ;; Defined at:
  3465 ;;		line 36 in file "lcd.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;		None
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  i               1    1[COMRAM] unsigned char 
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  1    wreg      void 
  3472 ;; Registers used:
  3473 ;;		wreg, status,2, status,0, cstack
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3479 ;;      Params:         0       0       0       0       0       0       0
  3480 ;;      Locals:         1       0       0       0       0       0       0
  3481 ;;      Temps:          0       0       0       0       0       0       0
  3482 ;;      Totals:         1       0       0       0       0       0       0
  3483 ;;Total ram usage:        1 bytes
  3484 ;; Hardware stack levels used:    1
  3485 ;; Hardware stack levels required when called:    1
  3486 ;; This function calls:
  3487 ;;		_Delay40us
  3488 ;; This function is called by:
  3489 ;;		_lcdCommand
  3490 ;;		_lcdInit
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text17
  3495  001A4C                     __ptext17:
  3496                           	callstack 0
  3497  001A4C                     _Delay2ms:
  3498                           	callstack 27
  3499  001A4C                     
  3500                           ;lcd.c: 37:     unsigned char i;;lcd.c: 38:     for (i = 0; i < 50; i++) {
  3501  001A4C  0E00               	movlw	0
  3502  001A4E  6E36               	movwf	Delay2ms@i^0,c
  3503  001A50                     l1887:
  3504                           
  3505                           ;lcd.c: 39:         Delay40us();
  3506  001A50  EC34  F00D         	call	_Delay40us	;wreg free
  3507  001A54                     
  3508                           ;lcd.c: 40:     }
  3509  001A54  2A36               	incf	Delay2ms@i^0,f,c
  3510  001A56  0E31               	movlw	49
  3511  001A58  6436               	cpfsgt	Delay2ms@i^0,c
  3512  001A5A  EF31  F00D         	goto	u1481
  3513  001A5E  EF33  F00D         	goto	u1480
  3514  001A62                     u1481:
  3515  001A62  EF28  F00D         	goto	l1887
  3516  001A66                     u1480:
  3517  001A66  0012               	return		;funcret
  3518  001A68                     __end_of_Delay2ms:
  3519                           	callstack 0
  3520                           
  3521 ;; *************** function _Delay40us *****************
  3522 ;; Defined at:
  3523 ;;		line 31 in file "lcd.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;		None
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  i               1    0[COMRAM] unsigned char 
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  1    wreg      void 
  3530 ;; Registers used:
  3531 ;;		wreg, status,2, status,0
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3537 ;;      Params:         0       0       0       0       0       0       0
  3538 ;;      Locals:         1       0       0       0       0       0       0
  3539 ;;      Temps:          0       0       0       0       0       0       0
  3540 ;;      Totals:         1       0       0       0       0       0       0
  3541 ;;Total ram usage:        1 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; This function calls:
  3544 ;;		Nothing
  3545 ;; This function is called by:
  3546 ;;		_Delay2ms
  3547 ;;		_lcdCommand
  3548 ;;		_lcdData
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text18
  3553  001A68                     __ptext18:
  3554                           	callstack 0
  3555  001A68                     _Delay40us:
  3556                           	callstack 28
  3557  001A68                     
  3558                           ;lcd.c: 32:     unsigned char i;;lcd.c: 33:     for (i = 0; i < 25; i++);
  3559  001A68  0E00               	movlw	0
  3560  001A6A  6E35               	movwf	Delay40us@i^0,c
  3561  001A6C                     l1837:
  3562  001A6C  2A35               	incf	Delay40us@i^0,f,c
  3563  001A6E  0E18               	movlw	24
  3564  001A70  6435               	cpfsgt	Delay40us@i^0,c
  3565  001A72  EF3D  F00D         	goto	u1271
  3566  001A76  EF3F  F00D         	goto	u1270
  3567  001A7A                     u1271:
  3568  001A7A  EF36  F00D         	goto	l1837
  3569  001A7E                     u1270:
  3570  001A7E  0012               	return		;funcret
  3571  001A80                     __end_of_Delay40us:
  3572                           	callstack 0
  3573                           
  3574 ;; *************** function _kpRead *****************
  3575 ;; Defined at:
  3576 ;;		line 37 in file "keypad.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;		None
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;		None
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  2    0[COMRAM] unsigned int 
  3583 ;; Registers used:
  3584 ;;		None
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3590 ;;      Params:         2       0       0       0       0       0       0
  3591 ;;      Locals:         0       0       0       0       0       0       0
  3592 ;;      Temps:          0       0       0       0       0       0       0
  3593 ;;      Totals:         2       0       0       0       0       0       0
  3594 ;;Total ram usage:        2 bytes
  3595 ;; Hardware stack levels used:    1
  3596 ;; This function calls:
  3597 ;;		Nothing
  3598 ;; This function is called by:
  3599 ;;		_chooseSong
  3600 ;;		_playSong
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           	psect	text19
  3605  001A8A                     __ptext19:
  3606                           	callstack 0
  3607  001A8A                     _kpRead:
  3608                           	callstack 28
  3609  001A8A                     
  3610                           ;keypad.c: 38:     return valor;
  3611  001A8A  C024  F035         	movff	_valor@keypad$F294,?_kpRead
  3612  001A8E  C025  F036         	movff	_valor@keypad$F294+1,?_kpRead+1
  3613  001A92  0012               	return		;funcret
  3614  001A94                     __end_of_kpRead:
  3615                           	callstack 0
  3616                           
  3617 ;; *************** function _kpDebounce *****************
  3618 ;; Defined at:
  3619 ;;		line 41 in file "keypad.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;		None
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;  k               2    6[COMRAM] int 
  3624 ;;  i               1    9[COMRAM] unsigned char 
  3625 ;;  j               1    8[COMRAM] unsigned char 
  3626 ;;  old_D           1    5[COMRAM] unsigned char 
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2, status,0, prodl, prodh
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3636 ;;      Params:         0       0       0       0       0       0       0
  3637 ;;      Locals:         5       0       0       0       0       0       0
  3638 ;;      Temps:          5       0       0       0       0       0       0
  3639 ;;      Totals:        10       0       0       0       0       0       0
  3640 ;;Total ram usage:       10 bytes
  3641 ;; Hardware stack levels used:    1
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_chooseSong
  3646 ;;		_playSong
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text20
  3651  000DA4                     __ptext20:
  3652                           	callstack 0
  3653  000DA4                     _kpDebounce:
  3654                           	callstack 28
  3655  000DA4                     
  3656                           ;keypad.c: 42:     unsigned char i, j;;keypad.c: 43:     static unsigned char tempo;;key
      +                          pad.c: 44:     static unsigned int valorNovo = 0x0000;;keypad.c: 45:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 48:     unsigned char old_D;;keypad.c: 49:     old_
      +                          D = PORTD;
  3657  000DA4  CF83 F03A          	movff	3971,kpDebounce@old_D	;volatile
  3658  000DA8                     
  3659                           ;keypad.c: 53:     TRISD |= 0x0f;
  3660  000DA8  0E0F               	movlw	15
  3661  000DAA  1295               	iorwf	149,f,c	;volatile
  3662  000DAC                     
  3663                           ;keypad.c: 55:     for (i = 0; i < 3; i++) {
  3664  000DAC  0E00               	movlw	0
  3665  000DAE  6E3E               	movwf	kpDebounce@i^0,c
  3666  000DB0                     l1993:
  3667                           
  3668                           ;keypad.c: 57:         TRISB &= 0xF8;
  3669  000DB0  0EF8               	movlw	248
  3670  000DB2  1693               	andwf	147,f,c	;volatile
  3671                           
  3672                           ;keypad.c: 59:         ((TRISB) |= (1<<(i)));
  3673  000DB4  C03E  F035         	movff	kpDebounce@i,??_kpDebounce
  3674  000DB8  0E01               	movlw	1
  3675  000DBA  6E36               	movwf	(??_kpDebounce+1)^0,c
  3676  000DBC  2A35               	incf	??_kpDebounce^0,f,c
  3677  000DBE  EFE3  F006         	goto	u1614
  3678  000DC2                     u1615:
  3679  000DC2  90D8               	bcf	status,0,c
  3680  000DC4  3636               	rlcf	(??_kpDebounce+1)^0,f,c
  3681  000DC6                     u1614:
  3682  000DC6  2E35               	decfsz	??_kpDebounce^0,f,c
  3683  000DC8  EFE1  F006         	goto	u1615
  3684  000DCC  5036               	movf	(??_kpDebounce+1)^0,w,c
  3685  000DCE  1293               	iorwf	147,f,c	;volatile
  3686                           
  3687                           ;keypad.c: 61:         PORTB |= 0x07;
  3688  000DD0  0E07               	movlw	7
  3689  000DD2  1281               	iorwf	129,f,c	;volatile
  3690                           
  3691                           ;keypad.c: 62:         ((PORTB) &= ~(1<<(i)));
  3692  000DD4  C03E  F035         	movff	kpDebounce@i,??_kpDebounce
  3693  000DD8  0E01               	movlw	1
  3694  000DDA  6E36               	movwf	(??_kpDebounce+1)^0,c
  3695  000DDC  2A35               	incf	??_kpDebounce^0,f,c
  3696  000DDE  EFF3  F006         	goto	u1624
  3697  000DE2                     u1625:
  3698  000DE2  90D8               	bcf	status,0,c
  3699  000DE4  3636               	rlcf	(??_kpDebounce+1)^0,f,c
  3700  000DE6                     u1624:
  3701  000DE6  2E35               	decfsz	??_kpDebounce^0,f,c
  3702  000DE8  EFF1  F006         	goto	u1625
  3703  000DEC  5036               	movf	(??_kpDebounce+1)^0,w,c
  3704  000DEE  0AFF               	xorlw	255
  3705  000DF0  1681               	andwf	129,f,c	;volatile
  3706  000DF2                     
  3707                           ;keypad.c: 65:         for (int k = 0; k < 10; k++);
  3708  000DF2  0E00               	movlw	0
  3709  000DF4  6E3C               	movwf	(kpDebounce@k+1)^0,c
  3710  000DF6  0E00               	movlw	0
  3711  000DF8  6E3B               	movwf	kpDebounce@k^0,c
  3712  000DFA                     l2001:
  3713  000DFA  4A3B               	infsnz	kpDebounce@k^0,f,c
  3714  000DFC  2A3C               	incf	(kpDebounce@k+1)^0,f,c
  3715  000DFE  BE3C               	btfsc	(kpDebounce@k+1)^0,7,c
  3716  000E00  EF0B  F007         	goto	u1631
  3717  000E04  503C               	movf	(kpDebounce@k+1)^0,w,c
  3718  000E06  E109               	bnz	u1630
  3719  000E08  0E0A               	movlw	10
  3720  000E0A  5C3B               	subwf	kpDebounce@k^0,w,c
  3721  000E0C  A0D8               	btfss	status,0,c
  3722  000E0E  EF0B  F007         	goto	u1631
  3723  000E12  EF0D  F007         	goto	u1630
  3724  000E16                     u1631:
  3725  000E16  EFFD  F006         	goto	l2001
  3726  000E1A                     u1630:
  3727  000E1A                     
  3728                           ;keypad.c: 68:         for (j = 0; j < 4; j++) {
  3729  000E1A  0E00               	movlw	0
  3730  000E1C  6E3D               	movwf	kpDebounce@j^0,c
  3731  000E1E                     l2011:
  3732                           
  3733                           ;keypad.c: 69:             if (!((PORTD) & (1<<(j)))) {
  3734  000E1E  C03D  F035         	movff	kpDebounce@j,??_kpDebounce
  3735  000E22  0E01               	movlw	1
  3736  000E24  6E36               	movwf	(??_kpDebounce+1)^0,c
  3737  000E26  2A35               	incf	??_kpDebounce^0,f,c
  3738  000E28  EF18  F007         	goto	u1644
  3739  000E2C                     u1645:
  3740  000E2C  90D8               	bcf	status,0,c
  3741  000E2E  3636               	rlcf	(??_kpDebounce+1)^0,f,c
  3742  000E30                     u1644:
  3743  000E30  2E35               	decfsz	??_kpDebounce^0,f,c
  3744  000E32  EF16  F007         	goto	u1645
  3745  000E36  5036               	movf	(??_kpDebounce+1)^0,w,c
  3746  000E38  1483               	andwf	131,w,c	;volatile
  3747  000E3A  0900               	iorlw	0
  3748  000E3C  A4D8               	btfss	status,2,c
  3749  000E3E  EF23  F007         	goto	u1651
  3750  000E42  EF25  F007         	goto	u1650
  3751  000E46                     u1651:
  3752  000E46  EF3D  F007         	goto	l2015
  3753  000E4A                     u1650:
  3754  000E4A                     
  3755                           ;keypad.c: 70:                 ((valorNovo) |= (1<<((i * 4) + j)));
  3756  000E4A  503E               	movf	kpDebounce@i^0,w,c
  3757  000E4C  0D04               	mullw	4
  3758  000E4E  50F3               	movf	243,w,c
  3759  000E50  243D               	addwf	kpDebounce@j^0,w,c
  3760  000E52  6E35               	movwf	??_kpDebounce^0,c
  3761  000E54  0E01               	movlw	1
  3762  000E56  6E36               	movwf	(??_kpDebounce+1)^0,c
  3763  000E58  0E00               	movlw	0
  3764  000E5A  6E37               	movwf	(??_kpDebounce+2)^0,c
  3765  000E5C  2A35               	incf	??_kpDebounce^0,f,c
  3766  000E5E  EF34  F007         	goto	u1664
  3767  000E62                     u1665:
  3768  000E62  90D8               	bcf	status,0,c
  3769  000E64  3636               	rlcf	(??_kpDebounce+1)^0,f,c
  3770  000E66  3637               	rlcf	(??_kpDebounce+2)^0,f,c
  3771  000E68                     u1664:
  3772  000E68  2E35               	decfsz	??_kpDebounce^0,f,c
  3773  000E6A  EF31  F007         	goto	u1665
  3774  000E6E  5036               	movf	(??_kpDebounce+1)^0,w,c
  3775  000E70  1222               	iorwf	kpDebounce@valorNovo^0,f,c
  3776  000E72  5037               	movf	(??_kpDebounce+2)^0,w,c
  3777  000E74  1223               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  3778                           
  3779                           ;keypad.c: 71:             } else {
  3780  000E76  EF57  F007         	goto	l2017
  3781  000E7A                     l2015:
  3782                           
  3783                           ;keypad.c: 72:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  3784  000E7A  503E               	movf	kpDebounce@i^0,w,c
  3785  000E7C  0D04               	mullw	4
  3786  000E7E  50F3               	movf	243,w,c
  3787  000E80  243D               	addwf	kpDebounce@j^0,w,c
  3788  000E82  6E35               	movwf	??_kpDebounce^0,c
  3789  000E84  0E01               	movlw	1
  3790  000E86  6E36               	movwf	(??_kpDebounce+1)^0,c
  3791  000E88  0E00               	movlw	0
  3792  000E8A  6E37               	movwf	(??_kpDebounce+2)^0,c
  3793  000E8C  2A35               	incf	??_kpDebounce^0,f,c
  3794  000E8E  EF4C  F007         	goto	u1674
  3795  000E92                     u1675:
  3796  000E92  90D8               	bcf	status,0,c
  3797  000E94  3636               	rlcf	(??_kpDebounce+1)^0,f,c
  3798  000E96  3637               	rlcf	(??_kpDebounce+2)^0,f,c
  3799  000E98                     u1674:
  3800  000E98  2E35               	decfsz	??_kpDebounce^0,f,c
  3801  000E9A  EF49  F007         	goto	u1675
  3802  000E9E  1C36               	comf	(??_kpDebounce+1)^0,w,c
  3803  000EA0  6E38               	movwf	(??_kpDebounce+3)^0,c
  3804  000EA2  1C37               	comf	(??_kpDebounce+2)^0,w,c
  3805  000EA4  6E39               	movwf	(??_kpDebounce+4)^0,c
  3806  000EA6  5038               	movf	(??_kpDebounce+3)^0,w,c
  3807  000EA8  1622               	andwf	kpDebounce@valorNovo^0,f,c
  3808  000EAA  5039               	movf	(??_kpDebounce+4)^0,w,c
  3809  000EAC  1623               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  3810  000EAE                     l2017:
  3811                           
  3812                           ;keypad.c: 74:         }
  3813  000EAE  2A3D               	incf	kpDebounce@j^0,f,c
  3814  000EB0  0E03               	movlw	3
  3815  000EB2  643D               	cpfsgt	kpDebounce@j^0,c
  3816  000EB4  EF5E  F007         	goto	u1681
  3817  000EB8  EF60  F007         	goto	u1680
  3818  000EBC                     u1681:
  3819  000EBC  EF0F  F007         	goto	l2011
  3820  000EC0                     u1680:
  3821  000EC0                     
  3822                           ;keypad.c: 75:     }
  3823  000EC0  2A3E               	incf	kpDebounce@i^0,f,c
  3824  000EC2  0E02               	movlw	2
  3825  000EC4  643E               	cpfsgt	kpDebounce@i^0,c
  3826  000EC6  EF67  F007         	goto	u1691
  3827  000ECA  EF69  F007         	goto	u1690
  3828  000ECE                     u1691:
  3829  000ECE  EFD8  F006         	goto	l1993
  3830  000ED2                     u1690:
  3831  000ED2                     
  3832                           ;keypad.c: 76:     if (valorAntigo == valorNovo) {
  3833  000ED2  5022               	movf	kpDebounce@valorNovo^0,w,c
  3834  000ED4  1820               	xorwf	kpDebounce@valorAntigo^0,w,c
  3835  000ED6  E107               	bnz	u1701
  3836  000ED8  5023               	movf	(kpDebounce@valorNovo+1)^0,w,c
  3837  000EDA  1821               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  3838  000EDC  A4D8               	btfss	status,2,c
  3839  000EDE  EF73  F007         	goto	u1701
  3840  000EE2  EF75  F007         	goto	u1700
  3841  000EE6                     u1701:
  3842  000EE6  EF78  F007         	goto	l2029
  3843  000EEA                     u1700:
  3844  000EEA                     
  3845                           ;keypad.c: 77:         tempo--;
  3846  000EEA  0626               	decf	kpDebounce@tempo^0,f,c
  3847                           
  3848                           ;keypad.c: 78:     } else {
  3849  000EEC  EF7E  F007         	goto	l367
  3850  000EF0                     l2029:
  3851                           
  3852                           ;keypad.c: 79:         tempo = 10;
  3853  000EF0  0E0A               	movlw	10
  3854  000EF2  6E26               	movwf	kpDebounce@tempo^0,c
  3855  000EF4                     
  3856                           ;keypad.c: 80:         valorAntigo = valorNovo;
  3857  000EF4  C022  F020         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  3858  000EF8  C023  F021         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  3859  000EFC                     l367:
  3860                           
  3861                           ;keypad.c: 82:     if (tempo == 0) {
  3862  000EFC  5026               	movf	kpDebounce@tempo^0,w,c
  3863  000EFE  A4D8               	btfss	status,2,c
  3864  000F00  EF84  F007         	goto	u1711
  3865  000F04  EF86  F007         	goto	u1710
  3866  000F08                     u1711:
  3867  000F08  EF8A  F007         	goto	l368
  3868  000F0C                     u1710:
  3869  000F0C                     
  3870                           ;keypad.c: 83:         valor = valorAntigo;
  3871  000F0C  C020  F024         	movff	kpDebounce@valorAntigo,_valor@keypad$F294
  3872  000F10  C021  F025         	movff	kpDebounce@valorAntigo+1,_valor@keypad$F294+1
  3873  000F14                     l368:
  3874                           
  3875                           ;keypad.c: 85:     PORTD = old_D;
  3876  000F14  C03A  FF83         	movff	kpDebounce@old_D,3971	;volatile
  3877  000F18                     
  3878                           ;keypad.c: 86:     TRISD = 0x00;
  3879  000F18  0E00               	movlw	0
  3880  000F1A  6E95               	movwf	149,c	;volatile
  3881  000F1C  0012               	return		;funcret
  3882  000F1E                     __end_of_kpDebounce:
  3883                           	callstack 0
  3884                           
  3885 ;; *************** function _alterarVolume *****************
  3886 ;; Defined at:
  3887 ;;		line 143 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  opt             1    wreg     unsigned char 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  opt             1    6[COMRAM] unsigned char 
  3892 ;;  old_D           1    7[COMRAM] unsigned char 
  3893 ;;  old_A           1    0        unsigned char 
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      void 
  3896 ;; Registers used:
  3897 ;;		wreg, status,2, status,0, cstack
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3903 ;;      Params:         0       0       0       0       0       0       0
  3904 ;;      Locals:         2       0       0       0       0       0       0
  3905 ;;      Temps:          0       0       0       0       0       0       0
  3906 ;;      Totals:         2       0       0       0       0       0       0
  3907 ;;Total ram usage:        2 bytes
  3908 ;; Hardware stack levels used:    1
  3909 ;; Hardware stack levels required when called:    1
  3910 ;; This function calls:
  3911 ;;		_atraso_ms
  3912 ;; This function is called by:
  3913 ;;		_playSong
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           	psect	text21
  3918  00106E                     __ptext21:
  3919                           	callstack 0
  3920  00106E                     _alterarVolume:
  3921                           	callstack 27
  3922                           
  3923                           ;incstack = 0
  3924                           ;alterarVolume@opt stored from wreg
  3925  00106E  6E3B               	movwf	alterarVolume@opt^0,c
  3926  001070                     
  3927                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 144:     if (opt == 1) {
  3928  001070  043B               	decf	alterarVolume@opt^0,w,c
  3929  001072  A4D8               	btfss	status,2,c
  3930  001074  EF3E  F008         	goto	u1761
  3931  001078  EF40  F008         	goto	u1760
  3932  00107C                     u1761:
  3933  00107C  EF4C  F008         	goto	l2105
  3934  001080                     u1760:
  3935  001080                     
  3936                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 145:         if(volume!=8){volum
      +                          e += 1;}
  3937  001080  0E08               	movlw	8
  3938  001082  181D               	xorwf	_volume^0,w,c
  3939  001084  B4D8               	btfsc	status,2,c
  3940  001086  EF47  F008         	goto	u1771
  3941  00108A  EF49  F008         	goto	u1770
  3942  00108E                     u1771:
  3943  00108E  EF55  F008         	goto	l2109
  3944  001092                     u1770:
  3945  001092  2A1D               	incf	_volume^0,f,c
  3946  001094  EF55  F008         	goto	l2109
  3947  001098                     l2105:
  3948                           
  3949                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 147:         if(volume!=0){volum
      +                          e -= 1;}
  3950  001098  501D               	movf	_volume^0,w,c
  3951  00109A  B4D8               	btfsc	status,2,c
  3952  00109C  EF52  F008         	goto	u1781
  3953  0010A0  EF54  F008         	goto	u1780
  3954  0010A4                     u1781:
  3955  0010A4  EF55  F008         	goto	l2109
  3956  0010A8                     u1780:
  3957  0010A8  061D               	decf	_volume^0,f,c
  3958  0010AA                     l2109:
  3959                           
  3960                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 149:     unsigned char old_D, ol
      +                          d_A;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 150:     old_D = TRISD;
  3961  0010AA  CF95 F03C          	movff	3989,alterarVolume@old_D	;volatile
  3962  0010AE                     
  3963                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 153:     PORTA=0x00;
  3964  0010AE  0E00               	movlw	0
  3965  0010B0  6E80               	movwf	128,c	;volatile
  3966  0010B2                     
  3967                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 154:     TRISD = 0x00;
  3968  0010B2  0E00               	movlw	0
  3969  0010B4  6E95               	movwf	149,c	;volatile
  3970  0010B6                     
  3971                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 156:     if (volume == 0) {
  3972  0010B6  501D               	movf	_volume^0,w,c
  3973  0010B8  A4D8               	btfss	status,2,c
  3974  0010BA  EF61  F008         	goto	u1791
  3975  0010BE  EF63  F008         	goto	u1790
  3976  0010C2                     u1791:
  3977  0010C2  EF67  F008         	goto	l2119
  3978  0010C6                     u1790:
  3979  0010C6                     
  3980                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 157:         PORTD = 0b00000000;
  3981  0010C6  0E00               	movlw	0
  3982  0010C8  6E83               	movwf	131,c	;volatile
  3983                           
  3984                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 158:     } else if (volume == 1)
      +                           {
  3985  0010CA  EFCD  F008         	goto	l2151
  3986  0010CE                     l2119:
  3987  0010CE  041D               	decf	_volume^0,w,c
  3988  0010D0  A4D8               	btfss	status,2,c
  3989  0010D2  EF6D  F008         	goto	u1801
  3990  0010D6  EF6F  F008         	goto	u1800
  3991  0010DA                     u1801:
  3992  0010DA  EF73  F008         	goto	l2123
  3993  0010DE                     u1800:
  3994  0010DE                     
  3995                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 159:         PORTD = 0b10000000;
  3996  0010DE  0E80               	movlw	128
  3997  0010E0  6E83               	movwf	131,c	;volatile
  3998                           
  3999                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 160:     } else if (volume == 2)
      +                           {
  4000  0010E2  EFCD  F008         	goto	l2151
  4001  0010E6                     l2123:
  4002  0010E6  0E02               	movlw	2
  4003  0010E8  181D               	xorwf	_volume^0,w,c
  4004  0010EA  A4D8               	btfss	status,2,c
  4005  0010EC  EF7A  F008         	goto	u1811
  4006  0010F0  EF7C  F008         	goto	u1810
  4007  0010F4                     u1811:
  4008  0010F4  EF80  F008         	goto	l2127
  4009  0010F8                     u1810:
  4010  0010F8                     
  4011                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 161:         PORTD = 0b11000000;
  4012  0010F8  0EC0               	movlw	192
  4013  0010FA  6E83               	movwf	131,c	;volatile
  4014                           
  4015                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 162:     } else if (volume == 3)
      +                           {
  4016  0010FC  EFCD  F008         	goto	l2151
  4017  001100                     l2127:
  4018  001100  0E03               	movlw	3
  4019  001102  181D               	xorwf	_volume^0,w,c
  4020  001104  A4D8               	btfss	status,2,c
  4021  001106  EF87  F008         	goto	u1821
  4022  00110A  EF89  F008         	goto	u1820
  4023  00110E                     u1821:
  4024  00110E  EF8D  F008         	goto	l2131
  4025  001112                     u1820:
  4026  001112                     
  4027                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 163:         PORTD = 0b11100000;
  4028  001112  0EE0               	movlw	224
  4029  001114  6E83               	movwf	131,c	;volatile
  4030                           
  4031                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 164:     } else if (volume == 4)
      +                           {
  4032  001116  EFCD  F008         	goto	l2151
  4033  00111A                     l2131:
  4034  00111A  0E04               	movlw	4
  4035  00111C  181D               	xorwf	_volume^0,w,c
  4036  00111E  A4D8               	btfss	status,2,c
  4037  001120  EF94  F008         	goto	u1831
  4038  001124  EF96  F008         	goto	u1830
  4039  001128                     u1831:
  4040  001128  EF9A  F008         	goto	l2135
  4041  00112C                     u1830:
  4042  00112C                     
  4043                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 165:         PORTD = 0b11110000;
  4044  00112C  0EF0               	movlw	240
  4045  00112E  6E83               	movwf	131,c	;volatile
  4046                           
  4047                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 166:     } else if (volume == 5)
      +                           {
  4048  001130  EFCD  F008         	goto	l2151
  4049  001134                     l2135:
  4050  001134  0E05               	movlw	5
  4051  001136  181D               	xorwf	_volume^0,w,c
  4052  001138  A4D8               	btfss	status,2,c
  4053  00113A  EFA1  F008         	goto	u1841
  4054  00113E  EFA3  F008         	goto	u1840
  4055  001142                     u1841:
  4056  001142  EFA7  F008         	goto	l2139
  4057  001146                     u1840:
  4058  001146                     
  4059                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 167:         PORTD = 0b11111000;
  4060  001146  0EF8               	movlw	248
  4061  001148  6E83               	movwf	131,c	;volatile
  4062                           
  4063                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 168:     } else if (volume == 6)
      +                           {
  4064  00114A  EFCD  F008         	goto	l2151
  4065  00114E                     l2139:
  4066  00114E  0E06               	movlw	6
  4067  001150  181D               	xorwf	_volume^0,w,c
  4068  001152  A4D8               	btfss	status,2,c
  4069  001154  EFAE  F008         	goto	u1851
  4070  001158  EFB0  F008         	goto	u1850
  4071  00115C                     u1851:
  4072  00115C  EFB4  F008         	goto	l2143
  4073  001160                     u1850:
  4074  001160                     
  4075                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 169:         PORTD = 0b11111100;
  4076  001160  0EFC               	movlw	252
  4077  001162  6E83               	movwf	131,c	;volatile
  4078                           
  4079                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 170:     } else if (volume == 7)
      +                           {
  4080  001164  EFCD  F008         	goto	l2151
  4081  001168                     l2143:
  4082  001168  0E07               	movlw	7
  4083  00116A  181D               	xorwf	_volume^0,w,c
  4084  00116C  A4D8               	btfss	status,2,c
  4085  00116E  EFBB  F008         	goto	u1861
  4086  001172  EFBD  F008         	goto	u1860
  4087  001176                     u1861:
  4088  001176  EFC1  F008         	goto	l2147
  4089  00117A                     u1860:
  4090  00117A                     
  4091                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 171:         PORTD = 0b11111110;
  4092  00117A  0EFE               	movlw	254
  4093  00117C  6E83               	movwf	131,c	;volatile
  4094                           
  4095                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 172:     } else if (volume == 8)
      +                           {
  4096  00117E  EFCD  F008         	goto	l2151
  4097  001182                     l2147:
  4098  001182  0E08               	movlw	8
  4099  001184  181D               	xorwf	_volume^0,w,c
  4100  001186  A4D8               	btfss	status,2,c
  4101  001188  EFC8  F008         	goto	u1871
  4102  00118C  EFCA  F008         	goto	u1870
  4103  001190                     u1871:
  4104  001190  EFCD  F008         	goto	l286
  4105  001194                     u1870:
  4106  001194                     
  4107                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 173:         PORTD = 0b11111111;
  4108  001194  6883               	setf	131,c	;volatile
  4109  001196  EFCD  F008         	goto	l2151
  4110  00119A                     l286:
  4111  00119A                     l2151:
  4112                           
  4113                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 175:     atraso_ms(500);
  4114  00119A  0E01               	movlw	1
  4115  00119C  6E36               	movwf	(atraso_ms@t+1)^0,c
  4116  00119E  0EF4               	movlw	244
  4117  0011A0  6E35               	movwf	atraso_ms@t^0,c
  4118  0011A2  ECD3  F00B         	call	_atraso_ms	;wreg free
  4119  0011A6                     
  4120                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 176:     TRISD=old_D;
  4121  0011A6  C03C  FF95         	movff	alterarVolume@old_D,3989	;volatile
  4122  0011AA  0012               	return		;funcret
  4123  0011AC                     __end_of_alterarVolume:
  4124                           	callstack 0
  4125                           
  4126 ;; *************** function _atraso_ms *****************
  4127 ;; Defined at:
  4128 ;;		line 3 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;  t               2    0[COMRAM] int 
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;  i               2    2[COMRAM] volatile unsigned int 
  4133 ;;  k               1    5[COMRAM] volatile unsigned char 
  4134 ;;  j               1    4[COMRAM] volatile unsigned char 
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  1    wreg      void 
  4137 ;; Registers used:
  4138 ;;		wreg, status,2, status,0
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4144 ;;      Params:         2       0       0       0       0       0       0
  4145 ;;      Locals:         4       0       0       0       0       0       0
  4146 ;;      Temps:          0       0       0       0       0       0       0
  4147 ;;      Totals:         6       0       0       0       0       0       0
  4148 ;;Total ram usage:        6 bytes
  4149 ;; Hardware stack levels used:    1
  4150 ;; This function calls:
  4151 ;;		Nothing
  4152 ;; This function is called by:
  4153 ;;		_main
  4154 ;;		_chooseSong
  4155 ;;		_playSong
  4156 ;;		_alterarVolume
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160                           	psect	text22
  4161  0017A6                     __ptext22:
  4162                           	callstack 0
  4163  0017A6                     _atraso_ms:
  4164                           	callstack 28
  4165  0017A6                     
  4166                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 4:     volatile unsigned char j,
      +                           k;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 5:     volatile unsigned int 
      +                          i;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 7:     for (i = 0; i < (t); i+
      +                          +) {
  4167  0017A6  0E00               	movlw	0
  4168  0017A8  6E38               	movwf	(atraso_ms@i+1)^0,c	;volatile
  4169  0017AA  0E00               	movlw	0
  4170  0017AC  6E37               	movwf	atraso_ms@i^0,c	;volatile
  4171  0017AE  EFF9  F00B         	goto	l1917
  4172  0017B2                     l1895:
  4173                           
  4174                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 8:         for (j = 0; j < 41; j
      +                          ++) {
  4175  0017B2  0E00               	movlw	0
  4176  0017B4  6E39               	movwf	atraso_ms@j^0,c	;volatile
  4177  0017B6                     l1897:
  4178  0017B6  0E28               	movlw	40
  4179  0017B8  6439               	cpfsgt	atraso_ms@j^0,c	;volatile
  4180  0017BA  EFE1  F00B         	goto	u1491
  4181  0017BE  EFE3  F00B         	goto	u1490
  4182  0017C2                     u1491:
  4183  0017C2  EFE5  F00B         	goto	l1901
  4184  0017C6                     u1490:
  4185  0017C6  EFF7  F00B         	goto	l1915
  4186  0017CA                     l1901:
  4187                           
  4188                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 9:             for (k = 0; k < 3
      +                          ; k++);
  4189  0017CA  0E00               	movlw	0
  4190  0017CC  6E3A               	movwf	atraso_ms@k^0,c	;volatile
  4191  0017CE                     l1903:
  4192  0017CE  0E02               	movlw	2
  4193  0017D0  643A               	cpfsgt	atraso_ms@k^0,c	;volatile
  4194  0017D2  EFED  F00B         	goto	u1501
  4195  0017D6  EFEF  F00B         	goto	u1500
  4196  0017DA                     u1501:
  4197  0017DA  EFF1  F00B         	goto	l1907
  4198  0017DE                     u1500:
  4199  0017DE  EFF4  F00B         	goto	l1911
  4200  0017E2                     l1907:
  4201  0017E2  2A3A               	incf	atraso_ms@k^0,f,c	;volatile
  4202  0017E4  EFE7  F00B         	goto	l1903
  4203  0017E8                     l1911:
  4204                           
  4205                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 10:         }
  4206  0017E8  2A39               	incf	atraso_ms@j^0,f,c	;volatile
  4207  0017EA  EFDB  F00B         	goto	l1897
  4208  0017EE                     l1915:
  4209                           
  4210                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 11:     }
  4211  0017EE  4A37               	infsnz	atraso_ms@i^0,f,c	;volatile
  4212  0017F0  2A38               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  4213  0017F2                     l1917:
  4214  0017F2  5035               	movf	atraso_ms@t^0,w,c
  4215  0017F4  5C37               	subwf	atraso_ms@i^0,w,c	;volatile
  4216  0017F6  5036               	movf	(atraso_ms@t+1)^0,w,c
  4217  0017F8  5838               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  4218  0017FA  A0D8               	btfss	status,0,c
  4219  0017FC  EF02  F00C         	goto	u1511
  4220  001800  EF04  F00C         	goto	u1510
  4221  001804                     u1511:
  4222  001804  EFD9  F00B         	goto	l1895
  4223  001808                     u1510:
  4224  001808  0012               	return		;funcret
  4225  00180A                     __end_of_atraso_ms:
  4226                           	callstack 0
  4227                           
  4228 ;; *************** function ___awmod *****************
  4229 ;; Defined at:
  4230 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awmod.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  dividend        2    8[COMRAM] int 
  4233 ;;  divisor         2   10[COMRAM] int 
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;  sign            1   13[COMRAM] unsigned char 
  4236 ;;  counter         1   12[COMRAM] unsigned char 
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  2    8[COMRAM] int 
  4239 ;; Registers used:
  4240 ;;		wreg, status,2, status,0
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4246 ;;      Params:         4       0       0       0       0       0       0
  4247 ;;      Locals:         2       0       0       0       0       0       0
  4248 ;;      Temps:          0       0       0       0       0       0       0
  4249 ;;      Totals:         6       0       0       0       0       0       0
  4250 ;;Total ram usage:        6 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; This function calls:
  4253 ;;		Nothing
  4254 ;; This function is called by:
  4255 ;;		_playSong
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text23
  4260  0013AC                     __ptext23:
  4261                           	callstack 0
  4262  0013AC                     ___awmod:
  4263                           	callstack 28
  4264  0013AC  0E00               	movlw	0
  4265  0013AE  6E42               	movwf	___awmod@sign^0,c
  4266  0013B0  BE3E               	btfsc	(___awmod@dividend+1)^0,7,c
  4267  0013B2  EFDF  F009         	goto	u1940
  4268  0013B6  EFDD  F009         	goto	u1941
  4269  0013BA                     u1941:
  4270  0013BA  EFE5  F009         	goto	l2207
  4271  0013BE                     u1940:
  4272  0013BE  6C3D               	negf	___awmod@dividend^0,c
  4273  0013C0  1E3E               	comf	(___awmod@dividend+1)^0,f,c
  4274  0013C2  B0D8               	btfsc	status,0,c
  4275  0013C4  2A3E               	incf	(___awmod@dividend+1)^0,f,c
  4276  0013C6  0E01               	movlw	1
  4277  0013C8  6E42               	movwf	___awmod@sign^0,c
  4278  0013CA                     l2207:
  4279  0013CA  BE40               	btfsc	(___awmod@divisor+1)^0,7,c
  4280  0013CC  EFEC  F009         	goto	u1950
  4281  0013D0  EFEA  F009         	goto	u1951
  4282  0013D4                     u1951:
  4283  0013D4  EFF0  F009         	goto	l2211
  4284  0013D8                     u1950:
  4285  0013D8  6C3F               	negf	___awmod@divisor^0,c
  4286  0013DA  1E40               	comf	(___awmod@divisor+1)^0,f,c
  4287  0013DC  B0D8               	btfsc	status,0,c
  4288  0013DE  2A40               	incf	(___awmod@divisor+1)^0,f,c
  4289  0013E0                     l2211:
  4290  0013E0  503F               	movf	___awmod@divisor^0,w,c
  4291  0013E2  1040               	iorwf	(___awmod@divisor+1)^0,w,c
  4292  0013E4  B4D8               	btfsc	status,2,c
  4293  0013E6  EFF7  F009         	goto	u1961
  4294  0013EA  EFF9  F009         	goto	u1960
  4295  0013EE                     u1961:
  4296  0013EE  EF1D  F00A         	goto	l2227
  4297  0013F2                     u1960:
  4298  0013F2  0E01               	movlw	1
  4299  0013F4  6E41               	movwf	___awmod@counter^0,c
  4300  0013F6  EF01  F00A         	goto	l2217
  4301  0013FA                     l2215:
  4302  0013FA  90D8               	bcf	status,0,c
  4303  0013FC  363F               	rlcf	___awmod@divisor^0,f,c
  4304  0013FE  3640               	rlcf	(___awmod@divisor+1)^0,f,c
  4305  001400  2A41               	incf	___awmod@counter^0,f,c
  4306  001402                     l2217:
  4307  001402  AE40               	btfss	(___awmod@divisor+1)^0,7,c
  4308  001404  EF06  F00A         	goto	u1971
  4309  001408  EF08  F00A         	goto	u1970
  4310  00140C                     u1971:
  4311  00140C  EFFD  F009         	goto	l2215
  4312  001410                     u1970:
  4313  001410                     l2219:
  4314  001410  503F               	movf	___awmod@divisor^0,w,c
  4315  001412  5C3D               	subwf	___awmod@dividend^0,w,c
  4316  001414  5040               	movf	(___awmod@divisor+1)^0,w,c
  4317  001416  583E               	subwfb	(___awmod@dividend+1)^0,w,c
  4318  001418  A0D8               	btfss	status,0,c
  4319  00141A  EF11  F00A         	goto	u1981
  4320  00141E  EF13  F00A         	goto	u1980
  4321  001422                     u1981:
  4322  001422  EF17  F00A         	goto	l2223
  4323  001426                     u1980:
  4324  001426  503F               	movf	___awmod@divisor^0,w,c
  4325  001428  5E3D               	subwf	___awmod@dividend^0,f,c
  4326  00142A  5040               	movf	(___awmod@divisor+1)^0,w,c
  4327  00142C  5A3E               	subwfb	(___awmod@dividend+1)^0,f,c
  4328  00142E                     l2223:
  4329  00142E  90D8               	bcf	status,0,c
  4330  001430  3240               	rrcf	(___awmod@divisor+1)^0,f,c
  4331  001432  323F               	rrcf	___awmod@divisor^0,f,c
  4332  001434  2E41               	decfsz	___awmod@counter^0,f,c
  4333  001436  EF08  F00A         	goto	l2219
  4334  00143A                     l2227:
  4335  00143A  5042               	movf	___awmod@sign^0,w,c
  4336  00143C  B4D8               	btfsc	status,2,c
  4337  00143E  EF23  F00A         	goto	u1991
  4338  001442  EF25  F00A         	goto	u1990
  4339  001446                     u1991:
  4340  001446  EF29  F00A         	goto	l2231
  4341  00144A                     u1990:
  4342  00144A  6C3D               	negf	___awmod@dividend^0,c
  4343  00144C  1E3E               	comf	(___awmod@dividend+1)^0,f,c
  4344  00144E  B0D8               	btfsc	status,0,c
  4345  001450  2A3E               	incf	(___awmod@dividend+1)^0,f,c
  4346  001452                     l2231:
  4347  001452  C03D  F03D         	movff	___awmod@dividend,?___awmod
  4348  001456  C03E  F03E         	movff	___awmod@dividend+1,?___awmod+1
  4349  00145A  0012               	return		;funcret
  4350  00145C                     __end_of___awmod:
  4351                           	callstack 0
  4352                           
  4353 ;; *************** function ___awdiv *****************
  4354 ;; Defined at:
  4355 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  dividend        2    0[COMRAM] int 
  4358 ;;  divisor         2    2[COMRAM] int 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  quotient        2    6[COMRAM] int 
  4361 ;;  sign            1    5[COMRAM] unsigned char 
  4362 ;;  counter         1    4[COMRAM] unsigned char 
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  2    0[COMRAM] int 
  4365 ;; Registers used:
  4366 ;;		wreg, status,2, status,0
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4372 ;;      Params:         4       0       0       0       0       0       0
  4373 ;;      Locals:         4       0       0       0       0       0       0
  4374 ;;      Temps:          0       0       0       0       0       0       0
  4375 ;;      Totals:         8       0       0       0       0       0       0
  4376 ;;Total ram usage:        8 bytes
  4377 ;; Hardware stack levels used:    1
  4378 ;; This function calls:
  4379 ;;		Nothing
  4380 ;; This function is called by:
  4381 ;;		_playSong
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           	psect	text24
  4386  0012E8                     __ptext24:
  4387                           	callstack 0
  4388  0012E8                     ___awdiv:
  4389                           	callstack 28
  4390  0012E8  0E00               	movlw	0
  4391  0012EA  6E3A               	movwf	___awdiv@sign^0,c
  4392  0012EC  BE38               	btfsc	(___awdiv@divisor+1)^0,7,c
  4393  0012EE  EF7D  F009         	goto	u1880
  4394  0012F2  EF7B  F009         	goto	u1881
  4395  0012F6                     u1881:
  4396  0012F6  EF83  F009         	goto	l2163
  4397  0012FA                     u1880:
  4398  0012FA  6C37               	negf	___awdiv@divisor^0,c
  4399  0012FC  1E38               	comf	(___awdiv@divisor+1)^0,f,c
  4400  0012FE  B0D8               	btfsc	status,0,c
  4401  001300  2A38               	incf	(___awdiv@divisor+1)^0,f,c
  4402  001302  0E01               	movlw	1
  4403  001304  6E3A               	movwf	___awdiv@sign^0,c
  4404  001306                     l2163:
  4405  001306  BE36               	btfsc	(___awdiv@dividend+1)^0,7,c
  4406  001308  EF8A  F009         	goto	u1890
  4407  00130C  EF88  F009         	goto	u1891
  4408  001310                     u1891:
  4409  001310  EF90  F009         	goto	l2169
  4410  001314                     u1890:
  4411  001314  6C35               	negf	___awdiv@dividend^0,c
  4412  001316  1E36               	comf	(___awdiv@dividend+1)^0,f,c
  4413  001318  B0D8               	btfsc	status,0,c
  4414  00131A  2A36               	incf	(___awdiv@dividend+1)^0,f,c
  4415  00131C  0E01               	movlw	1
  4416  00131E  1A3A               	xorwf	___awdiv@sign^0,f,c
  4417  001320                     l2169:
  4418  001320  0E00               	movlw	0
  4419  001322  6E3C               	movwf	(___awdiv@quotient+1)^0,c
  4420  001324  0E00               	movlw	0
  4421  001326  6E3B               	movwf	___awdiv@quotient^0,c
  4422  001328  5037               	movf	___awdiv@divisor^0,w,c
  4423  00132A  1038               	iorwf	(___awdiv@divisor+1)^0,w,c
  4424  00132C  B4D8               	btfsc	status,2,c
  4425  00132E  EF9B  F009         	goto	u1901
  4426  001332  EF9D  F009         	goto	u1900
  4427  001336                     u1901:
  4428  001336  EFC5  F009         	goto	l2191
  4429  00133A                     u1900:
  4430  00133A  0E01               	movlw	1
  4431  00133C  6E39               	movwf	___awdiv@counter^0,c
  4432  00133E  EFA5  F009         	goto	l2177
  4433  001342                     l2175:
  4434  001342  90D8               	bcf	status,0,c
  4435  001344  3637               	rlcf	___awdiv@divisor^0,f,c
  4436  001346  3638               	rlcf	(___awdiv@divisor+1)^0,f,c
  4437  001348  2A39               	incf	___awdiv@counter^0,f,c
  4438  00134A                     l2177:
  4439  00134A  AE38               	btfss	(___awdiv@divisor+1)^0,7,c
  4440  00134C  EFAA  F009         	goto	u1911
  4441  001350  EFAC  F009         	goto	u1910
  4442  001354                     u1911:
  4443  001354  EFA1  F009         	goto	l2175
  4444  001358                     u1910:
  4445  001358                     l2179:
  4446  001358  90D8               	bcf	status,0,c
  4447  00135A  363B               	rlcf	___awdiv@quotient^0,f,c
  4448  00135C  363C               	rlcf	(___awdiv@quotient+1)^0,f,c
  4449  00135E  5037               	movf	___awdiv@divisor^0,w,c
  4450  001360  5C35               	subwf	___awdiv@dividend^0,w,c
  4451  001362  5038               	movf	(___awdiv@divisor+1)^0,w,c
  4452  001364  5836               	subwfb	(___awdiv@dividend+1)^0,w,c
  4453  001366  A0D8               	btfss	status,0,c
  4454  001368  EFB8  F009         	goto	u1921
  4455  00136C  EFBA  F009         	goto	u1920
  4456  001370                     u1921:
  4457  001370  EFBF  F009         	goto	l2187
  4458  001374                     u1920:
  4459  001374  5037               	movf	___awdiv@divisor^0,w,c
  4460  001376  5E35               	subwf	___awdiv@dividend^0,f,c
  4461  001378  5038               	movf	(___awdiv@divisor+1)^0,w,c
  4462  00137A  5A36               	subwfb	(___awdiv@dividend+1)^0,f,c
  4463  00137C  803B               	bsf	___awdiv@quotient^0,0,c
  4464  00137E                     l2187:
  4465  00137E  90D8               	bcf	status,0,c
  4466  001380  3238               	rrcf	(___awdiv@divisor+1)^0,f,c
  4467  001382  3237               	rrcf	___awdiv@divisor^0,f,c
  4468  001384  2E39               	decfsz	___awdiv@counter^0,f,c
  4469  001386  EFAC  F009         	goto	l2179
  4470  00138A                     l2191:
  4471  00138A  503A               	movf	___awdiv@sign^0,w,c
  4472  00138C  B4D8               	btfsc	status,2,c
  4473  00138E  EFCB  F009         	goto	u1931
  4474  001392  EFCD  F009         	goto	u1930
  4475  001396                     u1931:
  4476  001396  EFD1  F009         	goto	l2195
  4477  00139A                     u1930:
  4478  00139A  6C3B               	negf	___awdiv@quotient^0,c
  4479  00139C  1E3C               	comf	(___awdiv@quotient+1)^0,f,c
  4480  00139E  B0D8               	btfsc	status,0,c
  4481  0013A0  2A3C               	incf	(___awdiv@quotient+1)^0,f,c
  4482  0013A2                     l2195:
  4483  0013A2  C03B  F035         	movff	___awdiv@quotient,?___awdiv
  4484  0013A6  C03C  F036         	movff	___awdiv@quotient+1,?___awdiv+1
  4485  0013AA  0012               	return		;funcret
  4486  0013AC                     __end_of___awdiv:
  4487                           	callstack 0
  4488                           
  4489                           	psect	rparam
  4490  0000                     
  4491                           	psect	idloc
  4492                           
  4493                           ;Config register IDLOC0 @ 0x200000
  4494                           ;	unspecified, using default values
  4495  200000                     	org	2097152
  4496  200000  FF                 	db	255
  4497                           
  4498                           ;Config register IDLOC1 @ 0x200001
  4499                           ;	unspecified, using default values
  4500  200001                     	org	2097153
  4501  200001  FF                 	db	255
  4502                           
  4503                           ;Config register IDLOC2 @ 0x200002
  4504                           ;	unspecified, using default values
  4505  200002                     	org	2097154
  4506  200002  FF                 	db	255
  4507                           
  4508                           ;Config register IDLOC3 @ 0x200003
  4509                           ;	unspecified, using default values
  4510  200003                     	org	2097155
  4511  200003  FF                 	db	255
  4512                           
  4513                           ;Config register IDLOC4 @ 0x200004
  4514                           ;	unspecified, using default values
  4515  200004                     	org	2097156
  4516  200004  FF                 	db	255
  4517                           
  4518                           ;Config register IDLOC5 @ 0x200005
  4519                           ;	unspecified, using default values
  4520  200005                     	org	2097157
  4521  200005  FF                 	db	255
  4522                           
  4523                           ;Config register IDLOC6 @ 0x200006
  4524                           ;	unspecified, using default values
  4525  200006                     	org	2097158
  4526  200006  FF                 	db	255
  4527                           
  4528                           ;Config register IDLOC7 @ 0x200007
  4529                           ;	unspecified, using default values
  4530  200007                     	org	2097159
  4531  200007  FF                 	db	255
  4532                           
  4533                           	psect	config
  4534                           
  4535                           ; Padding undefined space
  4536  300000                     	org	3145728
  4537  300000  FF                 	db	255
  4538                           
  4539                           ;Config register CONFIG1H @ 0x300001
  4540                           ;	Oscillator Selection bits
  4541                           ;	OSC = HS, HS oscillator
  4542                           ;	Fail-Safe Clock Monitor Enable bit
  4543                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4544                           ;	Internal/External Oscillator Switchover bit
  4545                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4546  300001                     	org	3145729
  4547  300001  02                 	db	2
  4548                           
  4549                           ;Config register CONFIG2L @ 0x300002
  4550                           ;	Power-up Timer Enable bit
  4551                           ;	PWRT = OFF, PWRT disabled
  4552                           ;	Brown-out Reset Enable bits
  4553                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4554                           ;	Brown Out Reset Voltage bits
  4555                           ;	BORV = 0x2E, user specified literal
  4556  300002                     	org	3145730
  4557  300002  71                 	db	369
  4558                           
  4559                           ;Config register CONFIG2H @ 0x300003
  4560                           ;	Watchdog Timer Enable bit
  4561                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4562                           ;	Watchdog Timer Postscale Select bits
  4563                           ;	WDTPS = 1, 1:1
  4564  300003                     	org	3145731
  4565  300003  00                 	db	0
  4566                           
  4567                           ; Padding undefined space
  4568  300004                     	org	3145732
  4569  300004  FF                 	db	255
  4570                           
  4571                           ;Config register CONFIG3H @ 0x300005
  4572                           ;	CCP2 MUX bit
  4573                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4574                           ;	PORTB A/D Enable bit
  4575                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4576                           ;	Low-Power Timer1 Oscillator Enable bit
  4577                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4578                           ;	MCLR Pin Enable bit
  4579                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4580  300005                     	org	3145733
  4581  300005  83                 	db	131
  4582                           
  4583                           ;Config register CONFIG4L @ 0x300006
  4584                           ;	Stack Full/Underflow Reset Enable bit
  4585                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4586                           ;	Single-Supply ICSP Enable bit
  4587                           ;	LVP = OFF, Single-Supply ICSP disabled
  4588                           ;	Extended Instruction Set Enable bit
  4589                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4590                           ;	Background Debugger Enable bit
  4591                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4592  300006                     	org	3145734
  4593  300006  80                 	db	128
  4594                           
  4595                           ; Padding undefined space
  4596  300007                     	org	3145735
  4597  300007  FF                 	db	255
  4598                           
  4599                           ;Config register CONFIG5L @ 0x300008
  4600                           ;	Code Protection bit
  4601                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4602                           ;	Code Protection bit
  4603                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4604                           ;	Code Protection bit
  4605                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4606                           ;	Code Protection bit
  4607                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4608  300008                     	org	3145736
  4609  300008  0F                 	db	15
  4610                           
  4611                           ;Config register CONFIG5H @ 0x300009
  4612                           ;	Boot Block Code Protection bit
  4613                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4614                           ;	Data EEPROM Code Protection bit
  4615                           ;	CPD = OFF, Data EEPROM not code-protected
  4616  300009                     	org	3145737
  4617  300009  C0                 	db	192
  4618                           
  4619                           ;Config register CONFIG6L @ 0x30000A
  4620                           ;	Write Protection bit
  4621                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4622                           ;	Write Protection bit
  4623                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4624                           ;	Write Protection bit
  4625                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4626                           ;	Write Protection bit
  4627                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4628  30000A                     	org	3145738
  4629  30000A  0F                 	db	15
  4630                           
  4631                           ;Config register CONFIG6H @ 0x30000B
  4632                           ;	Configuration Register Write Protection bit
  4633                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4634                           ;	Boot Block Write Protection bit
  4635                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4636                           ;	Data EEPROM Write Protection bit
  4637                           ;	WRTD = OFF, Data EEPROM not write-protected
  4638  30000B                     	org	3145739
  4639  30000B  E0                 	db	224
  4640                           
  4641                           ;Config register CONFIG7L @ 0x30000C
  4642                           ;	Table Read Protection bit
  4643                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4644                           ;	Table Read Protection bit
  4645                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4646                           ;	Table Read Protection bit
  4647                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4648                           ;	Table Read Protection bit
  4649                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4650  30000C                     	org	3145740
  4651  30000C  0F                 	db	15
  4652                           
  4653                           ;Config register CONFIG7H @ 0x30000D
  4654                           ;	Boot Block Table Read Protection bit
  4655                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4656  30000D                     	org	3145741
  4657  30000D  40                 	db	64
  4658                           tosu	equ	0xFFF
  4659                           tosh	equ	0xFFE
  4660                           tosl	equ	0xFFD
  4661                           stkptr	equ	0xFFC
  4662                           pclatu	equ	0xFFB
  4663                           pclath	equ	0xFFA
  4664                           pcl	equ	0xFF9
  4665                           tblptru	equ	0xFF8
  4666                           tblptrh	equ	0xFF7
  4667                           tblptrl	equ	0xFF6
  4668                           tablat	equ	0xFF5
  4669                           prodh	equ	0xFF4
  4670                           prodl	equ	0xFF3
  4671                           indf0	equ	0xFEF
  4672                           postinc0	equ	0xFEE
  4673                           postdec0	equ	0xFED
  4674                           preinc0	equ	0xFEC
  4675                           plusw0	equ	0xFEB
  4676                           fsr0h	equ	0xFEA
  4677                           fsr0l	equ	0xFE9
  4678                           wreg	equ	0xFE8
  4679                           indf1	equ	0xFE7
  4680                           postinc1	equ	0xFE6
  4681                           postdec1	equ	0xFE5
  4682                           preinc1	equ	0xFE4
  4683                           plusw1	equ	0xFE3
  4684                           fsr1h	equ	0xFE2
  4685                           fsr1l	equ	0xFE1
  4686                           bsr	equ	0xFE0
  4687                           indf2	equ	0xFDF
  4688                           postinc2	equ	0xFDE
  4689                           postdec2	equ	0xFDD
  4690                           preinc2	equ	0xFDC
  4691                           plusw2	equ	0xFDB
  4692                           fsr2h	equ	0xFDA
  4693                           fsr2l	equ	0xFD9
  4694                           status	equ	0xFD8

Data Sizes:
    Strings     61
    Constant    16
    Data        201
    BSS         211
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     21      73
    BANK0           128      0       0
    BANK1           256      0     190
    BANK2           256      0     170
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 170
		 -> nomes(BANK2[170]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 170
		 -> nomes(BANK2[170]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    lcdStr@str	PTR const unsigned char  size(2) Largest target is 190
		 -> STR_6(CODE[16]), STR_5(CODE[17]), musicas.nome(BANK1[17]), musicas(BANK1[190]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[7]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_chooseSong
    _ssdInit->_pinMode
    _songsInit->_strcpy
    _strcpy->___wmul
    _lcdInit->_lcdCommand
    _chooseSong->_playSong
    _playSong->___awmod
    _ssdUpdate->_digitalWrite
    _lcdStr->_lcdData
    _lcdData->_digitalWrite
    _lcdPosition->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us
    _alterarVolume->_atraso_ms
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   47351
                          _atraso_ms
                         _chooseSong
                             _kpInit
                         _lcdCommand
                            _lcdInit
                        _lcdPosition
                             _lcdStr
                          _songsInit
                            _ssdInit
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    1352
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _songsInit                                            2     2      0     997
                                             14 COMRAM     2     2      0
                             ___wmul
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     4      4     248
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    4243
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _chooseSong                                           2     2      0   30493
                                             19 COMRAM     2     2      0
                          _atraso_ms
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                        _lcdPosition
                             _lcdStr
                           _playSong
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _playSong                                             5     5      0   16480
                                             14 COMRAM     5     5      0
                            ___awdiv
                            ___awmod
                      _alterarVolume
                          _atraso_ms
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                        _lcdPosition
                             _lcdStr
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _ssdUpdate                                            2     2      0    2572
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1     860
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _lcdStr                                               5     3      2    3361
                                              8 COMRAM     5     3      2
                            _lcdData
 ---------------------------------------------------------------------------------
 (2) _lcdData                                              2     2      0    2663
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _lcdPosition                                          3     2      1    3588
                                              8 COMRAM     3     2      1
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    2799
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    2572
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      92
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _kpDebounce                                          10    10      0     315
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (3) _alterarVolume                                        3     3      0     563
                                              6 COMRAM     2     2      0
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            6     4      2     518
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     904
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _chooseSong
     _atraso_ms
     _kpDebounce
     _kpRead
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _lcdPosition
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
     _lcdStr
       _lcdData
         _Delay40us
         _digitalWrite
     _playSong
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _alterarVolume
         _atraso_ms
       _atraso_ms
       _kpDebounce
       _kpRead
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
       _lcdPosition
         _lcdCommand
           _Delay2ms
             _Delay40us
           _Delay40us
           _digitalWrite
       _lcdStr
         _lcdData
           _Delay40us
           _digitalWrite
       _ssdDigit
       _ssdUpdate
         _digitalWrite
     _ssdDigit
     _ssdUpdate
       _digitalWrite
   _kpInit
   _lcdCommand
     _Delay2ms
       _Delay40us
     _Delay40us
     _digitalWrite
   _lcdInit
     _Delay2ms
       _Delay40us
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _pinMode
   _lcdPosition
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
   _lcdStr
     _lcdData
       _Delay40us
       _digitalWrite
   _songsInit
     ___wmul
     _strcpy
       ___wmul (ARG)
   _ssdInit
     _pinMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      AA       9       66.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      BE       7       74.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     15      49       1       57.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B1      15        0.0%
DATA                 0      0     1B1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Dec 08 17:56:15 2020

                      _i 0027          ??_alterarVolume 003B                       l42 0DA2  
                     l76 0B54                       l86 1808             ___awdiv@sign 003A  
                     _v0 002B                       _v1 002A                       _v2 0029  
                     _v3 0028      ___wmul@multiplicand 0037                      l124 1A7E  
                    l142 172C                      l136 16B4                      l232 1280  
                    l129 1A66                      l145 1888                      l146 18AE  
                    l250 0816                      l218 15AA                      l139 19C6  
                    l155 17A4                      l228 1252                      l332 1972  
                    l149 18C4                      l245 07DC                      l254 08C2  
                    l238 12E6                      l319 191C                      l255 0866  
                    l329 106C                      l266 0906                      l292 11AA  
                    l372 1A88                      l349 1A92                      l286 119A  
                    l367 0EFC                      l368 0F14                      l369 0F1C  
                    l642 145A                      l629 13AA                      l398 1A2A  
                    _cnt 002D             ___awmod@sign 0042                      prod 000FF3  
                    wreg 000FE8                     l2001 0DFA                     l2011 0E1E  
                   l2003 0DFE                     l2101 1080                     l2021 0EC0  
                   l2013 0E4A                     l2005 0E1A                     l2111 10AE  
                   l2103 1092                     l2031 0EF4                     l2023 0EC2  
                   l2015 0E7A                     l2201 13B0                     l2121 10DE  
                   l2113 10B2                     l2105 1098                     l2033 0F0C  
                   l2025 0ED2                     l2017 0EAE                     l2041 0F22  
                   l2211 13E0                     l2203 13BE                     l2131 111A  
                   l2123 10E6                     l2115 10B6                     l2107 10A8  
                   l2035 0F18                     l2027 0EEA                     l2019 0EB0  
                   l2051 0F8C                     l2043 0F36                     l1075 1A04  
                   l2221 1426                     l2213 13F2                     l2205 13C6  
                   l2141 1160                     l2133 112C                     l2125 10F8  
                   l2117 10C6                     l2109 10AA                     l2029 0EF0  
                   l2037 1A8A                     l2061 0FD6                     l2053 0FA0  
                   l2045 0F4A                     l2301 0796                     l2231 1452  
                   l2223 142E                     l2215 13FA                     l2207 13CA  
                   l2143 1168                     l2135 1134                     l2127 1100  
                   l2151 119A                     l2119 10CE                     l2071 102A  
                   l2063 0FE8                     l2055 0FA8                     l2047 0F5E  
                   l2039 0F1E                     l2311 07B8                     l2303 079A  
                   l2161 1302                     l2225 1434                     l2217 1402  
                   l2209 13D8                     l2153 11A6                     l2145 117A  
                   l2137 1146                     l2129 1112                     l2065 0FFC  
                   l2057 0FBA                     l2049 0F7A                     l2321 07EE  
                   l2313 07BC                     l2305 07A2                     l2241 0956  
                   l2401 16E2                     l2171 1328                     l2163 1306  
                   l2155 12E8                     l2219 1410                     l2227 143A  
                   l2147 1182                     l2139 114E                     l2091 18F0  
                   l2083 18C8                     l2067 1004                     l2059 0FCE  
                   l2323 07F2                     l2315 07C4                     l2251 09F0  
                   l2243 0978                     l2235 0908                     l2411 16F6  
                   l2403 16E6                     l2181 135E                     l2173 133A  
                   l2165 1314                     l2157 12EC                     l2229 144A  
                   l2149 1194                     l2093 1902                     l2085 18D8  
                   l2069 1016                     l2077 1032                     l2341 0846  
                   l2333 0828                     l2325 07F6                     l2317 07D2  
                   l2309 07B4                     l2261 0A84                     l2253 0A0C  
                   l2245 0994                     l2237 0924                     l2421 170E  
                   l2413 16FC                     l2405 16EA                     l2501 15D8  
                   l2183 1374                     l2175 1342                     l2191 138A  
                   l2167 131C                     l2159 12FA                     l2095 1906  
                   l2087 18DC                     l2351 087C                     l2343 0856  
                   l2335 082C                     l2327 07FE                     l2271 0B0E  
                   l2263 0A96                     l2255 0A1E                     l2247 09A6  
                   l2239 0936                     l2423 1714                     l2415 1700  
                   l2407 16EE                     l2431 191E                     l2511 160A  
                   l2503 15E2                     l2193 139A                     l2185 137C  
                   l2177 134A                     l2169 1320                     l2097 1918  
                   l2089 18EC                     l2353 0880                     l2345 085E  
                   l2337 0830                     l2329 080C                     l2361 08C2  
                   l2281 0660                     l2441 11C6                     l2273 0B32  
                   l2265 0ABA                     l2257 0A42                     l2249 09CA  
                   l2425 171A                     l2417 1704                     l2409 16F2  
                   l2433 196E                     l2513 1616                     l2505 15EE  
                   l2195 13A2                     l2187 137E                     l2179 1358  
                   l2099 1070                     l2523 1046                     l2371 08F6  
                   l2363 08C4                     l2355 0888                     l2339 0838  
                   l2291 0782                     l2283 0674                     l2451 11EC  
                   l2443 11D4                     l2435 11AC                     l2267 0AE0  
                   l2259 0A68                     l2427 1720                     l2419 170A  
                   l2275 19C8                     l2515 1620                     l2507 15FA  
                   l2189 1384                     l1901 17CA                     l2373 08F8  
                   l2365 08D4                     l2357 0896                     l2349 0878  
                   l2285 067E                     l2461 1244                     l2453 120E  
                   l2445 11D8                     l2437 11B0                     l2269 0AFC  
                   l2429 1726                     l2381 1A22                     l2277 19D8  
                   l2517 162C                     l2509 1600                     l2199 13AC  
                   l1911 17E8                     l1903 17CE                     l1831 1A68  
                   l2375 0904                     l2367 08E4                     l2287 068A  
                   l2279 0650                     l2471 128E                     l2463 124C  
                   l2455 121E                     l2447 11DC                     l2439 11B8  
                   l2391 1512                     l1841 0B56                     l1921 163E  
                   l2297 0786                     l2289 06A2                     l2369 08E6  
                   l2481 12D0                     l2465 1260                     l2473 1296  
                   l2457 1226                     l2449 11E0                     l1681 1A80  
                   l2393 1590                     l2385 1506                     l1907 17E2  
                   l1915 17EE                     l1851 0BE2                     l1843 0B72  
                   l1931 1682                     l1923 1642                     l2299 078A  
                   l2483 12DA                     l2475 12A6                     l2467 1272  
                   l2459 1234                     l2379 1A06                     l2395 1594  
                   l2491 15B4                     l1917 17F2                     l1837 1A6C  
                   l1861 0C74                     l1853 0BFC                     l1845 0B84  
                   l1933 1686                     l1925 1656                     l1941 1976  
                   l2477 12B2                     l2485 12E2                     l2469 127A  
                   l2397 16B6                     l2493 15B8                     l1839 1A6E  
                   l1871 0D0C                     l1863 0C94                     l1855 0C1C  
                   l1847 0BA4                     l1935 1698                     l1927 165A  
                   l1919 163A                     l1951 19AA                     l1943 197A  
                   l2479 12BC                     l2399 16DE                     l2495 15BC  
                   l2487 15AC                     l1881 1A4C                     l1873 0D2E  
                   l1865 0CB6                     l1857 0C3E                     l1849 0BC6  
                   l1937 16A8                     l1929 166E                     l1961 1882  
                   l1953 19BE                     l1945 197E                     l2497 15C2  
                   l2489 15B0                     l1891 1A56                     l1875 0D4A  
                   l1867 0CD2                     l1859 0C5A                     l1939 16B0  
                   l1963 1882                     l1955 19C2                     l1947 1992  
                   l2499 15CC                     l1893 17A6                     l1877 0D64  
                   l1869 0CEC                     l1973 18BE                     l1965 1898  
                   l1957 186E                     l1949 1996                     l1981 1768  
                   l1895 17B2                     l1983 0DA4                     l1887 1A50  
                   l1879 0D84                     l1967 18A8                     l1959 1872  
                   l1975 172E                     l1897 17B6                     l1993 0DB0  
                   l1985 0DA8                     l1889 1A54                     l1969 18BE  
                   l1977 1736                     l1995 0DF2                     l1987 0DAC  
                   l1979 1766                     STR_1 064A                     STR_2 0643  
                   STR_3 0622                     STR_4 0611                     STR_5 0611  
                   STR_6 0633                     u2000 0924                     u2001 0920  
                   u2010 0936                     u2011 0932                     u1400 0CD2  
                   u1320 0BE2                     u1304 0B96                     u2120 0A84  
                   u2104 0A34                     u2040 0994                     u2024 0948  
                   u2200 1A04                     u1401 0CCE                     u1321 0BDE  
                   u1305 0B92                     u2121 0A80                     u2105 0A30  
                   u2041 0990                     u2025 0944                     u2201 1A00  
                   u1410 0CEC                     u1330 0BFC                     u1314 0BB6  
                   u2210 07B0                     u2130 0A96                     u2114 0A58  
                   u2050 09A6                     u2034 0968                     u1411 0CE8  
                   u1331 0BF8                     u1315 0BB2                     u2211 07AC  
                   u2131 0A92                     u2115 0A54                     u2051 09A2  
                   u2035 0964                     u1500 17DE                     u2300 08D4  
                   u2220 07D2                     u1501 17DA                     u2301 08D0  
                   u2221 07CE                     u1510 1808                     u1270 1A7E  
                   u2310 08E4                     u2230 07EA                     u1511 1804  
                   u1271 1A7A                     u2311 08E0                     u2231 07E6  
                   u1440 0D4A                     u1424 0CFE                     u1360 0C5A  
                   u1344 0C0E                     u1280 0B72                     u1520 1698  
                   u1600 17A4                     u2320 08F6                     u2240 080C  
                   u2400 1260                     u2160 0AFC                     u2144 0AAC  
                   u2080 0A0C                     u2064 09BC                     u1441 0D46  
                   u1425 0CFA                     u1361 0C56                     u1345 0C0A  
                   u1281 0B6E                     u1521 1694                     u1601 17A0  
                   u2321 08F2                     u2241 0808                     u2401 125C  
                   u2161 0AF8                     u2145 0AA8                     u2081 0A08  
                   u2065 09B8                     u1450 0D64                     u1434 0D1E  
                   u1370 0C74                     u1354 0C2E                     u1290 0B84  
                   u1530 16A8                     u2250 0824                     u2410 1272  
                   u2170 0B0E                     u2154 0AD0                     u2090 0A1E  
                   u2074 09E0                     u2330 15AA                     u1451 0D60  
                   u1435 0D1A                     u1371 0C70                     u1355 0C2A  
                   u1291 0B80                     u1531 16A4                     u2251 0820  
                   u2411 126E                     u2171 0B0A                     u2155 0ACC  
                   u2091 0A1A                     u2075 09DC                     u2331 15A6  
                   u1700 0EEA                     u1540 1882                     u2260 0846  
                   u2420 128E                     u2340 11C6                     u1701 0EE6  
                   u1541 187E                     u2261 0842                     u2421 128A  
                   u2341 11C2                     u1710 0F0C                     u1630 0E1A  
                   u1614 0DC6                     u1550 1898                     u2270 0856  
                   u2350 11D4                     u1711 0F08                     u1631 0E16  
                   u1615 0DC2                     u1551 1894                     u2271 0852  
                   u2351 11D0                     u1800 10DE                     u1624 0DE6  
                   u1480 1A66                     u1464 0D76                     u1384 0C86  
                   u1560 18A8                     u1720 18D8                     u2280 0874  
                   u2360 120E                     u2184 0B24                     u1801 10DA  
                   u1625 0DE2                     u1481 1A62                     u1465 0D72  
                   u1385 0C82                     u1561 18A4                     u1721 18D4  
                   u2281 0870                     u2361 120A                     u2185 0B20  
                   u1490 17C6                     u1810 10F8                     u1650 0E4A  
                   u1474 0D96                     u1394 0CA6                     u1570 18BE  
                   u1730 18EC                     u2290 0896                     u2370 121E  
                   u2194 0B48                     u1491 17C2                     u1811 10F4  
                   u1651 0E46                     u1475 0D92                     u1395 0CA2  
                   u1571 18BA                     u1731 18E8                     u2291 0892  
                   u2371 121A                     u2195 0B44                     u1900 133A  
                   u1820 1112                     u1644 0E30                     u1580 1762  
                   u1740 1902                     u2380 1234                     u1901 1336  
                   u1821 110E                     u1645 0E2C                     u1741 18FE  
                   u2381 1230                     u1910 1358                     u1830 112C  
                   u1590 1794                     u1750 1918                     u2390 1244  
                   u1911 1354                     u1831 1128                     u1751 1914  
                   u2391 1240                     u1920 1374                     u1840 1146  
                   u1760 1080                     u1680 0EC0                     u1664 0E68  
                   u1921 1370                     u1841 1142                     u1761 107C  
                   u1681 0EBC                     u1665 0E62                     u1930 139A  
                   u1850 1160                     u1770 1092                     u1690 0ED2  
                   u1674 0E98                     u1931 1396                     u1851 115C  
                   u1771 108E                     u1691 0ECE                     u1675 0E92  
                   u1587 1758                     u1940 13BE                     u1860 117A  
                   u1780 10A8                     u1941 13BA                     u1861 1176  
                   u1781 10A4                     u1597 178A                     u1950 13D8  
                   u1870 1194                     u1790 10C6                     u1951 13D4  
                   u1871 1190                     u1791 10C2                     u1880 12FA  
                   u1960 13F2                     u1881 12F6                     u1961 13EE  
                   u1890 1314                     u1970 1410                     u1891 1310  
                   u1971 140C                     u1980 1426                     u1981 1422  
                   u1990 144A                     u1991 1446                     _flag 0033  
                   _main 15AC                     fsr0h 000FEA                     fsr1h 000FE2  
                   indf0 000FEF                     fsr2h 000FDA                     fsr0l 000FE9  
                   indf1 000FE7                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     prodh 000FF4                     prodl 000FF3  
                   start 0000             ___param_bank 000000                    ?_main 0035  
        __end_of___awdiv 13AC          __end_of___awmod 145C                    _T0CON 000FD5  
        ___awdiv@divisor 0037       alterarVolume@old_D 003C          ___awdiv@counter 0039  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_lcdData 19C8          __end_of_lcdInit 172E                    _pause 001E  
                  _tecla 001F                    _nomes 0200          __end_of_pinMode 0B56  
                  _valor 0601                    _tempo 0032                    tablat 000FF5  
        __end_of_ssdInit 1974                    status 000FD8         __end_of_Delay2ms 1A68  
   __end_of_digitalWrite 0DA4          __initialization 180A             __end_of_main 1638  
     __size_of_Delay40us 0018                   ??_main 004A            __activetblptr 000002  
       ___awdiv@dividend 0035                   _INTCON 000FF2     __size_of_lcdPosition 005A  
      lcdPosition@coluna 003D                   ___wmul 1A06                ??___awdiv 0039  
              ??___awmod 0041                   _lcdStr 172E                   _kpInit 1A80  
                 _kpRead 1A8A                   _indice 0034                   clear_0 1850  
                 clear_1 185C         ___awdiv@quotient 003B                   _teclas 0015  
        ___awmod@divisor 003F                ??_lcdData 003B                ??_lcdInit 003D  
        ___awmod@counter 0041                   _strcpy 19C8                   _volume 001D  
       __end_of_playSong 0908         __end_of_ssdDigit 191E             __pdataCOMRAM 0001  
              ??_pinMode 0039             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_ssdInit 003B  
      __end_of_Delay40us 1A80               __accesstop 0080  __end_of__initialization 1862  
          ___rparam_used 000001              pinMode@type 0037           __pcstackCOMRAM 0035  
           __pidataBANK2 145C         alterarVolume@opt 003B            __end_of_valor 0611  
              ?_Delay2ms 0035       __size_of_atraso_ms 0064               __pbssBANK1 0100  
  __size_of_digitalWrite 024E               _lcdCommand 1638                  ?___wmul 0035  
                ?_lcdStr 003D                  ?_kpInit 0035                  ?_kpRead 0035  
             _kpDebounce 0DA4    __end_of_alterarVolume 11AC               _chooseSong 11AC  
                ?_strcpy 003B       __size_of_ssdUpdate 0150               ??_Delay2ms 0036  
           _digitalWrite 0B56       __size_of_songsInit 00A6                ?_playSong 0035  
                __Hparam 0000                  __Lparam 0000                ?_ssdDigit 0035  
        kpDebounce@old_D 003A       lcdPosition@comando 003F          kpDebounce@tempo 0026  
                ___awdiv 12E8                  ___awmod 13AC          __size_of___wmul 0026  
      __end_of_atraso_ms 180A             __psmallconst 0600          __size_of_lcdStr 0078  
        __size_of_kpInit 000A          __size_of_kpRead 000A              ssdDigit@val 0036  
            ssdDigit@pos 0035                  __pcinit 180A                  _lcdData 1974  
                __ramtop 0600                  _lcdInit 16B6                  __ptext0 15AC  
                __ptext1 191E                  __ptext2 1506                  __ptext3 19C8  
                __ptext4 1A06                  __ptext5 16B6                  __ptext6 0908  
                __ptext7 1A80                  __ptext8 11AC                  __ptext9 0650  
                _display 002C          __size_of_strcpy 003E                  _pinMode 0908  
       ___awmod@dividend 003D                  _minuto1 0031                  _minuto2 0030  
                _ssdInit 191E                  _musicas 0100                  lcdStr@i 0041  
              Delay2ms@i 0036      kpDebounce@valorNovo 0022     end_of_initialization 1862  
          __Lmediumconst 0000               ??_playSong 0043        __end_of_ssdUpdate 106E  
             ??_ssdDigit 0036        __end_of_songsInit 15AC                  postdec1 000FE5  
                postdec2 000FDD              ?_lcdCommand 0035                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE                  strcpy@d 0041  
                strcpy@s 003F              ?_kpDebounce 0035              ?_chooseSong 0035  
          ??_lcdPosition 003E                _Delay40us 1A68               atraso_ms@i 0037  
             atraso_ms@j 0039               atraso_ms@k 003A               atraso_ms@t 0035  
         __end_of___wmul 1A2C            __pidataCOMRAM 1A2C           __end_of_lcdStr 17A6  
         __end_of_kpInit 1A8A           __end_of_kpRead 1A94           __end_of_strcpy 1A06  
    start_initialization 180A        __size_of_Delay2ms 001C      __size_of_lcdCommand 007E  
    __size_of_kpDebounce 017A               ?_Delay40us 0035      __size_of_chooseSong 013C  
    __end_of_lcdPosition 18C6         lcdPosition@linha 003E                 ??___wmul 0039  
               ??_lcdStr 003F                 ??_kpInit 0035                 ??_kpRead 0037  
            __pdataBANK2 0200                 ??_strcpy 003F              __pbssCOMRAM 0020  
             pinMode@pin 0035        __size_of_playSong 02B8                 ?___awdiv 0035  
               ?___awmod 003D        __size_of_ssdDigit 0058                 ?_lcdData 0035  
               ?_lcdInit 0035            lcdCommand@cmd 003C                _atraso_ms 17A6  
            __smallconst 0600                 ?_pinMode 0035                 ?_ssdInit 0035  
            _lcdPosition 186C              ??_Delay40us 0035           ___wmul@product 0039  
 __size_of_alterarVolume 013E             ??_lcdCommand 003B                _ssdUpdate 0F1E  
              lcdStr@str 003D             ??_kpDebounce 0035             ??_chooseSong 0048  
              _songsInit 1506        ___wmul@multiplier 0035               ?_atraso_ms 0035  
        lcdCommand@old_D 003B    kpDebounce@valorAntigo 0020                 _Delay2ms 1A4C  
              copy_data0 181E                copy_data1 183E             _playSong$957 0043  
           _playSong$958 0045       __end_of_lcdCommand 16B6             lcdData@old_D 003C  
           lcdData@valor 003B               songsInit@i 0043       __end_of_kpDebounce 0F1E  
     __end_of_chooseSong 12E8                 __Hrparam 0000                 __Lrparam 0000  
             ?_ssdUpdate 0035         __size_of___awdiv 00C4         __size_of___awmod 00B0  
             ?_songsInit 0035            _alterarVolume 106E         __size_of_lcdData 0054  
       __size_of_lcdInit 0078         __size_of_pinMode 024E                 __ptext10 0F1E  
               __ptext11 18C6                 __ptext20 0DA4                 __ptext12 172E  
               __ptext21 106E                 __ptext13 1974                 __ptext22 17A6  
               __ptext14 186C                 __ptext23 13AC                 __ptext15 1638  
               __ptext24 12E8                 __ptext16 0B56                 __ptext17 1A4C  
               __ptext18 1A68                 __ptext19 1A8A                playSong@j 0047  
       __size_of_ssdInit 0056               strcpy@dest 003B                 _duracoes 0001  
          __size_of_main 008C                 _playSong 0650                 _segundo1 002F  
               _segundo2 002E               Delay40us@i 0035                 _ssdDigit 18C6  
         ?_alterarVolume 0035              ??_atraso_ms 0037            ?_digitalWrite 0035  
      digitalWrite@value 0037                strcpy@src 003D              ??_ssdUpdate 003B  
            ??_songsInit 0043              kpDebounce@i 003E              kpDebounce@j 003D  
            kpDebounce@k 003B           ??_digitalWrite 0039             ?_lcdPosition 003D  
        digitalWrite@pin 0035        _valor@keypad$F294 0024  
