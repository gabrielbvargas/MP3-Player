

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Dec 08 18:41:35 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F4520 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	idataCOMRAM
    85  001C56                     __pidataCOMRAM:
    86                           	callstack 0
    87                           
    88                           ;initializer for _duracoes
    89  001C56  0046               	dw	70
    90  001C58  000F               	dw	15
    91  001C5A  0078               	dw	120
    92  001C5C  003C               	dw	60
    93  001C5E  000A               	dw	10
    94  001C60  0028               	dw	40
    95  001C62  0014               	dw	20
    96  001C64  001E               	dw	30
    97  001C66  008C               	dw	140
    98  001C68  000A               	dw	10
    99                           
   100                           ;initializer for _teclas
   101  001C6A  0A                 	db	10
   102  001C6B  07                 	db	7
   103  001C6C  04                 	db	4
   104  001C6D  01                 	db	1
   105  001C6E  00                 	db	0
   106  001C6F  08                 	db	8
   107  001C70  05                 	db	5
   108  001C71  02                 	db	2
   109                           
   110                           ;initializer for _volume
   111  001C72  03                 	db	3
   112                           
   113                           ;initializer for _pause
   114  001C73  01                 	db	1
   115                           
   116                           ;initializer for _tecla
   117  001C74  10                 	db	16
   118                           
   119                           	psect	idataBANK2
   120  001580                     __pidataBANK2:
   121                           	callstack 0
   122                           
   123                           ;initializer for _nomes
   124  001580  54                 	db	84
   125  001581  65                 	db	101
   126  001582  6D                 	db	109
   127  001583  70                 	db	112
   128  001584  6F                 	db	111
   129  001585  72                 	db	114
   130  001586  61                 	db	97
   131  001587  6C                 	db	108
   132  001588  00                 	db	0
   133  001589  00                 	db	0
   134  00158A  00                 	db	0
   135  00158B  00                 	db	0
   136  00158C  00                 	db	0
   137  00158D  00                 	db	0
   138  00158E  00                 	db	0
   139  00158F  00                 	db	0
   140  001590  00                 	db	0
   141  001591  43                 	db	67
   142  001592  68                 	db	104
   143  001593  65                 	db	101
   144  001594  69                 	db	105
   145  001595  61                 	db	97
   146  001596  20                 	db	32
   147  001597  64                 	db	100
   148  001598  65                 	db	101
   149  001599  20                 	db	32
   150  00159A  4D                 	db	77
   151  00159B  61                 	db	97
   152  00159C  6E                 	db	110
   153  00159D  69                 	db	105
   154  00159E  61                 	db	97
   155  00159F  73                 	db	115
   156  0015A0  00                 	db	0
   157  0015A1  00                 	db	0
   158  0015A2  45                 	db	69
   159  0015A3  20                 	db	32
   160  0015A4  54                 	db	84
   161  0015A5  61                 	db	97
   162  0015A6  72                 	db	114
   163  0015A7  64                 	db	100
   164  0015A8  65                 	db	101
   165  0015A9  20                 	db	32
   166  0015AA  44                 	db	68
   167  0015AB  65                 	db	101
   168  0015AC  6D                 	db	109
   169  0015AD  61                 	db	97
   170  0015AE  69                 	db	105
   171  0015AF  73                 	db	115
   172  0015B0  00                 	db	0
   173  0015B1  00                 	db	0
   174  0015B2  00                 	db	0
   175  0015B3  53                 	db	83
   176  0015B4  6F                 	db	111
   177  0015B5  7A                 	db	122
   178  0015B6  69                 	db	105
   179  0015B7  6E                 	db	110
   180  0015B8  68                 	db	104
   181  0015B9  6F                 	db	111
   182  0015BA  00                 	db	0
   183  0015BB  00                 	db	0
   184  0015BC  00                 	db	0
   185  0015BD  00                 	db	0
   186  0015BE  00                 	db	0
   187  0015BF  00                 	db	0
   188  0015C0  00                 	db	0
   189  0015C1  00                 	db	0
   190  0015C2  00                 	db	0
   191  0015C3  00                 	db	0
   192  0015C4  43                 	db	67
   193  0015C5  69                 	db	105
   194  0015C6  67                 	db	103
   195  0015C7  61                 	db	97
   196  0015C8  6E                 	db	110
   197  0015C9  61                 	db	97
   198  0015CA  00                 	db	0
   199  0015CB  00                 	db	0
   200  0015CC  00                 	db	0
   201  0015CD  00                 	db	0
   202  0015CE  00                 	db	0
   203  0015CF  00                 	db	0
   204  0015D0  00                 	db	0
   205  0015D1  00                 	db	0
   206  0015D2  00                 	db	0
   207  0015D3  00                 	db	0
   208  0015D4  00                 	db	0
   209  0015D5  43                 	db	67
   210  0015D6  69                 	db	105
   211  0015D7  75                 	db	117
   212  0015D8  6D                 	db	109
   213  0015D9  65                 	db	101
   214  0015DA  73                 	db	115
   215  0015DB  20                 	db	32
   216  0015DC  64                 	db	100
   217  0015DD  65                 	db	101
   218  0015DE  20                 	db	32
   219  0015DF  56                 	db	86
   220  0015E0  6F                 	db	111
   221  0015E1  63                 	db	99
   222  0015E2  65                 	db	101
   223  0015E3  00                 	db	0
   224  0015E4  00                 	db	0
   225  0015E5  00                 	db	0
   226  0015E6  45                 	db	69
   227  0015E7  78                 	db	120
   228  0015E8  74                 	db	116
   229  0015E9  72                 	db	114
   230  0015EA  61                 	db	97
   231  0015EB  70                 	db	112
   232  0015EC  6F                 	db	111
   233  0015ED  6C                 	db	108
   234  0015EE  65                 	db	101
   235  0015EF  69                 	db	105
   236  0015F0  00                 	db	0
   237  0015F1  00                 	db	0
   238  0015F2  00                 	db	0
   239  0015F3  00                 	db	0
   240  0015F4  00                 	db	0
   241  0015F5  00                 	db	0
   242  0015F6  00                 	db	0
   243  0015F7  44                 	db	68
   244  0015F8  65                 	db	101
   245  0015F9  75                 	db	117
   246  0015FA  73                 	db	115
   247  0015FB  20                 	db	32
   248  0015FC  6D                 	db	109
   249  0015FD  65                 	db	101
   250  0015FE  20                 	db	32
   251  0015FF  4C                 	db	76
   252  001600  69                 	db	105
   253  001601  76                 	db	118
   254  001602  72                 	db	114
   255  001603  65                 	db	101
   256  001604  00                 	db	0
   257  001605  00                 	db	0
   258  001606  00                 	db	0
   259  001607  00                 	db	0
   260  001608  4D                 	db	77
   261  001609  61                 	db	97
   262  00160A  72                 	db	114
   263  00160B  61                 	db	97
   264  00160C  76                 	db	118
   265  00160D  69                 	db	105
   266  00160E  6C                 	db	108
   267  00160F  68                 	db	104
   268  001610  61                 	db	97
   269  001611  00                 	db	0
   270  001612  00                 	db	0
   271  001613  00                 	db	0
   272  001614  00                 	db	0
   273  001615  00                 	db	0
   274  001616  00                 	db	0
   275  001617  00                 	db	0
   276  001618  00                 	db	0
   277  001619  4D                 	db	77
   278  00161A  65                 	db	101
   279  00161B  64                 	db	100
   280  00161C  69                 	db	105
   281  00161D  64                 	db	100
   282  00161E  61                 	db	97
   283  00161F  20                 	db	32
   284  001620  45                 	db	69
   285  001621  78                 	db	120
   286  001622  61                 	db	97
   287  001623  74                 	db	116
   288  001624  61                 	db	97
   289  001625  00                 	db	0
   290  001626  00                 	db	0
   291  001627  00                 	db	0
   292  001628  00                 	db	0
   293  001629  00                 	db	0
   294                           
   295                           	psect	smallconst
   296  000600                     __psmallconst:
   297                           	callstack 0
   298  000600  00                 	db	0
   299  000601                     _valor:
   300                           	callstack 0
   301  000601  3F                 	db	63
   302  000602  06                 	db	6
   303  000603  5B                 	db	91
   304  000604  4F                 	db	79
   305  000605  66                 	db	102
   306  000606  6D                 	db	109
   307  000607  7D                 	db	125
   308  000608  07                 	db	7
   309  000609  7F                 	db	127
   310  00060A  6F                 	db	111
   311  00060B  77                 	db	119
   312  00060C  7C                 	db	124
   313  00060D  39                 	db	57
   314  00060E  5E                 	db	94
   315  00060F  79                 	db	121
   316  000610  71                 	db	113
   317  000611                     __end_of_valor:
   318                           	callstack 0
   319  0000                     _T2CON	set	4042
   320  0000                     _CCP1CON	set	4029
   321  0000                     _CCPR1L	set	4030
   322  0000                     _PR2	set	4043
   323  0000                     _T0CON	set	4053
   324  0000                     _TMR0L	set	4054
   325  0000                     _TMR0H	set	4055
   326  0000                     _INTCON	set	4082
   327  0000                     _TRISE	set	3990
   328  0000                     _TRISD	set	3989
   329  0000                     _TRISC	set	3988
   330  0000                     _TRISB	set	3987
   331  0000                     _TRISA	set	3986
   332  0000                     _PORTE	set	3972
   333  0000                     _PORTD	set	3971
   334  0000                     _PORTC	set	3970
   335  0000                     _PORTB	set	3969
   336  0000                     _PORTA	set	3968
   337  000611                     STR_5:
   338  000611  45                 	db	69	;'E'
   339  000612  73                 	db	115	;'s'
   340  000613  63                 	db	99	;'c'
   341  000614  6F                 	db	111	;'o'
   342  000615  6C                 	db	108	;'l'
   343  000616  68                 	db	104	;'h'
   344  000617  61                 	db	97	;'a'
   345  000618  20                 	db	32
   346  000619  61                 	db	97	;'a'
   347  00061A  20                 	db	32
   348  00061B  6D                 	db	109	;'m'
   349  00061C  75                 	db	117	;'u'
   350  00061D  73                 	db	115	;'s'
   351  00061E  69                 	db	105	;'i'
   352  00061F  63                 	db	99	;'c'
   353  000620  61                 	db	97	;'a'
   354  000621  00                 	db	0
   355  000622                     STR_1:
   356  000622  3C                 	db	60	;'<'
   357  000623  2D                 	db	45
   358  000624  28                 	db	40
   359  000625  31                 	db	49	;'1'
   360  000626  29                 	db	41
   361  000627  20                 	db	32
   362  000628  28                 	db	40
   363  000629  2A                 	db	42
   364  00062A  29                 	db	41
   365  00062B  20                 	db	32
   366  00062C  20                 	db	32
   367  00062D  28                 	db	40
   368  00062E  32                 	db	50	;'2'
   369  00062F  29                 	db	41
   370  000630  2D                 	db	45
   371  000631  3E                 	db	62	;'>'
   372  000632  00                 	db	0
   373  000633                     STR_2:
   374  000633  2D                 	db	45
   375  000634  28                 	db	40
   376  000635  31                 	db	49	;'1'
   377  000636  29                 	db	41
   378  000637  20                 	db	32
   379  000638  20                 	db	32
   380  000639  28                 	db	40
   381  00063A  2A                 	db	42
   382  00063B  29                 	db	41
   383  00063C  20                 	db	32
   384  00063D  20                 	db	32
   385  00063E  28                 	db	40
   386  00063F  32                 	db	50	;'2'
   387  000640  29                 	db	41
   388  000641  2B                 	db	43
   389  000642  00                 	db	0
   390  000643                     STR_4:
   391  000643  50                 	db	80	;'P'
   392  000644  6C                 	db	108	;'l'
   393  000645  61                 	db	97	;'a'
   394  000646  79                 	db	121	;'y'
   395  000647  65                 	db	101	;'e'
   396  000648  72                 	db	114	;'r'
   397  000649  00                 	db	0
   398  00064A                     STR_3:
   399  00064A  4D                 	db	77	;'M'
   400  00064B  50                 	db	80	;'P'
   401  00064C  33                 	db	51	;'3'
   402  00064D  00                 	db	0
   403  00064E  00                 	db	0	; dummy byte at the end
   404  0000                     
   405                           ; #config settings
   406                           
   407                           	psect	cinit
   408  001A0E                     __pcinit:
   409                           	callstack 0
   410  001A0E                     start_initialization:
   411                           	callstack 0
   412  001A0E                     __initialization:
   413                           	callstack 0
   414                           
   415                           ; Initialize objects allocated to BANK2 (170 bytes)
   416                           ; load TBLPTR registers with __pidataBANK2
   417  001A0E  0E80               	movlw	low __pidataBANK2
   418  001A10  6EF6               	movwf	tblptrl,c
   419  001A12  0E15               	movlw	high __pidataBANK2
   420  001A14  6EF7               	movwf	tblptrh,c
   421  001A16  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   422  001A18  6EF8               	movwf	tblptru,c
   423  001A1A  EE02  F000         	lfsr	0,__pdataBANK2
   424  001A1E  EE10 F0AA          	lfsr	1,170
   425  001A22                     copy_data0:
   426  001A22  0009               	tblrd		*+
   427  001A24  CFF5 FFEE          	movff	tablat,postinc0
   428  001A28  50E5               	movf	postdec1,w,c
   429  001A2A  50E1               	movf	fsr1l,w,c
   430  001A2C  E1FA               	bnz	copy_data0
   431                           
   432                           ; Initialize objects allocated to COMRAM (31 bytes)
   433                           ; load TBLPTR registers with __pidataCOMRAM
   434  001A2E  0E56               	movlw	low __pidataCOMRAM
   435  001A30  6EF6               	movwf	tblptrl,c
   436  001A32  0E1C               	movlw	high __pidataCOMRAM
   437  001A34  6EF7               	movwf	tblptrh,c
   438  001A36  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   439  001A38  6EF8               	movwf	tblptru,c
   440  001A3A  EE00  F001         	lfsr	0,__pdataCOMRAM
   441  001A3E  EE10 F01F          	lfsr	1,31
   442  001A42                     copy_data1:
   443  001A42  0009               	tblrd		*+
   444  001A44  CFF5 FFEE          	movff	tablat,postinc0
   445  001A48  50E5               	movf	postdec1,w,c
   446  001A4A  50E1               	movf	fsr1l,w,c
   447  001A4C  E1FA               	bnz	copy_data1
   448                           
   449                           ; Clear objects allocated to BANK1 (190 bytes)
   450  001A4E  EE01  F000         	lfsr	0,__pbssBANK1
   451  001A52  0EBE               	movlw	190
   452  001A54                     clear_0:
   453  001A54  6AEE               	clrf	postinc0,c
   454  001A56  06E8               	decf	wreg,f,c
   455  001A58  E1FD               	bnz	clear_0
   456                           
   457                           ; Clear objects allocated to COMRAM (21 bytes)
   458  001A5A  EE00  F037         	lfsr	0,__pbssCOMRAM
   459  001A5E  0E15               	movlw	21
   460  001A60                     clear_1:
   461  001A60  6AEE               	clrf	postinc0,c
   462  001A62  06E8               	decf	wreg,f,c
   463  001A64  E1FD               	bnz	clear_1
   464  001A66                     end_of_initialization:
   465                           	callstack 0
   466  001A66                     __end_of__initialization:
   467                           	callstack 0
   468  001A66  0E00               	movlw	low (__Lmediumconst shr (0+16))
   469  001A68  6EF8               	movwf	tblptru,c
   470  001A6A  0100               	movlb	0
   471  001A6C  EF68  F00B         	goto	_main	;jump to C main() function
   472                           
   473                           	psect	bssCOMRAM
   474  000037                     __pbssCOMRAM:
   475                           	callstack 0
   476  000037                     kpDebounce@valorAntigo:
   477                           	callstack 0
   478  000037                     	ds	2
   479  000039                     kpDebounce@valorNovo:
   480                           	callstack 0
   481  000039                     	ds	2
   482  00003B                     _valor@keypad$F261:
   483                           	callstack 0
   484  00003B                     	ds	2
   485  00003D                     kpDebounce@tempo:
   486                           	callstack 0
   487  00003D                     	ds	1
   488  00003E                     _i:
   489                           	callstack 0
   490  00003E                     	ds	1
   491  00003F                     _v3:
   492                           	callstack 0
   493  00003F                     	ds	1
   494  000040                     _v2:
   495                           	callstack 0
   496  000040                     	ds	1
   497  000041                     _v1:
   498                           	callstack 0
   499  000041                     	ds	1
   500  000042                     _v0:
   501                           	callstack 0
   502  000042                     	ds	1
   503  000043                     _display:
   504                           	callstack 0
   505  000043                     	ds	1
   506  000044                     _cnt:
   507                           	callstack 0
   508  000044                     	ds	1
   509  000045                     _segundo2:
   510                           	callstack 0
   511  000045                     	ds	1
   512  000046                     _segundo1:
   513                           	callstack 0
   514  000046                     	ds	1
   515  000047                     _minuto2:
   516                           	callstack 0
   517  000047                     	ds	1
   518  000048                     _minuto1:
   519                           	callstack 0
   520  000048                     	ds	1
   521  000049                     _tempo:
   522                           	callstack 0
   523  000049                     	ds	1
   524  00004A                     _flag:
   525                           	callstack 0
   526  00004A                     	ds	1
   527  00004B                     _indice:
   528                           	callstack 0
   529  00004B                     	ds	1
   530                           
   531                           	psect	dataCOMRAM
   532  000001                     __pdataCOMRAM:
   533                           	callstack 0
   534  000001                     _duracoes:
   535                           	callstack 0
   536  000001                     	ds	20
   537  000015                     _teclas:
   538                           	callstack 0
   539  000015                     	ds	8
   540  00001D                     _volume:
   541                           	callstack 0
   542  00001D                     	ds	1
   543  00001E                     _pause:
   544                           	callstack 0
   545  00001E                     	ds	1
   546  00001F                     _tecla:
   547                           	callstack 0
   548  00001F                     	ds	1
   549                           
   550                           	psect	bssBANK1
   551  000100                     __pbssBANK1:
   552                           	callstack 0
   553  000100                     _musicas:
   554                           	callstack 0
   555  000100                     	ds	190
   556                           
   557                           	psect	dataBANK2
   558  000200                     __pdataBANK2:
   559                           	callstack 0
   560  000200                     _nomes:
   561                           	callstack 0
   562  000200                     	ds	170
   563                           
   564                           	psect	cstackCOMRAM
   565  000020                     __pcstackCOMRAM:
   566                           	callstack 0
   567  000020                     ??_kpDebounce:
   568  000020                     ?_kpRead:
   569                           	callstack 0
   570  000020                     ?___wmul:
   571                           	callstack 0
   572  000020                     ?___awdiv:
   573                           	callstack 0
   574  000020                     ?___lwdiv:
   575                           	callstack 0
   576  000020                     ?___aldiv:
   577                           	callstack 0
   578  000020                     Delay40us@i:
   579                           	callstack 0
   580  000020                     ssdDigit@pos:
   581                           	callstack 0
   582  000020                     digitalWrite@pin:
   583                           	callstack 0
   584  000020                     pinMode@pin:
   585                           	callstack 0
   586  000020                     atraso_ms@t:
   587                           	callstack 0
   588  000020                     ___wmul@multiplier:
   589                           	callstack 0
   590  000020                     ___awdiv@dividend:
   591                           	callstack 0
   592  000020                     ___lwdiv@dividend:
   593                           	callstack 0
   594  000020                     ___aldiv@dividend:
   595                           	callstack 0
   596                           
   597                           ; 4 bytes @ 0x0
   598  000020                     	ds	1
   599  000021                     Delay2ms@i:
   600                           	callstack 0
   601  000021                     ssdDigit@val:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x1
   605  000021                     	ds	1
   606  000022                     digitalWrite@value:
   607                           	callstack 0
   608  000022                     pinMode@type:
   609                           	callstack 0
   610  000022                     atraso_ms@i:
   611                           	callstack 0
   612  000022                     ___wmul@multiplicand:
   613                           	callstack 0
   614  000022                     ___awdiv@divisor:
   615                           	callstack 0
   616  000022                     ___lwdiv@divisor:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x2
   620  000022                     	ds	2
   621  000024                     ??_digitalWrite:
   622  000024                     ??_pinMode:
   623  000024                     atraso_ms@j:
   624                           	callstack 0
   625  000024                     ___awdiv@counter:
   626                           	callstack 0
   627  000024                     ___wmul@product:
   628                           	callstack 0
   629  000024                     ___lwdiv@quotient:
   630                           	callstack 0
   631  000024                     ___aldiv@divisor:
   632                           	callstack 0
   633                           
   634                           ; 4 bytes @ 0x4
   635  000024                     	ds	1
   636  000025                     atraso_ms@k:
   637                           	callstack 0
   638  000025                     kpDebounce@old_D:
   639                           	callstack 0
   640  000025                     ___awdiv@sign:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x5
   644  000025                     	ds	1
   645  000026                     ??_ssdUpdate:
   646  000026                     lcdCommand@old_D:
   647                           	callstack 0
   648  000026                     lcdData@valor:
   649                           	callstack 0
   650  000026                     alterarVolume@opt:
   651                           	callstack 0
   652  000026                     ___lwdiv@counter:
   653                           	callstack 0
   654  000026                     kpDebounce@k:
   655                           	callstack 0
   656  000026                     ___awdiv@quotient:
   657                           	callstack 0
   658  000026                     strcpy@dest:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x6
   662  000026                     	ds	1
   663  000027                     ??_pwmSet:
   664  000027                     lcdCommand@cmd:
   665                           	callstack 0
   666  000027                     lcdData@old_D:
   667                           	callstack 0
   668  000027                     alterarVolume@old_D:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0x7
   672  000027                     	ds	1
   673  000028                     ?___awmod:
   674                           	callstack 0
   675  000028                     lcdPosition@coluna:
   676                           	callstack 0
   677  000028                     kpDebounce@j:
   678                           	callstack 0
   679  000028                     ___aldiv@counter:
   680                           	callstack 0
   681  000028                     lcdStr@str:
   682                           	callstack 0
   683  000028                     ___awmod@dividend:
   684                           	callstack 0
   685  000028                     strcpy@src:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x8
   689  000028                     	ds	1
   690  000029                     lcdPosition@linha:
   691                           	callstack 0
   692  000029                     kpDebounce@i:
   693                           	callstack 0
   694  000029                     pwmSet@porcento:
   695                           	callstack 0
   696  000029                     ___aldiv@sign:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x9
   700  000029                     	ds	1
   701  00002A                     ??_lcdStr:
   702  00002A                     lcdPosition@comando:
   703                           	callstack 0
   704  00002A                     pwmSet@val:
   705                           	callstack 0
   706  00002A                     ___awmod@divisor:
   707                           	callstack 0
   708  00002A                     strcpy@s:
   709                           	callstack 0
   710  00002A                     ___aldiv@quotient:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0xA
   714  00002A                     	ds	2
   715  00002C                     lcdStr@i:
   716                           	callstack 0
   717  00002C                     ___awmod@counter:
   718                           	callstack 0
   719  00002C                     strcpy@d:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0xC
   723  00002C                     	ds	1
   724  00002D                     ___awmod@sign:
   725                           	callstack 0
   726                           
   727                           ; 1 bytes @ 0xD
   728  00002D                     	ds	1
   729  00002E                     songsInit@i:
   730                           	callstack 0
   731  00002E                     pwmFrequency@freq:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0xE
   735  00002E                     	ds	2
   736  000030                     _playSong$977:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x10
   740  000030                     	ds	2
   741  000032                     _playSong$978:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x12
   745  000032                     	ds	2
   746  000034                     playSong@j:
   747                           	callstack 0
   748                           
   749                           ; 1 bytes @ 0x14
   750  000034                     	ds	1
   751  000035                     ??_chooseSong:
   752                           
   753                           ; 1 bytes @ 0x15
   754  000035                     	ds	2
   755  000037                     
   756                           ; 1 bytes @ 0x17
   757 ;;
   758 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   759 ;;
   760 ;; *************** function _main *****************
   761 ;; Defined at:
   762 ;;		line 11 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;		None
   767 ;; Return value:  Size  Location     Type
   768 ;;                  1    wreg      void 
   769 ;; Registers used:
   770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   776 ;;      Params:         0       0       0       0       0       0       0
   777 ;;      Locals:         0       0       0       0       0       0       0
   778 ;;      Temps:          0       0       0       0       0       0       0
   779 ;;      Totals:         0       0       0       0       0       0       0
   780 ;;Total ram usage:        0 bytes
   781 ;; Hardware stack levels required when called:    6
   782 ;; This function calls:
   783 ;;		_atraso_ms
   784 ;;		_chooseSong
   785 ;;		_kpInit
   786 ;;		_lcdCommand
   787 ;;		_lcdInit
   788 ;;		_lcdPosition
   789 ;;		_lcdStr
   790 ;;		_songsInit
   791 ;;		_ssdInit
   792 ;; This function is called by:
   793 ;;		Startup code after reset
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text0
   798  0016D0                     __ptext0:
   799                           	callstack 0
   800  0016D0                     _main:
   801                           	callstack 25
   802  0016D0                     
   803                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 13:     songsInit();
   804  0016D0  EC15  F00B         	call	_songsInit	;wreg free
   805  0016D4                     
   806                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 14:     lcdInit();
   807  0016D4  ECED  F00B         	call	_lcdInit	;wreg free
   808  0016D8                     
   809                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 15:     ssdInit();
   810  0016D8  EC91  F00D         	call	_ssdInit	;wreg free
   811  0016DC                     
   812                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 16:     kpInit();
   813  0016DC  EC62  F00E         	call	_kpInit	;wreg free
   814  0016E0                     
   815                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 17:     lcdCommand(0x0F);
   816  0016E0  0E0F               	movlw	15
   817  0016E2  ECAE  F00B         	call	_lcdCommand
   818  0016E6                     
   819                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 19:     lcdPosition(0, 6);
   820  0016E6  0E06               	movlw	6
   821  0016E8  6E28               	movwf	lcdPosition@coluna^0,c
   822  0016EA  0E00               	movlw	0
   823  0016EC  EC38  F00D         	call	_lcdPosition
   824  0016F0                     
   825                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 20:     lcdStr("MP3");
   826  0016F0  0E4A               	movlw	low STR_3
   827  0016F2  6E28               	movwf	lcdStr@str^0,c
   828  0016F4  0E06               	movlw	high STR_3
   829  0016F6  6E29               	movwf	(lcdStr@str+1)^0,c
   830  0016F8  EC29  F00C         	call	_lcdStr	;wreg free
   831  0016FC                     
   832                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 21:     lcdPosition(1, 4);
   833  0016FC  0E04               	movlw	4
   834  0016FE  6E28               	movwf	lcdPosition@coluna^0,c
   835  001700  0E01               	movlw	1
   836  001702  EC38  F00D         	call	_lcdPosition
   837  001706                     
   838                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 22:     lcdStr("Player");
   839  001706  0E43               	movlw	low STR_4
   840  001708  6E28               	movwf	lcdStr@str^0,c
   841  00170A  0E06               	movlw	high STR_4
   842  00170C  6E29               	movwf	(lcdStr@str+1)^0,c
   843  00170E  EC29  F00C         	call	_lcdStr	;wreg free
   844  001712                     
   845                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 23:     atraso_ms(2000);
   846  001712  0E07               	movlw	7
   847  001714  6E21               	movwf	(atraso_ms@t+1)^0,c
   848  001716  0ED0               	movlw	208
   849  001718  6E20               	movwf	atraso_ms@t^0,c
   850  00171A  ECD5  F00C         	call	_atraso_ms	;wreg free
   851  00171E                     
   852                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 25:     lcdCommand(0x01);
   853  00171E  0E01               	movlw	1
   854  001720  ECAE  F00B         	call	_lcdCommand
   855  001724                     
   856                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 26:     lcdPosition(0, 0);
   857  001724  0E00               	movlw	0
   858  001726  6E28               	movwf	lcdPosition@coluna^0,c
   859  001728  0E00               	movlw	0
   860  00172A  EC38  F00D         	call	_lcdPosition
   861  00172E                     
   862                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 27:     lcdStr("Escolha a musica"
      +                          );
   863  00172E  0E11               	movlw	low STR_5
   864  001730  6E28               	movwf	lcdStr@str^0,c
   865  001732  0E06               	movlw	high STR_5
   866  001734  6E29               	movwf	(lcdStr@str+1)^0,c
   867  001736  EC29  F00C         	call	_lcdStr	;wreg free
   868  00173A                     l2766:
   869                           
   870                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 29:         lcdPosition(1, 0);
   871  00173A  0E00               	movlw	0
   872  00173C  6E28               	movwf	lcdPosition@coluna^0,c
   873  00173E  0E01               	movlw	1
   874  001740  EC38  F00D         	call	_lcdPosition
   875  001744                     
   876                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 30:         lcdStr("<-(1) (*)  (2
      +                          )->");
   877  001744  0E22               	movlw	low STR_1
   878  001746  6E28               	movwf	lcdStr@str^0,c
   879  001748  0E06               	movlw	high STR_1
   880  00174A  6E29               	movwf	(lcdStr@str+1)^0,c
   881  00174C  EC29  F00C         	call	_lcdStr	;wreg free
   882  001750                     
   883                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 31:         chooseSong();
   884  001750  EC41  F008         	call	_chooseSong	;wreg free
   885                           
   886                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 32:     }
   887  001754  EF9D  F00B         	goto	l2766
   888  001758  EF00  F000         	goto	start
   889  00175C                     __end_of_main:
   890                           	callstack 0
   891                           
   892 ;; *************** function _ssdInit *****************
   893 ;; Defined at:
   894 ;;		line 101 in file "ssd.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, status,2, status,0, cstack
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   908 ;;      Params:         0       0       0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0       0       0
   910 ;;      Temps:          0       0       0       0       0       0       0
   911 ;;      Totals:         0       0       0       0       0       0       0
   912 ;;Total ram usage:        0 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; Hardware stack levels required when called:    1
   915 ;; This function calls:
   916 ;;		_pinMode
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text1
   923  001B22                     __ptext1:
   924                           	callstack 0
   925  001B22                     _ssdInit:
   926                           	callstack 29
   927  001B22                     
   928                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
   929  001B22  0E00               	movlw	0
   930  001B24  6E21               	movwf	(pinMode@pin+1)^0,c
   931  001B26  0E02               	movlw	2
   932  001B28  6E20               	movwf	pinMode@pin^0,c
   933  001B2A  0E00               	movlw	0
   934  001B2C  6E23               	movwf	(pinMode@type+1)^0,c
   935  001B2E  0E00               	movlw	0
   936  001B30  6E22               	movwf	pinMode@type^0,c
   937  001B32  EC8E  F004         	call	_pinMode	;wreg free
   938                           
   939                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
   940  001B36  0E00               	movlw	0
   941  001B38  6E21               	movwf	(pinMode@pin+1)^0,c
   942  001B3A  0E03               	movlw	3
   943  001B3C  6E20               	movwf	pinMode@pin^0,c
   944  001B3E  0E00               	movlw	0
   945  001B40  6E23               	movwf	(pinMode@type+1)^0,c
   946  001B42  0E00               	movlw	0
   947  001B44  6E22               	movwf	pinMode@type^0,c
   948  001B46  EC8E  F004         	call	_pinMode	;wreg free
   949                           
   950                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
   951  001B4A  0E00               	movlw	0
   952  001B4C  6E21               	movwf	(pinMode@pin+1)^0,c
   953  001B4E  0E04               	movlw	4
   954  001B50  6E20               	movwf	pinMode@pin^0,c
   955  001B52  0E00               	movlw	0
   956  001B54  6E23               	movwf	(pinMode@type+1)^0,c
   957  001B56  0E00               	movlw	0
   958  001B58  6E22               	movwf	pinMode@type^0,c
   959  001B5A  EC8E  F004         	call	_pinMode	;wreg free
   960                           
   961                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
   962  001B5E  0E00               	movlw	0
   963  001B60  6E21               	movwf	(pinMode@pin+1)^0,c
   964  001B62  0E05               	movlw	5
   965  001B64  6E20               	movwf	pinMode@pin^0,c
   966  001B66  0E00               	movlw	0
   967  001B68  6E23               	movwf	(pinMode@type+1)^0,c
   968  001B6A  0E00               	movlw	0
   969  001B6C  6E22               	movwf	pinMode@type^0,c
   970  001B6E  EC8E  F004         	call	_pinMode	;wreg free
   971  001B72                     
   972                           ;ssd.c: 109:     TRISD = 0x00;
   973  001B72  0E00               	movlw	0
   974  001B74  6E95               	movwf	149,c	;volatile
   975  001B76  0012               	return		;funcret
   976  001B78                     __end_of_ssdInit:
   977                           	callstack 0
   978                           
   979 ;; *************** function _songsInit *****************
   980 ;; Defined at:
   981 ;;		line 23 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;		None
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  i               2   14[COMRAM] unsigned int 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   995 ;;      Params:         0       0       0       0       0       0       0
   996 ;;      Locals:         2       0       0       0       0       0       0
   997 ;;      Temps:          0       0       0       0       0       0       0
   998 ;;      Totals:         2       0       0       0       0       0       0
   999 ;;Total ram usage:        2 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; Hardware stack levels required when called:    1
  1002 ;; This function calls:
  1003 ;;		___wmul
  1004 ;;		_strcpy
  1005 ;; This function is called by:
  1006 ;;		_main
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text2
  1011  00162A                     __ptext2:
  1012                           	callstack 0
  1013  00162A                     _songsInit:
  1014                           	callstack 29
  1015  00162A                     
  1016                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 24:     TRISC = 0x00;
  1017  00162A  0E00               	movlw	0
  1018  00162C  6E94               	movwf	148,c	;volatile
  1019                           
  1020                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 25:     for (unsigned int i = 0;
      +                           i < 10; i++) {
  1021  00162E  0E00               	movlw	0
  1022  001630  6E2F               	movwf	(songsInit@i+1)^0,c
  1023  001632  0E00               	movlw	0
  1024  001634  6E2E               	movwf	songsInit@i^0,c
  1025  001636                     l2676:
  1026                           
  1027                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 26:         musicas[i].duracao =
      +                           duracoes[i];
  1028  001636  90D8               	bcf	status,0,c
  1029  001638  342E               	rlcf	songsInit@i^0,w,c
  1030  00163A  6ED9               	movwf	fsr2l,c
  1031  00163C  342F               	rlcf	(songsInit@i+1)^0,w,c
  1032  00163E  6EDA               	movwf	fsr2h,c
  1033  001640  0E01               	movlw	low _duracoes
  1034  001642  26D9               	addwf	fsr2l,f,c
  1035  001644  0E00               	movlw	high _duracoes
  1036  001646  22DA               	addwfc	fsr2h,f,c
  1037  001648  C02E  F020         	movff	songsInit@i,___wmul@multiplier
  1038  00164C  C02F  F021         	movff	songsInit@i+1,___wmul@multiplier+1
  1039  001650  0E00               	movlw	0
  1040  001652  6E23               	movwf	(___wmul@multiplicand+1)^0,c
  1041  001654  0E13               	movlw	19
  1042  001656  6E22               	movwf	___wmul@multiplicand^0,c
  1043  001658  EC05  F00E         	call	___wmul	;wreg free
  1044  00165C  0E00               	movlw	low _musicas
  1045  00165E  2420               	addwf	?___wmul^0,w,c
  1046  001660  6EE1               	movwf	fsr1l,c
  1047  001662  0E01               	movlw	high _musicas
  1048  001664  2021               	addwfc	(?___wmul+1)^0,w,c
  1049  001666  6EE2               	movwf	fsr1h,c
  1050  001668  CFDE FFE6          	movff	postinc2,postinc1
  1051  00166C  CFDD FFE5          	movff	postdec2,postdec1
  1052                           
  1053                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 27:         strcpy(musicas[i].no
      +                          me, (char*) nomes[i]);
  1054  001670  C02E  F020         	movff	songsInit@i,___wmul@multiplier
  1055  001674  C02F  F021         	movff	songsInit@i+1,___wmul@multiplier+1
  1056  001678  0E00               	movlw	0
  1057  00167A  6E23               	movwf	(___wmul@multiplicand+1)^0,c
  1058  00167C  0E13               	movlw	19
  1059  00167E  6E22               	movwf	___wmul@multiplicand^0,c
  1060  001680  EC05  F00E         	call	___wmul	;wreg free
  1061  001684  0E02               	movlw	low (_musicas+2)
  1062  001686  2420               	addwf	?___wmul^0,w,c
  1063  001688  6E26               	movwf	strcpy@dest^0,c
  1064  00168A  0E01               	movlw	high (_musicas+2)
  1065  00168C  2021               	addwfc	(?___wmul+1)^0,w,c
  1066  00168E  6E27               	movwf	(strcpy@dest+1)^0,c
  1067  001690  C02E  F020         	movff	songsInit@i,___wmul@multiplier
  1068  001694  C02F  F021         	movff	songsInit@i+1,___wmul@multiplier+1
  1069  001698  0E00               	movlw	0
  1070  00169A  6E23               	movwf	(___wmul@multiplicand+1)^0,c
  1071  00169C  0E11               	movlw	17
  1072  00169E  6E22               	movwf	___wmul@multiplicand^0,c
  1073  0016A0  EC05  F00E         	call	___wmul	;wreg free
  1074  0016A4  0E00               	movlw	low _nomes
  1075  0016A6  2420               	addwf	?___wmul^0,w,c
  1076  0016A8  6E28               	movwf	strcpy@src^0,c
  1077  0016AA  0E02               	movlw	high _nomes
  1078  0016AC  2021               	addwfc	(?___wmul+1)^0,w,c
  1079  0016AE  6E29               	movwf	(strcpy@src+1)^0,c
  1080  0016B0  ECE6  F00D         	call	_strcpy	;wreg free
  1081  0016B4                     
  1082                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 28:     }
  1083  0016B4  4A2E               	infsnz	songsInit@i^0,f,c
  1084  0016B6  2A2F               	incf	(songsInit@i+1)^0,f,c
  1085  0016B8  502F               	movf	(songsInit@i+1)^0,w,c
  1086  0016BA  E109               	bnz	u2510
  1087  0016BC  0E0A               	movlw	10
  1088  0016BE  5C2E               	subwf	songsInit@i^0,w,c
  1089  0016C0  A0D8               	btfss	status,0,c
  1090  0016C2  EF65  F00B         	goto	u2511
  1091  0016C6  EF67  F00B         	goto	u2510
  1092  0016CA                     u2511:
  1093  0016CA  EF1B  F00B         	goto	l2676
  1094  0016CE                     u2510:
  1095  0016CE  0012               	return		;funcret
  1096  0016D0                     __end_of_songsInit:
  1097                           	callstack 0
  1098                           
  1099 ;; *************** function _strcpy *****************
  1100 ;; Defined at:
  1101 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;  dest            2    6[COMRAM] PTR unsigned char 
  1104 ;;		 -> musicas(190), 
  1105 ;;  src             2    8[COMRAM] PTR const unsigned char 
  1106 ;;		 -> nomes(170), 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  d               2   12[COMRAM] PTR unsigned char 
  1109 ;;		 -> musicas(190), 
  1110 ;;  s               2   10[COMRAM] PTR const unsigned char 
  1111 ;;		 -> nomes(170), 
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  2    6[COMRAM] PTR unsigned char 
  1114 ;; Registers used:
  1115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1121 ;;      Params:         4       0       0       0       0       0       0
  1122 ;;      Locals:         4       0       0       0       0       0       0
  1123 ;;      Temps:          0       0       0       0       0       0       0
  1124 ;;      Totals:         8       0       0       0       0       0       0
  1125 ;;Total ram usage:        8 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; This function calls:
  1128 ;;		Nothing
  1129 ;; This function is called by:
  1130 ;;		_songsInit
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text3
  1135  001BCC                     __ptext3:
  1136                           	callstack 0
  1137  001BCC                     _strcpy:
  1138                           	callstack 29
  1139  001BCC  C028  F02A         	movff	strcpy@src,strcpy@s
  1140  001BD0  C029  F02B         	movff	strcpy@src+1,strcpy@s+1
  1141  001BD4  C026  F02C         	movff	strcpy@dest,strcpy@d
  1142  001BD8  C027  F02D         	movff	strcpy@dest+1,strcpy@d+1
  1143  001BDC                     l2510:
  1144  001BDC  C02A  FFD9         	movff	strcpy@s,fsr2l
  1145  001BE0  C02B  FFDA         	movff	strcpy@s+1,fsr2h
  1146  001BE4  4A2A               	infsnz	strcpy@s^0,f,c
  1147  001BE6  2A2B               	incf	(strcpy@s+1)^0,f,c
  1148  001BE8  C02C  FFE1         	movff	strcpy@d,fsr1l
  1149  001BEC  C02D  FFE2         	movff	strcpy@d+1,fsr1h
  1150  001BF0  4A2C               	infsnz	strcpy@d^0,f,c
  1151  001BF2  2A2D               	incf	(strcpy@d+1)^0,f,c
  1152  001BF4  CFDF FFE7          	movff	indf2,indf1
  1153  001BF8  50E7               	movf	indf1,w,c
  1154  001BFA  A4D8               	btfss	status,2,c
  1155  001BFC  EF02  F00E         	goto	u2381
  1156  001C00  EF04  F00E         	goto	u2380
  1157  001C04                     u2381:
  1158  001C04  EFEE  F00D         	goto	l2510
  1159  001C08                     u2380:
  1160  001C08  0012               	return		;funcret
  1161  001C0A                     __end_of_strcpy:
  1162                           	callstack 0
  1163                           
  1164 ;; *************** function _lcdInit *****************
  1165 ;; Defined at:
  1166 ;;		line 87 in file "lcd.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;		None
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;		None
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg, status,2, status,0, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1180 ;;      Params:         0       0       0       0       0       0       0
  1181 ;;      Locals:         0       0       0       0       0       0       0
  1182 ;;      Temps:          0       0       0       0       0       0       0
  1183 ;;      Totals:         0       0       0       0       0       0       0
  1184 ;;Total ram usage:        0 bytes
  1185 ;; Hardware stack levels used:    1
  1186 ;; Hardware stack levels required when called:    3
  1187 ;; This function calls:
  1188 ;;		_Delay2ms
  1189 ;;		_lcdCommand
  1190 ;;		_pinMode
  1191 ;; This function is called by:
  1192 ;;		_main
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text4
  1197  0017DA                     __ptext4:
  1198                           	callstack 0
  1199  0017DA                     _lcdInit:
  1200                           	callstack 27
  1201  0017DA                     
  1202                           ;lcd.c: 89:     pinMode(PIN_E2, 0);
  1203  0017DA  0E00               	movlw	0
  1204  0017DC  6E21               	movwf	(pinMode@pin+1)^0,c
  1205  0017DE  0E22               	movlw	34
  1206  0017E0  6E20               	movwf	pinMode@pin^0,c
  1207  0017E2  0E00               	movlw	0
  1208  0017E4  6E23               	movwf	(pinMode@type+1)^0,c
  1209  0017E6  0E00               	movlw	0
  1210  0017E8  6E22               	movwf	pinMode@type^0,c
  1211  0017EA  EC8E  F004         	call	_pinMode	;wreg free
  1212                           
  1213                           ;lcd.c: 90:     pinMode(PIN_E1, 0);
  1214  0017EE  0E00               	movlw	0
  1215  0017F0  6E21               	movwf	(pinMode@pin+1)^0,c
  1216  0017F2  0E21               	movlw	33
  1217  0017F4  6E20               	movwf	pinMode@pin^0,c
  1218  0017F6  0E00               	movlw	0
  1219  0017F8  6E23               	movwf	(pinMode@type+1)^0,c
  1220  0017FA  0E00               	movlw	0
  1221  0017FC  6E22               	movwf	pinMode@type^0,c
  1222  0017FE  EC8E  F004         	call	_pinMode	;wreg free
  1223  001802                     
  1224                           ;lcd.c: 91:     TRISD = 0x00;
  1225  001802  0E00               	movlw	0
  1226  001804  6E95               	movwf	149,c	;volatile
  1227  001806                     
  1228                           ;lcd.c: 94:     Delay2ms();
  1229  001806  EC3B  F00E         	call	_Delay2ms	;wreg free
  1230  00180A                     
  1231                           ;lcd.c: 95:     Delay2ms();
  1232  00180A  EC3B  F00E         	call	_Delay2ms	;wreg free
  1233  00180E                     
  1234                           ;lcd.c: 96:     Delay2ms();
  1235  00180E  EC3B  F00E         	call	_Delay2ms	;wreg free
  1236  001812                     
  1237                           ;lcd.c: 97:     Delay2ms();
  1238  001812  EC3B  F00E         	call	_Delay2ms	;wreg free
  1239  001816                     
  1240                           ;lcd.c: 98:     Delay2ms();
  1241  001816  EC3B  F00E         	call	_Delay2ms	;wreg free
  1242  00181A                     
  1243                           ;lcd.c: 100:     lcdCommand(0x38);
  1244  00181A  0E38               	movlw	56
  1245  00181C  ECAE  F00B         	call	_lcdCommand
  1246  001820                     
  1247                           ;lcd.c: 101:     Delay2ms();
  1248  001820  EC3B  F00E         	call	_Delay2ms	;wreg free
  1249  001824                     
  1250                           ;lcd.c: 102:     Delay2ms();
  1251  001824  EC3B  F00E         	call	_Delay2ms	;wreg free
  1252  001828                     
  1253                           ;lcd.c: 103:     lcdCommand(0x38);
  1254  001828  0E38               	movlw	56
  1255  00182A  ECAE  F00B         	call	_lcdCommand
  1256  00182E                     
  1257                           ;lcd.c: 104:     Delay2ms();
  1258  00182E  EC3B  F00E         	call	_Delay2ms	;wreg free
  1259  001832                     
  1260                           ;lcd.c: 105:     lcdCommand(0x38);
  1261  001832  0E38               	movlw	56
  1262  001834  ECAE  F00B         	call	_lcdCommand
  1263  001838                     
  1264                           ;lcd.c: 107:     lcdCommand(0x38);
  1265  001838  0E38               	movlw	56
  1266  00183A  ECAE  F00B         	call	_lcdCommand
  1267  00183E                     
  1268                           ;lcd.c: 108:     lcdCommand(0x06);
  1269  00183E  0E06               	movlw	6
  1270  001840  ECAE  F00B         	call	_lcdCommand
  1271  001844                     
  1272                           ;lcd.c: 111:     lcdCommand(0x0C);
  1273  001844  0E0C               	movlw	12
  1274  001846  ECAE  F00B         	call	_lcdCommand
  1275  00184A                     
  1276                           ;lcd.c: 112:     lcdCommand(0x01);
  1277  00184A  0E01               	movlw	1
  1278  00184C  ECAE  F00B         	call	_lcdCommand
  1279  001850  0012               	return		;funcret
  1280  001852                     __end_of_lcdInit:
  1281                           	callstack 0
  1282                           
  1283 ;; *************** function _pinMode *****************
  1284 ;; Defined at:
  1285 ;;		line 54 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  pin             2    0[COMRAM] int 
  1288 ;;  type            2    2[COMRAM] int 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1300 ;;      Params:         4       0       0       0       0       0       0
  1301 ;;      Locals:         0       0       0       0       0       0       0
  1302 ;;      Temps:          2       0       0       0       0       0       0
  1303 ;;      Totals:         6       0       0       0       0       0       0
  1304 ;;Total ram usage:        6 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; This function calls:
  1307 ;;		Nothing
  1308 ;; This function is called by:
  1309 ;;		_lcdInit
  1310 ;;		_ssdInit
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text5
  1315  00091C                     __ptext5:
  1316                           	callstack 0
  1317  00091C                     _pinMode:
  1318                           	callstack 29
  1319  00091C                     
  1320                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 56:     if(pin <8){
  1321  00091C  BE21               	btfsc	(pinMode@pin+1)^0,7,c
  1322  00091E  EF9C  F004         	goto	u2180
  1323  000922  5021               	movf	(pinMode@pin+1)^0,w,c
  1324  000924  E107               	bnz	u2181
  1325  000926  0E08               	movlw	8
  1326  000928  5C20               	subwf	pinMode@pin^0,w,c
  1327  00092A  B0D8               	btfsc	status,0,c
  1328  00092C  EF9A  F004         	goto	u2181
  1329  000930  EF9C  F004         	goto	u2180
  1330  000934                     u2181:
  1331  000934  EFC6  F004         	goto	l2476
  1332  000938                     u2180:
  1333  000938                     
  1334                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 57:         if (type){ ((TRISA) |= 
      +                          (1<<(pin)));}
  1335  000938  5022               	movf	pinMode@type^0,w,c
  1336  00093A  1023               	iorwf	(pinMode@type+1)^0,w,c
  1337  00093C  B4D8               	btfsc	status,2,c
  1338  00093E  EFA3  F004         	goto	u2191
  1339  000942  EFA5  F004         	goto	u2190
  1340  000946                     u2191:
  1341  000946  EFB5  F004         	goto	l2474
  1342  00094A                     u2190:
  1343  00094A  C020  F024         	movff	pinMode@pin,??_pinMode
  1344  00094E  0E01               	movlw	1
  1345  000950  6E25               	movwf	(??_pinMode+1)^0,c
  1346  000952  2A24               	incf	??_pinMode^0,f,c
  1347  000954  EFAE  F004         	goto	u2204
  1348  000958                     u2205:
  1349  000958  90D8               	bcf	status,0,c
  1350  00095A  3625               	rlcf	(??_pinMode+1)^0,f,c
  1351  00095C                     u2204:
  1352  00095C  2E24               	decfsz	??_pinMode^0,f,c
  1353  00095E  EFAC  F004         	goto	u2205
  1354  000962  5025               	movf	(??_pinMode+1)^0,w,c
  1355  000964  1292               	iorwf	146,f,c	;volatile
  1356  000966  EFB4  F005         	goto	l76
  1357  00096A                     l2474:
  1358  00096A  C020  F024         	movff	pinMode@pin,??_pinMode
  1359  00096E  0E01               	movlw	1
  1360  000970  6E25               	movwf	(??_pinMode+1)^0,c
  1361  000972  2A24               	incf	??_pinMode^0,f,c
  1362  000974  EFBE  F004         	goto	u2214
  1363  000978                     u2215:
  1364  000978  90D8               	bcf	status,0,c
  1365  00097A  3625               	rlcf	(??_pinMode+1)^0,f,c
  1366  00097C                     u2214:
  1367  00097C  2E24               	decfsz	??_pinMode^0,f,c
  1368  00097E  EFBC  F004         	goto	u2215
  1369  000982  5025               	movf	(??_pinMode+1)^0,w,c
  1370  000984  0AFF               	xorlw	255
  1371  000986  1692               	andwf	146,f,c	;volatile
  1372  000988  EFB4  F005         	goto	l76
  1373  00098C                     l2476:
  1374  00098C  BE21               	btfsc	(pinMode@pin+1)^0,7,c
  1375  00098E  EFD4  F004         	goto	u2220
  1376  000992  5021               	movf	(pinMode@pin+1)^0,w,c
  1377  000994  E107               	bnz	u2221
  1378  000996  0E10               	movlw	16
  1379  000998  5C20               	subwf	pinMode@pin^0,w,c
  1380  00099A  B0D8               	btfsc	status,0,c
  1381  00099C  EFD2  F004         	goto	u2221
  1382  0009A0  EFD4  F004         	goto	u2220
  1383  0009A4                     u2221:
  1384  0009A4  EF02  F005         	goto	l2484
  1385  0009A8                     u2220:
  1386  0009A8                     
  1387                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 60:         if (type){ ((TRISB) |= 
      +                          (1<<(pin-8)));}
  1388  0009A8  5022               	movf	pinMode@type^0,w,c
  1389  0009AA  1023               	iorwf	(pinMode@type+1)^0,w,c
  1390  0009AC  B4D8               	btfsc	status,2,c
  1391  0009AE  EFDB  F004         	goto	u2231
  1392  0009B2  EFDD  F004         	goto	u2230
  1393  0009B6                     u2231:
  1394  0009B6  EFEF  F004         	goto	l2482
  1395  0009BA                     u2230:
  1396  0009BA  C020  F024         	movff	pinMode@pin,??_pinMode
  1397  0009BE  0EF8               	movlw	-8
  1398  0009C0  2624               	addwf	??_pinMode^0,f,c
  1399  0009C2  0E01               	movlw	1
  1400  0009C4  6E25               	movwf	(??_pinMode+1)^0,c
  1401  0009C6  2A24               	incf	??_pinMode^0,f,c
  1402  0009C8  EFE8  F004         	goto	u2244
  1403  0009CC                     u2245:
  1404  0009CC  90D8               	bcf	status,0,c
  1405  0009CE  3625               	rlcf	(??_pinMode+1)^0,f,c
  1406  0009D0                     u2244:
  1407  0009D0  2E24               	decfsz	??_pinMode^0,f,c
  1408  0009D2  EFE6  F004         	goto	u2245
  1409  0009D6  5025               	movf	(??_pinMode+1)^0,w,c
  1410  0009D8  1293               	iorwf	147,f,c	;volatile
  1411  0009DA  EFB4  F005         	goto	l76
  1412  0009DE                     l2482:
  1413  0009DE  C020  F024         	movff	pinMode@pin,??_pinMode
  1414  0009E2  0EF8               	movlw	-8
  1415  0009E4  2624               	addwf	??_pinMode^0,f,c
  1416  0009E6  0E01               	movlw	1
  1417  0009E8  6E25               	movwf	(??_pinMode+1)^0,c
  1418  0009EA  2A24               	incf	??_pinMode^0,f,c
  1419  0009EC  EFFA  F004         	goto	u2254
  1420  0009F0                     u2255:
  1421  0009F0  90D8               	bcf	status,0,c
  1422  0009F2  3625               	rlcf	(??_pinMode+1)^0,f,c
  1423  0009F4                     u2254:
  1424  0009F4  2E24               	decfsz	??_pinMode^0,f,c
  1425  0009F6  EFF8  F004         	goto	u2255
  1426  0009FA  5025               	movf	(??_pinMode+1)^0,w,c
  1427  0009FC  0AFF               	xorlw	255
  1428  0009FE  1693               	andwf	147,f,c	;volatile
  1429  000A00  EFB4  F005         	goto	l76
  1430  000A04                     l2484:
  1431  000A04  BE21               	btfsc	(pinMode@pin+1)^0,7,c
  1432  000A06  EF10  F005         	goto	u2260
  1433  000A0A  5021               	movf	(pinMode@pin+1)^0,w,c
  1434  000A0C  E107               	bnz	u2261
  1435  000A0E  0E18               	movlw	24
  1436  000A10  5C20               	subwf	pinMode@pin^0,w,c
  1437  000A12  B0D8               	btfsc	status,0,c
  1438  000A14  EF0E  F005         	goto	u2261
  1439  000A18  EF10  F005         	goto	u2260
  1440  000A1C                     u2261:
  1441  000A1C  EF3E  F005         	goto	l2492
  1442  000A20                     u2260:
  1443  000A20                     
  1444                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 63:         if (type){ ((TRISC) |= 
      +                          (1<<(pin-16)));}
  1445  000A20  5022               	movf	pinMode@type^0,w,c
  1446  000A22  1023               	iorwf	(pinMode@type+1)^0,w,c
  1447  000A24  B4D8               	btfsc	status,2,c
  1448  000A26  EF17  F005         	goto	u2271
  1449  000A2A  EF19  F005         	goto	u2270
  1450  000A2E                     u2271:
  1451  000A2E  EF2B  F005         	goto	l2490
  1452  000A32                     u2270:
  1453  000A32  C020  F024         	movff	pinMode@pin,??_pinMode
  1454  000A36  0EF0               	movlw	-16
  1455  000A38  2624               	addwf	??_pinMode^0,f,c
  1456  000A3A  0E01               	movlw	1
  1457  000A3C  6E25               	movwf	(??_pinMode+1)^0,c
  1458  000A3E  2A24               	incf	??_pinMode^0,f,c
  1459  000A40  EF24  F005         	goto	u2284
  1460  000A44                     u2285:
  1461  000A44  90D8               	bcf	status,0,c
  1462  000A46  3625               	rlcf	(??_pinMode+1)^0,f,c
  1463  000A48                     u2284:
  1464  000A48  2E24               	decfsz	??_pinMode^0,f,c
  1465  000A4A  EF22  F005         	goto	u2285
  1466  000A4E  5025               	movf	(??_pinMode+1)^0,w,c
  1467  000A50  1294               	iorwf	148,f,c	;volatile
  1468  000A52  EFB4  F005         	goto	l76
  1469  000A56                     l2490:
  1470  000A56  C020  F024         	movff	pinMode@pin,??_pinMode
  1471  000A5A  0EF0               	movlw	-16
  1472  000A5C  2624               	addwf	??_pinMode^0,f,c
  1473  000A5E  0E01               	movlw	1
  1474  000A60  6E25               	movwf	(??_pinMode+1)^0,c
  1475  000A62  2A24               	incf	??_pinMode^0,f,c
  1476  000A64  EF36  F005         	goto	u2294
  1477  000A68                     u2295:
  1478  000A68  90D8               	bcf	status,0,c
  1479  000A6A  3625               	rlcf	(??_pinMode+1)^0,f,c
  1480  000A6C                     u2294:
  1481  000A6C  2E24               	decfsz	??_pinMode^0,f,c
  1482  000A6E  EF34  F005         	goto	u2295
  1483  000A72  5025               	movf	(??_pinMode+1)^0,w,c
  1484  000A74  0AFF               	xorlw	255
  1485  000A76  1694               	andwf	148,f,c	;volatile
  1486  000A78  EFB4  F005         	goto	l76
  1487  000A7C                     l2492:
  1488  000A7C  BE21               	btfsc	(pinMode@pin+1)^0,7,c
  1489  000A7E  EF4C  F005         	goto	u2300
  1490  000A82  5021               	movf	(pinMode@pin+1)^0,w,c
  1491  000A84  E107               	bnz	u2301
  1492  000A86  0E20               	movlw	32
  1493  000A88  5C20               	subwf	pinMode@pin^0,w,c
  1494  000A8A  B0D8               	btfsc	status,0,c
  1495  000A8C  EF4A  F005         	goto	u2301
  1496  000A90  EF4C  F005         	goto	u2300
  1497  000A94                     u2301:
  1498  000A94  EF7A  F005         	goto	l2500
  1499  000A98                     u2300:
  1500  000A98                     
  1501                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 66:         if (type){ ((TRISD) |= 
      +                          (1<<(pin-24)));}
  1502  000A98  5022               	movf	pinMode@type^0,w,c
  1503  000A9A  1023               	iorwf	(pinMode@type+1)^0,w,c
  1504  000A9C  B4D8               	btfsc	status,2,c
  1505  000A9E  EF53  F005         	goto	u2311
  1506  000AA2  EF55  F005         	goto	u2310
  1507  000AA6                     u2311:
  1508  000AA6  EF67  F005         	goto	l2498
  1509  000AAA                     u2310:
  1510  000AAA  C020  F024         	movff	pinMode@pin,??_pinMode
  1511  000AAE  0EE8               	movlw	-24
  1512  000AB0  2624               	addwf	??_pinMode^0,f,c
  1513  000AB2  0E01               	movlw	1
  1514  000AB4  6E25               	movwf	(??_pinMode+1)^0,c
  1515  000AB6  2A24               	incf	??_pinMode^0,f,c
  1516  000AB8  EF60  F005         	goto	u2324
  1517  000ABC                     u2325:
  1518  000ABC  90D8               	bcf	status,0,c
  1519  000ABE  3625               	rlcf	(??_pinMode+1)^0,f,c
  1520  000AC0                     u2324:
  1521  000AC0  2E24               	decfsz	??_pinMode^0,f,c
  1522  000AC2  EF5E  F005         	goto	u2325
  1523  000AC6  5025               	movf	(??_pinMode+1)^0,w,c
  1524  000AC8  1295               	iorwf	149,f,c	;volatile
  1525  000ACA  EFB4  F005         	goto	l76
  1526  000ACE                     l2498:
  1527  000ACE  C020  F024         	movff	pinMode@pin,??_pinMode
  1528  000AD2  0EE8               	movlw	-24
  1529  000AD4  2624               	addwf	??_pinMode^0,f,c
  1530  000AD6  0E01               	movlw	1
  1531  000AD8  6E25               	movwf	(??_pinMode+1)^0,c
  1532  000ADA  2A24               	incf	??_pinMode^0,f,c
  1533  000ADC  EF72  F005         	goto	u2334
  1534  000AE0                     u2335:
  1535  000AE0  90D8               	bcf	status,0,c
  1536  000AE2  3625               	rlcf	(??_pinMode+1)^0,f,c
  1537  000AE4                     u2334:
  1538  000AE4  2E24               	decfsz	??_pinMode^0,f,c
  1539  000AE6  EF70  F005         	goto	u2335
  1540  000AEA  5025               	movf	(??_pinMode+1)^0,w,c
  1541  000AEC  0AFF               	xorlw	255
  1542  000AEE  1695               	andwf	149,f,c	;volatile
  1543  000AF0  EFB4  F005         	goto	l76
  1544  000AF4                     l2500:
  1545  000AF4  BE21               	btfsc	(pinMode@pin+1)^0,7,c
  1546  000AF6  EF88  F005         	goto	u2340
  1547  000AFA  5021               	movf	(pinMode@pin+1)^0,w,c
  1548  000AFC  E107               	bnz	u2341
  1549  000AFE  0E28               	movlw	40
  1550  000B00  5C20               	subwf	pinMode@pin^0,w,c
  1551  000B02  B0D8               	btfsc	status,0,c
  1552  000B04  EF86  F005         	goto	u2341
  1553  000B08  EF88  F005         	goto	u2340
  1554  000B0C                     u2341:
  1555  000B0C  EFB4  F005         	goto	l76
  1556  000B10                     u2340:
  1557  000B10                     
  1558                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 69:         if (type){ ((TRISE) |= 
      +                          (1<<(pin-32)));}
  1559  000B10  5022               	movf	pinMode@type^0,w,c
  1560  000B12  1023               	iorwf	(pinMode@type+1)^0,w,c
  1561  000B14  B4D8               	btfsc	status,2,c
  1562  000B16  EF8F  F005         	goto	u2351
  1563  000B1A  EF91  F005         	goto	u2350
  1564  000B1E                     u2351:
  1565  000B1E  EFA3  F005         	goto	l2506
  1566  000B22                     u2350:
  1567  000B22  C020  F024         	movff	pinMode@pin,??_pinMode
  1568  000B26  0EE0               	movlw	-32
  1569  000B28  2624               	addwf	??_pinMode^0,f,c
  1570  000B2A  0E01               	movlw	1
  1571  000B2C  6E25               	movwf	(??_pinMode+1)^0,c
  1572  000B2E  2A24               	incf	??_pinMode^0,f,c
  1573  000B30  EF9C  F005         	goto	u2364
  1574  000B34                     u2365:
  1575  000B34  90D8               	bcf	status,0,c
  1576  000B36  3625               	rlcf	(??_pinMode+1)^0,f,c
  1577  000B38                     u2364:
  1578  000B38  2E24               	decfsz	??_pinMode^0,f,c
  1579  000B3A  EF9A  F005         	goto	u2365
  1580  000B3E  5025               	movf	(??_pinMode+1)^0,w,c
  1581  000B40  1296               	iorwf	150,f,c	;volatile
  1582  000B42  EFB4  F005         	goto	l76
  1583  000B46                     l2506:
  1584  000B46  C020  F024         	movff	pinMode@pin,??_pinMode
  1585  000B4A  0EE0               	movlw	-32
  1586  000B4C  2624               	addwf	??_pinMode^0,f,c
  1587  000B4E  0E01               	movlw	1
  1588  000B50  6E25               	movwf	(??_pinMode+1)^0,c
  1589  000B52  2A24               	incf	??_pinMode^0,f,c
  1590  000B54  EFAE  F005         	goto	u2374
  1591  000B58                     u2375:
  1592  000B58  90D8               	bcf	status,0,c
  1593  000B5A  3625               	rlcf	(??_pinMode+1)^0,f,c
  1594  000B5C                     u2374:
  1595  000B5C  2E24               	decfsz	??_pinMode^0,f,c
  1596  000B5E  EFAC  F005         	goto	u2375
  1597  000B62  5025               	movf	(??_pinMode+1)^0,w,c
  1598  000B64  0AFF               	xorlw	255
  1599  000B66  1696               	andwf	150,f,c	;volatile
  1600  000B68                     l76:
  1601  000B68  0012               	return		;funcret
  1602  000B6A                     __end_of_pinMode:
  1603                           	callstack 0
  1604                           
  1605 ;; *************** function _kpInit *****************
  1606 ;; Defined at:
  1607 ;;		line 89 in file "keypad.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;		None
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;		None
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, status,0
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1621 ;;      Params:         0       0       0       0       0       0       0
  1622 ;;      Locals:         0       0       0       0       0       0       0
  1623 ;;      Temps:          0       0       0       0       0       0       0
  1624 ;;      Totals:         0       0       0       0       0       0       0
  1625 ;;Total ram usage:        0 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; This function calls:
  1628 ;;		Nothing
  1629 ;; This function is called by:
  1630 ;;		_main
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text6
  1635  001CC4                     __ptext6:
  1636                           	callstack 0
  1637  001CC4                     _kpInit:
  1638                           	callstack 30
  1639  001CC4                     
  1640                           ;keypad.c: 91:     TRISB &= 0x07;
  1641  001CC4  0E07               	movlw	7
  1642  001CC6  1693               	andwf	147,f,c	;volatile
  1643                           
  1644                           ;keypad.c: 93:     TRISD |= 0x0f;
  1645  001CC8  0E0F               	movlw	15
  1646  001CCA  1295               	iorwf	149,f,c	;volatile
  1647  001CCC  0012               	return		;funcret
  1648  001CCE                     __end_of_kpInit:
  1649                           	callstack 0
  1650                           
  1651 ;; *************** function _chooseSong *****************
  1652 ;; Defined at:
  1653 ;;		line 32 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;		None
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;		None
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      void 
  1660 ;; Registers used:
  1661 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1667 ;;      Params:         0       0       0       0       0       0       0
  1668 ;;      Locals:         0       0       0       0       0       0       0
  1669 ;;      Temps:          2       0       0       0       0       0       0
  1670 ;;      Totals:         2       0       0       0       0       0       0
  1671 ;;Total ram usage:        2 bytes
  1672 ;; Hardware stack levels used:    1
  1673 ;; Hardware stack levels required when called:    5
  1674 ;; This function calls:
  1675 ;;		_atraso_ms
  1676 ;;		_kpDebounce
  1677 ;;		_kpRead
  1678 ;;		_lcdCommand
  1679 ;;		_lcdPosition
  1680 ;;		_lcdStr
  1681 ;;		_playSong
  1682 ;;		_ssdDigit
  1683 ;;		_ssdUpdate
  1684 ;; This function is called by:
  1685 ;;		_main
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text7
  1690  001082                     __ptext7:
  1691                           	callstack 0
  1692  001082                     _chooseSong:
  1693                           	callstack 25
  1694  001082                     
  1695                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 33:     kpDebounce();
  1696  001082  ECDC  F006         	call	_kpDebounce	;wreg free
  1697  001086                     
  1698                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 34:     tecla = kpRead();
  1699  001086  EC67  F00E         	call	_kpRead	;wreg free
  1700  00108A  5020               	movf	?_kpRead^0,w,c
  1701  00108C  6E1F               	movwf	_tecla^0,c
  1702  00108E                     
  1703                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 35:     ssdUpdate();
  1704  00108E  EC99  F007         	call	_ssdUpdate	;wreg free
  1705  001092                     
  1706                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 36:     if (((tecla) & (1<<(3)))
      +                           || ((tecla) & (1<<(7)))) {
  1707  001092  B61F               	btfsc	_tecla^0,3,c
  1708  001094  EF4E  F008         	goto	u2521
  1709  001098  EF50  F008         	goto	u2520
  1710  00109C                     u2521:
  1711  00109C  EF57  F008         	goto	l2692
  1712  0010A0                     u2520:
  1713  0010A0  AE1F               	btfss	_tecla^0,7,c
  1714  0010A2  EF55  F008         	goto	u2531
  1715  0010A6  EF57  F008         	goto	u2530
  1716  0010AA                     u2531:
  1717  0010AA  EFE0  F008         	goto	l219
  1718  0010AE                     u2530:
  1719  0010AE                     l2692:
  1720                           
  1721                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 37:         flag = 1;
  1722  0010AE  0E01               	movlw	1
  1723  0010B0  6E4A               	movwf	_flag^0,c
  1724  0010B2                     l2694:
  1725                           
  1726                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 39:             ssdUpdate();
  1727  0010B2  EC99  F007         	call	_ssdUpdate	;wreg free
  1728  0010B6                     
  1729                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 40:             kpDebounce();
  1730  0010B6  ECDC  F006         	call	_kpDebounce	;wreg free
  1731  0010BA                     
  1732                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 41:             atraso_ms(10);
  1733  0010BA  0E00               	movlw	0
  1734  0010BC  6E21               	movwf	(atraso_ms@t+1)^0,c
  1735  0010BE  0E0A               	movlw	10
  1736  0010C0  6E20               	movwf	atraso_ms@t^0,c
  1737  0010C2  ECD5  F00C         	call	_atraso_ms	;wreg free
  1738  0010C6                     
  1739                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 42:             if ((kpRead() !=
      +                           tecla) || flag == 1) {
  1740  0010C6  501F               	movf	_tecla^0,w,c
  1741  0010C8  6E35               	movwf	??_chooseSong^0,c
  1742  0010CA  6A36               	clrf	(??_chooseSong+1)^0,c
  1743  0010CC  EC67  F00E         	call	_kpRead	;wreg free
  1744  0010D0  5035               	movf	??_chooseSong^0,w,c
  1745  0010D2  1820               	xorwf	?_kpRead^0,w,c
  1746  0010D4  E107               	bnz	u2541
  1747  0010D6  5036               	movf	(??_chooseSong+1)^0,w,c
  1748  0010D8  1821               	xorwf	(?_kpRead+1)^0,w,c
  1749  0010DA  A4D8               	btfss	status,2,c
  1750  0010DC  EF72  F008         	goto	u2541
  1751  0010E0  EF74  F008         	goto	u2540
  1752  0010E4                     u2541:
  1753  0010E4  EF7C  F008         	goto	l2704
  1754  0010E8                     u2540:
  1755  0010E8  044A               	decf	_flag^0,w,c
  1756  0010EA  A4D8               	btfss	status,2,c
  1757  0010EC  EF7A  F008         	goto	u2551
  1758  0010F0  EF7C  F008         	goto	u2550
  1759  0010F4                     u2551:
  1760  0010F4  EF59  F008         	goto	l2694
  1761  0010F8                     u2550:
  1762  0010F8                     l2704:
  1763                           
  1764                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 43:                 tecla = kpRe
      +                          ad();
  1765  0010F8  EC67  F00E         	call	_kpRead	;wreg free
  1766  0010FC  5020               	movf	?_kpRead^0,w,c
  1767  0010FE  6E1F               	movwf	_tecla^0,c
  1768  001100                     
  1769                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 44:                 if (((tecla)
      +                           & (1<<(3)))) {
  1770  001100  A61F               	btfss	_tecla^0,3,c
  1771  001102  EF85  F008         	goto	u2561
  1772  001106  EF87  F008         	goto	u2560
  1773  00110A                     u2561:
  1774  00110A  EF96  F008         	goto	l209
  1775  00110E                     u2560:
  1776  00110E                     
  1777                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 45:                     if (indi
      +                          ce == 0) {
  1778  00110E  504B               	movf	_indice^0,w,c
  1779  001110  A4D8               	btfss	status,2,c
  1780  001112  EF8D  F008         	goto	u2571
  1781  001116  EF8F  F008         	goto	u2570
  1782  00111A                     u2571:
  1783  00111A  EF93  F008         	goto	l2712
  1784  00111E                     u2570:
  1785  00111E                     
  1786                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 46:                         indi
      +                          ce = 9;
  1787  00111E  0E09               	movlw	9
  1788  001120  6E4B               	movwf	_indice^0,c
  1789                           
  1790                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 47:                     } else {
  1791  001122  EFB8  F008         	goto	l2722
  1792  001126                     l2712:
  1793                           
  1794                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 48:                         indi
      +                          ce -= 1;
  1795  001126  064B               	decf	_indice^0,f,c
  1796  001128  EFB8  F008         	goto	l2722
  1797  00112C                     l209:
  1798  00112C  AE1F               	btfss	_tecla^0,7,c
  1799  00112E  EF9B  F008         	goto	u2581
  1800  001132  EF9D  F008         	goto	u2580
  1801  001136                     u2581:
  1802  001136  EFAD  F008         	goto	l213
  1803  00113A                     u2580:
  1804  00113A                     
  1805                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 51:                     if (indi
      +                          ce == 9) {
  1806  00113A  0E09               	movlw	9
  1807  00113C  184B               	xorwf	_indice^0,w,c
  1808  00113E  A4D8               	btfss	status,2,c
  1809  001140  EFA4  F008         	goto	u2591
  1810  001144  EFA6  F008         	goto	u2590
  1811  001148                     u2591:
  1812  001148  EFAA  F008         	goto	l2718
  1813  00114C                     u2590:
  1814  00114C                     
  1815                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 52:                         indi
      +                          ce = 0;
  1816  00114C  0E00               	movlw	0
  1817  00114E  6E4B               	movwf	_indice^0,c
  1818                           
  1819                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 53:                     } else {
  1820  001150  EFB8  F008         	goto	l2722
  1821  001154                     l2718:
  1822                           
  1823                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 54:                         indi
      +                          ce += 1;
  1824  001154  2A4B               	incf	_indice^0,f,c
  1825  001156  EFB8  F008         	goto	l2722
  1826  00115A                     l213:
  1827  00115A  A01F               	btfss	_tecla^0,0,c
  1828  00115C  EFB2  F008         	goto	u2601
  1829  001160  EFB4  F008         	goto	u2600
  1830  001164                     u2601:
  1831  001164  EFB8  F008         	goto	l2722
  1832  001168                     u2600:
  1833  001168                     
  1834                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 57:                     flag = 0
      +                          ;
  1835  001168  0E00               	movlw	0
  1836  00116A  6E4A               	movwf	_flag^0,c
  1837                           
  1838                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 58:                     break;
  1839  00116C  EFDE  F008         	goto	l2734
  1840  001170                     l2722:
  1841                           
  1842                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 60:                 lcdCommand(0
      +                          x01);
  1843  001170  0E01               	movlw	1
  1844  001172  ECAE  F00B         	call	_lcdCommand
  1845                           
  1846                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 61:                 lcdPosition(
      +                          1, 0);
  1847  001176  0E00               	movlw	0
  1848  001178  6E28               	movwf	lcdPosition@coluna^0,c
  1849  00117A  0E01               	movlw	1
  1850  00117C  EC38  F00D         	call	_lcdPosition
  1851  001180                     
  1852                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 62:                 lcdStr("<-(1
      +                          ) (*)  (2)->");
  1853  001180  0E22               	movlw	low STR_1
  1854  001182  6E28               	movwf	lcdStr@str^0,c
  1855  001184  0E06               	movlw	high STR_1
  1856  001186  6E29               	movwf	(lcdStr@str+1)^0,c
  1857  001188  EC29  F00C         	call	_lcdStr	;wreg free
  1858  00118C                     
  1859                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 63:                 lcdPosition(
      +                          0, 0);
  1860  00118C  0E00               	movlw	0
  1861  00118E  6E28               	movwf	lcdPosition@coluna^0,c
  1862  001190  0E00               	movlw	0
  1863  001192  EC38  F00D         	call	_lcdPosition
  1864  001196                     
  1865                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 64:                 lcdStr(music
      +                          as[indice].nome);
  1866  001196  504B               	movf	_indice^0,w,c
  1867  001198  0D13               	mullw	19
  1868  00119A  0E02               	movlw	low (_musicas+2)
  1869  00119C  24F3               	addwf	243,w,c
  1870  00119E  6E28               	movwf	lcdStr@str^0,c
  1871  0011A0  0E01               	movlw	high (_musicas+2)
  1872  0011A2  20F4               	addwfc	prodh,w,c
  1873  0011A4  6E29               	movwf	(lcdStr@str+1)^0,c
  1874  0011A6  EC29  F00C         	call	_lcdStr	;wreg free
  1875  0011AA                     
  1876                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 65:                 ssdDigit(ind
      +                          ice, 3);
  1877  0011AA  0E03               	movlw	3
  1878  0011AC  6E20               	movwf	ssdDigit@pos^0,c
  1879  0011AE  504B               	movf	_indice^0,w,c
  1880  0011B0  EC65  F00D         	call	_ssdDigit
  1881  0011B4                     
  1882                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 66:                 flag = 0;
  1883  0011B4  0E00               	movlw	0
  1884  0011B6  6E4A               	movwf	_flag^0,c
  1885  0011B8  EF59  F008         	goto	l2694
  1886  0011BC                     l2734:
  1887                           
  1888                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 69:         playSong();
  1889  0011BC  EC28  F003         	call	_playSong	;wreg free
  1890  0011C0                     l219:
  1891  0011C0  0012               	return		;funcret
  1892  0011C2                     __end_of_chooseSong:
  1893                           	callstack 0
  1894                           
  1895 ;; *************** function _playSong *****************
  1896 ;; Defined at:
  1897 ;;		line 73 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  j               1   20[COMRAM] unsigned char 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  1    wreg      void 
  1904 ;; Registers used:
  1905 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1911 ;;      Params:         0       0       0       0       0       0       0
  1912 ;;      Locals:         5       0       0       0       0       0       0
  1913 ;;      Temps:          0       0       0       0       0       0       0
  1914 ;;      Totals:         5       0       0       0       0       0       0
  1915 ;;Total ram usage:        5 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:    4
  1918 ;; This function calls:
  1919 ;;		___awdiv
  1920 ;;		___awmod
  1921 ;;		_alterarVolume
  1922 ;;		_atraso_ms
  1923 ;;		_kpDebounce
  1924 ;;		_kpRead
  1925 ;;		_lcdCommand
  1926 ;;		_lcdPosition
  1927 ;;		_lcdStr
  1928 ;;		_pwmInit
  1929 ;;		_pwmSet
  1930 ;;		_ssdDigit
  1931 ;;		_ssdUpdate
  1932 ;; This function is called by:
  1933 ;;		_chooseSong
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text8
  1938  000650                     __ptext8:
  1939                           	callstack 0
  1940  000650                     _playSong:
  1941                           	callstack 25
  1942  000650                     
  1943                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 74:     pwmInit();
  1944  000650  EC49  F00E         	call	_pwmInit	;wreg free
  1945                           
  1946                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 75:     lcdCommand(0x01);
  1947  000654  0E01               	movlw	1
  1948  000656  ECAE  F00B         	call	_lcdCommand
  1949                           
  1950                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 76:     lcdPosition(0, 0);
  1951  00065A  0E00               	movlw	0
  1952  00065C  6E28               	movwf	lcdPosition@coluna^0,c
  1953  00065E  0E00               	movlw	0
  1954  000660  EC38  F00D         	call	_lcdPosition
  1955  000664                     
  1956                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 77:     lcdStr(musicas[indice].n
      +                          ome);
  1957  000664  504B               	movf	_indice^0,w,c
  1958  000666  0D13               	mullw	19
  1959  000668  0E02               	movlw	low (_musicas+2)
  1960  00066A  24F3               	addwf	243,w,c
  1961  00066C  6E28               	movwf	lcdStr@str^0,c
  1962  00066E  0E01               	movlw	high (_musicas+2)
  1963  000670  20F4               	addwfc	prodh,w,c
  1964  000672  6E29               	movwf	(lcdStr@str+1)^0,c
  1965  000674  EC29  F00C         	call	_lcdStr	;wreg free
  1966  000678                     
  1967                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 78:     lcdPosition(1, 0);
  1968  000678  0E00               	movlw	0
  1969  00067A  6E28               	movwf	lcdPosition@coluna^0,c
  1970  00067C  0E01               	movlw	1
  1971  00067E  EC38  F00D         	call	_lcdPosition
  1972  000682                     
  1973                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 79:     lcdStr("-(1)  (*)  (2)+"
      +                          );
  1974  000682  0E33               	movlw	low STR_2
  1975  000684  6E28               	movwf	lcdStr@str^0,c
  1976  000686  0E06               	movlw	high STR_2
  1977  000688  6E29               	movwf	(lcdStr@str+1)^0,c
  1978  00068A  EC29  F00C         	call	_lcdStr	;wreg free
  1979  00068E                     
  1980                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 81:     tempo = musicas[indice].
      +                          duracao;
  1981  00068E  504B               	movf	_indice^0,w,c
  1982  000690  0D13               	mullw	19
  1983  000692  0E00               	movlw	low _musicas
  1984  000694  24F3               	addwf	243,w,c
  1985  000696  6ED9               	movwf	fsr2l,c
  1986  000698  0E01               	movlw	high _musicas
  1987  00069A  20F4               	addwfc	prodh,w,c
  1988  00069C  6EDA               	movwf	fsr2h,c
  1989  00069E  50DF               	movf	indf2,w,c
  1990  0006A0  6E49               	movwf	_tempo^0,c
  1991                           
  1992                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 83:     while (tempo != 0) {
  1993  0006A2  EF78  F004         	goto	l2622
  1994  0006A6                     l2522:
  1995                           
  1996                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 84:         pwmSet(100);
  1997  0006A6  0E64               	movlw	100
  1998  0006A8  EC9F  F00C         	call	_pwmSet
  1999  0006AC                     
  2000                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 85:         minuto1 = (tempo / 6
      +                          0) % 10;
  2001  0006AC  0E00               	movlw	0
  2002  0006AE  6E23               	movwf	(___awdiv@divisor+1)^0,c
  2003  0006B0  0E3C               	movlw	60
  2004  0006B2  6E22               	movwf	___awdiv@divisor^0,c
  2005  0006B4  C049  F020         	movff	_tempo,___awdiv@dividend
  2006  0006B8  6A21               	clrf	(___awdiv@dividend+1)^0,c
  2007  0006BA  EC06  F00A         	call	___awdiv	;wreg free
  2008  0006BE  C020  F028         	movff	?___awdiv,___awmod@dividend
  2009  0006C2  C021  F029         	movff	?___awdiv+1,___awmod@dividend+1
  2010  0006C6  0E00               	movlw	0
  2011  0006C8  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2012  0006CA  0E0A               	movlw	10
  2013  0006CC  6E2A               	movwf	___awmod@divisor^0,c
  2014  0006CE  EC68  F00A         	call	___awmod	;wreg free
  2015  0006D2  5028               	movf	?___awmod^0,w,c
  2016  0006D4  6E48               	movwf	_minuto1^0,c
  2017  0006D6                     
  2018                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 86:         minuto2 = (tempo / 6
      +                          0) / 10;
  2019  0006D6  0E00               	movlw	0
  2020  0006D8  6E23               	movwf	(___awdiv@divisor+1)^0,c
  2021  0006DA  0E3C               	movlw	60
  2022  0006DC  6E22               	movwf	___awdiv@divisor^0,c
  2023  0006DE  C049  F020         	movff	_tempo,___awdiv@dividend
  2024  0006E2  6A21               	clrf	(___awdiv@dividend+1)^0,c
  2025  0006E4  EC06  F00A         	call	___awdiv	;wreg free
  2026  0006E8  C020  F030         	movff	?___awdiv,_playSong$977
  2027  0006EC  C021  F031         	movff	?___awdiv+1,_playSong$977+1
  2028  0006F0                     
  2029                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 86:         minuto2 = (tempo / 6
      +                          0) / 10;
  2030  0006F0  C030  F020         	movff	_playSong$977,___awdiv@dividend
  2031  0006F4  C031  F021         	movff	_playSong$977+1,___awdiv@dividend+1
  2032  0006F8  0E00               	movlw	0
  2033  0006FA  6E23               	movwf	(___awdiv@divisor+1)^0,c
  2034  0006FC  0E0A               	movlw	10
  2035  0006FE  6E22               	movwf	___awdiv@divisor^0,c
  2036  000700  EC06  F00A         	call	___awdiv	;wreg free
  2037  000704  5020               	movf	?___awdiv^0,w,c
  2038  000706  6E47               	movwf	_minuto2^0,c
  2039  000708                     
  2040                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 87:         segundo1 = (tempo % 
      +                          60) % 10;
  2041  000708  0E00               	movlw	0
  2042  00070A  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2043  00070C  0E3C               	movlw	60
  2044  00070E  6E2A               	movwf	___awmod@divisor^0,c
  2045  000710  C049  F028         	movff	_tempo,___awmod@dividend
  2046  000714  6A29               	clrf	(___awmod@dividend+1)^0,c
  2047  000716  EC68  F00A         	call	___awmod	;wreg free
  2048  00071A  C028  F032         	movff	?___awmod,_playSong$978
  2049  00071E  C029  F033         	movff	?___awmod+1,_playSong$978+1
  2050  000722                     
  2051                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 87:         segundo1 = (tempo % 
      +                          60) % 10;
  2052  000722  C032  F028         	movff	_playSong$978,___awmod@dividend
  2053  000726  C033  F029         	movff	_playSong$978+1,___awmod@dividend+1
  2054  00072A  0E00               	movlw	0
  2055  00072C  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2056  00072E  0E0A               	movlw	10
  2057  000730  6E2A               	movwf	___awmod@divisor^0,c
  2058  000732  EC68  F00A         	call	___awmod	;wreg free
  2059  000736  5028               	movf	?___awmod^0,w,c
  2060  000738  6E46               	movwf	_segundo1^0,c
  2061  00073A                     
  2062                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 88:         segundo2 = (tempo % 
      +                          60) / 10;
  2063  00073A  0E00               	movlw	0
  2064  00073C  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2065  00073E  0E3C               	movlw	60
  2066  000740  6E2A               	movwf	___awmod@divisor^0,c
  2067  000742  C049  F028         	movff	_tempo,___awmod@dividend
  2068  000746  6A29               	clrf	(___awmod@dividend+1)^0,c
  2069  000748  EC68  F00A         	call	___awmod	;wreg free
  2070  00074C  C028  F020         	movff	?___awmod,___awdiv@dividend
  2071  000750  C029  F021         	movff	?___awmod+1,___awdiv@dividend+1
  2072  000754  0E00               	movlw	0
  2073  000756  6E23               	movwf	(___awdiv@divisor+1)^0,c
  2074  000758  0E0A               	movlw	10
  2075  00075A  6E22               	movwf	___awdiv@divisor^0,c
  2076  00075C  EC06  F00A         	call	___awdiv	;wreg free
  2077  000760  5020               	movf	?___awdiv^0,w,c
  2078  000762  6E45               	movwf	_segundo2^0,c
  2079  000764                     
  2080                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 90:         ssdDigit(minuto2, 0)
      +                          ;
  2081  000764  0E00               	movlw	0
  2082  000766  6E20               	movwf	ssdDigit@pos^0,c
  2083  000768  5047               	movf	_minuto2^0,w,c
  2084  00076A  EC65  F00D         	call	_ssdDigit
  2085  00076E                     
  2086                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 91:         ssdDigit(minuto1, 1)
      +                          ;
  2087  00076E  0E01               	movlw	1
  2088  000770  6E20               	movwf	ssdDigit@pos^0,c
  2089  000772  5048               	movf	_minuto1^0,w,c
  2090  000774  EC65  F00D         	call	_ssdDigit
  2091  000778                     
  2092                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 92:         ssdDigit(segundo2, 2
      +                          );
  2093  000778  0E02               	movlw	2
  2094  00077A  6E20               	movwf	ssdDigit@pos^0,c
  2095  00077C  5045               	movf	_segundo2^0,w,c
  2096  00077E  EC65  F00D         	call	_ssdDigit
  2097  000782                     
  2098                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 93:         ssdDigit(segundo1, 3
      +                          );
  2099  000782  0E03               	movlw	3
  2100  000784  6E20               	movwf	ssdDigit@pos^0,c
  2101  000786  5046               	movf	_segundo1^0,w,c
  2102  000788  EC65  F00D         	call	_ssdDigit
  2103  00078C                     
  2104                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 95:         for (unsigned char j
      +                           = 0; j < 100; j++) {
  2105  00078C  0E00               	movlw	0
  2106  00078E  6E34               	movwf	playSong@j^0,c
  2107  000790                     l2550:
  2108                           
  2109                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 96:             ssdUpdate();
  2110  000790  EC99  F007         	call	_ssdUpdate	;wreg free
  2111  000794                     
  2112                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 97:             atraso_ms(10);
  2113  000794  0E00               	movlw	0
  2114  000796  6E21               	movwf	(atraso_ms@t+1)^0,c
  2115  000798  0E0A               	movlw	10
  2116  00079A  6E20               	movwf	atraso_ms@t^0,c
  2117  00079C  ECD5  F00C         	call	_atraso_ms	;wreg free
  2118  0007A0                     
  2119                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 98:             kpDebounce();
  2120  0007A0  ECDC  F006         	call	_kpDebounce	;wreg free
  2121  0007A4                     
  2122                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 99:             tecla = kpRead()
      +                          ;
  2123  0007A4  EC67  F00E         	call	_kpRead	;wreg free
  2124  0007A8  5020               	movf	?_kpRead^0,w,c
  2125  0007AA  6E1F               	movwf	_tecla^0,c
  2126  0007AC                     
  2127                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 100:             if (((tecla) & 
      +                          (1<<(3)))) {
  2128  0007AC  A61F               	btfss	_tecla^0,3,c
  2129  0007AE  EFDB  F003         	goto	u2391
  2130  0007B2  EFDD  F003         	goto	u2390
  2131  0007B6                     u2391:
  2132  0007B6  EFF3  F003         	goto	l226
  2133  0007BA                     u2390:
  2134  0007BA  EFE7  F003         	goto	l2568
  2135  0007BE                     l2562:
  2136                           
  2137                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 102:                     ssdUpda
      +                          te();
  2138  0007BE  EC99  F007         	call	_ssdUpdate	;wreg free
  2139  0007C2                     
  2140                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 103:                     kpDebou
      +                          nce();
  2141  0007C2  ECDC  F006         	call	_kpDebounce	;wreg free
  2142  0007C6                     
  2143                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 104:                     tecla =
      +                           kpRead();
  2144  0007C6  EC67  F00E         	call	_kpRead	;wreg free
  2145  0007CA  5020               	movf	?_kpRead^0,w,c
  2146  0007CC  6E1F               	movwf	_tecla^0,c
  2147  0007CE                     l2568:
  2148                           
  2149                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 101:                 while(((tec
      +                          la) & (1<<(3)))) {
  2150  0007CE  B61F               	btfsc	_tecla^0,3,c
  2151  0007D0  EFEC  F003         	goto	u2401
  2152  0007D4  EFEE  F003         	goto	u2400
  2153  0007D8                     u2401:
  2154  0007D8  EFDF  F003         	goto	l2562
  2155  0007DC                     u2400:
  2156  0007DC                     
  2157                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 106:                 alterarVolu
      +                          me(0);
  2158  0007DC  0E00               	movlw	0
  2159  0007DE  ECE1  F008         	call	_alterarVolume
  2160                           
  2161                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 107:             }
  2162  0007E2  EF66  F004         	goto	l2614
  2163  0007E6                     l226:
  2164  0007E6  AE1F               	btfss	_tecla^0,7,c
  2165  0007E8  EFF8  F003         	goto	u2411
  2166  0007EC  EFFA  F003         	goto	u2410
  2167  0007F0                     u2411:
  2168  0007F0  EF10  F004         	goto	l231
  2169  0007F4                     u2410:
  2170  0007F4  EF04  F004         	goto	l2580
  2171  0007F8                     l2574:
  2172                           
  2173                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 110:                     ssdUpda
      +                          te();
  2174  0007F8  EC99  F007         	call	_ssdUpdate	;wreg free
  2175  0007FC                     
  2176                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 111:                     kpDebou
      +                          nce();
  2177  0007FC  ECDC  F006         	call	_kpDebounce	;wreg free
  2178  000800                     
  2179                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 112:                     tecla =
      +                           kpRead();
  2180  000800  EC67  F00E         	call	_kpRead	;wreg free
  2181  000804  5020               	movf	?_kpRead^0,w,c
  2182  000806  6E1F               	movwf	_tecla^0,c
  2183  000808                     l2580:
  2184                           
  2185                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 109:                 while(((tec
      +                          la) & (1<<(7)))) {
  2186  000808  BE1F               	btfsc	_tecla^0,7,c
  2187  00080A  EF09  F004         	goto	u2421
  2188  00080E  EF0B  F004         	goto	u2420
  2189  000812                     u2421:
  2190  000812  EFFC  F003         	goto	l2574
  2191  000816                     u2420:
  2192  000816                     
  2193                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 114:                 alterarVolu
      +                          me(1);
  2194  000816  0E01               	movlw	1
  2195  000818  ECE1  F008         	call	_alterarVolume
  2196                           
  2197                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 115:             }
  2198  00081C  EF66  F004         	goto	l2614
  2199  000820                     l231:
  2200  000820  A01F               	btfss	_tecla^0,0,c
  2201  000822  EF15  F004         	goto	u2431
  2202  000826  EF17  F004         	goto	u2430
  2203  00082A                     u2431:
  2204  00082A  EF38  F004         	goto	l236
  2205  00082E                     u2430:
  2206  00082E  EF21  F004         	goto	l2592
  2207  000832                     l2586:
  2208                           
  2209                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 118:                     ssdUpda
      +                          te();
  2210  000832  EC99  F007         	call	_ssdUpdate	;wreg free
  2211  000836                     
  2212                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 119:                     kpDebou
      +                          nce();
  2213  000836  ECDC  F006         	call	_kpDebounce	;wreg free
  2214  00083A                     
  2215                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 120:                     tecla =
      +                           kpRead();
  2216  00083A  EC67  F00E         	call	_kpRead	;wreg free
  2217  00083E  5020               	movf	?_kpRead^0,w,c
  2218  000840  6E1F               	movwf	_tecla^0,c
  2219  000842                     l2592:
  2220                           
  2221                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 117:                 while(((tec
      +                          la) & (1<<(0)))) {
  2222  000842  B01F               	btfsc	_tecla^0,0,c
  2223  000844  EF26  F004         	goto	u2441
  2224  000848  EF28  F004         	goto	u2440
  2225  00084C                     u2441:
  2226  00084C  EF19  F004         	goto	l2586
  2227  000850                     u2440:
  2228  000850                     
  2229                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 122:                 if (pause =
      +                          = 0) {pause = 1;} else {pause = 0;}
  2230  000850  501E               	movf	_pause^0,w,c
  2231  000852  A4D8               	btfss	status,2,c
  2232  000854  EF2E  F004         	goto	u2451
  2233  000858  EF30  F004         	goto	u2450
  2234  00085C                     u2451:
  2235  00085C  EF34  F004         	goto	l2598
  2236  000860                     u2450:
  2237  000860  0E01               	movlw	1
  2238  000862  6E1E               	movwf	_pause^0,c
  2239  000864  EF66  F004         	goto	l2614
  2240  000868                     l2598:
  2241  000868  0E00               	movlw	0
  2242  00086A  6E1E               	movwf	_pause^0,c
  2243  00086C  EF66  F004         	goto	l2614
  2244  000870                     l236:
  2245  000870  A81F               	btfss	_tecla^0,4,c
  2246  000872  EF3D  F004         	goto	u2461
  2247  000876  EF3F  F004         	goto	u2460
  2248  00087A                     u2461:
  2249  00087A  EF66  F004         	goto	l235
  2250  00087E                     u2460:
  2251  00087E  EF49  F004         	goto	l2608
  2252  000882                     l2602:
  2253                           
  2254                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 126:                     ssdUpda
      +                          te();
  2255  000882  EC99  F007         	call	_ssdUpdate	;wreg free
  2256  000886                     
  2257                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 127:                     kpDebou
      +                          nce();
  2258  000886  ECDC  F006         	call	_kpDebounce	;wreg free
  2259  00088A                     
  2260                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 128:                     tecla =
      +                           kpRead();
  2261  00088A  EC67  F00E         	call	_kpRead	;wreg free
  2262  00088E  5020               	movf	?_kpRead^0,w,c
  2263  000890  6E1F               	movwf	_tecla^0,c
  2264  000892                     l2608:
  2265                           
  2266                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 125:                 while(((tec
      +                          la) & (1<<(4)))) {
  2267  000892  B81F               	btfsc	_tecla^0,4,c
  2268  000894  EF4E  F004         	goto	u2471
  2269  000898  EF50  F004         	goto	u2470
  2270  00089C                     u2471:
  2271  00089C  EF41  F004         	goto	l2602
  2272  0008A0                     u2470:
  2273  0008A0                     
  2274                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 130:                 ssdDigit(0,
      +                           0);
  2275  0008A0  0E00               	movlw	0
  2276  0008A2  6E20               	movwf	ssdDigit@pos^0,c
  2277  0008A4  0E00               	movlw	0
  2278  0008A6  EC65  F00D         	call	_ssdDigit
  2279                           
  2280                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 131:                 ssdDigit(0,
      +                           1);
  2281  0008AA  0E01               	movlw	1
  2282  0008AC  6E20               	movwf	ssdDigit@pos^0,c
  2283  0008AE  0E00               	movlw	0
  2284  0008B0  EC65  F00D         	call	_ssdDigit
  2285                           
  2286                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 132:                 ssdDigit(0,
      +                           2);
  2287  0008B4  0E02               	movlw	2
  2288  0008B6  6E20               	movwf	ssdDigit@pos^0,c
  2289  0008B8  0E00               	movlw	0
  2290  0008BA  EC65  F00D         	call	_ssdDigit
  2291                           
  2292                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 133:                 ssdDigit(0,
      +                           3);
  2293  0008BE  0E03               	movlw	3
  2294  0008C0  6E20               	movwf	ssdDigit@pos^0,c
  2295  0008C2  0E00               	movlw	0
  2296  0008C4  EC65  F00D         	call	_ssdDigit
  2297  0008C8  EF8D  F004         	goto	l247
  2298  0008CC                     l235:
  2299  0008CC                     l2614:
  2300                           
  2301                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 136:         }
  2302  0008CC  2A34               	incf	playSong@j^0,f,c
  2303  0008CE  0E63               	movlw	99
  2304  0008D0  6434               	cpfsgt	playSong@j^0,c
  2305  0008D2  EF6D  F004         	goto	u2481
  2306  0008D6  EF6F  F004         	goto	u2480
  2307  0008DA                     u2481:
  2308  0008DA  EFC8  F003         	goto	l2550
  2309  0008DE                     u2480:
  2310  0008DE                     
  2311                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 137:         if (pause == 0) {
  2312  0008DE  501E               	movf	_pause^0,w,c
  2313  0008E0  A4D8               	btfss	status,2,c
  2314  0008E2  EF75  F004         	goto	u2491
  2315  0008E6  EF77  F004         	goto	u2490
  2316  0008EA                     u2491:
  2317  0008EA  EF78  F004         	goto	l2622
  2318  0008EE                     u2490:
  2319  0008EE                     
  2320                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 138:             tempo -= 1;
  2321  0008EE  0649               	decf	_tempo^0,f,c
  2322  0008F0                     l2622:
  2323                           
  2324                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 83:     while (tempo != 0) {
  2325  0008F0  5049               	movf	_tempo^0,w,c
  2326  0008F2  A4D8               	btfss	status,2,c
  2327  0008F4  EF7E  F004         	goto	u2501
  2328  0008F8  EF80  F004         	goto	u2500
  2329  0008FC                     u2501:
  2330  0008FC  EF53  F003         	goto	l2522
  2331  000900                     u2500:
  2332  000900                     
  2333                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 141:     TRISA=0x00;
  2334  000900  0E00               	movlw	0
  2335  000902  6E92               	movwf	146,c	;volatile
  2336  000904                     
  2337                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 142:     pwmSet(0);
  2338  000904  0E00               	movlw	0
  2339  000906  EC9F  F00C         	call	_pwmSet
  2340  00090A                     
  2341                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 143:     ((TRISC) |= (1<<(1)));
  2342  00090A  8294               	bsf	148,1,c	;volatile
  2343  00090C                     
  2344                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 144:     atraso_ms(500);
  2345  00090C  0E01               	movlw	1
  2346  00090E  6E21               	movwf	(atraso_ms@t+1)^0,c
  2347  000910  0EF4               	movlw	244
  2348  000912  6E20               	movwf	atraso_ms@t^0,c
  2349  000914  ECD5  F00C         	call	_atraso_ms	;wreg free
  2350  000918                     
  2351                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 145:     ((TRISC) &= ~(1<<(1)));
  2352  000918  9294               	bcf	148,1,c	;volatile
  2353  00091A                     l247:
  2354  00091A  0012               	return		;funcret
  2355  00091C                     __end_of_playSong:
  2356                           	callstack 0
  2357                           
  2358 ;; *************** function _ssdUpdate *****************
  2359 ;; Defined at:
  2360 ;;		line 54 in file "ssd.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2374 ;;      Params:         0       0       0       0       0       0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0
  2376 ;;      Temps:          2       0       0       0       0       0       0
  2377 ;;      Totals:         2       0       0       0       0       0       0
  2378 ;;Total ram usage:        2 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    1
  2381 ;; This function calls:
  2382 ;;		_digitalWrite
  2383 ;; This function is called by:
  2384 ;;		_chooseSong
  2385 ;;		_playSong
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           	psect	text9
  2390  000F32                     __ptext9:
  2391                           	callstack 0
  2392  000F32                     _ssdUpdate:
  2393                           	callstack 28
  2394  000F32                     
  2395                           ;ssd.c: 58:     TRISD= 0x00;
  2396  000F32  0E00               	movlw	0
  2397  000F34  6E95               	movwf	149,c	;volatile
  2398  000F36                     
  2399                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  2400  000F36  0E00               	movlw	0
  2401  000F38  6E21               	movwf	(digitalWrite@pin+1)^0,c
  2402  000F3A  0E02               	movlw	2
  2403  000F3C  6E20               	movwf	digitalWrite@pin^0,c
  2404  000F3E  0E00               	movlw	0
  2405  000F40  6E23               	movwf	(digitalWrite@value+1)^0,c
  2406  000F42  0E00               	movlw	0
  2407  000F44  6E22               	movwf	digitalWrite@value^0,c
  2408  000F46  ECB5  F005         	call	_digitalWrite	;wreg free
  2409  000F4A                     
  2410                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  2411  000F4A  0E00               	movlw	0
  2412  000F4C  6E21               	movwf	(digitalWrite@pin+1)^0,c
  2413  000F4E  0E03               	movlw	3
  2414  000F50  6E20               	movwf	digitalWrite@pin^0,c
  2415  000F52  0E00               	movlw	0
  2416  000F54  6E23               	movwf	(digitalWrite@value+1)^0,c
  2417  000F56  0E00               	movlw	0
  2418  000F58  6E22               	movwf	digitalWrite@value^0,c
  2419  000F5A  ECB5  F005         	call	_digitalWrite	;wreg free
  2420  000F5E                     
  2421                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  2422  000F5E  0E00               	movlw	0
  2423  000F60  6E21               	movwf	(digitalWrite@pin+1)^0,c
  2424  000F62  0E04               	movlw	4
  2425  000F64  6E20               	movwf	digitalWrite@pin^0,c
  2426  000F66  0E00               	movlw	0
  2427  000F68  6E23               	movwf	(digitalWrite@value+1)^0,c
  2428  000F6A  0E00               	movlw	0
  2429  000F6C  6E22               	movwf	digitalWrite@value^0,c
  2430  000F6E  ECB5  F005         	call	_digitalWrite	;wreg free
  2431  000F72                     
  2432                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  2433  000F72  0E00               	movlw	0
  2434  000F74  6E21               	movwf	(digitalWrite@pin+1)^0,c
  2435  000F76  0E05               	movlw	5
  2436  000F78  6E20               	movwf	digitalWrite@pin^0,c
  2437  000F7A  0E00               	movlw	0
  2438  000F7C  6E23               	movwf	(digitalWrite@value+1)^0,c
  2439  000F7E  0E00               	movlw	0
  2440  000F80  6E22               	movwf	digitalWrite@value^0,c
  2441  000F82  ECB5  F005         	call	_digitalWrite	;wreg free
  2442                           
  2443                           ;ssd.c: 66:     PORTD = 0x00;
  2444  000F86  0E00               	movlw	0
  2445  000F88  6E83               	movwf	131,c	;volatile
  2446                           
  2447                           ;ssd.c: 69:     switch (display)
  2448  000F8A  EF23  F008         	goto	l2290
  2449  000F8E                     l2262:
  2450                           
  2451                           ;ssd.c: 72:             PORTD = valor[v0];
  2452  000F8E  0E01               	movlw	low _valor
  2453  000F90  2442               	addwf	_v0^0,w,c
  2454  000F92  6EF6               	movwf	tblptrl,c
  2455  000F94  6AF7               	clrf	tblptrh,c
  2456  000F96  0E06               	movlw	high _valor
  2457  000F98  22F7               	addwfc	tblptrh,f,c
  2458  000F9A                     	if	0	;There are less than 3 active tblptr bytes
  2459  000F9A                     	endif
  2460  000F9A  0008               	tblrd		*
  2461  000F9C  CFF5 FF83          	movff	tablat,3971	;volatile
  2462  000FA0                     
  2463                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  2464  000FA0  0E00               	movlw	0
  2465  000FA2  6E21               	movwf	(digitalWrite@pin+1)^0,c
  2466  000FA4  0E02               	movlw	2
  2467  000FA6  6E20               	movwf	digitalWrite@pin^0,c
  2468  000FA8  0E00               	movlw	0
  2469  000FAA  6E23               	movwf	(digitalWrite@value+1)^0,c
  2470  000FAC  0E01               	movlw	1
  2471  000FAE  6E22               	movwf	digitalWrite@value^0,c
  2472  000FB0  ECB5  F005         	call	_digitalWrite	;wreg free
  2473  000FB4                     
  2474                           ;ssd.c: 74:             display = 1;
  2475  000FB4  0E01               	movlw	1
  2476  000FB6  6E43               	movwf	_display^0,c
  2477                           
  2478                           ;ssd.c: 75:             break;
  2479  000FB8  EF40  F008         	goto	l310
  2480  000FBC                     l2268:
  2481                           
  2482                           ;ssd.c: 78:             PORTD = valor[v1];
  2483  000FBC  0E01               	movlw	low _valor
  2484  000FBE  2441               	addwf	_v1^0,w,c
  2485  000FC0  6EF6               	movwf	tblptrl,c
  2486  000FC2  6AF7               	clrf	tblptrh,c
  2487  000FC4  0E06               	movlw	high _valor
  2488  000FC6  22F7               	addwfc	tblptrh,f,c
  2489  000FC8                     	if	0	;There are less than 3 active tblptr bytes
  2490  000FC8                     	endif
  2491  000FC8  0008               	tblrd		*
  2492  000FCA  CFF5 FF83          	movff	tablat,3971	;volatile
  2493  000FCE                     
  2494                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  2495  000FCE  0E00               	movlw	0
  2496  000FD0  6E21               	movwf	(digitalWrite@pin+1)^0,c
  2497  000FD2  0E03               	movlw	3
  2498  000FD4  6E20               	movwf	digitalWrite@pin^0,c
  2499  000FD6  0E00               	movlw	0
  2500  000FD8  6E23               	movwf	(digitalWrite@value+1)^0,c
  2501  000FDA  0E01               	movlw	1
  2502  000FDC  6E22               	movwf	digitalWrite@value^0,c
  2503  000FDE  ECB5  F005         	call	_digitalWrite	;wreg free
  2504  000FE2                     
  2505                           ;ssd.c: 80:             display = 2;
  2506  000FE2  0E02               	movlw	2
  2507  000FE4  6E43               	movwf	_display^0,c
  2508                           
  2509                           ;ssd.c: 81:             break;
  2510  000FE6  EF40  F008         	goto	l310
  2511  000FEA                     l2274:
  2512                           
  2513                           ;ssd.c: 84:             PORTD = valor[v2];
  2514  000FEA  0E01               	movlw	low _valor
  2515  000FEC  2440               	addwf	_v2^0,w,c
  2516  000FEE  6EF6               	movwf	tblptrl,c
  2517  000FF0  6AF7               	clrf	tblptrh,c
  2518  000FF2  0E06               	movlw	high _valor
  2519  000FF4  22F7               	addwfc	tblptrh,f,c
  2520  000FF6                     	if	0	;There are less than 3 active tblptr bytes
  2521  000FF6                     	endif
  2522  000FF6  0008               	tblrd		*
  2523  000FF8  CFF5 FF83          	movff	tablat,3971	;volatile
  2524  000FFC                     
  2525                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  2526  000FFC  0E00               	movlw	0
  2527  000FFE  6E21               	movwf	(digitalWrite@pin+1)^0,c
  2528  001000  0E04               	movlw	4
  2529  001002  6E20               	movwf	digitalWrite@pin^0,c
  2530  001004  0E00               	movlw	0
  2531  001006  6E23               	movwf	(digitalWrite@value+1)^0,c
  2532  001008  0E01               	movlw	1
  2533  00100A  6E22               	movwf	digitalWrite@value^0,c
  2534  00100C  ECB5  F005         	call	_digitalWrite	;wreg free
  2535  001010                     
  2536                           ;ssd.c: 86:             display = 3;
  2537  001010  0E03               	movlw	3
  2538  001012  6E43               	movwf	_display^0,c
  2539                           
  2540                           ;ssd.c: 87:             break;
  2541  001014  EF40  F008         	goto	l310
  2542  001018                     l2280:
  2543                           
  2544                           ;ssd.c: 90:             PORTD = valor[v3];
  2545  001018  0E01               	movlw	low _valor
  2546  00101A  243F               	addwf	_v3^0,w,c
  2547  00101C  6EF6               	movwf	tblptrl,c
  2548  00101E  6AF7               	clrf	tblptrh,c
  2549  001020  0E06               	movlw	high _valor
  2550  001022  22F7               	addwfc	tblptrh,f,c
  2551  001024                     	if	0	;There are less than 3 active tblptr bytes
  2552  001024                     	endif
  2553  001024  0008               	tblrd		*
  2554  001026  CFF5 FF83          	movff	tablat,3971	;volatile
  2555  00102A                     
  2556                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  2557  00102A  0E00               	movlw	0
  2558  00102C  6E21               	movwf	(digitalWrite@pin+1)^0,c
  2559  00102E  0E05               	movlw	5
  2560  001030  6E20               	movwf	digitalWrite@pin^0,c
  2561  001032  0E00               	movlw	0
  2562  001034  6E23               	movwf	(digitalWrite@value+1)^0,c
  2563  001036  0E01               	movlw	1
  2564  001038  6E22               	movwf	digitalWrite@value^0,c
  2565  00103A  ECB5  F005         	call	_digitalWrite	;wreg free
  2566  00103E                     l2284:
  2567                           
  2568                           ;ssd.c: 92:             display = 0;
  2569  00103E  0E00               	movlw	0
  2570  001040  6E43               	movwf	_display^0,c
  2571                           
  2572                           ;ssd.c: 93:             break;
  2573  001042  EF40  F008         	goto	l310
  2574  001046                     l2290:
  2575  001046  5043               	movf	_display^0,w,c
  2576  001048  6E26               	movwf	??_ssdUpdate^0,c
  2577  00104A  6A27               	clrf	(??_ssdUpdate+1)^0,c
  2578                           
  2579                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2580                           ; Switch size 1, requested type "simple"
  2581                           ; Number of cases is 1, Range of values is 0 to 0
  2582                           ; switch strategies available:
  2583                           ; Name         Instructions Cycles
  2584                           ; simple_byte            4     3 (average)
  2585                           ;	Chosen strategy is simple_byte
  2586  00104C  5027               	movf	(??_ssdUpdate+1)^0,w,c
  2587  00104E  0A00               	xorlw	0	; case 0
  2588  001050  B4D8               	btfsc	status,2,c
  2589  001052  EF2D  F008         	goto	l2776
  2590  001056  EF1F  F008         	goto	l2284
  2591  00105A                     l2776:
  2592                           
  2593                           ; Switch size 1, requested type "simple"
  2594                           ; Number of cases is 4, Range of values is 0 to 3
  2595                           ; switch strategies available:
  2596                           ; Name         Instructions Cycles
  2597                           ; simple_byte           13     7 (average)
  2598                           ;	Chosen strategy is simple_byte
  2599  00105A  5026               	movf	??_ssdUpdate^0,w,c
  2600  00105C  0A00               	xorlw	0	; case 0
  2601  00105E  B4D8               	btfsc	status,2,c
  2602  001060  EFC7  F007         	goto	l2262
  2603  001064  0A01               	xorlw	1	; case 1
  2604  001066  B4D8               	btfsc	status,2,c
  2605  001068  EFDE  F007         	goto	l2268
  2606  00106C  0A03               	xorlw	3	; case 2
  2607  00106E  B4D8               	btfsc	status,2,c
  2608  001070  EFF5  F007         	goto	l2274
  2609  001074  0A01               	xorlw	1	; case 3
  2610  001076  B4D8               	btfsc	status,2,c
  2611  001078  EF0C  F008         	goto	l2280
  2612  00107C  EF1F  F008         	goto	l2284
  2613  001080                     l310:
  2614  001080  0012               	return		;funcret
  2615  001082                     __end_of_ssdUpdate:
  2616                           	callstack 0
  2617                           
  2618 ;; *************** function _ssdDigit *****************
  2619 ;; Defined at:
  2620 ;;		line 38 in file "ssd.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;  val             1    wreg     unsigned char 
  2623 ;;  pos             1    0[COMRAM] unsigned char 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;  val             1    1[COMRAM] unsigned char 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		wreg, status,2, status,0
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2635 ;;      Params:         1       0       0       0       0       0       0
  2636 ;;      Locals:         1       0       0       0       0       0       0
  2637 ;;      Temps:          0       0       0       0       0       0       0
  2638 ;;      Totals:         2       0       0       0       0       0       0
  2639 ;;Total ram usage:        2 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; This function calls:
  2642 ;;		Nothing
  2643 ;; This function is called by:
  2644 ;;		_chooseSong
  2645 ;;		_playSong
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text10
  2650  001ACA                     __ptext10:
  2651                           	callstack 0
  2652  001ACA                     _ssdDigit:
  2653                           	callstack 29
  2654                           
  2655                           ;incstack = 0
  2656                           ;ssdDigit@val stored from wreg
  2657  001ACA  6E21               	movwf	ssdDigit@val^0,c
  2658  001ACC                     
  2659                           ;ssd.c: 39:     if (pos == 0) {
  2660  001ACC  5020               	movf	ssdDigit@pos^0,w,c
  2661  001ACE  A4D8               	btfss	status,2,c
  2662  001AD0  EF6C  F00D         	goto	u1901
  2663  001AD4  EF6E  F00D         	goto	u1900
  2664  001AD8                     u1901:
  2665  001AD8  EF70  F00D         	goto	l2300
  2666  001ADC                     u1900:
  2667  001ADC                     
  2668                           ;ssd.c: 40:         v0 = val;
  2669  001ADC  C021  F042         	movff	ssdDigit@val,_v0
  2670  001AE0                     l2300:
  2671                           
  2672                           ;ssd.c: 42:     if (pos == 1) {
  2673  001AE0  0420               	decf	ssdDigit@pos^0,w,c
  2674  001AE2  A4D8               	btfss	status,2,c
  2675  001AE4  EF76  F00D         	goto	u1911
  2676  001AE8  EF78  F00D         	goto	u1910
  2677  001AEC                     u1911:
  2678  001AEC  EF7A  F00D         	goto	l2304
  2679  001AF0                     u1910:
  2680  001AF0                     
  2681                           ;ssd.c: 43:         v1 = val;
  2682  001AF0  C021  F041         	movff	ssdDigit@val,_v1
  2683  001AF4                     l2304:
  2684                           
  2685                           ;ssd.c: 45:     if (pos == 2) {
  2686  001AF4  0E02               	movlw	2
  2687  001AF6  1820               	xorwf	ssdDigit@pos^0,w,c
  2688  001AF8  A4D8               	btfss	status,2,c
  2689  001AFA  EF81  F00D         	goto	u1921
  2690  001AFE  EF83  F00D         	goto	u1920
  2691  001B02                     u1921:
  2692  001B02  EF85  F00D         	goto	l2308
  2693  001B06                     u1920:
  2694  001B06                     
  2695                           ;ssd.c: 46:         v2 = val;
  2696  001B06  C021  F040         	movff	ssdDigit@val,_v2
  2697  001B0A                     l2308:
  2698                           
  2699                           ;ssd.c: 48:     if (pos == 3) {
  2700  001B0A  0E03               	movlw	3
  2701  001B0C  1820               	xorwf	ssdDigit@pos^0,w,c
  2702  001B0E  A4D8               	btfss	status,2,c
  2703  001B10  EF8C  F00D         	goto	u1931
  2704  001B14  EF8E  F00D         	goto	u1930
  2705  001B18                     u1931:
  2706  001B18  EF90  F00D         	goto	l300
  2707  001B1C                     u1930:
  2708  001B1C                     
  2709                           ;ssd.c: 49:         v3 = val;
  2710  001B1C  C021  F03F         	movff	ssdDigit@val,_v3
  2711  001B20                     l300:
  2712  001B20  0012               	return		;funcret
  2713  001B22                     __end_of_ssdDigit:
  2714                           	callstack 0
  2715                           
  2716 ;; *************** function _pwmSet *****************
  2717 ;; Defined at:
  2718 ;;		line 24 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;  porcento        1    wreg     unsigned char 
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;  porcento        1    9[COMRAM] unsigned char 
  2723 ;;  val             2   10[COMRAM] unsigned int 
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2733 ;;      Params:         0       0       0       0       0       0       0
  2734 ;;      Locals:         3       0       0       0       0       0       0
  2735 ;;      Temps:          2       0       0       0       0       0       0
  2736 ;;      Totals:         5       0       0       0       0       0       0
  2737 ;;Total ram usage:        5 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:    1
  2740 ;; This function calls:
  2741 ;;		___lwdiv
  2742 ;;		___wmul
  2743 ;; This function is called by:
  2744 ;;		_playSong
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text11
  2749  00193E                     __ptext11:
  2750                           	callstack 0
  2751  00193E                     _pwmSet:
  2752                           	callstack 27
  2753                           
  2754                           ;incstack = 0
  2755                           ;pwmSet@porcento stored from wreg
  2756  00193E  6E29               	movwf	pwmSet@porcento^0,c
  2757  001940                     
  2758                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 24: void pwmSet(unsigned char porc
      +                          ento);D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 25: {;D:/Documents/MPLABX Pro
      +                          jects/MP3-Player/MP3.X/pwm.c: 31:  unsigned int val = ((unsigned int)porcento) *(PR2+1);
  2759  001940  0E01               	movlw	1
  2760  001942  24CB               	addwf	203,w,c	;volatile
  2761  001944  6E20               	movwf	___wmul@multiplier^0,c
  2762  001946  6A21               	clrf	(___wmul@multiplier+1)^0,c
  2763  001948  0E00               	movlw	0
  2764  00194A  2221               	addwfc	(___wmul@multiplier+1)^0,f,c
  2765  00194C  C029  F022         	movff	pwmSet@porcento,___wmul@multiplicand
  2766  001950  6A23               	clrf	(___wmul@multiplicand+1)^0,c
  2767  001952  EC05  F00E         	call	___wmul	;wreg free
  2768  001956  C020  F02A         	movff	?___wmul,pwmSet@val
  2769  00195A  C021  F02B         	movff	?___wmul+1,pwmSet@val+1
  2770  00195E                     
  2771                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 33:     val = val / 25;
  2772  00195E  C02A  F020         	movff	pwmSet@val,___lwdiv@dividend
  2773  001962  C02B  F021         	movff	pwmSet@val+1,___lwdiv@dividend+1
  2774  001966  0E00               	movlw	0
  2775  001968  6E23               	movwf	(___lwdiv@divisor+1)^0,c
  2776  00196A  0E19               	movlw	25
  2777  00196C  6E22               	movwf	___lwdiv@divisor^0,c
  2778  00196E  EC65  F00C         	call	___lwdiv	;wreg free
  2779  001972  C020  F02A         	movff	?___lwdiv,pwmSet@val
  2780  001976  C021  F02B         	movff	?___lwdiv+1,pwmSet@val+1
  2781  00197A                     
  2782                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 35:  val &= 0x03ff;
  2783  00197A  0EFF               	movlw	255
  2784  00197C  162A               	andwf	pwmSet@val^0,f,c
  2785  00197E  0E03               	movlw	3
  2786  001980  162B               	andwf	(pwmSet@val+1)^0,f,c
  2787  001982                     
  2788                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 37:  CCPR1L = val >> 2;
  2789  001982  C02A  F027         	movff	pwmSet@val,??_pwmSet
  2790  001986  C02B  F028         	movff	pwmSet@val+1,??_pwmSet+1
  2791  00198A  90D8               	bcf	status,0,c
  2792  00198C  3228               	rrcf	(??_pwmSet+1)^0,f,c
  2793  00198E  3227               	rrcf	??_pwmSet^0,f,c
  2794  001990  90D8               	bcf	status,0,c
  2795  001992  3228               	rrcf	(??_pwmSet+1)^0,f,c
  2796  001994  3227               	rrcf	??_pwmSet^0,f,c
  2797  001996  5027               	movf	??_pwmSet^0,w,c
  2798  001998  6EBE               	movwf	190,c	;volatile
  2799  00199A                     
  2800                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 39:  CCP1CON |= (val & 0x0003) << 
      +                          4;
  2801  00199A  C02A  F027         	movff	pwmSet@val,??_pwmSet	;volatile
  2802  00199E  0E03               	movlw	3
  2803  0019A0  1627               	andwf	??_pwmSet^0,f,c
  2804  0019A2  3827               	swapf	??_pwmSet^0,w,c
  2805  0019A4  0BF0               	andlw	240
  2806  0019A6  12BD               	iorwf	189,f,c	;volatile
  2807  0019A8  0012               	return		;funcret
  2808  0019AA                     __end_of_pwmSet:
  2809                           	callstack 0
  2810                           
  2811 ;; *************** function ___wmul *****************
  2812 ;; Defined at:
  2813 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  multiplier      2    0[COMRAM] unsigned int 
  2816 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;  product         2    4[COMRAM] unsigned int 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  2    0[COMRAM] unsigned int 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0, prodl, prodh
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2828 ;;      Params:         4       0       0       0       0       0       0
  2829 ;;      Locals:         2       0       0       0       0       0       0
  2830 ;;      Temps:          0       0       0       0       0       0       0
  2831 ;;      Totals:         6       0       0       0       0       0       0
  2832 ;;Total ram usage:        6 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_songsInit
  2838 ;;		_pwmSet
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text12
  2843  001C0A                     __ptext12:
  2844                           	callstack 0
  2845  001C0A                     ___wmul:
  2846                           	callstack 29
  2847  001C0A  5020               	movf	___wmul@multiplier^0,w,c
  2848  001C0C  0222               	mulwf	___wmul@multiplicand^0,c
  2849  001C0E  CFF3 F024          	movff	prodl,___wmul@product
  2850  001C12  CFF4 F025          	movff	prodh,___wmul@product+1
  2851  001C16  5020               	movf	___wmul@multiplier^0,w,c
  2852  001C18  0223               	mulwf	(___wmul@multiplicand+1)^0,c
  2853  001C1A  50F3               	movf	243,w,c
  2854  001C1C  2625               	addwf	(___wmul@product+1)^0,f,c
  2855  001C1E  5021               	movf	(___wmul@multiplier+1)^0,w,c
  2856  001C20  0222               	mulwf	___wmul@multiplicand^0,c
  2857  001C22  50F3               	movf	243,w,c
  2858  001C24  2625               	addwf	(___wmul@product+1)^0,f,c
  2859  001C26  C024  F020         	movff	___wmul@product,?___wmul
  2860  001C2A  C025  F021         	movff	___wmul@product+1,?___wmul+1
  2861  001C2E  0012               	return		;funcret
  2862  001C30                     __end_of___wmul:
  2863                           	callstack 0
  2864                           
  2865 ;; *************** function ___lwdiv *****************
  2866 ;; Defined at:
  2867 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\lwdiv.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  dividend        2    0[COMRAM] unsigned int 
  2870 ;;  divisor         2    2[COMRAM] unsigned int 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  quotient        2    4[COMRAM] unsigned int 
  2873 ;;  counter         1    6[COMRAM] unsigned char 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  2    0[COMRAM] unsigned int 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2883 ;;      Params:         4       0       0       0       0       0       0
  2884 ;;      Locals:         3       0       0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0
  2886 ;;      Totals:         7       0       0       0       0       0       0
  2887 ;;Total ram usage:        7 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_pwmSet
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text13
  2897  0018CA                     __ptext13:
  2898                           	callstack 0
  2899  0018CA                     ___lwdiv:
  2900                           	callstack 27
  2901  0018CA  0E00               	movlw	0
  2902  0018CC  6E25               	movwf	(___lwdiv@quotient+1)^0,c
  2903  0018CE  0E00               	movlw	0
  2904  0018D0  6E24               	movwf	___lwdiv@quotient^0,c
  2905  0018D2  5022               	movf	___lwdiv@divisor^0,w,c
  2906  0018D4  1023               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2907  0018D6  B4D8               	btfsc	status,2,c
  2908  0018D8  EF70  F00C         	goto	u1691
  2909  0018DC  EF72  F00C         	goto	u1690
  2910  0018E0                     u1691:
  2911  0018E0  EF9A  F00C         	goto	l914
  2912  0018E4                     u1690:
  2913  0018E4  0E01               	movlw	1
  2914  0018E6  6E26               	movwf	___lwdiv@counter^0,c
  2915  0018E8  EF7A  F00C         	goto	l2156
  2916  0018EC                     l2154:
  2917  0018EC  90D8               	bcf	status,0,c
  2918  0018EE  3622               	rlcf	___lwdiv@divisor^0,f,c
  2919  0018F0  3623               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2920  0018F2  2A26               	incf	___lwdiv@counter^0,f,c
  2921  0018F4                     l2156:
  2922  0018F4  AE23               	btfss	(___lwdiv@divisor+1)^0,7,c
  2923  0018F6  EF7F  F00C         	goto	u1701
  2924  0018FA  EF81  F00C         	goto	u1700
  2925  0018FE                     u1701:
  2926  0018FE  EF76  F00C         	goto	l2154
  2927  001902                     u1700:
  2928  001902                     l2158:
  2929  001902  90D8               	bcf	status,0,c
  2930  001904  3624               	rlcf	___lwdiv@quotient^0,f,c
  2931  001906  3625               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2932  001908  5022               	movf	___lwdiv@divisor^0,w,c
  2933  00190A  5C20               	subwf	___lwdiv@dividend^0,w,c
  2934  00190C  5023               	movf	(___lwdiv@divisor+1)^0,w,c
  2935  00190E  5821               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2936  001910  A0D8               	btfss	status,0,c
  2937  001912  EF8D  F00C         	goto	u1711
  2938  001916  EF8F  F00C         	goto	u1710
  2939  00191A                     u1711:
  2940  00191A  EF94  F00C         	goto	l2166
  2941  00191E                     u1710:
  2942  00191E  5022               	movf	___lwdiv@divisor^0,w,c
  2943  001920  5E20               	subwf	___lwdiv@dividend^0,f,c
  2944  001922  5023               	movf	(___lwdiv@divisor+1)^0,w,c
  2945  001924  5A21               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2946  001926  8024               	bsf	___lwdiv@quotient^0,0,c
  2947  001928                     l2166:
  2948  001928  90D8               	bcf	status,0,c
  2949  00192A  3223               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2950  00192C  3222               	rrcf	___lwdiv@divisor^0,f,c
  2951  00192E  2E26               	decfsz	___lwdiv@counter^0,f,c
  2952  001930  EF81  F00C         	goto	l2158
  2953  001934                     l914:
  2954  001934  C024  F020         	movff	___lwdiv@quotient,?___lwdiv
  2955  001938  C025  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2956  00193C  0012               	return		;funcret
  2957  00193E                     __end_of___lwdiv:
  2958                           	callstack 0
  2959                           
  2960 ;; *************** function _pwmInit *****************
  2961 ;; Defined at:
  2962 ;;		line 51 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;		None
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;		None
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  1    wreg      void 
  2969 ;; Registers used:
  2970 ;;		wreg, status,2, status,0, cstack
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2976 ;;      Params:         0       0       0       0       0       0       0
  2977 ;;      Locals:         0       0       0       0       0       0       0
  2978 ;;      Temps:          0       0       0       0       0       0       0
  2979 ;;      Totals:         0       0       0       0       0       0       0
  2980 ;;Total ram usage:        0 bytes
  2981 ;; Hardware stack levels used:    1
  2982 ;; Hardware stack levels required when called:    2
  2983 ;; This function calls:
  2984 ;;		_pwmFrequency
  2985 ;; This function is called by:
  2986 ;;		_playSong
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           	psect	text14
  2991  001C92                     __ptext14:
  2992                           	callstack 0
  2993  001C92                     _pwmInit:
  2994                           	callstack 26
  2995  001C92                     
  2996                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 53:  ((TRISC) &= ~(1<<(2)));
  2997  001C92  9494               	bcf	148,2,c	;volatile
  2998  001C94                     
  2999                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 55:  T2CON |= 0b00000011;
  3000  001C94  0E03               	movlw	3
  3001  001C96  12CA               	iorwf	202,f,c	;volatile
  3002  001C98                     
  3003                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 56:  ((T2CON) |= (1<<(2)));
  3004  001C98  84CA               	bsf	202,2,c	;volatile
  3005  001C9A                     
  3006                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 58:  CCP1CON = 0b00001100;
  3007  001C9A  0E0C               	movlw	12
  3008  001C9C  6EBD               	movwf	189,c	;volatile
  3009  001C9E                     
  3010                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 60:     pwmFrequency(100);
  3011  001C9E  0E00               	movlw	0
  3012  001CA0  6E2F               	movwf	(pwmFrequency@freq+1)^0,c
  3013  001CA2  0E64               	movlw	100
  3014  001CA4  6E2E               	movwf	pwmFrequency@freq^0,c
  3015  001CA6  EC18  F00E         	call	_pwmFrequency	;wreg free
  3016  001CAA  0012               	return		;funcret
  3017  001CAC                     __end_of_pwmInit:
  3018                           	callstack 0
  3019                           
  3020 ;; *************** function _pwmFrequency *****************
  3021 ;; Defined at:
  3022 ;;		line 44 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  freq            2   14[COMRAM] unsigned int 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;		None
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  1    wreg      void 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3036 ;;      Params:         2       0       0       0       0       0       0
  3037 ;;      Locals:         0       0       0       0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0       0       0
  3039 ;;      Totals:         2       0       0       0       0       0       0
  3040 ;;Total ram usage:        2 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    1
  3043 ;; This function calls:
  3044 ;;		___aldiv
  3045 ;; This function is called by:
  3046 ;;		_pwmInit
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text15
  3051  001C30                     __ptext15:
  3052                           	callstack 0
  3053  001C30                     _pwmFrequency:
  3054                           	callstack 26
  3055  001C30                     
  3056                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 44: void pwmFrequency(unsigned int
      +                           freq);D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 45: {;D:/Documents/MPLABX Pr
      +                          ojects/MP3-Player/MP3.X/pwm.c: 48:  PR2 = (125000l/(freq)) - 1;
  3057  001C30  0E48               	movlw	72
  3058  001C32  6E20               	movwf	___aldiv@dividend^0,c
  3059  001C34  0EE8               	movlw	232
  3060  001C36  6E21               	movwf	(___aldiv@dividend+1)^0,c
  3061  001C38  0E01               	movlw	1
  3062  001C3A  6E22               	movwf	(___aldiv@dividend+2)^0,c
  3063  001C3C  0E00               	movlw	0
  3064  001C3E  6E23               	movwf	(___aldiv@dividend+3)^0,c
  3065  001C40  C02E  F024         	movff	pwmFrequency@freq,___aldiv@divisor
  3066  001C44  C02F  F025         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  3067  001C48  6A26               	clrf	(___aldiv@divisor+2)^0,c
  3068  001C4A  6A27               	clrf	(___aldiv@divisor+3)^0,c
  3069  001C4C  EC80  F009         	call	___aldiv	;wreg free
  3070  001C50  0420               	decf	?___aldiv^0,w,c
  3071  001C52  6ECB               	movwf	203,c	;volatile
  3072  001C54  0012               	return		;funcret
  3073  001C56                     __end_of_pwmFrequency:
  3074                           	callstack 0
  3075                           
  3076 ;; *************** function ___aldiv *****************
  3077 ;; Defined at:
  3078 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\aldiv.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  dividend        4    0[COMRAM] long 
  3081 ;;  divisor         4    4[COMRAM] long 
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;  quotient        4   10[COMRAM] long 
  3084 ;;  sign            1    9[COMRAM] unsigned char 
  3085 ;;  counter         1    8[COMRAM] unsigned char 
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  4    0[COMRAM] long 
  3088 ;; Registers used:
  3089 ;;		wreg, status,2, status,0
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3095 ;;      Params:         8       0       0       0       0       0       0
  3096 ;;      Locals:         6       0       0       0       0       0       0
  3097 ;;      Temps:          0       0       0       0       0       0       0
  3098 ;;      Totals:        14       0       0       0       0       0       0
  3099 ;;Total ram usage:       14 bytes
  3100 ;; Hardware stack levels used:    1
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_pwmFrequency
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text16
  3109  001300                     __ptext16:
  3110                           	callstack 0
  3111  001300                     ___aldiv:
  3112                           	callstack 26
  3113  001300  0E00               	movlw	0
  3114  001302  6E29               	movwf	___aldiv@sign^0,c
  3115  001304  BE27               	btfsc	(___aldiv@divisor+3)^0,7,c
  3116  001306  EF89  F009         	goto	u1580
  3117  00130A  EF87  F009         	goto	u1581
  3118  00130E                     u1581:
  3119  00130E  EF93  F009         	goto	l2040
  3120  001312                     u1580:
  3121  001312  1E27               	comf	(___aldiv@divisor+3)^0,f,c
  3122  001314  1E26               	comf	(___aldiv@divisor+2)^0,f,c
  3123  001316  1E25               	comf	(___aldiv@divisor+1)^0,f,c
  3124  001318  6C24               	negf	___aldiv@divisor^0,c
  3125  00131A  0E00               	movlw	0
  3126  00131C  2225               	addwfc	(___aldiv@divisor+1)^0,f,c
  3127  00131E  2226               	addwfc	(___aldiv@divisor+2)^0,f,c
  3128  001320  2227               	addwfc	(___aldiv@divisor+3)^0,f,c
  3129  001322  0E01               	movlw	1
  3130  001324  6E29               	movwf	___aldiv@sign^0,c
  3131  001326                     l2040:
  3132  001326  BE23               	btfsc	(___aldiv@dividend+3)^0,7,c
  3133  001328  EF9A  F009         	goto	u1590
  3134  00132C  EF98  F009         	goto	u1591
  3135  001330                     u1591:
  3136  001330  EFA4  F009         	goto	l2046
  3137  001334                     u1590:
  3138  001334  1E23               	comf	(___aldiv@dividend+3)^0,f,c
  3139  001336  1E22               	comf	(___aldiv@dividend+2)^0,f,c
  3140  001338  1E21               	comf	(___aldiv@dividend+1)^0,f,c
  3141  00133A  6C20               	negf	___aldiv@dividend^0,c
  3142  00133C  0E00               	movlw	0
  3143  00133E  2221               	addwfc	(___aldiv@dividend+1)^0,f,c
  3144  001340  2222               	addwfc	(___aldiv@dividend+2)^0,f,c
  3145  001342  2223               	addwfc	(___aldiv@dividend+3)^0,f,c
  3146  001344  0E01               	movlw	1
  3147  001346  1A29               	xorwf	___aldiv@sign^0,f,c
  3148  001348                     l2046:
  3149  001348  0E00               	movlw	0
  3150  00134A  6E2A               	movwf	___aldiv@quotient^0,c
  3151  00134C  0E00               	movlw	0
  3152  00134E  6E2B               	movwf	(___aldiv@quotient+1)^0,c
  3153  001350  0E00               	movlw	0
  3154  001352  6E2C               	movwf	(___aldiv@quotient+2)^0,c
  3155  001354  0E00               	movlw	0
  3156  001356  6E2D               	movwf	(___aldiv@quotient+3)^0,c
  3157  001358  5024               	movf	___aldiv@divisor^0,w,c
  3158  00135A  1025               	iorwf	(___aldiv@divisor+1)^0,w,c
  3159  00135C  1026               	iorwf	(___aldiv@divisor+2)^0,w,c
  3160  00135E  1027               	iorwf	(___aldiv@divisor+3)^0,w,c
  3161  001360  B4D8               	btfsc	status,2,c
  3162  001362  EFB5  F009         	goto	u1601
  3163  001366  EFB7  F009         	goto	u1600
  3164  00136A                     u1601:
  3165  00136A  EFED  F009         	goto	l2068
  3166  00136E                     u1600:
  3167  00136E  0E01               	movlw	1
  3168  001370  6E28               	movwf	___aldiv@counter^0,c
  3169  001372  EFC1  F009         	goto	l2054
  3170  001376                     l2052:
  3171  001376  90D8               	bcf	status,0,c
  3172  001378  3624               	rlcf	___aldiv@divisor^0,f,c
  3173  00137A  3625               	rlcf	(___aldiv@divisor+1)^0,f,c
  3174  00137C  3626               	rlcf	(___aldiv@divisor+2)^0,f,c
  3175  00137E  3627               	rlcf	(___aldiv@divisor+3)^0,f,c
  3176  001380  2A28               	incf	___aldiv@counter^0,f,c
  3177  001382                     l2054:
  3178  001382  AE27               	btfss	(___aldiv@divisor+3)^0,7,c
  3179  001384  EFC6  F009         	goto	u1611
  3180  001388  EFC8  F009         	goto	u1610
  3181  00138C                     u1611:
  3182  00138C  EFBB  F009         	goto	l2052
  3183  001390                     u1610:
  3184  001390                     l2056:
  3185  001390  90D8               	bcf	status,0,c
  3186  001392  362A               	rlcf	___aldiv@quotient^0,f,c
  3187  001394  362B               	rlcf	(___aldiv@quotient+1)^0,f,c
  3188  001396  362C               	rlcf	(___aldiv@quotient+2)^0,f,c
  3189  001398  362D               	rlcf	(___aldiv@quotient+3)^0,f,c
  3190  00139A  5024               	movf	___aldiv@divisor^0,w,c
  3191  00139C  5C20               	subwf	___aldiv@dividend^0,w,c
  3192  00139E  5025               	movf	(___aldiv@divisor+1)^0,w,c
  3193  0013A0  5821               	subwfb	(___aldiv@dividend+1)^0,w,c
  3194  0013A2  5026               	movf	(___aldiv@divisor+2)^0,w,c
  3195  0013A4  5822               	subwfb	(___aldiv@dividend+2)^0,w,c
  3196  0013A6  5027               	movf	(___aldiv@divisor+3)^0,w,c
  3197  0013A8  5823               	subwfb	(___aldiv@dividend+3)^0,w,c
  3198  0013AA  A0D8               	btfss	status,0,c
  3199  0013AC  EFDA  F009         	goto	u1621
  3200  0013B0  EFDC  F009         	goto	u1620
  3201  0013B4                     u1621:
  3202  0013B4  EFE5  F009         	goto	l2064
  3203  0013B8                     u1620:
  3204  0013B8  5024               	movf	___aldiv@divisor^0,w,c
  3205  0013BA  5E20               	subwf	___aldiv@dividend^0,f,c
  3206  0013BC  5025               	movf	(___aldiv@divisor+1)^0,w,c
  3207  0013BE  5A21               	subwfb	(___aldiv@dividend+1)^0,f,c
  3208  0013C0  5026               	movf	(___aldiv@divisor+2)^0,w,c
  3209  0013C2  5A22               	subwfb	(___aldiv@dividend+2)^0,f,c
  3210  0013C4  5027               	movf	(___aldiv@divisor+3)^0,w,c
  3211  0013C6  5A23               	subwfb	(___aldiv@dividend+3)^0,f,c
  3212  0013C8  802A               	bsf	___aldiv@quotient^0,0,c
  3213  0013CA                     l2064:
  3214  0013CA  90D8               	bcf	status,0,c
  3215  0013CC  3227               	rrcf	(___aldiv@divisor+3)^0,f,c
  3216  0013CE  3226               	rrcf	(___aldiv@divisor+2)^0,f,c
  3217  0013D0  3225               	rrcf	(___aldiv@divisor+1)^0,f,c
  3218  0013D2  3224               	rrcf	___aldiv@divisor^0,f,c
  3219  0013D4  2E28               	decfsz	___aldiv@counter^0,f,c
  3220  0013D6  EFC8  F009         	goto	l2056
  3221  0013DA                     l2068:
  3222  0013DA  5029               	movf	___aldiv@sign^0,w,c
  3223  0013DC  B4D8               	btfsc	status,2,c
  3224  0013DE  EFF3  F009         	goto	u1631
  3225  0013E2  EFF5  F009         	goto	u1630
  3226  0013E6                     u1631:
  3227  0013E6  EFFD  F009         	goto	l2072
  3228  0013EA                     u1630:
  3229  0013EA  1E2D               	comf	(___aldiv@quotient+3)^0,f,c
  3230  0013EC  1E2C               	comf	(___aldiv@quotient+2)^0,f,c
  3231  0013EE  1E2B               	comf	(___aldiv@quotient+1)^0,f,c
  3232  0013F0  6C2A               	negf	___aldiv@quotient^0,c
  3233  0013F2  0E00               	movlw	0
  3234  0013F4  222B               	addwfc	(___aldiv@quotient+1)^0,f,c
  3235  0013F6  222C               	addwfc	(___aldiv@quotient+2)^0,f,c
  3236  0013F8  222D               	addwfc	(___aldiv@quotient+3)^0,f,c
  3237  0013FA                     l2072:
  3238  0013FA  C02A  F020         	movff	___aldiv@quotient,?___aldiv
  3239  0013FE  C02B  F021         	movff	___aldiv@quotient+1,?___aldiv+1
  3240  001402  C02C  F022         	movff	___aldiv@quotient+2,?___aldiv+2
  3241  001406  C02D  F023         	movff	___aldiv@quotient+3,?___aldiv+3
  3242  00140A  0012               	return		;funcret
  3243  00140C                     __end_of___aldiv:
  3244                           	callstack 0
  3245                           
  3246 ;; *************** function _lcdStr *****************
  3247 ;; Defined at:
  3248 ;;		line 128 in file "lcd.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;  str             2    8[COMRAM] PTR const unsigned char 
  3251 ;;		 -> STR_6(17), STR_5(17), STR_4(7), STR_3(4), 
  3252 ;;		 -> STR_2(16), STR_1(17), musicas.nome(17), musicas(190), 
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;  i               1   12[COMRAM] unsigned char 
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      void 
  3257 ;; Registers used:
  3258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3264 ;;      Params:         2       0       0       0       0       0       0
  3265 ;;      Locals:         1       0       0       0       0       0       0
  3266 ;;      Temps:          2       0       0       0       0       0       0
  3267 ;;      Totals:         5       0       0       0       0       0       0
  3268 ;;Total ram usage:        5 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; Hardware stack levels required when called:    2
  3271 ;; This function calls:
  3272 ;;		_lcdData
  3273 ;; This function is called by:
  3274 ;;		_chooseSong
  3275 ;;		_playSong
  3276 ;;		_main
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           	psect	text17
  3281  001852                     __ptext17:
  3282                           	callstack 0
  3283  001852                     _lcdStr:
  3284                           	callstack 28
  3285  001852                     
  3286                           ;lcd.c: 129:     unsigned char i = 0;
  3287  001852  0E00               	movlw	0
  3288  001854  6E2C               	movwf	lcdStr@i^0,c
  3289                           
  3290                           ;lcd.c: 131:     while (str[i] != 0) {
  3291  001856  EF46  F00C         	goto	l2194
  3292  00185A                     l2190:
  3293                           
  3294                           ;lcd.c: 132:         lcdData(str[i]);
  3295  00185A  502C               	movf	lcdStr@i^0,w,c
  3296  00185C  2428               	addwf	lcdStr@str^0,w,c
  3297  00185E  6E2A               	movwf	??_lcdStr^0,c
  3298  001860  0E00               	movlw	0
  3299  001862  2029               	addwfc	(lcdStr@str+1)^0,w,c
  3300  001864  6E2B               	movwf	(??_lcdStr+1)^0,c
  3301  001866  C02A  FFF6         	movff	??_lcdStr,tblptrl
  3302  00186A  C02B  FFF7         	movff	??_lcdStr+1,tblptrh
  3303  00186E  6AF8               	clrf	tblptru,c
  3304  001870  0E05               	movlw	(high __ramtop+-1)
  3305  001872  64F7               	cpfsgt	tblptrh,c
  3306  001874  D003               	bra	u1767
  3307  001876  0008               	tblrd		*
  3308  001878  50F5               	movf	tablat,w,c
  3309  00187A  D005               	bra	u1760
  3310  00187C                     u1767:
  3311  00187C  CFF6 FFE9          	movff	tblptrl,fsr0l
  3312  001880  CFF7 FFEA          	movff	tblptrh,fsr0h
  3313  001884  50EF               	movf	indf0,w,c
  3314  001886                     u1760:
  3315  001886  ECBC  F00D         	call	_lcdData
  3316  00188A                     
  3317                           ;lcd.c: 133:         i++;
  3318  00188A  2A2C               	incf	lcdStr@i^0,f,c
  3319  00188C                     l2194:
  3320                           
  3321                           ;lcd.c: 131:     while (str[i] != 0) {
  3322  00188C  502C               	movf	lcdStr@i^0,w,c
  3323  00188E  2428               	addwf	lcdStr@str^0,w,c
  3324  001890  6E2A               	movwf	??_lcdStr^0,c
  3325  001892  0E00               	movlw	0
  3326  001894  2029               	addwfc	(lcdStr@str+1)^0,w,c
  3327  001896  6E2B               	movwf	(??_lcdStr+1)^0,c
  3328  001898  C02A  FFF6         	movff	??_lcdStr,tblptrl
  3329  00189C  C02B  FFF7         	movff	??_lcdStr+1,tblptrh
  3330  0018A0  6AF8               	clrf	tblptru,c
  3331  0018A2  0E05               	movlw	(high __ramtop+-1)
  3332  0018A4  64F7               	cpfsgt	tblptrh,c
  3333  0018A6  D003               	bra	u1777
  3334  0018A8  0008               	tblrd		*
  3335  0018AA  50F5               	movf	tablat,w,c
  3336  0018AC  D005               	bra	u1770
  3337  0018AE                     u1777:
  3338  0018AE  CFF6 FFE9          	movff	tblptrl,fsr0l
  3339  0018B2  CFF7 FFEA          	movff	tblptrh,fsr0h
  3340  0018B6  50EF               	movf	indf0,w,c
  3341  0018B8                     u1770:
  3342  0018B8  0900               	iorlw	0
  3343  0018BA  A4D8               	btfss	status,2,c
  3344  0018BC  EF62  F00C         	goto	u1781
  3345  0018C0  EF64  F00C         	goto	u1780
  3346  0018C4                     u1781:
  3347  0018C4  EF2D  F00C         	goto	l2190
  3348  0018C8                     u1780:
  3349  0018C8  0012               	return		;funcret
  3350  0018CA                     __end_of_lcdStr:
  3351                           	callstack 0
  3352                           
  3353 ;; *************** function _lcdData *****************
  3354 ;; Defined at:
  3355 ;;		line 68 in file "lcd.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  valor           1    wreg     unsigned char 
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;  valor           1    6[COMRAM] unsigned char 
  3360 ;;  old_D           1    7[COMRAM] unsigned char 
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1    wreg      void 
  3363 ;; Registers used:
  3364 ;;		wreg, status,2, status,0, cstack
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3370 ;;      Params:         0       0       0       0       0       0       0
  3371 ;;      Locals:         2       0       0       0       0       0       0
  3372 ;;      Temps:          0       0       0       0       0       0       0
  3373 ;;      Totals:         2       0       0       0       0       0       0
  3374 ;;Total ram usage:        2 bytes
  3375 ;; Hardware stack levels used:    1
  3376 ;; Hardware stack levels required when called:    1
  3377 ;; This function calls:
  3378 ;;		_Delay40us
  3379 ;;		_digitalWrite
  3380 ;; This function is called by:
  3381 ;;		_lcdStr
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           	psect	text18
  3386  001B78                     __ptext18:
  3387                           	callstack 0
  3388  001B78                     _lcdData:
  3389                           	callstack 28
  3390                           
  3391                           ;incstack = 0
  3392                           ;lcdData@valor stored from wreg
  3393  001B78  6E26               	movwf	lcdData@valor^0,c
  3394  001B7A                     
  3395                           ;lcd.c: 70:     unsigned char old_D;;lcd.c: 71:     old_D = PORTD;
  3396  001B7A  CF83 F027          	movff	3971,lcdData@old_D	;volatile
  3397  001B7E                     
  3398                           ;lcd.c: 73:     TRISD = 0x00;
  3399  001B7E  0E00               	movlw	0
  3400  001B80  6E95               	movwf	149,c	;volatile
  3401  001B82                     
  3402                           ;lcd.c: 74:     digitalWrite(PIN_E2, 1);
  3403  001B82  0E00               	movlw	0
  3404  001B84  6E21               	movwf	(digitalWrite@pin+1)^0,c
  3405  001B86  0E22               	movlw	34
  3406  001B88  6E20               	movwf	digitalWrite@pin^0,c
  3407  001B8A  0E00               	movlw	0
  3408  001B8C  6E23               	movwf	(digitalWrite@value+1)^0,c
  3409  001B8E  0E01               	movlw	1
  3410  001B90  6E22               	movwf	digitalWrite@value^0,c
  3411  001B92  ECB5  F005         	call	_digitalWrite	;wreg free
  3412  001B96                     
  3413                           ;lcd.c: 76:     PORTD = valor;
  3414  001B96  C026  FF83         	movff	lcdData@valor,3971	;volatile
  3415  001B9A                     
  3416                           ;lcd.c: 78:     digitalWrite(PIN_E1, 1);
  3417  001B9A  0E00               	movlw	0
  3418  001B9C  6E21               	movwf	(digitalWrite@pin+1)^0,c
  3419  001B9E  0E21               	movlw	33
  3420  001BA0  6E20               	movwf	digitalWrite@pin^0,c
  3421  001BA2  0E00               	movlw	0
  3422  001BA4  6E23               	movwf	(digitalWrite@value+1)^0,c
  3423  001BA6  0E01               	movlw	1
  3424  001BA8  6E22               	movwf	digitalWrite@value^0,c
  3425  001BAA  ECB5  F005         	call	_digitalWrite	;wreg free
  3426  001BAE                     
  3427                           ;lcd.c: 79:     digitalWrite(PIN_E1, 0);
  3428  001BAE  0E00               	movlw	0
  3429  001BB0  6E21               	movwf	(digitalWrite@pin+1)^0,c
  3430  001BB2  0E21               	movlw	33
  3431  001BB4  6E20               	movwf	digitalWrite@pin^0,c
  3432  001BB6  0E00               	movlw	0
  3433  001BB8  6E23               	movwf	(digitalWrite@value+1)^0,c
  3434  001BBA  0E00               	movlw	0
  3435  001BBC  6E22               	movwf	digitalWrite@value^0,c
  3436  001BBE  ECB5  F005         	call	_digitalWrite	;wreg free
  3437  001BC2                     
  3438                           ;lcd.c: 81:     PORTD = old_D;
  3439  001BC2  C027  FF83         	movff	lcdData@old_D,3971	;volatile
  3440  001BC6                     
  3441                           ;lcd.c: 83:     Delay40us();
  3442  001BC6  EC56  F00E         	call	_Delay40us	;wreg free
  3443  001BCA  0012               	return		;funcret
  3444  001BCC                     __end_of_lcdData:
  3445                           	callstack 0
  3446                           
  3447 ;; *************** function _lcdPosition *****************
  3448 ;; Defined at:
  3449 ;;		line 115 in file "lcd.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  linha           1    wreg     unsigned char 
  3452 ;;  coluna          1    8[COMRAM] unsigned char 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;  linha           1    9[COMRAM] unsigned char 
  3455 ;;  comando         1   10[COMRAM] unsigned char 
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  1    wreg      void 
  3458 ;; Registers used:
  3459 ;;		wreg, status,2, status,0, cstack
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3465 ;;      Params:         1       0       0       0       0       0       0
  3466 ;;      Locals:         2       0       0       0       0       0       0
  3467 ;;      Temps:          0       0       0       0       0       0       0
  3468 ;;      Totals:         3       0       0       0       0       0       0
  3469 ;;Total ram usage:        3 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:    3
  3472 ;; This function calls:
  3473 ;;		_lcdCommand
  3474 ;; This function is called by:
  3475 ;;		_chooseSong
  3476 ;;		_playSong
  3477 ;;		_main
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text19
  3482  001A70                     __ptext19:
  3483                           	callstack 0
  3484  001A70                     _lcdPosition:
  3485                           	callstack 27
  3486                           
  3487                           ;incstack = 0
  3488                           ;lcdPosition@linha stored from wreg
  3489  001A70  6E29               	movwf	lcdPosition@linha^0,c
  3490  001A72                     
  3491                           ;lcd.c: 116:     char comando = 0;
  3492  001A72  0E00               	movlw	0
  3493  001A74  6E2A               	movwf	lcdPosition@comando^0,c
  3494  001A76                     
  3495                           ;lcd.c: 117:     if (linha == 0 && comando != 0x01) comando = 0x80 + coluna;
  3496  001A76  5029               	movf	lcdPosition@linha^0,w,c
  3497  001A78  A4D8               	btfss	status,2,c
  3498  001A7A  EF41  F00D         	goto	u1721
  3499  001A7E  EF43  F00D         	goto	u1720
  3500  001A82                     u1721:
  3501  001A82  EF46  F00D         	goto	l120
  3502  001A86                     u1720:
  3503  001A86  5028               	movf	lcdPosition@coluna^0,w,c
  3504  001A88  0F80               	addlw	128
  3505  001A8A  6E2A               	movwf	lcdPosition@comando^0,c
  3506  001A8C                     l120:
  3507                           
  3508                           ;lcd.c: 118:     if (linha == 1 && comando != 0x01) comando = 0xC0 + coluna;
  3509  001A8C  0429               	decf	lcdPosition@linha^0,w,c
  3510  001A8E  A4D8               	btfss	status,2,c
  3511  001A90  EF4C  F00D         	goto	u1731
  3512  001A94  EF4E  F00D         	goto	u1730
  3513  001A98                     u1731:
  3514  001A98  EF59  F00D         	goto	l121
  3515  001A9C                     u1730:
  3516  001A9C  042A               	decf	lcdPosition@comando^0,w,c
  3517  001A9E  B4D8               	btfsc	status,2,c
  3518  001AA0  EF54  F00D         	goto	u1741
  3519  001AA4  EF56  F00D         	goto	u1740
  3520  001AA8                     u1741:
  3521  001AA8  EF59  F00D         	goto	l121
  3522  001AAC                     u1740:
  3523  001AAC  5028               	movf	lcdPosition@coluna^0,w,c
  3524  001AAE  0FC0               	addlw	192
  3525  001AB0  6E2A               	movwf	lcdPosition@comando^0,c
  3526  001AB2                     l121:
  3527                           
  3528                           ;lcd.c: 119:     if (coluna > 15) {
  3529  001AB2  0E0F               	movlw	15
  3530  001AB4  6428               	cpfsgt	lcdPosition@coluna^0,c
  3531  001AB6  EF5F  F00D         	goto	u1751
  3532  001ABA  EF61  F00D         	goto	u1750
  3533  001ABE                     u1751:
  3534  001ABE  EF61  F00D         	goto	l2186
  3535  001AC2                     u1750:
  3536  001AC2                     l2186:
  3537                           
  3538                           ;lcd.c: 125:     lcdCommand(comando);
  3539  001AC2  502A               	movf	lcdPosition@comando^0,w,c
  3540  001AC4  ECAE  F00B         	call	_lcdCommand
  3541  001AC8  0012               	return		;funcret
  3542  001ACA                     __end_of_lcdPosition:
  3543                           	callstack 0
  3544                           
  3545 ;; *************** function _lcdCommand *****************
  3546 ;; Defined at:
  3547 ;;		line 43 in file "lcd.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;  cmd             1    wreg     unsigned char 
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  cmd             1    7[COMRAM] unsigned char 
  3552 ;;  old_D           1    6[COMRAM] unsigned char 
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      void 
  3555 ;; Registers used:
  3556 ;;		wreg, status,2, status,0, cstack
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3562 ;;      Params:         0       0       0       0       0       0       0
  3563 ;;      Locals:         2       0       0       0       0       0       0
  3564 ;;      Temps:          0       0       0       0       0       0       0
  3565 ;;      Totals:         2       0       0       0       0       0       0
  3566 ;;Total ram usage:        2 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; Hardware stack levels required when called:    2
  3569 ;; This function calls:
  3570 ;;		_Delay2ms
  3571 ;;		_Delay40us
  3572 ;;		_digitalWrite
  3573 ;; This function is called by:
  3574 ;;		_lcdInit
  3575 ;;		_lcdPosition
  3576 ;;		_chooseSong
  3577 ;;		_playSong
  3578 ;;		_main
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text20
  3583  00175C                     __ptext20:
  3584                           	callstack 0
  3585  00175C                     _lcdCommand:
  3586                           	callstack 27
  3587                           
  3588                           ;incstack = 0
  3589                           ;lcdCommand@cmd stored from wreg
  3590  00175C  6E27               	movwf	lcdCommand@cmd^0,c
  3591  00175E                     
  3592                           ;lcd.c: 44:     unsigned char old_D;;lcd.c: 45:     old_D = PORTD;
  3593  00175E  CF83 F026          	movff	3971,lcdCommand@old_D	;volatile
  3594  001762                     
  3595                           ;lcd.c: 48:     TRISD = 0x00;
  3596  001762  0E00               	movlw	0
  3597  001764  6E95               	movwf	149,c	;volatile
  3598  001766                     
  3599                           ;lcd.c: 50:     digitalWrite(PIN_E2, 0);
  3600  001766  0E00               	movlw	0
  3601  001768  6E21               	movwf	(digitalWrite@pin+1)^0,c
  3602  00176A  0E22               	movlw	34
  3603  00176C  6E20               	movwf	digitalWrite@pin^0,c
  3604  00176E  0E00               	movlw	0
  3605  001770  6E23               	movwf	(digitalWrite@value+1)^0,c
  3606  001772  0E00               	movlw	0
  3607  001774  6E22               	movwf	digitalWrite@value^0,c
  3608  001776  ECB5  F005         	call	_digitalWrite	;wreg free
  3609  00177A                     
  3610                           ;lcd.c: 51:     PORTD = cmd;
  3611  00177A  C027  FF83         	movff	lcdCommand@cmd,3971	;volatile
  3612  00177E                     
  3613                           ;lcd.c: 53:     digitalWrite(PIN_E1, 1);
  3614  00177E  0E00               	movlw	0
  3615  001780  6E21               	movwf	(digitalWrite@pin+1)^0,c
  3616  001782  0E21               	movlw	33
  3617  001784  6E20               	movwf	digitalWrite@pin^0,c
  3618  001786  0E00               	movlw	0
  3619  001788  6E23               	movwf	(digitalWrite@value+1)^0,c
  3620  00178A  0E01               	movlw	1
  3621  00178C  6E22               	movwf	digitalWrite@value^0,c
  3622  00178E  ECB5  F005         	call	_digitalWrite	;wreg free
  3623  001792                     
  3624                           ;lcd.c: 54:     digitalWrite(PIN_E1, 0);
  3625  001792  0E00               	movlw	0
  3626  001794  6E21               	movwf	(digitalWrite@pin+1)^0,c
  3627  001796  0E21               	movlw	33
  3628  001798  6E20               	movwf	digitalWrite@pin^0,c
  3629  00179A  0E00               	movlw	0
  3630  00179C  6E23               	movwf	(digitalWrite@value+1)^0,c
  3631  00179E  0E00               	movlw	0
  3632  0017A0  6E22               	movwf	digitalWrite@value^0,c
  3633  0017A2  ECB5  F005         	call	_digitalWrite	;wreg free
  3634  0017A6                     
  3635                           ;lcd.c: 57:     PORTD = old_D;
  3636  0017A6  C026  FF83         	movff	lcdCommand@old_D,3971	;volatile
  3637  0017AA                     
  3638                           ;lcd.c: 59:     if ((cmd == 0x02) || (cmd == 0x01)) {
  3639  0017AA  0E02               	movlw	2
  3640  0017AC  1827               	xorwf	lcdCommand@cmd^0,w,c
  3641  0017AE  B4D8               	btfsc	status,2,c
  3642  0017B0  EFDC  F00B         	goto	u1671
  3643  0017B4  EFDE  F00B         	goto	u1670
  3644  0017B8                     u1671:
  3645  0017B8  EFE6  F00B         	goto	l2120
  3646  0017BC                     u1670:
  3647  0017BC  0427               	decf	lcdCommand@cmd^0,w,c
  3648  0017BE  A4D8               	btfss	status,2,c
  3649  0017C0  EFE4  F00B         	goto	u1681
  3650  0017C4  EFE6  F00B         	goto	u1680
  3651  0017C8                     u1681:
  3652  0017C8  EFEA  F00B         	goto	l2122
  3653  0017CC                     u1680:
  3654  0017CC                     l2120:
  3655                           
  3656                           ;lcd.c: 60:         Delay2ms();
  3657  0017CC  EC3B  F00E         	call	_Delay2ms	;wreg free
  3658                           
  3659                           ;lcd.c: 61:     } else {
  3660  0017D0  EFEC  F00B         	goto	l111
  3661  0017D4                     l2122:
  3662                           
  3663                           ;lcd.c: 62:         Delay40us();
  3664  0017D4  EC56  F00E         	call	_Delay40us	;wreg free
  3665  0017D8                     l111:
  3666  0017D8  0012               	return		;funcret
  3667  0017DA                     __end_of_lcdCommand:
  3668                           	callstack 0
  3669                           
  3670 ;; *************** function _digitalWrite *****************
  3671 ;; Defined at:
  3672 ;;		line 14 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;  pin             2    0[COMRAM] int 
  3675 ;;  value           2    2[COMRAM] int 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg, status,2, status,0
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3687 ;;      Params:         4       0       0       0       0       0       0
  3688 ;;      Locals:         0       0       0       0       0       0       0
  3689 ;;      Temps:          2       0       0       0       0       0       0
  3690 ;;      Totals:         6       0       0       0       0       0       0
  3691 ;;Total ram usage:        6 bytes
  3692 ;; Hardware stack levels used:    1
  3693 ;; This function calls:
  3694 ;;		Nothing
  3695 ;; This function is called by:
  3696 ;;		_lcdCommand
  3697 ;;		_lcdData
  3698 ;;		_ssdUpdate
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text21
  3703  000B6A                     __ptext21:
  3704                           	callstack 0
  3705  000B6A                     _digitalWrite:
  3706                           	callstack 28
  3707  000B6A                     
  3708                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 16:     if(pin <8){
  3709  000B6A  BE21               	btfsc	(digitalWrite@pin+1)^0,7,c
  3710  000B6C  EFC3  F005         	goto	u1370
  3711  000B70  5021               	movf	(digitalWrite@pin+1)^0,w,c
  3712  000B72  E107               	bnz	u1371
  3713  000B74  0E08               	movlw	8
  3714  000B76  5C20               	subwf	digitalWrite@pin^0,w,c
  3715  000B78  B0D8               	btfsc	status,0,c
  3716  000B7A  EFC1  F005         	goto	u1371
  3717  000B7E  EFC3  F005         	goto	u1370
  3718  000B82                     u1371:
  3719  000B82  EFED  F005         	goto	l1988
  3720  000B86                     u1370:
  3721  000B86                     
  3722                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 17:         if (value){ ((PORTA) |=
      +                           (1<<(pin)));}
  3723  000B86  5022               	movf	digitalWrite@value^0,w,c
  3724  000B88  1023               	iorwf	(digitalWrite@value+1)^0,w,c
  3725  000B8A  B4D8               	btfsc	status,2,c
  3726  000B8C  EFCA  F005         	goto	u1381
  3727  000B90  EFCC  F005         	goto	u1380
  3728  000B94                     u1381:
  3729  000B94  EFDC  F005         	goto	l1986
  3730  000B98                     u1380:
  3731  000B98  C020  F024         	movff	digitalWrite@pin,??_digitalWrite
  3732  000B9C  0E01               	movlw	1
  3733  000B9E  6E25               	movwf	(??_digitalWrite+1)^0,c
  3734  000BA0  2A24               	incf	??_digitalWrite^0,f,c
  3735  000BA2  EFD5  F005         	goto	u1394
  3736  000BA6                     u1395:
  3737  000BA6  90D8               	bcf	status,0,c
  3738  000BA8  3625               	rlcf	(??_digitalWrite+1)^0,f,c
  3739  000BAA                     u1394:
  3740  000BAA  2E24               	decfsz	??_digitalWrite^0,f,c
  3741  000BAC  EFD3  F005         	goto	u1395
  3742  000BB0  5025               	movf	(??_digitalWrite+1)^0,w,c
  3743  000BB2  1280               	iorwf	128,f,c	;volatile
  3744  000BB4  EFDB  F006         	goto	l42
  3745  000BB8                     l1986:
  3746  000BB8  C020  F024         	movff	digitalWrite@pin,??_digitalWrite
  3747  000BBC  0E01               	movlw	1
  3748  000BBE  6E25               	movwf	(??_digitalWrite+1)^0,c
  3749  000BC0  2A24               	incf	??_digitalWrite^0,f,c
  3750  000BC2  EFE5  F005         	goto	u1404
  3751  000BC6                     u1405:
  3752  000BC6  90D8               	bcf	status,0,c
  3753  000BC8  3625               	rlcf	(??_digitalWrite+1)^0,f,c
  3754  000BCA                     u1404:
  3755  000BCA  2E24               	decfsz	??_digitalWrite^0,f,c
  3756  000BCC  EFE3  F005         	goto	u1405
  3757  000BD0  5025               	movf	(??_digitalWrite+1)^0,w,c
  3758  000BD2  0AFF               	xorlw	255
  3759  000BD4  1680               	andwf	128,f,c	;volatile
  3760  000BD6  EFDB  F006         	goto	l42
  3761  000BDA                     l1988:
  3762  000BDA  BE21               	btfsc	(digitalWrite@pin+1)^0,7,c
  3763  000BDC  EFFB  F005         	goto	u1410
  3764  000BE0  5021               	movf	(digitalWrite@pin+1)^0,w,c
  3765  000BE2  E107               	bnz	u1411
  3766  000BE4  0E10               	movlw	16
  3767  000BE6  5C20               	subwf	digitalWrite@pin^0,w,c
  3768  000BE8  B0D8               	btfsc	status,0,c
  3769  000BEA  EFF9  F005         	goto	u1411
  3770  000BEE  EFFB  F005         	goto	u1410
  3771  000BF2                     u1411:
  3772  000BF2  EF29  F006         	goto	l1996
  3773  000BF6                     u1410:
  3774  000BF6                     
  3775                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 20:         pin -=8;
  3776  000BF6  0EF8               	movlw	248
  3777  000BF8  2620               	addwf	digitalWrite@pin^0,f,c
  3778  000BFA  0EFF               	movlw	255
  3779  000BFC  2221               	addwfc	(digitalWrite@pin+1)^0,f,c
  3780                           
  3781                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 21:         if (value){ ((PORTB) |=
      +                           (1<<(pin)));}
  3782  000BFE  5022               	movf	digitalWrite@value^0,w,c
  3783  000C00  1023               	iorwf	(digitalWrite@value+1)^0,w,c
  3784  000C02  B4D8               	btfsc	status,2,c
  3785  000C04  EF06  F006         	goto	u1421
  3786  000C08  EF08  F006         	goto	u1420
  3787  000C0C                     u1421:
  3788  000C0C  EF18  F006         	goto	l1994
  3789  000C10                     u1420:
  3790  000C10  C020  F024         	movff	digitalWrite@pin,??_digitalWrite
  3791  000C14  0E01               	movlw	1
  3792  000C16  6E25               	movwf	(??_digitalWrite+1)^0,c
  3793  000C18  2A24               	incf	??_digitalWrite^0,f,c
  3794  000C1A  EF11  F006         	goto	u1434
  3795  000C1E                     u1435:
  3796  000C1E  90D8               	bcf	status,0,c
  3797  000C20  3625               	rlcf	(??_digitalWrite+1)^0,f,c
  3798  000C22                     u1434:
  3799  000C22  2E24               	decfsz	??_digitalWrite^0,f,c
  3800  000C24  EF0F  F006         	goto	u1435
  3801  000C28  5025               	movf	(??_digitalWrite+1)^0,w,c
  3802  000C2A  1281               	iorwf	129,f,c	;volatile
  3803  000C2C  EFDB  F006         	goto	l42
  3804  000C30                     l1994:
  3805  000C30  C020  F024         	movff	digitalWrite@pin,??_digitalWrite
  3806  000C34  0E01               	movlw	1
  3807  000C36  6E25               	movwf	(??_digitalWrite+1)^0,c
  3808  000C38  2A24               	incf	??_digitalWrite^0,f,c
  3809  000C3A  EF21  F006         	goto	u1444
  3810  000C3E                     u1445:
  3811  000C3E  90D8               	bcf	status,0,c
  3812  000C40  3625               	rlcf	(??_digitalWrite+1)^0,f,c
  3813  000C42                     u1444:
  3814  000C42  2E24               	decfsz	??_digitalWrite^0,f,c
  3815  000C44  EF1F  F006         	goto	u1445
  3816  000C48  5025               	movf	(??_digitalWrite+1)^0,w,c
  3817  000C4A  0AFF               	xorlw	255
  3818  000C4C  1681               	andwf	129,f,c	;volatile
  3819  000C4E  EFDB  F006         	goto	l42
  3820  000C52                     l1996:
  3821  000C52  BE21               	btfsc	(digitalWrite@pin+1)^0,7,c
  3822  000C54  EF37  F006         	goto	u1450
  3823  000C58  5021               	movf	(digitalWrite@pin+1)^0,w,c
  3824  000C5A  E107               	bnz	u1451
  3825  000C5C  0E18               	movlw	24
  3826  000C5E  5C20               	subwf	digitalWrite@pin^0,w,c
  3827  000C60  B0D8               	btfsc	status,0,c
  3828  000C62  EF35  F006         	goto	u1451
  3829  000C66  EF37  F006         	goto	u1450
  3830  000C6A                     u1451:
  3831  000C6A  EF65  F006         	goto	l2004
  3832  000C6E                     u1450:
  3833  000C6E                     
  3834                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 24:         pin -=16;
  3835  000C6E  0EF0               	movlw	240
  3836  000C70  2620               	addwf	digitalWrite@pin^0,f,c
  3837  000C72  0EFF               	movlw	255
  3838  000C74  2221               	addwfc	(digitalWrite@pin+1)^0,f,c
  3839                           
  3840                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 25:         if (value){ ((PORTC) |=
      +                           (1<<(pin)));}
  3841  000C76  5022               	movf	digitalWrite@value^0,w,c
  3842  000C78  1023               	iorwf	(digitalWrite@value+1)^0,w,c
  3843  000C7A  B4D8               	btfsc	status,2,c
  3844  000C7C  EF42  F006         	goto	u1461
  3845  000C80  EF44  F006         	goto	u1460
  3846  000C84                     u1461:
  3847  000C84  EF54  F006         	goto	l2002
  3848  000C88                     u1460:
  3849  000C88  C020  F024         	movff	digitalWrite@pin,??_digitalWrite
  3850  000C8C  0E01               	movlw	1
  3851  000C8E  6E25               	movwf	(??_digitalWrite+1)^0,c
  3852  000C90  2A24               	incf	??_digitalWrite^0,f,c
  3853  000C92  EF4D  F006         	goto	u1474
  3854  000C96                     u1475:
  3855  000C96  90D8               	bcf	status,0,c
  3856  000C98  3625               	rlcf	(??_digitalWrite+1)^0,f,c
  3857  000C9A                     u1474:
  3858  000C9A  2E24               	decfsz	??_digitalWrite^0,f,c
  3859  000C9C  EF4B  F006         	goto	u1475
  3860  000CA0  5025               	movf	(??_digitalWrite+1)^0,w,c
  3861  000CA2  1282               	iorwf	130,f,c	;volatile
  3862  000CA4  EFDB  F006         	goto	l42
  3863  000CA8                     l2002:
  3864  000CA8  C020  F024         	movff	digitalWrite@pin,??_digitalWrite
  3865  000CAC  0E01               	movlw	1
  3866  000CAE  6E25               	movwf	(??_digitalWrite+1)^0,c
  3867  000CB0  2A24               	incf	??_digitalWrite^0,f,c
  3868  000CB2  EF5D  F006         	goto	u1484
  3869  000CB6                     u1485:
  3870  000CB6  90D8               	bcf	status,0,c
  3871  000CB8  3625               	rlcf	(??_digitalWrite+1)^0,f,c
  3872  000CBA                     u1484:
  3873  000CBA  2E24               	decfsz	??_digitalWrite^0,f,c
  3874  000CBC  EF5B  F006         	goto	u1485
  3875  000CC0  5025               	movf	(??_digitalWrite+1)^0,w,c
  3876  000CC2  0AFF               	xorlw	255
  3877  000CC4  1682               	andwf	130,f,c	;volatile
  3878  000CC6  EFDB  F006         	goto	l42
  3879  000CCA                     l2004:
  3880  000CCA  BE21               	btfsc	(digitalWrite@pin+1)^0,7,c
  3881  000CCC  EF73  F006         	goto	u1490
  3882  000CD0  5021               	movf	(digitalWrite@pin+1)^0,w,c
  3883  000CD2  E107               	bnz	u1491
  3884  000CD4  0E20               	movlw	32
  3885  000CD6  5C20               	subwf	digitalWrite@pin^0,w,c
  3886  000CD8  B0D8               	btfsc	status,0,c
  3887  000CDA  EF71  F006         	goto	u1491
  3888  000CDE  EF73  F006         	goto	u1490
  3889  000CE2                     u1491:
  3890  000CE2  EFA1  F006         	goto	l2012
  3891  000CE6                     u1490:
  3892  000CE6                     
  3893                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 28:         pin -=24;
  3894  000CE6  0EE8               	movlw	232
  3895  000CE8  2620               	addwf	digitalWrite@pin^0,f,c
  3896  000CEA  0EFF               	movlw	255
  3897  000CEC  2221               	addwfc	(digitalWrite@pin+1)^0,f,c
  3898                           
  3899                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 29:         if (value){ ((PORTD) |=
      +                           (1<<(pin)));}
  3900  000CEE  5022               	movf	digitalWrite@value^0,w,c
  3901  000CF0  1023               	iorwf	(digitalWrite@value+1)^0,w,c
  3902  000CF2  B4D8               	btfsc	status,2,c
  3903  000CF4  EF7E  F006         	goto	u1501
  3904  000CF8  EF80  F006         	goto	u1500
  3905  000CFC                     u1501:
  3906  000CFC  EF90  F006         	goto	l2010
  3907  000D00                     u1500:
  3908  000D00  C020  F024         	movff	digitalWrite@pin,??_digitalWrite
  3909  000D04  0E01               	movlw	1
  3910  000D06  6E25               	movwf	(??_digitalWrite+1)^0,c
  3911  000D08  2A24               	incf	??_digitalWrite^0,f,c
  3912  000D0A  EF89  F006         	goto	u1514
  3913  000D0E                     u1515:
  3914  000D0E  90D8               	bcf	status,0,c
  3915  000D10  3625               	rlcf	(??_digitalWrite+1)^0,f,c
  3916  000D12                     u1514:
  3917  000D12  2E24               	decfsz	??_digitalWrite^0,f,c
  3918  000D14  EF87  F006         	goto	u1515
  3919  000D18  5025               	movf	(??_digitalWrite+1)^0,w,c
  3920  000D1A  1283               	iorwf	131,f,c	;volatile
  3921  000D1C  EFDB  F006         	goto	l42
  3922  000D20                     l2010:
  3923  000D20  C020  F024         	movff	digitalWrite@pin,??_digitalWrite
  3924  000D24  0E01               	movlw	1
  3925  000D26  6E25               	movwf	(??_digitalWrite+1)^0,c
  3926  000D28  2A24               	incf	??_digitalWrite^0,f,c
  3927  000D2A  EF99  F006         	goto	u1524
  3928  000D2E                     u1525:
  3929  000D2E  90D8               	bcf	status,0,c
  3930  000D30  3625               	rlcf	(??_digitalWrite+1)^0,f,c
  3931  000D32                     u1524:
  3932  000D32  2E24               	decfsz	??_digitalWrite^0,f,c
  3933  000D34  EF97  F006         	goto	u1525
  3934  000D38  5025               	movf	(??_digitalWrite+1)^0,w,c
  3935  000D3A  0AFF               	xorlw	255
  3936  000D3C  1683               	andwf	131,f,c	;volatile
  3937  000D3E  EFDB  F006         	goto	l42
  3938  000D42                     l2012:
  3939  000D42  BE21               	btfsc	(digitalWrite@pin+1)^0,7,c
  3940  000D44  EFAF  F006         	goto	u1530
  3941  000D48  5021               	movf	(digitalWrite@pin+1)^0,w,c
  3942  000D4A  E107               	bnz	u1531
  3943  000D4C  0E28               	movlw	40
  3944  000D4E  5C20               	subwf	digitalWrite@pin^0,w,c
  3945  000D50  B0D8               	btfsc	status,0,c
  3946  000D52  EFAD  F006         	goto	u1531
  3947  000D56  EFAF  F006         	goto	u1530
  3948  000D5A                     u1531:
  3949  000D5A  EFDB  F006         	goto	l42
  3950  000D5E                     u1530:
  3951  000D5E                     
  3952                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 32:         pin -=32;
  3953  000D5E  0EE0               	movlw	224
  3954  000D60  2620               	addwf	digitalWrite@pin^0,f,c
  3955  000D62  0EFF               	movlw	255
  3956  000D64  2221               	addwfc	(digitalWrite@pin+1)^0,f,c
  3957                           
  3958                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 33:         if (value){ ((PORTE) |=
      +                           (1<<(pin)));}
  3959  000D66  5022               	movf	digitalWrite@value^0,w,c
  3960  000D68  1023               	iorwf	(digitalWrite@value+1)^0,w,c
  3961  000D6A  B4D8               	btfsc	status,2,c
  3962  000D6C  EFBA  F006         	goto	u1541
  3963  000D70  EFBC  F006         	goto	u1540
  3964  000D74                     u1541:
  3965  000D74  EFCC  F006         	goto	l2018
  3966  000D78                     u1540:
  3967  000D78  C020  F024         	movff	digitalWrite@pin,??_digitalWrite
  3968  000D7C  0E01               	movlw	1
  3969  000D7E  6E25               	movwf	(??_digitalWrite+1)^0,c
  3970  000D80  2A24               	incf	??_digitalWrite^0,f,c
  3971  000D82  EFC5  F006         	goto	u1554
  3972  000D86                     u1555:
  3973  000D86  90D8               	bcf	status,0,c
  3974  000D88  3625               	rlcf	(??_digitalWrite+1)^0,f,c
  3975  000D8A                     u1554:
  3976  000D8A  2E24               	decfsz	??_digitalWrite^0,f,c
  3977  000D8C  EFC3  F006         	goto	u1555
  3978  000D90  5025               	movf	(??_digitalWrite+1)^0,w,c
  3979  000D92  1284               	iorwf	132,f,c	;volatile
  3980  000D94  EFDB  F006         	goto	l42
  3981  000D98                     l2018:
  3982  000D98  C020  F024         	movff	digitalWrite@pin,??_digitalWrite
  3983  000D9C  0E01               	movlw	1
  3984  000D9E  6E25               	movwf	(??_digitalWrite+1)^0,c
  3985  000DA0  2A24               	incf	??_digitalWrite^0,f,c
  3986  000DA2  EFD5  F006         	goto	u1564
  3987  000DA6                     u1565:
  3988  000DA6  90D8               	bcf	status,0,c
  3989  000DA8  3625               	rlcf	(??_digitalWrite+1)^0,f,c
  3990  000DAA                     u1564:
  3991  000DAA  2E24               	decfsz	??_digitalWrite^0,f,c
  3992  000DAC  EFD3  F006         	goto	u1565
  3993  000DB0  5025               	movf	(??_digitalWrite+1)^0,w,c
  3994  000DB2  0AFF               	xorlw	255
  3995  000DB4  1684               	andwf	132,f,c	;volatile
  3996  000DB6                     l42:
  3997  000DB6  0012               	return		;funcret
  3998  000DB8                     __end_of_digitalWrite:
  3999                           	callstack 0
  4000                           
  4001 ;; *************** function _Delay2ms *****************
  4002 ;; Defined at:
  4003 ;;		line 36 in file "lcd.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;		None
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  i               1    1[COMRAM] unsigned char 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      void 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0, cstack
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4017 ;;      Params:         0       0       0       0       0       0       0
  4018 ;;      Locals:         1       0       0       0       0       0       0
  4019 ;;      Temps:          0       0       0       0       0       0       0
  4020 ;;      Totals:         1       0       0       0       0       0       0
  4021 ;;Total ram usage:        1 bytes
  4022 ;; Hardware stack levels used:    1
  4023 ;; Hardware stack levels required when called:    1
  4024 ;; This function calls:
  4025 ;;		_Delay40us
  4026 ;; This function is called by:
  4027 ;;		_lcdCommand
  4028 ;;		_lcdInit
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text22
  4033  001C76                     __ptext22:
  4034                           	callstack 0
  4035  001C76                     _Delay2ms:
  4036                           	callstack 27
  4037  001C76                     
  4038                           ;lcd.c: 37:     unsigned char i;;lcd.c: 38:     for (i = 0; i < 50; i++) {
  4039  001C76  0E00               	movlw	0
  4040  001C78  6E21               	movwf	Delay2ms@i^0,c
  4041  001C7A                     l2026:
  4042                           
  4043                           ;lcd.c: 39:         Delay40us();
  4044  001C7A  EC56  F00E         	call	_Delay40us	;wreg free
  4045  001C7E                     
  4046                           ;lcd.c: 40:     }
  4047  001C7E  2A21               	incf	Delay2ms@i^0,f,c
  4048  001C80  0E31               	movlw	49
  4049  001C82  6421               	cpfsgt	Delay2ms@i^0,c
  4050  001C84  EF46  F00E         	goto	u1571
  4051  001C88  EF48  F00E         	goto	u1570
  4052  001C8C                     u1571:
  4053  001C8C  EF3D  F00E         	goto	l2026
  4054  001C90                     u1570:
  4055  001C90  0012               	return		;funcret
  4056  001C92                     __end_of_Delay2ms:
  4057                           	callstack 0
  4058                           
  4059 ;; *************** function _Delay40us *****************
  4060 ;; Defined at:
  4061 ;;		line 31 in file "lcd.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;		None
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;  i               1    0[COMRAM] unsigned char 
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  1    wreg      void 
  4068 ;; Registers used:
  4069 ;;		wreg, status,2, status,0
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4075 ;;      Params:         0       0       0       0       0       0       0
  4076 ;;      Locals:         1       0       0       0       0       0       0
  4077 ;;      Temps:          0       0       0       0       0       0       0
  4078 ;;      Totals:         1       0       0       0       0       0       0
  4079 ;;Total ram usage:        1 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; This function calls:
  4082 ;;		Nothing
  4083 ;; This function is called by:
  4084 ;;		_Delay2ms
  4085 ;;		_lcdCommand
  4086 ;;		_lcdData
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           	psect	text23
  4091  001CAC                     __ptext23:
  4092                           	callstack 0
  4093  001CAC                     _Delay40us:
  4094                           	callstack 28
  4095  001CAC                     
  4096                           ;lcd.c: 32:     unsigned char i;;lcd.c: 33:     for (i = 0; i < 25; i++);
  4097  001CAC  0E00               	movlw	0
  4098  001CAE  6E20               	movwf	Delay40us@i^0,c
  4099  001CB0                     l1976:
  4100  001CB0  2A20               	incf	Delay40us@i^0,f,c
  4101  001CB2  0E18               	movlw	24
  4102  001CB4  6420               	cpfsgt	Delay40us@i^0,c
  4103  001CB6  EF5F  F00E         	goto	u1361
  4104  001CBA  EF61  F00E         	goto	u1360
  4105  001CBE                     u1361:
  4106  001CBE  EF58  F00E         	goto	l1976
  4107  001CC2                     u1360:
  4108  001CC2  0012               	return		;funcret
  4109  001CC4                     __end_of_Delay40us:
  4110                           	callstack 0
  4111                           
  4112 ;; *************** function _kpRead *****************
  4113 ;; Defined at:
  4114 ;;		line 37 in file "keypad.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;		None
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;		None
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  2    0[COMRAM] unsigned int 
  4121 ;; Registers used:
  4122 ;;		None
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4128 ;;      Params:         2       0       0       0       0       0       0
  4129 ;;      Locals:         0       0       0       0       0       0       0
  4130 ;;      Temps:          0       0       0       0       0       0       0
  4131 ;;      Totals:         2       0       0       0       0       0       0
  4132 ;;Total ram usage:        2 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; This function calls:
  4135 ;;		Nothing
  4136 ;; This function is called by:
  4137 ;;		_chooseSong
  4138 ;;		_playSong
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           	psect	text24
  4143  001CCE                     __ptext24:
  4144                           	callstack 0
  4145  001CCE                     _kpRead:
  4146                           	callstack 28
  4147  001CCE                     
  4148                           ;keypad.c: 38:     return valor;
  4149  001CCE  C03B  F020         	movff	_valor@keypad$F261,?_kpRead
  4150  001CD2  C03C  F021         	movff	_valor@keypad$F261+1,?_kpRead+1
  4151  001CD6  0012               	return		;funcret
  4152  001CD8                     __end_of_kpRead:
  4153                           	callstack 0
  4154                           
  4155 ;; *************** function _kpDebounce *****************
  4156 ;; Defined at:
  4157 ;;		line 41 in file "keypad.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;		None
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;  k               2    6[COMRAM] int 
  4162 ;;  i               1    9[COMRAM] unsigned char 
  4163 ;;  j               1    8[COMRAM] unsigned char 
  4164 ;;  old_D           1    5[COMRAM] unsigned char 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  1    wreg      void 
  4167 ;; Registers used:
  4168 ;;		wreg, status,2, status,0, prodl, prodh
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4174 ;;      Params:         0       0       0       0       0       0       0
  4175 ;;      Locals:         5       0       0       0       0       0       0
  4176 ;;      Temps:          5       0       0       0       0       0       0
  4177 ;;      Totals:        10       0       0       0       0       0       0
  4178 ;;Total ram usage:       10 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_chooseSong
  4184 ;;		_playSong
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           	psect	text25
  4189  000DB8                     __ptext25:
  4190                           	callstack 0
  4191  000DB8                     _kpDebounce:
  4192                           	callstack 28
  4193  000DB8                     
  4194                           ;keypad.c: 42:     unsigned char i, j;;keypad.c: 43:     static unsigned char tempo;;key
      +                          pad.c: 44:     static unsigned int valorNovo = 0x0000;;keypad.c: 45:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 48:     unsigned char old_D;;keypad.c: 49:     old_
      +                          D = PORTD;
  4195  000DB8  CF83 F025          	movff	3971,kpDebounce@old_D	;volatile
  4196  000DBC                     
  4197                           ;keypad.c: 53:     TRISD |= 0x0f;
  4198  000DBC  0E0F               	movlw	15
  4199  000DBE  1295               	iorwf	149,f,c	;volatile
  4200  000DC0                     
  4201                           ;keypad.c: 55:     for (i = 0; i < 3; i++) {
  4202  000DC0  0E00               	movlw	0
  4203  000DC2  6E29               	movwf	kpDebounce@i^0,c
  4204  000DC4                     l2206:
  4205                           
  4206                           ;keypad.c: 57:         TRISB &= 0xF8;
  4207  000DC4  0EF8               	movlw	248
  4208  000DC6  1693               	andwf	147,f,c	;volatile
  4209                           
  4210                           ;keypad.c: 59:         ((TRISB) |= (1<<(i)));
  4211  000DC8  C029  F020         	movff	kpDebounce@i,??_kpDebounce
  4212  000DCC  0E01               	movlw	1
  4213  000DCE  6E21               	movwf	(??_kpDebounce+1)^0,c
  4214  000DD0  2A20               	incf	??_kpDebounce^0,f,c
  4215  000DD2  EFED  F006         	goto	u1794
  4216  000DD6                     u1795:
  4217  000DD6  90D8               	bcf	status,0,c
  4218  000DD8  3621               	rlcf	(??_kpDebounce+1)^0,f,c
  4219  000DDA                     u1794:
  4220  000DDA  2E20               	decfsz	??_kpDebounce^0,f,c
  4221  000DDC  EFEB  F006         	goto	u1795
  4222  000DE0  5021               	movf	(??_kpDebounce+1)^0,w,c
  4223  000DE2  1293               	iorwf	147,f,c	;volatile
  4224                           
  4225                           ;keypad.c: 61:         PORTB |= 0x07;
  4226  000DE4  0E07               	movlw	7
  4227  000DE6  1281               	iorwf	129,f,c	;volatile
  4228                           
  4229                           ;keypad.c: 62:         ((PORTB) &= ~(1<<(i)));
  4230  000DE8  C029  F020         	movff	kpDebounce@i,??_kpDebounce
  4231  000DEC  0E01               	movlw	1
  4232  000DEE  6E21               	movwf	(??_kpDebounce+1)^0,c
  4233  000DF0  2A20               	incf	??_kpDebounce^0,f,c
  4234  000DF2  EFFD  F006         	goto	u1804
  4235  000DF6                     u1805:
  4236  000DF6  90D8               	bcf	status,0,c
  4237  000DF8  3621               	rlcf	(??_kpDebounce+1)^0,f,c
  4238  000DFA                     u1804:
  4239  000DFA  2E20               	decfsz	??_kpDebounce^0,f,c
  4240  000DFC  EFFB  F006         	goto	u1805
  4241  000E00  5021               	movf	(??_kpDebounce+1)^0,w,c
  4242  000E02  0AFF               	xorlw	255
  4243  000E04  1681               	andwf	129,f,c	;volatile
  4244  000E06                     
  4245                           ;keypad.c: 65:         for (int k = 0; k < 10; k++);
  4246  000E06  0E00               	movlw	0
  4247  000E08  6E27               	movwf	(kpDebounce@k+1)^0,c
  4248  000E0A  0E00               	movlw	0
  4249  000E0C  6E26               	movwf	kpDebounce@k^0,c
  4250  000E0E                     l2214:
  4251  000E0E  4A26               	infsnz	kpDebounce@k^0,f,c
  4252  000E10  2A27               	incf	(kpDebounce@k+1)^0,f,c
  4253  000E12  BE27               	btfsc	(kpDebounce@k+1)^0,7,c
  4254  000E14  EF15  F007         	goto	u1811
  4255  000E18  5027               	movf	(kpDebounce@k+1)^0,w,c
  4256  000E1A  E109               	bnz	u1810
  4257  000E1C  0E0A               	movlw	10
  4258  000E1E  5C26               	subwf	kpDebounce@k^0,w,c
  4259  000E20  A0D8               	btfss	status,0,c
  4260  000E22  EF15  F007         	goto	u1811
  4261  000E26  EF17  F007         	goto	u1810
  4262  000E2A                     u1811:
  4263  000E2A  EF07  F007         	goto	l2214
  4264  000E2E                     u1810:
  4265  000E2E                     
  4266                           ;keypad.c: 68:         for (j = 0; j < 4; j++) {
  4267  000E2E  0E00               	movlw	0
  4268  000E30  6E28               	movwf	kpDebounce@j^0,c
  4269  000E32                     l2224:
  4270                           
  4271                           ;keypad.c: 69:             if (!((PORTD) & (1<<(j)))) {
  4272  000E32  C028  F020         	movff	kpDebounce@j,??_kpDebounce
  4273  000E36  0E01               	movlw	1
  4274  000E38  6E21               	movwf	(??_kpDebounce+1)^0,c
  4275  000E3A  2A20               	incf	??_kpDebounce^0,f,c
  4276  000E3C  EF22  F007         	goto	u1824
  4277  000E40                     u1825:
  4278  000E40  90D8               	bcf	status,0,c
  4279  000E42  3621               	rlcf	(??_kpDebounce+1)^0,f,c
  4280  000E44                     u1824:
  4281  000E44  2E20               	decfsz	??_kpDebounce^0,f,c
  4282  000E46  EF20  F007         	goto	u1825
  4283  000E4A  5021               	movf	(??_kpDebounce+1)^0,w,c
  4284  000E4C  1483               	andwf	131,w,c	;volatile
  4285  000E4E  0900               	iorlw	0
  4286  000E50  A4D8               	btfss	status,2,c
  4287  000E52  EF2D  F007         	goto	u1831
  4288  000E56  EF2F  F007         	goto	u1830
  4289  000E5A                     u1831:
  4290  000E5A  EF47  F007         	goto	l2228
  4291  000E5E                     u1830:
  4292  000E5E                     
  4293                           ;keypad.c: 70:                 ((valorNovo) |= (1<<((i * 4) + j)));
  4294  000E5E  5029               	movf	kpDebounce@i^0,w,c
  4295  000E60  0D04               	mullw	4
  4296  000E62  50F3               	movf	243,w,c
  4297  000E64  2428               	addwf	kpDebounce@j^0,w,c
  4298  000E66  6E20               	movwf	??_kpDebounce^0,c
  4299  000E68  0E01               	movlw	1
  4300  000E6A  6E21               	movwf	(??_kpDebounce+1)^0,c
  4301  000E6C  0E00               	movlw	0
  4302  000E6E  6E22               	movwf	(??_kpDebounce+2)^0,c
  4303  000E70  2A20               	incf	??_kpDebounce^0,f,c
  4304  000E72  EF3E  F007         	goto	u1844
  4305  000E76                     u1845:
  4306  000E76  90D8               	bcf	status,0,c
  4307  000E78  3621               	rlcf	(??_kpDebounce+1)^0,f,c
  4308  000E7A  3622               	rlcf	(??_kpDebounce+2)^0,f,c
  4309  000E7C                     u1844:
  4310  000E7C  2E20               	decfsz	??_kpDebounce^0,f,c
  4311  000E7E  EF3B  F007         	goto	u1845
  4312  000E82  5021               	movf	(??_kpDebounce+1)^0,w,c
  4313  000E84  1239               	iorwf	kpDebounce@valorNovo^0,f,c
  4314  000E86  5022               	movf	(??_kpDebounce+2)^0,w,c
  4315  000E88  123A               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  4316                           
  4317                           ;keypad.c: 71:             } else {
  4318  000E8A  EF61  F007         	goto	l2230
  4319  000E8E                     l2228:
  4320                           
  4321                           ;keypad.c: 72:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  4322  000E8E  5029               	movf	kpDebounce@i^0,w,c
  4323  000E90  0D04               	mullw	4
  4324  000E92  50F3               	movf	243,w,c
  4325  000E94  2428               	addwf	kpDebounce@j^0,w,c
  4326  000E96  6E20               	movwf	??_kpDebounce^0,c
  4327  000E98  0E01               	movlw	1
  4328  000E9A  6E21               	movwf	(??_kpDebounce+1)^0,c
  4329  000E9C  0E00               	movlw	0
  4330  000E9E  6E22               	movwf	(??_kpDebounce+2)^0,c
  4331  000EA0  2A20               	incf	??_kpDebounce^0,f,c
  4332  000EA2  EF56  F007         	goto	u1854
  4333  000EA6                     u1855:
  4334  000EA6  90D8               	bcf	status,0,c
  4335  000EA8  3621               	rlcf	(??_kpDebounce+1)^0,f,c
  4336  000EAA  3622               	rlcf	(??_kpDebounce+2)^0,f,c
  4337  000EAC                     u1854:
  4338  000EAC  2E20               	decfsz	??_kpDebounce^0,f,c
  4339  000EAE  EF53  F007         	goto	u1855
  4340  000EB2  1C21               	comf	(??_kpDebounce+1)^0,w,c
  4341  000EB4  6E23               	movwf	(??_kpDebounce+3)^0,c
  4342  000EB6  1C22               	comf	(??_kpDebounce+2)^0,w,c
  4343  000EB8  6E24               	movwf	(??_kpDebounce+4)^0,c
  4344  000EBA  5023               	movf	(??_kpDebounce+3)^0,w,c
  4345  000EBC  1639               	andwf	kpDebounce@valorNovo^0,f,c
  4346  000EBE  5024               	movf	(??_kpDebounce+4)^0,w,c
  4347  000EC0  163A               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  4348  000EC2                     l2230:
  4349                           
  4350                           ;keypad.c: 74:         }
  4351  000EC2  2A28               	incf	kpDebounce@j^0,f,c
  4352  000EC4  0E03               	movlw	3
  4353  000EC6  6428               	cpfsgt	kpDebounce@j^0,c
  4354  000EC8  EF68  F007         	goto	u1861
  4355  000ECC  EF6A  F007         	goto	u1860
  4356  000ED0                     u1861:
  4357  000ED0  EF19  F007         	goto	l2224
  4358  000ED4                     u1860:
  4359  000ED4                     
  4360                           ;keypad.c: 75:     }
  4361  000ED4  2A29               	incf	kpDebounce@i^0,f,c
  4362  000ED6  0E02               	movlw	2
  4363  000ED8  6429               	cpfsgt	kpDebounce@i^0,c
  4364  000EDA  EF71  F007         	goto	u1871
  4365  000EDE  EF73  F007         	goto	u1870
  4366  000EE2                     u1871:
  4367  000EE2  EFE2  F006         	goto	l2206
  4368  000EE6                     u1870:
  4369  000EE6                     
  4370                           ;keypad.c: 76:     if (valorAntigo == valorNovo) {
  4371  000EE6  5039               	movf	kpDebounce@valorNovo^0,w,c
  4372  000EE8  1837               	xorwf	kpDebounce@valorAntigo^0,w,c
  4373  000EEA  E107               	bnz	u1881
  4374  000EEC  503A               	movf	(kpDebounce@valorNovo+1)^0,w,c
  4375  000EEE  1838               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  4376  000EF0  A4D8               	btfss	status,2,c
  4377  000EF2  EF7D  F007         	goto	u1881
  4378  000EF6  EF7F  F007         	goto	u1880
  4379  000EFA                     u1881:
  4380  000EFA  EF82  F007         	goto	l2242
  4381  000EFE                     u1880:
  4382  000EFE                     
  4383                           ;keypad.c: 77:         tempo--;
  4384  000EFE  063D               	decf	kpDebounce@tempo^0,f,c
  4385                           
  4386                           ;keypad.c: 78:     } else {
  4387  000F00  EF88  F007         	goto	l348
  4388  000F04                     l2242:
  4389                           
  4390                           ;keypad.c: 79:         tempo = 10;
  4391  000F04  0E0A               	movlw	10
  4392  000F06  6E3D               	movwf	kpDebounce@tempo^0,c
  4393  000F08                     
  4394                           ;keypad.c: 80:         valorAntigo = valorNovo;
  4395  000F08  C039  F037         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  4396  000F0C  C03A  F038         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  4397  000F10                     l348:
  4398                           
  4399                           ;keypad.c: 82:     if (tempo == 0) {
  4400  000F10  503D               	movf	kpDebounce@tempo^0,w,c
  4401  000F12  A4D8               	btfss	status,2,c
  4402  000F14  EF8E  F007         	goto	u1891
  4403  000F18  EF90  F007         	goto	u1890
  4404  000F1C                     u1891:
  4405  000F1C  EF94  F007         	goto	l349
  4406  000F20                     u1890:
  4407  000F20                     
  4408                           ;keypad.c: 83:         valor = valorAntigo;
  4409  000F20  C037  F03B         	movff	kpDebounce@valorAntigo,_valor@keypad$F261
  4410  000F24  C038  F03C         	movff	kpDebounce@valorAntigo+1,_valor@keypad$F261+1
  4411  000F28                     l349:
  4412                           
  4413                           ;keypad.c: 85:     PORTD = old_D;
  4414  000F28  C025  FF83         	movff	kpDebounce@old_D,3971	;volatile
  4415  000F2C                     
  4416                           ;keypad.c: 86:     TRISD = 0x00;
  4417  000F2C  0E00               	movlw	0
  4418  000F2E  6E95               	movwf	149,c	;volatile
  4419  000F30  0012               	return		;funcret
  4420  000F32                     __end_of_kpDebounce:
  4421                           	callstack 0
  4422                           
  4423 ;; *************** function _alterarVolume *****************
  4424 ;; Defined at:
  4425 ;;		line 149 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;  opt             1    wreg     unsigned char 
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;  opt             1    6[COMRAM] unsigned char 
  4430 ;;  old_D           1    7[COMRAM] unsigned char 
  4431 ;;  old_A           1    0        unsigned char 
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  1    wreg      void 
  4434 ;; Registers used:
  4435 ;;		wreg, status,2, status,0, cstack
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4441 ;;      Params:         0       0       0       0       0       0       0
  4442 ;;      Locals:         2       0       0       0       0       0       0
  4443 ;;      Temps:          0       0       0       0       0       0       0
  4444 ;;      Totals:         2       0       0       0       0       0       0
  4445 ;;Total ram usage:        2 bytes
  4446 ;; Hardware stack levels used:    1
  4447 ;; Hardware stack levels required when called:    1
  4448 ;; This function calls:
  4449 ;;		_atraso_ms
  4450 ;; This function is called by:
  4451 ;;		_playSong
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           	psect	text26
  4456  0011C2                     __ptext26:
  4457                           	callstack 0
  4458  0011C2                     _alterarVolume:
  4459                           	callstack 27
  4460                           
  4461                           ;incstack = 0
  4462                           ;alterarVolume@opt stored from wreg
  4463  0011C2  6E26               	movwf	alterarVolume@opt^0,c
  4464  0011C4                     
  4465                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 150:     if (opt == 1) {
  4466  0011C4  0426               	decf	alterarVolume@opt^0,w,c
  4467  0011C6  A4D8               	btfss	status,2,c
  4468  0011C8  EFE8  F008         	goto	u1941
  4469  0011CC  EFEA  F008         	goto	u1940
  4470  0011D0                     u1941:
  4471  0011D0  EFF6  F008         	goto	l2338
  4472  0011D4                     u1940:
  4473  0011D4                     
  4474                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 151:         if(volume!=8){volum
      +                          e += 1;}
  4475  0011D4  0E08               	movlw	8
  4476  0011D6  181D               	xorwf	_volume^0,w,c
  4477  0011D8  B4D8               	btfsc	status,2,c
  4478  0011DA  EFF1  F008         	goto	u1951
  4479  0011DE  EFF3  F008         	goto	u1950
  4480  0011E2                     u1951:
  4481  0011E2  EFFF  F008         	goto	l2342
  4482  0011E6                     u1950:
  4483  0011E6  2A1D               	incf	_volume^0,f,c
  4484  0011E8  EFFF  F008         	goto	l2342
  4485  0011EC                     l2338:
  4486                           
  4487                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 153:         if(volume!=0){volum
      +                          e -= 1;}
  4488  0011EC  501D               	movf	_volume^0,w,c
  4489  0011EE  B4D8               	btfsc	status,2,c
  4490  0011F0  EFFC  F008         	goto	u1961
  4491  0011F4  EFFE  F008         	goto	u1960
  4492  0011F8                     u1961:
  4493  0011F8  EFFF  F008         	goto	l2342
  4494  0011FC                     u1960:
  4495  0011FC  061D               	decf	_volume^0,f,c
  4496  0011FE                     l2342:
  4497                           
  4498                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 155:     unsigned char old_D, ol
      +                          d_A;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 156:     old_D = TRISD;
  4499  0011FE  CF95 F027          	movff	3989,alterarVolume@old_D	;volatile
  4500  001202                     
  4501                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 159:     PORTA=0x00;
  4502  001202  0E00               	movlw	0
  4503  001204  6E80               	movwf	128,c	;volatile
  4504  001206                     
  4505                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 160:     TRISD = 0x00;
  4506  001206  0E00               	movlw	0
  4507  001208  6E95               	movwf	149,c	;volatile
  4508  00120A                     
  4509                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 162:     if (volume == 0) {
  4510  00120A  501D               	movf	_volume^0,w,c
  4511  00120C  A4D8               	btfss	status,2,c
  4512  00120E  EF0B  F009         	goto	u1971
  4513  001212  EF0D  F009         	goto	u1970
  4514  001216                     u1971:
  4515  001216  EF11  F009         	goto	l2352
  4516  00121A                     u1970:
  4517  00121A                     
  4518                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 163:         PORTD = 0b00000000;
  4519  00121A  0E00               	movlw	0
  4520  00121C  6E83               	movwf	131,c	;volatile
  4521                           
  4522                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 164:     } else if (volume == 1)
      +                           {
  4523  00121E  EF77  F009         	goto	l2384
  4524  001222                     l2352:
  4525  001222  041D               	decf	_volume^0,w,c
  4526  001224  A4D8               	btfss	status,2,c
  4527  001226  EF17  F009         	goto	u1981
  4528  00122A  EF19  F009         	goto	u1980
  4529  00122E                     u1981:
  4530  00122E  EF1D  F009         	goto	l2356
  4531  001232                     u1980:
  4532  001232                     
  4533                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 165:         PORTD = 0b10000000;
  4534  001232  0E80               	movlw	128
  4535  001234  6E83               	movwf	131,c	;volatile
  4536                           
  4537                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 166:     } else if (volume == 2)
      +                           {
  4538  001236  EF77  F009         	goto	l2384
  4539  00123A                     l2356:
  4540  00123A  0E02               	movlw	2
  4541  00123C  181D               	xorwf	_volume^0,w,c
  4542  00123E  A4D8               	btfss	status,2,c
  4543  001240  EF24  F009         	goto	u1991
  4544  001244  EF26  F009         	goto	u1990
  4545  001248                     u1991:
  4546  001248  EF2A  F009         	goto	l2360
  4547  00124C                     u1990:
  4548  00124C                     
  4549                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 167:         PORTD = 0b11000000;
  4550  00124C  0EC0               	movlw	192
  4551  00124E  6E83               	movwf	131,c	;volatile
  4552                           
  4553                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 168:     } else if (volume == 3)
      +                           {
  4554  001250  EF77  F009         	goto	l2384
  4555  001254                     l2360:
  4556  001254  0E03               	movlw	3
  4557  001256  181D               	xorwf	_volume^0,w,c
  4558  001258  A4D8               	btfss	status,2,c
  4559  00125A  EF31  F009         	goto	u2001
  4560  00125E  EF33  F009         	goto	u2000
  4561  001262                     u2001:
  4562  001262  EF37  F009         	goto	l2364
  4563  001266                     u2000:
  4564  001266                     
  4565                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 169:         PORTD = 0b11100000;
  4566  001266  0EE0               	movlw	224
  4567  001268  6E83               	movwf	131,c	;volatile
  4568                           
  4569                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 170:     } else if (volume == 4)
      +                           {
  4570  00126A  EF77  F009         	goto	l2384
  4571  00126E                     l2364:
  4572  00126E  0E04               	movlw	4
  4573  001270  181D               	xorwf	_volume^0,w,c
  4574  001272  A4D8               	btfss	status,2,c
  4575  001274  EF3E  F009         	goto	u2011
  4576  001278  EF40  F009         	goto	u2010
  4577  00127C                     u2011:
  4578  00127C  EF44  F009         	goto	l2368
  4579  001280                     u2010:
  4580  001280                     
  4581                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 171:         PORTD = 0b11110000;
  4582  001280  0EF0               	movlw	240
  4583  001282  6E83               	movwf	131,c	;volatile
  4584                           
  4585                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 172:     } else if (volume == 5)
      +                           {
  4586  001284  EF77  F009         	goto	l2384
  4587  001288                     l2368:
  4588  001288  0E05               	movlw	5
  4589  00128A  181D               	xorwf	_volume^0,w,c
  4590  00128C  A4D8               	btfss	status,2,c
  4591  00128E  EF4B  F009         	goto	u2021
  4592  001292  EF4D  F009         	goto	u2020
  4593  001296                     u2021:
  4594  001296  EF51  F009         	goto	l2372
  4595  00129A                     u2020:
  4596  00129A                     
  4597                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 173:         PORTD = 0b11111000;
  4598  00129A  0EF8               	movlw	248
  4599  00129C  6E83               	movwf	131,c	;volatile
  4600                           
  4601                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 174:     } else if (volume == 6)
      +                           {
  4602  00129E  EF77  F009         	goto	l2384
  4603  0012A2                     l2372:
  4604  0012A2  0E06               	movlw	6
  4605  0012A4  181D               	xorwf	_volume^0,w,c
  4606  0012A6  A4D8               	btfss	status,2,c
  4607  0012A8  EF58  F009         	goto	u2031
  4608  0012AC  EF5A  F009         	goto	u2030
  4609  0012B0                     u2031:
  4610  0012B0  EF5E  F009         	goto	l2376
  4611  0012B4                     u2030:
  4612  0012B4                     
  4613                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 175:         PORTD = 0b11111100;
  4614  0012B4  0EFC               	movlw	252
  4615  0012B6  6E83               	movwf	131,c	;volatile
  4616                           
  4617                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 176:     } else if (volume == 7)
      +                           {
  4618  0012B8  EF77  F009         	goto	l2384
  4619  0012BC                     l2376:
  4620  0012BC  0E07               	movlw	7
  4621  0012BE  181D               	xorwf	_volume^0,w,c
  4622  0012C0  A4D8               	btfss	status,2,c
  4623  0012C2  EF65  F009         	goto	u2041
  4624  0012C6  EF67  F009         	goto	u2040
  4625  0012CA                     u2041:
  4626  0012CA  EF6B  F009         	goto	l2380
  4627  0012CE                     u2040:
  4628  0012CE                     
  4629                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 177:         PORTD = 0b11111110;
  4630  0012CE  0EFE               	movlw	254
  4631  0012D0  6E83               	movwf	131,c	;volatile
  4632                           
  4633                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 178:     } else if (volume == 8)
      +                           {
  4634  0012D2  EF77  F009         	goto	l2384
  4635  0012D6                     l2380:
  4636  0012D6  0E08               	movlw	8
  4637  0012D8  181D               	xorwf	_volume^0,w,c
  4638  0012DA  A4D8               	btfss	status,2,c
  4639  0012DC  EF72  F009         	goto	u2051
  4640  0012E0  EF74  F009         	goto	u2050
  4641  0012E4                     u2051:
  4642  0012E4  EF77  F009         	goto	l267
  4643  0012E8                     u2050:
  4644  0012E8                     
  4645                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 179:         PORTD = 0b11111111;
  4646  0012E8  6883               	setf	131,c	;volatile
  4647  0012EA  EF77  F009         	goto	l2384
  4648  0012EE                     l267:
  4649  0012EE                     l2384:
  4650                           
  4651                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 181:     atraso_ms(500);
  4652  0012EE  0E01               	movlw	1
  4653  0012F0  6E21               	movwf	(atraso_ms@t+1)^0,c
  4654  0012F2  0EF4               	movlw	244
  4655  0012F4  6E20               	movwf	atraso_ms@t^0,c
  4656  0012F6  ECD5  F00C         	call	_atraso_ms	;wreg free
  4657  0012FA                     
  4658                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 182:     TRISD=old_D;
  4659  0012FA  C027  FF95         	movff	alterarVolume@old_D,3989	;volatile
  4660  0012FE  0012               	return		;funcret
  4661  001300                     __end_of_alterarVolume:
  4662                           	callstack 0
  4663                           
  4664 ;; *************** function _atraso_ms *****************
  4665 ;; Defined at:
  4666 ;;		line 3 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;  t               2    0[COMRAM] int 
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;  i               2    2[COMRAM] volatile unsigned int 
  4671 ;;  k               1    5[COMRAM] volatile unsigned char 
  4672 ;;  j               1    4[COMRAM] volatile unsigned char 
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  1    wreg      void 
  4675 ;; Registers used:
  4676 ;;		wreg, status,2, status,0
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4682 ;;      Params:         2       0       0       0       0       0       0
  4683 ;;      Locals:         4       0       0       0       0       0       0
  4684 ;;      Temps:          0       0       0       0       0       0       0
  4685 ;;      Totals:         6       0       0       0       0       0       0
  4686 ;;Total ram usage:        6 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; This function calls:
  4689 ;;		Nothing
  4690 ;; This function is called by:
  4691 ;;		_chooseSong
  4692 ;;		_playSong
  4693 ;;		_alterarVolume
  4694 ;;		_main
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698                           	psect	text27
  4699  0019AA                     __ptext27:
  4700                           	callstack 0
  4701  0019AA                     _atraso_ms:
  4702                           	callstack 28
  4703  0019AA                     
  4704                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 4:     volatile unsigned char j,
      +                           k;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 5:     volatile unsigned int 
      +                          i;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 7:     for (i = 0; i < (t); i+
      +                          +) {
  4705  0019AA  0E00               	movlw	0
  4706  0019AC  6E23               	movwf	(atraso_ms@i+1)^0,c	;volatile
  4707  0019AE  0E00               	movlw	0
  4708  0019B0  6E22               	movwf	atraso_ms@i^0,c	;volatile
  4709  0019B2  EFFB  F00C         	goto	l2100
  4710  0019B6                     l2078:
  4711                           
  4712                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 8:         for (j = 0; j < 41; j
      +                          ++) {
  4713  0019B6  0E00               	movlw	0
  4714  0019B8  6E24               	movwf	atraso_ms@j^0,c	;volatile
  4715  0019BA                     l2080:
  4716  0019BA  0E28               	movlw	40
  4717  0019BC  6424               	cpfsgt	atraso_ms@j^0,c	;volatile
  4718  0019BE  EFE3  F00C         	goto	u1641
  4719  0019C2  EFE5  F00C         	goto	u1640
  4720  0019C6                     u1641:
  4721  0019C6  EFE7  F00C         	goto	l2084
  4722  0019CA                     u1640:
  4723  0019CA  EFF9  F00C         	goto	l2098
  4724  0019CE                     l2084:
  4725                           
  4726                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 9:             for (k = 0; k < 3
      +                          ; k++);
  4727  0019CE  0E00               	movlw	0
  4728  0019D0  6E25               	movwf	atraso_ms@k^0,c	;volatile
  4729  0019D2                     l2086:
  4730  0019D2  0E02               	movlw	2
  4731  0019D4  6425               	cpfsgt	atraso_ms@k^0,c	;volatile
  4732  0019D6  EFEF  F00C         	goto	u1651
  4733  0019DA  EFF1  F00C         	goto	u1650
  4734  0019DE                     u1651:
  4735  0019DE  EFF3  F00C         	goto	l2090
  4736  0019E2                     u1650:
  4737  0019E2  EFF6  F00C         	goto	l2094
  4738  0019E6                     l2090:
  4739  0019E6  2A25               	incf	atraso_ms@k^0,f,c	;volatile
  4740  0019E8  EFE9  F00C         	goto	l2086
  4741  0019EC                     l2094:
  4742                           
  4743                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 10:         }
  4744  0019EC  2A24               	incf	atraso_ms@j^0,f,c	;volatile
  4745  0019EE  EFDD  F00C         	goto	l2080
  4746  0019F2                     l2098:
  4747                           
  4748                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 11:     }
  4749  0019F2  4A22               	infsnz	atraso_ms@i^0,f,c	;volatile
  4750  0019F4  2A23               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  4751  0019F6                     l2100:
  4752  0019F6  5020               	movf	atraso_ms@t^0,w,c
  4753  0019F8  5C22               	subwf	atraso_ms@i^0,w,c	;volatile
  4754  0019FA  5021               	movf	(atraso_ms@t+1)^0,w,c
  4755  0019FC  5823               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  4756  0019FE  A0D8               	btfss	status,0,c
  4757  001A00  EF04  F00D         	goto	u1661
  4758  001A04  EF06  F00D         	goto	u1660
  4759  001A08                     u1661:
  4760  001A08  EFDB  F00C         	goto	l2078
  4761  001A0C                     u1660:
  4762  001A0C  0012               	return		;funcret
  4763  001A0E                     __end_of_atraso_ms:
  4764                           	callstack 0
  4765                           
  4766 ;; *************** function ___awmod *****************
  4767 ;; Defined at:
  4768 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awmod.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  dividend        2    8[COMRAM] int 
  4771 ;;  divisor         2   10[COMRAM] int 
  4772 ;; Auto vars:     Size  Location     Type
  4773 ;;  sign            1   13[COMRAM] unsigned char 
  4774 ;;  counter         1   12[COMRAM] unsigned char 
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  2    8[COMRAM] int 
  4777 ;; Registers used:
  4778 ;;		wreg, status,2, status,0
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4784 ;;      Params:         4       0       0       0       0       0       0
  4785 ;;      Locals:         2       0       0       0       0       0       0
  4786 ;;      Temps:          0       0       0       0       0       0       0
  4787 ;;      Totals:         6       0       0       0       0       0       0
  4788 ;;Total ram usage:        6 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; This function calls:
  4791 ;;		Nothing
  4792 ;; This function is called by:
  4793 ;;		_playSong
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           	psect	text28
  4798  0014D0                     __ptext28:
  4799                           	callstack 0
  4800  0014D0                     ___awmod:
  4801                           	callstack 28
  4802  0014D0  0E00               	movlw	0
  4803  0014D2  6E2D               	movwf	___awmod@sign^0,c
  4804  0014D4  BE29               	btfsc	(___awmod@dividend+1)^0,7,c
  4805  0014D6  EF71  F00A         	goto	u2120
  4806  0014DA  EF6F  F00A         	goto	u2121
  4807  0014DE                     u2121:
  4808  0014DE  EF77  F00A         	goto	l2440
  4809  0014E2                     u2120:
  4810  0014E2  6C28               	negf	___awmod@dividend^0,c
  4811  0014E4  1E29               	comf	(___awmod@dividend+1)^0,f,c
  4812  0014E6  B0D8               	btfsc	status,0,c
  4813  0014E8  2A29               	incf	(___awmod@dividend+1)^0,f,c
  4814  0014EA  0E01               	movlw	1
  4815  0014EC  6E2D               	movwf	___awmod@sign^0,c
  4816  0014EE                     l2440:
  4817  0014EE  BE2B               	btfsc	(___awmod@divisor+1)^0,7,c
  4818  0014F0  EF7E  F00A         	goto	u2130
  4819  0014F4  EF7C  F00A         	goto	u2131
  4820  0014F8                     u2131:
  4821  0014F8  EF82  F00A         	goto	l2444
  4822  0014FC                     u2130:
  4823  0014FC  6C2A               	negf	___awmod@divisor^0,c
  4824  0014FE  1E2B               	comf	(___awmod@divisor+1)^0,f,c
  4825  001500  B0D8               	btfsc	status,0,c
  4826  001502  2A2B               	incf	(___awmod@divisor+1)^0,f,c
  4827  001504                     l2444:
  4828  001504  502A               	movf	___awmod@divisor^0,w,c
  4829  001506  102B               	iorwf	(___awmod@divisor+1)^0,w,c
  4830  001508  B4D8               	btfsc	status,2,c
  4831  00150A  EF89  F00A         	goto	u2141
  4832  00150E  EF8B  F00A         	goto	u2140
  4833  001512                     u2141:
  4834  001512  EFAF  F00A         	goto	l2460
  4835  001516                     u2140:
  4836  001516  0E01               	movlw	1
  4837  001518  6E2C               	movwf	___awmod@counter^0,c
  4838  00151A  EF93  F00A         	goto	l2450
  4839  00151E                     l2448:
  4840  00151E  90D8               	bcf	status,0,c
  4841  001520  362A               	rlcf	___awmod@divisor^0,f,c
  4842  001522  362B               	rlcf	(___awmod@divisor+1)^0,f,c
  4843  001524  2A2C               	incf	___awmod@counter^0,f,c
  4844  001526                     l2450:
  4845  001526  AE2B               	btfss	(___awmod@divisor+1)^0,7,c
  4846  001528  EF98  F00A         	goto	u2151
  4847  00152C  EF9A  F00A         	goto	u2150
  4848  001530                     u2151:
  4849  001530  EF8F  F00A         	goto	l2448
  4850  001534                     u2150:
  4851  001534                     l2452:
  4852  001534  502A               	movf	___awmod@divisor^0,w,c
  4853  001536  5C28               	subwf	___awmod@dividend^0,w,c
  4854  001538  502B               	movf	(___awmod@divisor+1)^0,w,c
  4855  00153A  5829               	subwfb	(___awmod@dividend+1)^0,w,c
  4856  00153C  A0D8               	btfss	status,0,c
  4857  00153E  EFA3  F00A         	goto	u2161
  4858  001542  EFA5  F00A         	goto	u2160
  4859  001546                     u2161:
  4860  001546  EFA9  F00A         	goto	l2456
  4861  00154A                     u2160:
  4862  00154A  502A               	movf	___awmod@divisor^0,w,c
  4863  00154C  5E28               	subwf	___awmod@dividend^0,f,c
  4864  00154E  502B               	movf	(___awmod@divisor+1)^0,w,c
  4865  001550  5A29               	subwfb	(___awmod@dividend+1)^0,f,c
  4866  001552                     l2456:
  4867  001552  90D8               	bcf	status,0,c
  4868  001554  322B               	rrcf	(___awmod@divisor+1)^0,f,c
  4869  001556  322A               	rrcf	___awmod@divisor^0,f,c
  4870  001558  2E2C               	decfsz	___awmod@counter^0,f,c
  4871  00155A  EF9A  F00A         	goto	l2452
  4872  00155E                     l2460:
  4873  00155E  502D               	movf	___awmod@sign^0,w,c
  4874  001560  B4D8               	btfsc	status,2,c
  4875  001562  EFB5  F00A         	goto	u2171
  4876  001566  EFB7  F00A         	goto	u2170
  4877  00156A                     u2171:
  4878  00156A  EFBB  F00A         	goto	l2464
  4879  00156E                     u2170:
  4880  00156E  6C28               	negf	___awmod@dividend^0,c
  4881  001570  1E29               	comf	(___awmod@dividend+1)^0,f,c
  4882  001572  B0D8               	btfsc	status,0,c
  4883  001574  2A29               	incf	(___awmod@dividend+1)^0,f,c
  4884  001576                     l2464:
  4885  001576  C028  F028         	movff	___awmod@dividend,?___awmod
  4886  00157A  C029  F029         	movff	___awmod@dividend+1,?___awmod+1
  4887  00157E  0012               	return		;funcret
  4888  001580                     __end_of___awmod:
  4889                           	callstack 0
  4890                           
  4891 ;; *************** function ___awdiv *****************
  4892 ;; Defined at:
  4893 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;  dividend        2    0[COMRAM] int 
  4896 ;;  divisor         2    2[COMRAM] int 
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;  quotient        2    6[COMRAM] int 
  4899 ;;  sign            1    5[COMRAM] unsigned char 
  4900 ;;  counter         1    4[COMRAM] unsigned char 
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  2    0[COMRAM] int 
  4903 ;; Registers used:
  4904 ;;		wreg, status,2, status,0
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4910 ;;      Params:         4       0       0       0       0       0       0
  4911 ;;      Locals:         4       0       0       0       0       0       0
  4912 ;;      Temps:          0       0       0       0       0       0       0
  4913 ;;      Totals:         8       0       0       0       0       0       0
  4914 ;;Total ram usage:        8 bytes
  4915 ;; Hardware stack levels used:    1
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		_playSong
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text29
  4924  00140C                     __ptext29:
  4925                           	callstack 0
  4926  00140C                     ___awdiv:
  4927                           	callstack 28
  4928  00140C  0E00               	movlw	0
  4929  00140E  6E25               	movwf	___awdiv@sign^0,c
  4930  001410  BE23               	btfsc	(___awdiv@divisor+1)^0,7,c
  4931  001412  EF0F  F00A         	goto	u2060
  4932  001416  EF0D  F00A         	goto	u2061
  4933  00141A                     u2061:
  4934  00141A  EF15  F00A         	goto	l2396
  4935  00141E                     u2060:
  4936  00141E  6C22               	negf	___awdiv@divisor^0,c
  4937  001420  1E23               	comf	(___awdiv@divisor+1)^0,f,c
  4938  001422  B0D8               	btfsc	status,0,c
  4939  001424  2A23               	incf	(___awdiv@divisor+1)^0,f,c
  4940  001426  0E01               	movlw	1
  4941  001428  6E25               	movwf	___awdiv@sign^0,c
  4942  00142A                     l2396:
  4943  00142A  BE21               	btfsc	(___awdiv@dividend+1)^0,7,c
  4944  00142C  EF1C  F00A         	goto	u2070
  4945  001430  EF1A  F00A         	goto	u2071
  4946  001434                     u2071:
  4947  001434  EF22  F00A         	goto	l2402
  4948  001438                     u2070:
  4949  001438  6C20               	negf	___awdiv@dividend^0,c
  4950  00143A  1E21               	comf	(___awdiv@dividend+1)^0,f,c
  4951  00143C  B0D8               	btfsc	status,0,c
  4952  00143E  2A21               	incf	(___awdiv@dividend+1)^0,f,c
  4953  001440  0E01               	movlw	1
  4954  001442  1A25               	xorwf	___awdiv@sign^0,f,c
  4955  001444                     l2402:
  4956  001444  0E00               	movlw	0
  4957  001446  6E27               	movwf	(___awdiv@quotient+1)^0,c
  4958  001448  0E00               	movlw	0
  4959  00144A  6E26               	movwf	___awdiv@quotient^0,c
  4960  00144C  5022               	movf	___awdiv@divisor^0,w,c
  4961  00144E  1023               	iorwf	(___awdiv@divisor+1)^0,w,c
  4962  001450  B4D8               	btfsc	status,2,c
  4963  001452  EF2D  F00A         	goto	u2081
  4964  001456  EF2F  F00A         	goto	u2080
  4965  00145A                     u2081:
  4966  00145A  EF57  F00A         	goto	l2424
  4967  00145E                     u2080:
  4968  00145E  0E01               	movlw	1
  4969  001460  6E24               	movwf	___awdiv@counter^0,c
  4970  001462  EF37  F00A         	goto	l2410
  4971  001466                     l2408:
  4972  001466  90D8               	bcf	status,0,c
  4973  001468  3622               	rlcf	___awdiv@divisor^0,f,c
  4974  00146A  3623               	rlcf	(___awdiv@divisor+1)^0,f,c
  4975  00146C  2A24               	incf	___awdiv@counter^0,f,c
  4976  00146E                     l2410:
  4977  00146E  AE23               	btfss	(___awdiv@divisor+1)^0,7,c
  4978  001470  EF3C  F00A         	goto	u2091
  4979  001474  EF3E  F00A         	goto	u2090
  4980  001478                     u2091:
  4981  001478  EF33  F00A         	goto	l2408
  4982  00147C                     u2090:
  4983  00147C                     l2412:
  4984  00147C  90D8               	bcf	status,0,c
  4985  00147E  3626               	rlcf	___awdiv@quotient^0,f,c
  4986  001480  3627               	rlcf	(___awdiv@quotient+1)^0,f,c
  4987  001482  5022               	movf	___awdiv@divisor^0,w,c
  4988  001484  5C20               	subwf	___awdiv@dividend^0,w,c
  4989  001486  5023               	movf	(___awdiv@divisor+1)^0,w,c
  4990  001488  5821               	subwfb	(___awdiv@dividend+1)^0,w,c
  4991  00148A  A0D8               	btfss	status,0,c
  4992  00148C  EF4A  F00A         	goto	u2101
  4993  001490  EF4C  F00A         	goto	u2100
  4994  001494                     u2101:
  4995  001494  EF51  F00A         	goto	l2420
  4996  001498                     u2100:
  4997  001498  5022               	movf	___awdiv@divisor^0,w,c
  4998  00149A  5E20               	subwf	___awdiv@dividend^0,f,c
  4999  00149C  5023               	movf	(___awdiv@divisor+1)^0,w,c
  5000  00149E  5A21               	subwfb	(___awdiv@dividend+1)^0,f,c
  5001  0014A0  8026               	bsf	___awdiv@quotient^0,0,c
  5002  0014A2                     l2420:
  5003  0014A2  90D8               	bcf	status,0,c
  5004  0014A4  3223               	rrcf	(___awdiv@divisor+1)^0,f,c
  5005  0014A6  3222               	rrcf	___awdiv@divisor^0,f,c
  5006  0014A8  2E24               	decfsz	___awdiv@counter^0,f,c
  5007  0014AA  EF3E  F00A         	goto	l2412
  5008  0014AE                     l2424:
  5009  0014AE  5025               	movf	___awdiv@sign^0,w,c
  5010  0014B0  B4D8               	btfsc	status,2,c
  5011  0014B2  EF5D  F00A         	goto	u2111
  5012  0014B6  EF5F  F00A         	goto	u2110
  5013  0014BA                     u2111:
  5014  0014BA  EF63  F00A         	goto	l2428
  5015  0014BE                     u2110:
  5016  0014BE  6C26               	negf	___awdiv@quotient^0,c
  5017  0014C0  1E27               	comf	(___awdiv@quotient+1)^0,f,c
  5018  0014C2  B0D8               	btfsc	status,0,c
  5019  0014C4  2A27               	incf	(___awdiv@quotient+1)^0,f,c
  5020  0014C6                     l2428:
  5021  0014C6  C026  F020         	movff	___awdiv@quotient,?___awdiv
  5022  0014CA  C027  F021         	movff	___awdiv@quotient+1,?___awdiv+1
  5023  0014CE  0012               	return		;funcret
  5024  0014D0                     __end_of___awdiv:
  5025                           	callstack 0
  5026                           
  5027                           	psect	rparam
  5028  0000                     
  5029                           	psect	idloc
  5030                           
  5031                           ;Config register IDLOC0 @ 0x200000
  5032                           ;	unspecified, using default values
  5033  200000                     	org	2097152
  5034  200000  FF                 	db	255
  5035                           
  5036                           ;Config register IDLOC1 @ 0x200001
  5037                           ;	unspecified, using default values
  5038  200001                     	org	2097153
  5039  200001  FF                 	db	255
  5040                           
  5041                           ;Config register IDLOC2 @ 0x200002
  5042                           ;	unspecified, using default values
  5043  200002                     	org	2097154
  5044  200002  FF                 	db	255
  5045                           
  5046                           ;Config register IDLOC3 @ 0x200003
  5047                           ;	unspecified, using default values
  5048  200003                     	org	2097155
  5049  200003  FF                 	db	255
  5050                           
  5051                           ;Config register IDLOC4 @ 0x200004
  5052                           ;	unspecified, using default values
  5053  200004                     	org	2097156
  5054  200004  FF                 	db	255
  5055                           
  5056                           ;Config register IDLOC5 @ 0x200005
  5057                           ;	unspecified, using default values
  5058  200005                     	org	2097157
  5059  200005  FF                 	db	255
  5060                           
  5061                           ;Config register IDLOC6 @ 0x200006
  5062                           ;	unspecified, using default values
  5063  200006                     	org	2097158
  5064  200006  FF                 	db	255
  5065                           
  5066                           ;Config register IDLOC7 @ 0x200007
  5067                           ;	unspecified, using default values
  5068  200007                     	org	2097159
  5069  200007  FF                 	db	255
  5070                           
  5071                           	psect	config
  5072                           
  5073                           ; Padding undefined space
  5074  300000                     	org	3145728
  5075  300000  FF                 	db	255
  5076                           
  5077                           ;Config register CONFIG1H @ 0x300001
  5078                           ;	Oscillator Selection bits
  5079                           ;	OSC = HS, HS oscillator
  5080                           ;	Fail-Safe Clock Monitor Enable bit
  5081                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5082                           ;	Internal/External Oscillator Switchover bit
  5083                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5084  300001                     	org	3145729
  5085  300001  02                 	db	2
  5086                           
  5087                           ;Config register CONFIG2L @ 0x300002
  5088                           ;	Power-up Timer Enable bit
  5089                           ;	PWRT = OFF, PWRT disabled
  5090                           ;	Brown-out Reset Enable bits
  5091                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5092                           ;	Brown Out Reset Voltage bits
  5093                           ;	BORV = 0x2E, user specified literal
  5094  300002                     	org	3145730
  5095  300002  71                 	db	369
  5096                           
  5097                           ;Config register CONFIG2H @ 0x300003
  5098                           ;	Watchdog Timer Enable bit
  5099                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5100                           ;	Watchdog Timer Postscale Select bits
  5101                           ;	WDTPS = 1, 1:1
  5102  300003                     	org	3145731
  5103  300003  00                 	db	0
  5104                           
  5105                           ; Padding undefined space
  5106  300004                     	org	3145732
  5107  300004  FF                 	db	255
  5108                           
  5109                           ;Config register CONFIG3H @ 0x300005
  5110                           ;	CCP2 MUX bit
  5111                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5112                           ;	PORTB A/D Enable bit
  5113                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5114                           ;	Low-Power Timer1 Oscillator Enable bit
  5115                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5116                           ;	MCLR Pin Enable bit
  5117                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5118  300005                     	org	3145733
  5119  300005  83                 	db	131
  5120                           
  5121                           ;Config register CONFIG4L @ 0x300006
  5122                           ;	Stack Full/Underflow Reset Enable bit
  5123                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5124                           ;	Single-Supply ICSP Enable bit
  5125                           ;	LVP = OFF, Single-Supply ICSP disabled
  5126                           ;	Extended Instruction Set Enable bit
  5127                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5128                           ;	Background Debugger Enable bit
  5129                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5130  300006                     	org	3145734
  5131  300006  80                 	db	128
  5132                           
  5133                           ; Padding undefined space
  5134  300007                     	org	3145735
  5135  300007  FF                 	db	255
  5136                           
  5137                           ;Config register CONFIG5L @ 0x300008
  5138                           ;	Code Protection bit
  5139                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5140                           ;	Code Protection bit
  5141                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5142                           ;	Code Protection bit
  5143                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5144                           ;	Code Protection bit
  5145                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5146  300008                     	org	3145736
  5147  300008  0F                 	db	15
  5148                           
  5149                           ;Config register CONFIG5H @ 0x300009
  5150                           ;	Boot Block Code Protection bit
  5151                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5152                           ;	Data EEPROM Code Protection bit
  5153                           ;	CPD = OFF, Data EEPROM not code-protected
  5154  300009                     	org	3145737
  5155  300009  C0                 	db	192
  5156                           
  5157                           ;Config register CONFIG6L @ 0x30000A
  5158                           ;	Write Protection bit
  5159                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5160                           ;	Write Protection bit
  5161                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5162                           ;	Write Protection bit
  5163                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5164                           ;	Write Protection bit
  5165                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5166  30000A                     	org	3145738
  5167  30000A  0F                 	db	15
  5168                           
  5169                           ;Config register CONFIG6H @ 0x30000B
  5170                           ;	Configuration Register Write Protection bit
  5171                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5172                           ;	Boot Block Write Protection bit
  5173                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  5174                           ;	Data EEPROM Write Protection bit
  5175                           ;	WRTD = OFF, Data EEPROM not write-protected
  5176  30000B                     	org	3145739
  5177  30000B  E0                 	db	224
  5178                           
  5179                           ;Config register CONFIG7L @ 0x30000C
  5180                           ;	Table Read Protection bit
  5181                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5182                           ;	Table Read Protection bit
  5183                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5184                           ;	Table Read Protection bit
  5185                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5186                           ;	Table Read Protection bit
  5187                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5188  30000C                     	org	3145740
  5189  30000C  0F                 	db	15
  5190                           
  5191                           ;Config register CONFIG7H @ 0x30000D
  5192                           ;	Boot Block Table Read Protection bit
  5193                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5194  30000D                     	org	3145741
  5195  30000D  40                 	db	64
  5196                           tosu	equ	0xFFF
  5197                           tosh	equ	0xFFE
  5198                           tosl	equ	0xFFD
  5199                           stkptr	equ	0xFFC
  5200                           pclatu	equ	0xFFB
  5201                           pclath	equ	0xFFA
  5202                           pcl	equ	0xFF9
  5203                           tblptru	equ	0xFF8
  5204                           tblptrh	equ	0xFF7
  5205                           tblptrl	equ	0xFF6
  5206                           tablat	equ	0xFF5
  5207                           prodh	equ	0xFF4
  5208                           prodl	equ	0xFF3
  5209                           indf0	equ	0xFEF
  5210                           postinc0	equ	0xFEE
  5211                           postdec0	equ	0xFED
  5212                           preinc0	equ	0xFEC
  5213                           plusw0	equ	0xFEB
  5214                           fsr0h	equ	0xFEA
  5215                           fsr0l	equ	0xFE9
  5216                           wreg	equ	0xFE8
  5217                           indf1	equ	0xFE7
  5218                           postinc1	equ	0xFE6
  5219                           postdec1	equ	0xFE5
  5220                           preinc1	equ	0xFE4
  5221                           plusw1	equ	0xFE3
  5222                           fsr1h	equ	0xFE2
  5223                           fsr1l	equ	0xFE1
  5224                           bsr	equ	0xFE0
  5225                           indf2	equ	0xFDF
  5226                           postinc2	equ	0xFDE
  5227                           postdec2	equ	0xFDD
  5228                           preinc2	equ	0xFDC
  5229                           plusw2	equ	0xFDB
  5230                           fsr2h	equ	0xFDA
  5231                           fsr2l	equ	0xFD9
  5232                           status	equ	0xFD8

Data Sizes:
    Strings     61
    Constant    16
    Data        201
    BSS         211
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     23      75
    BANK0           128      0       0
    BANK1           256      0     190
    BANK2           256      0     170
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 170
		 -> nomes(BANK2[170]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 170
		 -> nomes(BANK2[170]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    lcdStr@str	PTR const unsigned char  size(2) Largest target is 190
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[7]), STR_3(CODE[4]), 
		 -> STR_2(CODE[16]), STR_1(CODE[17]), musicas.nome(BANK1[17]), musicas(BANK1[190]), 


Critical Paths under _main in COMRAM

    _main->_chooseSong
    _ssdInit->_pinMode
    _songsInit->_strcpy
    _strcpy->___wmul
    _lcdInit->_lcdCommand
    _chooseSong->_playSong
    _ssdUpdate->_digitalWrite
    _pwmSet->___lwdiv
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _lcdStr->_lcdData
    _lcdData->_digitalWrite
    _lcdPosition->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us
    _alterarVolume->_atraso_ms
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   49225
                          _atraso_ms
                         _chooseSong
                             _kpInit
                         _lcdCommand
                            _lcdInit
                        _lcdPosition
                             _lcdStr
                          _songsInit
                            _ssdInit
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    1352
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _songsInit                                            2     2      0    1149
                                             14 COMRAM     2     2      0
                             ___wmul
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     4      4     248
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    4243
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _chooseSong                                           2     2      0   32215
                                             21 COMRAM     2     2      0
                          _atraso_ms
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                        _lcdPosition
                             _lcdStr
                           _playSong
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _playSong                                             5     5      0   18202
                                             16 COMRAM     5     5      0
                            ___awdiv
                            ___awmod
                      _alterarVolume
                          _atraso_ms
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                        _lcdPosition
                             _lcdStr
                            _pwmInit
                             _pwmSet
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _ssdUpdate                                            2     2      0    2572
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1     860
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _pwmSet                                               5     5      0    1172
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     767
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _pwmInit                                              0     0      0     550
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (4) _pwmFrequency                                         2     0      2     550
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcdStr                                               5     3      2    3361
                                              8 COMRAM     5     3      2
                            _lcdData
 ---------------------------------------------------------------------------------
 (2) _lcdData                                              2     2      0    2663
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _lcdPosition                                          3     2      1    3588
                                              8 COMRAM     3     2      1
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    2799
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    2572
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      92
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _kpDebounce                                          10    10      0     315
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (3) _alterarVolume                                        3     3      0     563
                                              6 COMRAM     2     2      0
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            6     4      2     518
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     904
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _chooseSong
     _atraso_ms
     _kpDebounce
     _kpRead
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _lcdPosition
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
     _lcdStr
       _lcdData
         _Delay40us
         _digitalWrite
     _playSong
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _alterarVolume
         _atraso_ms
       _atraso_ms
       _kpDebounce
       _kpRead
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
       _lcdPosition
         _lcdCommand
           _Delay2ms
             _Delay40us
           _Delay40us
           _digitalWrite
       _lcdStr
         _lcdData
           _Delay40us
           _digitalWrite
       _pwmInit
         _pwmFrequency
           ___aldiv
       _pwmSet
         ___lwdiv
         ___wmul
       _ssdDigit
       _ssdUpdate
         _digitalWrite
     _ssdDigit
     _ssdUpdate
       _digitalWrite
   _kpInit
   _lcdCommand
     _Delay2ms
       _Delay40us
     _Delay40us
     _digitalWrite
   _lcdInit
     _Delay2ms
       _Delay40us
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _pinMode
   _lcdPosition
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
   _lcdStr
     _lcdData
       _Delay40us
       _digitalWrite
   _songsInit
     ___wmul
     _strcpy
       ___wmul (ARG)
   _ssdInit
     _pinMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      AA       9       66.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      BE       7       74.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     17      4B       1       59.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B3      15        0.0%
DATA                 0      0     1B3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Dec 08 18:41:35 2020

                      _i 003E          ??_alterarVolume 0026                       l42 0DB6  
                     l76 0B68                       l86 1A0C                       l99 1CC2  
           ___awdiv@sign 0025                       _v0 0042                       _v1 0041  
                     _v2 0040                       _v3 003F      ___wmul@multiplicand 0022  
                    l111 17D8                      l104 1C90                      l120 1A8C  
                    l121 1AB2                      l114 1BCA                      l130 18C8  
                    l124 1AC8                      l300 1B20                      l213 115A  
                    l117 1850                      l310 1080                      l231 0820  
                    l209 112C                      l313 1B76                      l330 1CD6  
                    l226 07E6                      l235 08CC                      l219 11C0  
                    l420 1CAA                      l236 0870                      l350 0F30  
                    l502 140A                      l414 19A8                      l423 1C2E  
                    l247 091A                      l273 12FE                      l417 1C54  
                    l353 1CCC                      l267 12EE                      l348 0F10  
                    l349 0F28                      l199 16CE                      l654 14CE  
                    l921 193C                      l914 1934                      l667 157E  
                    _PR2 000FCB                      _cnt 0044             ___awmod@sign 002D  
                    prod 000FF3                      wreg 000FE8                     l1100 1C08  
                   l2000 0C88                     l2010 0D20                     l2002 0CA8  
                   l2100 19F6                     l2020 1C76                     l2012 0D42  
                   l2004 0CCA                     l2030 1C80                     l2014 0D5E  
                   l2006 0CE6                     l2110 177E                     l2102 175E  
                   l2200 0DC0                     l2016 0D78                     l2008 0D00  
                   l2120 17CC                     l2112 1792                     l2104 1762  
                   l2040 1326                     l2032 1300                     l2026 1C7A  
                   l2018 0D98                     l2122 17D4                     l2114 17A6  
                   l2106 1766                     l2130 1B96                     l2050 136E  
                   l2042 1334                     l2034 1304                     l2028 1C7E  
                   l2116 17AA                     l2108 177A                     l2132 1B9A  
                   l2124 1B7A                     l2060 13B8                     l2052 1376  
                   l2044 1344                     l2036 1312                     l2140 1C30  
                   l2300 1AE0                     l2230 0EC2                     l2214 0E0E  
                   l2206 0DC4                     l2118 17BC                     l2134 1BAE  
                   l2126 1B7E                     l2070 13EA                     l2062 13C8  
                   l2054 1382                     l2046 1348                     l2038 1322  
                   l2150 18D2                     l2142 1C0A                     l2310 1B1C  
                   l2302 1AF0                     l2400 1440                     l2080 19BA  
                   l2240 0EFE                     l2232 0EC4                     l2224 0E32  
                   l2216 0E12                     l2208 0E06                     l2136 1BC2  
                   l2128 1B82                     l2072 13FA                     l2064 13CA  
                   l2056 1390                     l2048 1358                     l2320 1C9E  
                   l2312 1C92                     l2160 1908                     l2152 18E4  
                   l2144 1C26                     l2304 1AF4                     l2410 146E  
                   l2402 1444                     l2090 19E6                     l2242 0F04  
                   l2234 0ED4                     l2226 0E5E                     l2218 0E2E  
                   l2250 1CCE                     l2170 1A72                     l2138 1BC6  
                   l2066 13D4                     l2058 139A                     l2314 1C94  
                   l2162 191E                     l2154 18EC                     l2330 199A  
                   l2322 1940                     l2306 1B06                     l2420 14A2  
                   l2412 147C                     l2404 144C                     l2084 19CE  
                   l2076 19AA                     l2340 11FC                     l2332 11C4  
                   l2244 0F08                     l2236 0ED6                     l2228 0E8E  
                   l2180 1AAC                     l2172 1A76                     l2068 13DA  
                   l2316 1C98                     l2164 1926                     l2156 18F4  
                   l2148 18CA                     l2324 195E                     l2308 1B0A  
                   l2260 0F72                     l2252 0F32                     l2500 0AF4  
                   l2422 14A8                     l2414 1482                     l2406 145E  
                   l2094 19EC                     l2086 19D2                     l2078 19B6  
                   l2350 121A                     l2342 11FE                     l2334 11D4  
                   l2246 0F20                     l2238 0EE6                     l2182 1AC2  
                   l2174 1A86                     l2190 185A                     l2318 1C9A  
                   l2166 1928                     l2158 1902                     l2326 197A  
                   l2270 0FCE                     l2262 0F8E                     l2254 0F36  
                   l2502 0B10                     l2510 1BDC                     l2416 1498  
                   l2408 1466                     l2424 14AE                     l2440 14EE  
                   l2432 14D0                     l2360 1254                     l2352 1222  
                   l2344 1202                     l2336 11E6                     l2248 0F2C  
                   l2176 1A86                     l2192 188A                     l2168 192E  
                   l2328 1982                     l2280 1018                     l2272 0FE2  
                   l2264 0FA0                     l2256 0F4A                     l2520 068E  
                   l2512 0650                     l2504 0B22                     l2426 14BE  
                   l2418 14A0                     l2450 1526                     l2442 14FC  
                   l2434 14D4                     l2098 19F2                     l2370 129A  
                   l2362 1266                     l2354 1232                     l2346 1206  
                   l2338 11EC                     l2186 1AC2                     l2178 1A9C  
                   l2194 188C                     l2282 102A                     l2274 0FEA  
                   l2266 0FB4                     l2290 1046                     l2258 0F5E  
                   l2610 08A0                     l2602 0882                     l2530 0708  
                   l2522 06A6                     l2514 0664                     l2506 0B46  
                   l2428 14C6                     l2452 1534                     l2460 155E  
                   l2444 1504                     l2436 14E2                     l2380 12D6  
                   l2372 12A2                     l2364 126E                     l2356 123A  
                   l2348 120A                     l2196 0DB8                     l2188 1852  
                   l2284 103E                     l2276 0FFC                     l2268 0FBC  
                   l2620 08EE                     l2604 0886                     l2540 0778  
                   l2532 0722                     l2524 06AC                     l2516 0678  
                   l2700 10C6                     l2508 1BCC                     l2390 1410  
                   l2462 156E                     l2454 154A                     l2446 1516  
                   l2438 14EA                     l2382 12E8                     l2374 12B4  
                   l2366 1280                     l2358 124C                     l2198 0DBC  
                   l2278 1010                     l2630 090C                     l2606 088A  
                   l2614 08CC                     l2550 0790                     l2542 0782  
                   l2534 073A                     l2526 06D6                     l2622 08F0  
                   l2518 0682                     l2710 111E                     l2702 10E8  
                   l2470 0938                     l2392 141E                     l2464 1576  
                   l2456 1552                     l2448 151E                     l2376 12BC  
                   l2368 1288                     l2384 12EE                     l2296 1ACC  
                   l2632 0918                     l2624 0900                     l2616 08CE  
                   l2608 0892                     l2552 0794                     l2544 078C  
                   l2536 0764                     l2528 06F0                     l2720 1168  
                   l2712 1126                     l2704 10F8                     l2480 09BA  
                   l2472 094A                     l2640 1806                     l2394 1426  
                   l2458 1558                     l2386 12FA                     l2378 12CE  
                   l2298 1ADC                     l2626 0904                     l2618 08DE  
                   l2570 07DC                     l2562 07BE                     l2554 07A0  
                   l2538 076E                     l2730 11AA                     l2714 113A  
                   l2722 1170                     l2706 1100                     l2490 0A56  
                   l2482 09DE                     l2474 096A                     l2650 181A  
                   l2642 180A                     l2396 142A                     l2388 140C  
                   l2628 090A                     l2580 0808                     l2564 07C2  
                   l2556 07A4                     l2732 11B4                     l2724 1180  
                   l2716 114C                     l2708 110E                     l2492 0A7C  
                   l2484 0A04                     l2476 098C                     l2468 091C  
                   l2660 1832                     l2652 1820                     l2644 180E  
                   l2636 17DA                     l2740 16D0                     l2398 1438  
                   l2590 083A                     l2582 0816                     l2574 07F8  
                   l2566 07C6                     l2558 07AC                     l2726 118C  
                   l2734 11BC                     l2718 1154                     l2494 0A98  
                   l2486 0A20                     l2478 09A8                     l2662 1838  
                   l2654 1824                     l2646 1812                     l2638 1802  
                   l2670 162A                     l2750 16E6                     l2742 16D4  
                   l2592 0842                     l2576 07FC                     l2568 07CE  
                   l2728 1196                     l1872 1CC4                     l2496 0AAA  
                   l2488 0A32                     l2664 183E                     l2656 1828  
                   l2648 1816                     l2680 16B8                     l2736 1B22  
                   l2760 171E                     l2752 16F0                     l2744 16D8  
                   l1970 1CAC                     l2594 0850                     l2586 0832  
                   l2578 0800                     l2690 10A0                     l2682 1082  
                   l2498 0ACE                     l2666 1844                     l2658 182E  
                   l2738 1B72                     l2770 1750                     l2762 1724  
                   l2754 16FC                     l2746 16DC                     l1980 0B6A  
                   l2596 0860                     l2588 0836                     l2692 10AE  
                   l2684 1086                     l2668 184A                     l2676 1636  
                   l2764 172E                     l2756 1706                     l2748 16E0  
                   l1990 0BF6                     l1982 0B86                     l2598 0868  
                   l2694 10B2                     l2686 108E                     l2678 16B4  
                   l2766 173A                     l2758 1712                     l1976 1CB0  
                   l1992 0C10                     l1984 0B98                     l2776 105A  
                   l2696 10B6                     l2688 1092                     l2768 1744  
                   l1978 1CB2                     l1994 0C30                     l1986 0BB8  
                   l2698 10BA                     l1996 0C52                     l1988 0BDA  
                   l1998 0C6E                     STR_1 0622                     STR_2 0633  
                   STR_3 064A                     STR_4 0643                     STR_5 0611  
                   STR_6 0622                     u2000 1266                     u2001 1262  
                   u2010 1280                     u2011 127C                     u2100 1498  
                   u2020 129A                     u2101 1494                     u2021 1296  
                   u2110 14BE                     u2030 12B4                     u2111 14BA  
                   u2031 12B0                     u2120 14E2                     u2040 12CE  
                   u2121 14DE                     u2041 12CA                     u2130 14FC  
                   u2050 12E8                     u1410 0BF6                     u2131 14F8  
                   u2051 12E4                     u1411 0BF2                     u2060 141E  
                   u2140 1516                     u1500 0D00                     u1420 0C10  
                   u1404 0BCA                     u2300 0A98                     u2220 09A8  
                   u2204 095C                     u2061 141A                     u2141 1512  
                   u1501 0CFC                     u1421 0C0C                     u1405 0BC6  
                   u2301 0A94                     u2221 09A4                     u2205 0958  
                   u2070 1438                     u2150 1534                     u2310 0AAA  
                   u2230 09BA                     u2214 097C                     u2071 1434  
                   u2151 1530                     u2311 0AA6                     u2231 09B6  
                   u2215 0978                     u2080 145E                     u2160 154A  
                   u1360 1CC2                     u1600 136E                     u2400 07DC  
                   u2081 145A                     u2161 1546                     u1361 1CBE  
                   u1601 136A                     u2401 07D8                     u2090 147C  
                   u2170 156E                     u1530 0D5E                     u1514 0D12  
                   u1450 0C6E                     u1434 0C22                     u1370 0B86  
                   u1610 1390                     u2410 07F4                     u2091 1478  
                   u2171 156A                     u1531 0D5A                     u1515 0D0E  
                   u1451 0C6A                     u1435 0C1E                     u1371 0B82  
                   u1611 138C                     u2411 07F0                     u1540 0D78  
                   u1524 0D32                     u1460 0C88                     u1444 0C42  
                   u1380 0B98                     u1620 13B8                     u1700 1902  
                   u2500 0900                     u2420 0816                     u2340 0B10  
                   u2324 0AC0                     u2260 0A20                     u2244 09D0  
                   u2180 0938                     u1541 0D74                     u1525 0D2E  
                   u1461 0C84                     u1445 0C3E                     u1381 0B94  
                   u1621 13B4                     u1701 18FE                     u2501 08FC  
                   u2421 0812                     u2341 0B0C                     u2325 0ABC  
                   u2261 0A1C                     u2245 09CC                     u2181 0934  
                   u1630 13EA                     u1710 191E                     u2430 082E  
                   u2350 0B22                     u2334 0AE4                     u2270 0A32  
                   u2254 09F4                     u2190 094A                     u2510 16CE  
                   u1631 13E6                     u1711 191A                     u2431 082A  
                   u2351 0B1E                     u2335 0AE0                     u2271 0A2E  
                   u2255 09F0                     u2191 0946                     u2511 16CA  
                   u1640 19CA                     u1720 1A86                     u2440 0850  
                   u2600 1168                     u2520 10A0                     u1641 19C6  
                   u1721 1A82                     u2441 084C                     u2601 1164  
                   u2521 109C                     u1650 19E2                     u1810 0E2E  
                   u1570 1C90                     u1554 0D8A                     u1490 0CE6  
                   u1474 0C9A                     u1394 0BAA                     u1730 1A9C  
                   u2450 0860                     u2530 10AE                     u1651 19DE  
                   u1811 0E2A                     u1571 1C8C                     u1555 0D86  
                   u1491 0CE2                     u1475 0C96                     u1395 0BA6  
                   u1731 1A98                     u2451 085C                     u2531 10AA  
                   u1660 1A0C                     u1804 0DFA                     u1564 0DAA  
                   u1484 0CBA                     u1740 1AAC                     u1580 1312  
                   u1900 1ADC                     u2460 087E                     u2540 10E8  
                   u2364 0B38                     u2284 0A48                     u2380 1C08  
                   u1661 1A08                     u1805 0DF6                     u1565 0DA6  
                   u1485 0CB6                     u1741 1AA8                     u1581 130E  
                   u1901 1AD8                     u2461 087A                     u2541 10E4  
                   u2365 0B34                     u2285 0A44                     u2381 1C04  
                   u1830 0E5E                     u1670 17BC                     u1750 1AC2  
                   u1590 1334                     u1910 1AF0                     u2470 08A0  
                   u2390 07BA                     u2550 10F8                     u2374 0B5C  
                   u2294 0A6C                     u1831 0E5A                     u1671 17B8  
                   u1751 1ABE                     u1591 1330                     u1911 1AEC  
                   u2471 089C                     u2391 07B6                     u2551 10F4  
                   u2375 0B58                     u2295 0A68                     u1824 0E44  
                   u1680 17CC                     u1760 1886                     u1920 1B06  
                   u2480 08DE                     u2560 110E                     u1825 0E40  
                   u1681 17C8                     u1921 1B02                     u2481 08DA  
                   u2561 110A                     u1770 18B8                     u1690 18E4  
                   u1930 1B1C                     u2490 08EE                     u2570 111E  
                   u1691 18E0                     u1931 1B18                     u2491 08EA  
                   u2571 111A                     u1940 11D4                     u1860 0ED4  
                   u1844 0E7C                     u1780 18C8                     u2580 113A  
                   u1941 11D0                     u1861 0ED0                     u1845 0E76  
                   u1781 18C4                     u2581 1136                     u1950 11E6  
                   u1870 0EE6                     u1854 0EAC                     u2590 114C  
                   u1951 11E2                     u1871 0EE2                     u1855 0EA6  
                   u1767 187C                     u2591 1148                     u1960 11FC  
                   u1880 0EFE                     u1961 11F8                     u1881 0EFA  
                   u1777 18AE                     u1970 121A                     u1890 0F20  
                   u1794 0DDA                     u1971 1216                     u1891 0F1C  
                   u1795 0DD6                     u1980 1232                     u1981 122E  
                   u1990 124C                     u1991 1248                     _flag 004A  
                   _main 16D0                     fsr0h 000FEA                     fsr1h 000FE2  
                   indf0 000FEF                     fsr2h 000FDA                     fsr0l 000FE9  
                   indf1 000FE7                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     prodh 000FF4                     prodl 000FF3  
                   start 0000             ___param_bank 000000           pwmSet@porcento 0029  
        __end_of___aldiv 140C                    ?_main 0020          __end_of___awdiv 14D0  
        __end_of___awmod 1580                    _T0CON 000FD5          ___awdiv@divisor 0022  
                  _T2CON 000FCA          __end_of___lwdiv 193E       alterarVolume@old_D 0027  
        ___awdiv@counter 0024                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _PORTE 000F84                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96          __end_of_lcdData 1BCC          __end_of_lcdInit 1852  
                  _pause 001E                    _tecla 001F                    _nomes 0200  
        __end_of_pinMode 0B6A                    _valor 0601                    _tempo 0049  
                  tablat 000FF5          __end_of_ssdInit 1B78          __end_of_pwmInit 1CAC  
                  status 000FD8         __end_of_Delay2ms 1C92     __end_of_digitalWrite 0DB8  
        __initialization 1A0E             __end_of_main 175C       __size_of_Delay40us 0018  
                 ??_main 0037            __activetblptr 000002                   _CCPR1L 000FBE  
       ___awdiv@dividend 0020                   _INTCON 000FF2     __size_of_lcdPosition 005A  
      lcdPosition@coluna 0028                ??___aldiv 0028                   ___wmul 1C0A  
              ??___awdiv 0024                ??___awmod 002C                ??___lwdiv 0024  
                 _lcdStr 1852                   _kpInit 1CC4                   _kpRead 1CCE  
                 _indice 004B                   clear_0 1A54                   clear_1 1A60  
       ___awdiv@quotient 0026                   _teclas 0015          ___awmod@divisor 002A  
              ??_lcdData 0026                ??_lcdInit 0028                   _pwmSet 193E  
        ___awmod@counter 002C                   _strcpy 1BCC                   _volume 001D  
       __end_of_playSong 091C         __end_of_ssdDigit 1B22             __pdataCOMRAM 0001  
              ??_pinMode 0024             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_ssdInit 0026  
              ??_pwmInit 0030        __end_of_Delay40us 1CC4               __accesstop 0080  
__end_of__initialization 1A66            ___rparam_used 000001              pinMode@type 0022  
         __pcstackCOMRAM 0020             __pidataBANK2 1580         alterarVolume@opt 0026  
          __end_of_valor 0611                ?_Delay2ms 0020       __size_of_atraso_ms 0064  
             __pbssBANK1 0100    __size_of_digitalWrite 024E               _lcdCommand 175C  
                ?___wmul 0020                  ?_lcdStr 0028                  ?_kpInit 0020  
                ?_kpRead 0020                  _CCP1CON 000FBD               _kpDebounce 0DB8  
  __end_of_alterarVolume 1300               _chooseSong 1082                  ?_pwmSet 0020  
                ?_strcpy 0026       __size_of_ssdUpdate 0150               ??_Delay2ms 0021  
           _digitalWrite 0B6A       __size_of_songsInit 00A6                ?_playSong 0020  
                __Hparam 0000                  __Lparam 0000                ?_ssdDigit 0020  
        kpDebounce@old_D 0025       lcdPosition@comando 002A          kpDebounce@tempo 003D  
                ___aldiv 1300                  ___awdiv 140C                  ___awmod 14D0  
        __size_of___wmul 0026                  ___lwdiv 18CA        __end_of_atraso_ms 1A0E  
           __psmallconst 0600          __size_of_lcdStr 0078          __size_of_kpInit 000A  
        __size_of_kpRead 000A              ssdDigit@val 0021              ssdDigit@pos 0020  
                __pcinit 1A0E                  _lcdData 1B78                  __ramtop 0600  
                _lcdInit 17DA                  __ptext0 16D0                  __ptext1 1B22  
                __ptext2 162A                  __ptext3 1BCC                  __ptext4 17DA  
                __ptext5 091C                  __ptext6 1CC4                  __ptext7 1082  
                __ptext8 0650                  __ptext9 0F32          __size_of_pwmSet 006C  
                _display 0043          __size_of_strcpy 003E                  _pinMode 091C  
       ___awmod@dividend 0028         ___aldiv@dividend 0020                  _minuto1 0048  
                _minuto2 0047                  _ssdInit 1B22                  _pwmInit 1C92  
                _musicas 0100                  lcdStr@i 002C                Delay2ms@i 0021  
    kpDebounce@valorNovo 0039     end_of_initialization 1A66            __Lmediumconst 0000  
          ?_pwmFrequency 002E               ??_playSong 0030        __end_of_ssdUpdate 1082  
             ??_ssdDigit 0021         ___aldiv@quotient 002A        __end_of_songsInit 16D0  
                postdec1 000FE5                  postdec2 000FDD              ?_lcdCommand 0020  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
                strcpy@d 002C                  strcpy@s 002A              ?_kpDebounce 0020  
            ?_chooseSong 0020            ??_lcdPosition 0029           ??_pwmFrequency 0030  
              _Delay40us 1CAC               atraso_ms@i 0022               atraso_ms@j 0024  
             atraso_ms@k 0025               atraso_ms@t 0020           __end_of___wmul 1C30  
          __pidataCOMRAM 1C56           __end_of_lcdStr 18CA           __end_of_kpInit 1CCE  
         __end_of_kpRead 1CD8           __end_of_pwmSet 19AA           __end_of_strcpy 1C0A  
    start_initialization 1A0E        __size_of_Delay2ms 001C      __size_of_lcdCommand 007E  
    __size_of_kpDebounce 017A               ?_Delay40us 0020      __size_of_chooseSong 0140  
    __end_of_lcdPosition 1ACA         lcdPosition@linha 0029                 ??___wmul 0024  
               ??_lcdStr 002A                 ??_kpInit 0020                 ??_kpRead 0022  
            __pdataBANK2 0200                 ??_pwmSet 0027                 ??_strcpy 002A  
            __pbssCOMRAM 0037               pinMode@pin 0020         ___lwdiv@dividend 0020  
      __size_of_playSong 02CC                 ?___aldiv 0020                 ?___awdiv 0020  
               ?___awmod 0028        __size_of_ssdDigit 0058                 ?___lwdiv 0020  
               ?_lcdData 0020                 ?_lcdInit 0020     __end_of_pwmFrequency 1C56  
          lcdCommand@cmd 0027                _atraso_ms 19AA              __smallconst 0600  
               ?_pinMode 0020                 ?_ssdInit 0020                 ?_pwmInit 0020  
       ___lwdiv@quotient 0024              _lcdPosition 1A70         pwmFrequency@freq 002E  
        ___aldiv@divisor 0024          ___aldiv@counter 0028              ??_Delay40us 0020  
         ___wmul@product 0024   __size_of_alterarVolume 013E             ??_lcdCommand 0026  
              _ssdUpdate 0F32                lcdStr@str 0028             ??_kpDebounce 0020  
           ??_chooseSong 0035                _songsInit 162A        ___wmul@multiplier 0020  
             ?_atraso_ms 0020          lcdCommand@old_D 0026    kpDebounce@valorAntigo 0037  
               _Delay2ms 1C76                copy_data0 1A22                copy_data1 1A42  
           _playSong$977 0030             _playSong$978 0032       __end_of_lcdCommand 17DA  
           lcdData@old_D 0027             lcdData@valor 0026               songsInit@i 002E  
     __end_of_kpDebounce 0F32       __end_of_chooseSong 11C2                 __Hrparam 0000  
               __Lrparam 0000               ?_ssdUpdate 0020         __size_of___aldiv 010C  
       __size_of___awdiv 00C4         __size_of___awmod 00B0         __size_of___lwdiv 0074  
             ?_songsInit 0020            _alterarVolume 11C2         __size_of_lcdData 0054  
       __size_of_lcdInit 0078         __size_of_pinMode 024E          ___lwdiv@divisor 0022  
        ___lwdiv@counter 0026                 __ptext10 1ACA                 __ptext11 193E  
               __ptext20 175C                 __ptext12 1C0A                 __ptext21 0B6A  
               __ptext13 18CA                 __ptext22 1C76                 __ptext14 1C92  
               __ptext23 1CAC                 __ptext15 1C30                 __ptext24 1CCE  
               __ptext16 1300                 __ptext25 0DB8                 __ptext17 1852  
               __ptext26 11C2                 __ptext18 1B78                 __ptext27 19AA  
               __ptext19 1A70                 __ptext28 14D0                 __ptext29 140C  
              playSong@j 0034         __size_of_ssdInit 0056         __size_of_pwmInit 001A  
             strcpy@dest 0026                 _duracoes 0001            __size_of_main 008C  
               _playSong 0650                 _segundo1 0046                 _segundo2 0045  
             Delay40us@i 0020                 _ssdDigit 1ACA    __size_of_pwmFrequency 0026  
              pwmSet@val 002A           ?_alterarVolume 0020              ??_atraso_ms 0022  
          ?_digitalWrite 0020        digitalWrite@value 0022             _pwmFrequency 1C30  
              strcpy@src 0028              ??_ssdUpdate 0026              ??_songsInit 002E  
            kpDebounce@i 0029              kpDebounce@j 0028              kpDebounce@k 0026  
         ??_digitalWrite 0024             ___aldiv@sign 0029             ?_lcdPosition 0028  
        digitalWrite@pin 0020        _valor@keypad$F261 003B  
