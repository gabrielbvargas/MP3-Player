

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Dec 08 14:53:14 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4520 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  0014A4                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _duracoes
    80  0014A4  00B4               	dw	180
    81  0014A6  00B4               	dw	180
    82  0014A8  00B4               	dw	180
    83  0014AA  00B4               	dw	180
    84  0014AC  00B4               	dw	180
    85  0014AE  00B4               	dw	180
    86  0014B0  00B4               	dw	180
    87  0014B2  00B4               	dw	180
    88  0014B4  00B4               	dw	180
    89  0014B6  00B4               	dw	180
    90                           
    91                           ;initializer for _teclas
    92  0014B8  0A                 	db	10
    93  0014B9  07                 	db	7
    94  0014BA  04                 	db	4
    95  0014BB  01                 	db	1
    96  0014BC  00                 	db	0
    97  0014BD  08                 	db	8
    98  0014BE  05                 	db	5
    99  0014BF  02                 	db	2
   100                           
   101                           ;initializer for _tecla
   102  0014C0  10                 	db	16
   103                           
   104                           	psect	idataBANK2
   105  000ED4                     __pidataBANK2:
   106                           	callstack 0
   107                           
   108                           ;initializer for _nomes
   109  000ED4  45                 	db	69
   110  000ED5  73                 	db	115
   111  000ED6  74                 	db	116
   112  000ED7  61                 	db	97
   113  000ED8  6D                 	db	109
   114  000ED9  6F                 	db	111
   115  000EDA  73                 	db	115
   116  000EDB  20                 	db	32
   117  000EDC  56                 	db	86
   118  000EDD  69                 	db	105
   119  000EDE  76                 	db	118
   120  000EDF  6F                 	db	111
   121  000EE0  73                 	db	115
   122  000EE1  00                 	db	0
   123  000EE2  00                 	db	0
   124  000EE3  00                 	db	0
   125  000EE4  00                 	db	0
   126  000EE5  43                 	db	67
   127  000EE6  68                 	db	104
   128  000EE7  65                 	db	101
   129  000EE8  69                 	db	105
   130  000EE9  61                 	db	97
   131  000EEA  20                 	db	32
   132  000EEB  64                 	db	100
   133  000EEC  65                 	db	101
   134  000EED  20                 	db	32
   135  000EEE  4D                 	db	77
   136  000EEF  61                 	db	97
   137  000EF0  6E                 	db	110
   138  000EF1  69                 	db	105
   139  000EF2  61                 	db	97
   140  000EF3  73                 	db	115
   141  000EF4  00                 	db	0
   142  000EF5  00                 	db	0
   143  000EF6  45                 	db	69
   144  000EF7  20                 	db	32
   145  000EF8  54                 	db	84
   146  000EF9  61                 	db	97
   147  000EFA  72                 	db	114
   148  000EFB  64                 	db	100
   149  000EFC  65                 	db	101
   150  000EFD  20                 	db	32
   151  000EFE  44                 	db	68
   152  000EFF  65                 	db	101
   153  000F00  6D                 	db	109
   154  000F01  61                 	db	97
   155  000F02  69                 	db	105
   156  000F03  73                 	db	115
   157  000F04  00                 	db	0
   158  000F05  00                 	db	0
   159  000F06  00                 	db	0
   160  000F07  53                 	db	83
   161  000F08  6F                 	db	111
   162  000F09  7A                 	db	122
   163  000F0A  69                 	db	105
   164  000F0B  6E                 	db	110
   165  000F0C  68                 	db	104
   166  000F0D  6F                 	db	111
   167  000F0E  00                 	db	0
   168  000F0F  00                 	db	0
   169  000F10  00                 	db	0
   170  000F11  00                 	db	0
   171  000F12  00                 	db	0
   172  000F13  00                 	db	0
   173  000F14  00                 	db	0
   174  000F15  00                 	db	0
   175  000F16  00                 	db	0
   176  000F17  00                 	db	0
   177  000F18  43                 	db	67
   178  000F19  69                 	db	105
   179  000F1A  67                 	db	103
   180  000F1B  61                 	db	97
   181  000F1C  6E                 	db	110
   182  000F1D  61                 	db	97
   183  000F1E  00                 	db	0
   184  000F1F  00                 	db	0
   185  000F20  00                 	db	0
   186  000F21  00                 	db	0
   187  000F22  00                 	db	0
   188  000F23  00                 	db	0
   189  000F24  00                 	db	0
   190  000F25  00                 	db	0
   191  000F26  00                 	db	0
   192  000F27  00                 	db	0
   193  000F28  00                 	db	0
   194  000F29  43                 	db	67
   195  000F2A  69                 	db	105
   196  000F2B  75                 	db	117
   197  000F2C  6D                 	db	109
   198  000F2D  65                 	db	101
   199  000F2E  73                 	db	115
   200  000F2F  20                 	db	32
   201  000F30  64                 	db	100
   202  000F31  65                 	db	101
   203  000F32  20                 	db	32
   204  000F33  56                 	db	86
   205  000F34  6F                 	db	111
   206  000F35  63                 	db	99
   207  000F36  65                 	db	101
   208  000F37  00                 	db	0
   209  000F38  00                 	db	0
   210  000F39  00                 	db	0
   211  000F3A  45                 	db	69
   212  000F3B  78                 	db	120
   213  000F3C  74                 	db	116
   214  000F3D  72                 	db	114
   215  000F3E  61                 	db	97
   216  000F3F  70                 	db	112
   217  000F40  6F                 	db	111
   218  000F41  6C                 	db	108
   219  000F42  65                 	db	101
   220  000F43  69                 	db	105
   221  000F44  00                 	db	0
   222  000F45  00                 	db	0
   223  000F46  00                 	db	0
   224  000F47  00                 	db	0
   225  000F48  00                 	db	0
   226  000F49  00                 	db	0
   227  000F4A  00                 	db	0
   228  000F4B  44                 	db	68
   229  000F4C  65                 	db	101
   230  000F4D  75                 	db	117
   231  000F4E  73                 	db	115
   232  000F4F  20                 	db	32
   233  000F50  6D                 	db	109
   234  000F51  65                 	db	101
   235  000F52  20                 	db	32
   236  000F53  4C                 	db	76
   237  000F54  69                 	db	105
   238  000F55  76                 	db	118
   239  000F56  72                 	db	114
   240  000F57  65                 	db	101
   241  000F58  00                 	db	0
   242  000F59  00                 	db	0
   243  000F5A  00                 	db	0
   244  000F5B  00                 	db	0
   245  000F5C  4D                 	db	77
   246  000F5D  61                 	db	97
   247  000F5E  72                 	db	114
   248  000F5F  61                 	db	97
   249  000F60  76                 	db	118
   250  000F61  69                 	db	105
   251  000F62  6C                 	db	108
   252  000F63  68                 	db	104
   253  000F64  61                 	db	97
   254  000F65  00                 	db	0
   255  000F66  00                 	db	0
   256  000F67  00                 	db	0
   257  000F68  00                 	db	0
   258  000F69  00                 	db	0
   259  000F6A  00                 	db	0
   260  000F6B  00                 	db	0
   261  000F6C  00                 	db	0
   262  000F6D  4D                 	db	77
   263  000F6E  65                 	db	101
   264  000F6F  64                 	db	100
   265  000F70  69                 	db	105
   266  000F71  64                 	db	100
   267  000F72  61                 	db	97
   268  000F73  20                 	db	32
   269  000F74  45                 	db	69
   270  000F75  78                 	db	120
   271  000F76  61                 	db	97
   272  000F77  74                 	db	116
   273  000F78  61                 	db	97
   274  000F79  00                 	db	0
   275  000F7A  00                 	db	0
   276  000F7B  00                 	db	0
   277  000F7C  00                 	db	0
   278  000F7D  00                 	db	0
   279                           
   280                           	psect	smallconst
   281  000600                     __psmallconst:
   282                           	callstack 0
   283  000600  00                 	db	0
   284  000601                     _valor@ssd$F104:
   285                           	callstack 0
   286  000601  3F                 	db	63
   287  000602  06                 	db	6
   288  000603  5B                 	db	91
   289  000604  4F                 	db	79
   290  000605  66                 	db	102
   291  000606  6D                 	db	109
   292  000607  7D                 	db	125
   293  000608  07                 	db	7
   294  000609  7F                 	db	127
   295  00060A  6F                 	db	111
   296  00060B  77                 	db	119
   297  00060C  7C                 	db	124
   298  00060D  39                 	db	57
   299  00060E  5E                 	db	94
   300  00060F  79                 	db	121
   301  000610  71                 	db	113
   302  000611                     __end_of_valor@ssd$F104:
   303                           	callstack 0
   304  0000                     _TRISE	set	3990
   305  0000                     _TRISD	set	3989
   306  0000                     _TRISC	set	3988
   307  0000                     _TRISB	set	3987
   308  0000                     _TRISA	set	3986
   309  0000                     _PORTE	set	3972
   310  0000                     _PORTD	set	3971
   311  0000                     _PORTC	set	3970
   312  0000                     _PORTB	set	3969
   313  0000                     _PORTA	set	3968
   314  000611                     STR_4:
   315  000611  3C                 	db	60	;'<'
   316  000612  2D                 	db	45
   317  000613  28                 	db	40
   318  000614  31                 	db	49	;'1'
   319  000615  29                 	db	41
   320  000616  20                 	db	32
   321  000617  28                 	db	40
   322  000618  2A                 	db	42
   323  000619  29                 	db	41
   324  00061A  20                 	db	32
   325  00061B  20                 	db	32
   326  00061C  28                 	db	40
   327  00061D  32                 	db	50	;'2'
   328  00061E  29                 	db	41
   329  00061F  2D                 	db	45
   330  000620  3E                 	db	62	;'>'
   331  000621  00                 	db	0
   332  000622                     STR_3:
   333  000622  45                 	db	69	;'E'
   334  000623  73                 	db	115	;'s'
   335  000624  63                 	db	99	;'c'
   336  000625  6F                 	db	111	;'o'
   337  000626  6C                 	db	108	;'l'
   338  000627  68                 	db	104	;'h'
   339  000628  61                 	db	97	;'a'
   340  000629  20                 	db	32
   341  00062A  61                 	db	97	;'a'
   342  00062B  20                 	db	32
   343  00062C  6D                 	db	109	;'m'
   344  00062D  75                 	db	117	;'u'
   345  00062E  73                 	db	115	;'s'
   346  00062F  69                 	db	105	;'i'
   347  000630  63                 	db	99	;'c'
   348  000631  61                 	db	97	;'a'
   349  000632  00                 	db	0
   350  000633                     STR_2:
   351  000633  50                 	db	80	;'P'
   352  000634  6C                 	db	108	;'l'
   353  000635  61                 	db	97	;'a'
   354  000636  79                 	db	121	;'y'
   355  000637  65                 	db	101	;'e'
   356  000638  72                 	db	114	;'r'
   357  000639  00                 	db	0
   358  00063A                     STR_1:
   359  00063A  4D                 	db	77	;'M'
   360  00063B  50                 	db	80	;'P'
   361  00063C  33                 	db	51	;'3'
   362  00063D  00                 	db	0
   363  00063E  00                 	db	0	; dummy byte at the end
   364  0000                     
   365                           ; #config settings
   366                           
   367                           	psect	cinit
   368  00127E                     __pcinit:
   369                           	callstack 0
   370  00127E                     start_initialization:
   371                           	callstack 0
   372  00127E                     __initialization:
   373                           	callstack 0
   374                           
   375                           ; Initialize objects allocated to BANK2 (170 bytes)
   376                           ; load TBLPTR registers with __pidataBANK2
   377  00127E  0ED4               	movlw	low __pidataBANK2
   378  001280  6EF6               	movwf	tblptrl,c
   379  001282  0E0E               	movlw	high __pidataBANK2
   380  001284  6EF7               	movwf	tblptrh,c
   381  001286  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   382  001288  6EF8               	movwf	tblptru,c
   383  00128A  EE02  F000         	lfsr	0,__pdataBANK2
   384  00128E  EE10 F0AA          	lfsr	1,170
   385  001292                     copy_data0:
   386  001292  0009               	tblrd		*+
   387  001294  CFF5 FFEE          	movff	tablat,postinc0
   388  001298  50E5               	movf	postdec1,w,c
   389  00129A  50E1               	movf	fsr1l,w,c
   390  00129C  E1FA               	bnz	copy_data0
   391                           
   392                           ; Initialize objects allocated to COMRAM (29 bytes)
   393                           ; load TBLPTR registers with __pidataCOMRAM
   394  00129E  0EA4               	movlw	low __pidataCOMRAM
   395  0012A0  6EF6               	movwf	tblptrl,c
   396  0012A2  0E14               	movlw	high __pidataCOMRAM
   397  0012A4  6EF7               	movwf	tblptrh,c
   398  0012A6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   399  0012A8  6EF8               	movwf	tblptru,c
   400  0012AA  EE00  F001         	lfsr	0,__pdataCOMRAM
   401  0012AE  EE10 F01D          	lfsr	1,29
   402  0012B2                     copy_data1:
   403  0012B2  0009               	tblrd		*+
   404  0012B4  CFF5 FFEE          	movff	tablat,postinc0
   405  0012B8  50E5               	movf	postdec1,w,c
   406  0012BA  50E1               	movf	fsr1l,w,c
   407  0012BC  E1FA               	bnz	copy_data1
   408                           
   409                           ; Clear objects allocated to BANK1 (190 bytes)
   410  0012BE  EE01  F000         	lfsr	0,__pbssBANK1
   411  0012C2  0EBE               	movlw	190
   412  0012C4                     clear_0:
   413  0012C4  6AEE               	clrf	postinc0,c
   414  0012C6  06E8               	decf	wreg,f,c
   415  0012C8  E1FD               	bnz	clear_0
   416                           
   417                           ; Clear objects allocated to COMRAM (16 bytes)
   418  0012CA  EE00  F01E         	lfsr	0,__pbssCOMRAM
   419  0012CE  0E10               	movlw	16
   420  0012D0                     clear_1:
   421  0012D0  6AEE               	clrf	postinc0,c
   422  0012D2  06E8               	decf	wreg,f,c
   423  0012D4  E1FD               	bnz	clear_1
   424  0012D6                     end_of_initialization:
   425                           	callstack 0
   426  0012D6                     __end_of__initialization:
   427                           	callstack 0
   428  0012D6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   429  0012D8  6EF8               	movwf	tblptru,c
   430  0012DA  0100               	movlb	0
   431  0012DC  EF10  F008         	goto	_main	;jump to C main() function
   432                           
   433                           	psect	bssCOMRAM
   434  00001E                     __pbssCOMRAM:
   435                           	callstack 0
   436  00001E                     kpDebounce@valorAntigo:
   437                           	callstack 0
   438  00001E                     	ds	2
   439  000020                     kpDebounce@valorNovo:
   440                           	callstack 0
   441  000020                     	ds	2
   442  000022                     _valor:
   443                           	callstack 0
   444  000022                     	ds	2
   445  000024                     _flag:
   446                           	callstack 0
   447  000024                     	ds	1
   448  000025                     _cont:
   449                           	callstack 0
   450  000025                     	ds	1
   451  000026                     _indice:
   452                           	callstack 0
   453  000026                     	ds	1
   454  000027                     _v3:
   455                           	callstack 0
   456  000027                     	ds	1
   457  000028                     _v2:
   458                           	callstack 0
   459  000028                     	ds	1
   460  000029                     _v1:
   461                           	callstack 0
   462  000029                     	ds	1
   463  00002A                     _v0:
   464                           	callstack 0
   465  00002A                     	ds	1
   466  00002B                     _display:
   467                           	callstack 0
   468  00002B                     	ds	1
   469  00002C                     kpDebounce@tempo:
   470                           	callstack 0
   471  00002C                     	ds	1
   472  00002D                     _i:
   473                           	callstack 0
   474  00002D                     	ds	1
   475                           
   476                           	psect	dataCOMRAM
   477  000001                     __pdataCOMRAM:
   478                           	callstack 0
   479  000001                     _duracoes:
   480                           	callstack 0
   481  000001                     	ds	20
   482  000015                     _teclas:
   483                           	callstack 0
   484  000015                     	ds	8
   485  00001D                     _tecla:
   486                           	callstack 0
   487  00001D                     	ds	1
   488                           
   489                           	psect	bssBANK1
   490  000100                     __pbssBANK1:
   491                           	callstack 0
   492  000100                     _musicas:
   493                           	callstack 0
   494  000100                     	ds	190
   495                           
   496                           	psect	dataBANK2
   497  000200                     __pdataBANK2:
   498                           	callstack 0
   499  000200                     _nomes:
   500                           	callstack 0
   501  000200                     	ds	170
   502                           
   503                           	psect	cstackCOMRAM
   504  00002E                     __pcstackCOMRAM:
   505                           	callstack 0
   506  00002E                     ??_kpDebounce:
   507  00002E                     ?_kpRead:
   508                           	callstack 0
   509  00002E                     ?___wmul:
   510                           	callstack 0
   511  00002E                     ssdDigit@pos:
   512                           	callstack 0
   513  00002E                     Delay40us@i:
   514                           	callstack 0
   515  00002E                     digitalWrite@pin:
   516                           	callstack 0
   517  00002E                     pinMode@pin:
   518                           	callstack 0
   519  00002E                     atraso_ms@t:
   520                           	callstack 0
   521  00002E                     ___wmul@multiplier:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x0
   525  00002E                     	ds	1
   526  00002F                     ssdDigit@val:
   527                           	callstack 0
   528  00002F                     Delay2ms@i:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0x1
   532  00002F                     	ds	1
   533  000030                     digitalWrite@value:
   534                           	callstack 0
   535  000030                     pinMode@type:
   536                           	callstack 0
   537  000030                     atraso_ms@i:
   538                           	callstack 0
   539  000030                     ___wmul@multiplicand:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x2
   543  000030                     	ds	2
   544  000032                     ??_digitalWrite:
   545  000032                     ??_pinMode:
   546  000032                     atraso_ms@j:
   547                           	callstack 0
   548  000032                     ___wmul@product:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x4
   552  000032                     	ds	1
   553  000033                     kpDebounce@old_D:
   554                           	callstack 0
   555  000033                     atraso_ms@k:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0x5
   559  000033                     	ds	1
   560  000034                     ??_ssdUpdate:
   561  000034                     lcdCommand@old_D:
   562                           	callstack 0
   563  000034                     lcdData@valor:
   564                           	callstack 0
   565  000034                     kpDebounce@k:
   566                           	callstack 0
   567  000034                     strcpy@dest:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x6
   571  000034                     	ds	1
   572  000035                     lcdCommand@cmd:
   573                           	callstack 0
   574  000035                     lcdData@old_D:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x7
   578  000035                     	ds	1
   579  000036                     kpDebounce@j:
   580                           	callstack 0
   581  000036                     lcdPosition@coluna:
   582                           	callstack 0
   583  000036                     lcdStr@str:
   584                           	callstack 0
   585  000036                     strcpy@src:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x8
   589  000036                     	ds	1
   590  000037                     kpDebounce@i:
   591                           	callstack 0
   592  000037                     lcdPosition@linha:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x9
   596  000037                     	ds	1
   597  000038                     ??_lcdStr:
   598  000038                     lcdPosition@comando:
   599                           	callstack 0
   600  000038                     strcpy@s:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0xA
   604  000038                     	ds	2
   605  00003A                     lcdStr@i:
   606                           	callstack 0
   607  00003A                     strcpy@d:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0xC
   611  00003A                     	ds	1
   612  00003B                     ??_chooseSong:
   613                           
   614                           ; 1 bytes @ 0xD
   615  00003B                     	ds	1
   616  00003C                     songsInit@i:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0xE
   620  00003C                     	ds	2
   621  00003E                     
   622                           ; 1 bytes @ 0x10
   623 ;;
   624 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   625 ;;
   626 ;; *************** function _main *****************
   627 ;; Defined at:
   628 ;;		line 9 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   642 ;;      Params:         0       0       0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0       0       0
   645 ;;      Totals:         0       0       0       0       0       0       0
   646 ;;Total ram usage:        0 bytes
   647 ;; Hardware stack levels required when called:    5
   648 ;; This function calls:
   649 ;;		_atraso_ms
   650 ;;		_chooseSong
   651 ;;		_kpInit
   652 ;;		_lcdCommand
   653 ;;		_lcdInit
   654 ;;		_lcdPosition
   655 ;;		_lcdStr
   656 ;;		_songsInit
   657 ;;		_ssdInit
   658 ;; This function is called by:
   659 ;;		Startup code after reset
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text0
   664  001020                     __ptext0:
   665                           	callstack 0
   666  001020                     _main:
   667                           	callstack 26
   668  001020                     
   669                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 10:     songsInit();
   670  001020  ECBF  F007         	call	_songsInit	;wreg free
   671  001024                     
   672                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 11:     lcdInit();
   673  001024  EC95  F008         	call	_lcdInit	;wreg free
   674  001028                     
   675                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 12:     ssdInit();
   676  001028  ECCB  F009         	call	_ssdInit	;wreg free
   677  00102C                     
   678                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 13:     kpInit();
   679  00102C  EC7B  F00A         	call	_kpInit	;wreg free
   680  001030                     
   681                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 14:     lcdCommand(0x0F);
   682  001030  0E0F               	movlw	15
   683  001032  EC56  F008         	call	_lcdCommand
   684  001036                     
   685                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 16:     lcdPosition(0, 6);
   686  001036  0E06               	movlw	6
   687  001038  6E36               	movwf	lcdPosition@coluna^0,c
   688  00103A  0E00               	movlw	0
   689  00103C  EC9E  F009         	call	_lcdPosition
   690  001040                     
   691                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 17:     lcdStr("MP3");
   692  001040  0E3A               	movlw	low STR_1
   693  001042  6E36               	movwf	lcdStr@str^0,c
   694  001044  0E06               	movlw	high STR_1
   695  001046  6E37               	movwf	(lcdStr@str+1)^0,c
   696  001048  ECD1  F008         	call	_lcdStr	;wreg free
   697  00104C                     
   698                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 18:     lcdPosition(1, 6);
   699  00104C  0E06               	movlw	6
   700  00104E  6E36               	movwf	lcdPosition@coluna^0,c
   701  001050  0E01               	movlw	1
   702  001052  EC9E  F009         	call	_lcdPosition
   703  001056                     
   704                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 19:     lcdStr("Player");
   705  001056  0E33               	movlw	low STR_2
   706  001058  6E36               	movwf	lcdStr@str^0,c
   707  00105A  0E06               	movlw	high STR_2
   708  00105C  6E37               	movwf	(lcdStr@str+1)^0,c
   709  00105E  ECD1  F008         	call	_lcdStr	;wreg free
   710  001062                     
   711                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 20:     atraso_ms(2000);
   712  001062  0E07               	movlw	7
   713  001064  6E2F               	movwf	(atraso_ms@t+1)^0,c
   714  001066  0ED0               	movlw	208
   715  001068  6E2E               	movwf	atraso_ms@t^0,c
   716  00106A  EC0D  F009         	call	_atraso_ms	;wreg free
   717  00106E                     
   718                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 22:     lcdCommand(0x01);
   719  00106E  0E01               	movlw	1
   720  001070  EC56  F008         	call	_lcdCommand
   721  001074                     
   722                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 23:     lcdPosition(0, 0);
   723  001074  0E00               	movlw	0
   724  001076  6E36               	movwf	lcdPosition@coluna^0,c
   725  001078  0E00               	movlw	0
   726  00107A  EC9E  F009         	call	_lcdPosition
   727  00107E                     
   728                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 24:     lcdStr("Escolha a musica"
      +                          );
   729  00107E  0E22               	movlw	low STR_3
   730  001080  6E36               	movwf	lcdStr@str^0,c
   731  001082  0E06               	movlw	high STR_3
   732  001084  6E37               	movwf	(lcdStr@str+1)^0,c
   733  001086  ECD1  F008         	call	_lcdStr	;wreg free
   734  00108A                     l1856:
   735                           
   736                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 26:         lcdPosition(1, 0);
   737  00108A  0E00               	movlw	0
   738  00108C  6E36               	movwf	lcdPosition@coluna^0,c
   739  00108E  0E01               	movlw	1
   740  001090  EC9E  F009         	call	_lcdPosition
   741  001094                     
   742                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 27:         lcdStr("<-(1) (*)  (2
      +                          )->");
   743  001094  0E11               	movlw	low STR_4
   744  001096  6E36               	movwf	lcdStr@str^0,c
   745  001098  0E06               	movlw	high STR_4
   746  00109A  6E37               	movwf	(lcdStr@str+1)^0,c
   747  00109C  ECD1  F008         	call	_lcdStr	;wreg free
   748  0010A0                     
   749                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 28:         chooseSong();
   750  0010A0  ECCB  F006         	call	_chooseSong	;wreg free
   751                           
   752                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 29:     }
   753  0010A4  EF45  F008         	goto	l1856
   754  0010A8  EF00  F000         	goto	start
   755  0010AC                     __end_of_main:
   756                           	callstack 0
   757                           
   758 ;; *************** function _ssdInit *****************
   759 ;; Defined at:
   760 ;;		line 102 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;		None
   763 ;; Auto vars:     Size  Location     Type
   764 ;;		None
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		wreg, status,2, status,0, cstack
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   774 ;;      Params:         0       0       0       0       0       0       0
   775 ;;      Locals:         0       0       0       0       0       0       0
   776 ;;      Temps:          0       0       0       0       0       0       0
   777 ;;      Totals:         0       0       0       0       0       0       0
   778 ;;Total ram usage:        0 bytes
   779 ;; Hardware stack levels used:    1
   780 ;; Hardware stack levels required when called:    1
   781 ;; This function calls:
   782 ;;		_pinMode
   783 ;; This function is called by:
   784 ;;		_main
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text1
   789  001396                     __ptext1:
   790                           	callstack 0
   791  001396                     _ssdInit:
   792                           	callstack 29
   793  001396                     
   794                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 104:     pinMode(PIN_A2, 0);
   795  001396  0E00               	movlw	0
   796  001398  6E2F               	movwf	(pinMode@pin+1)^0,c
   797  00139A  0E02               	movlw	2
   798  00139C  6E2E               	movwf	pinMode@pin^0,c
   799  00139E  0E00               	movlw	0
   800  0013A0  6E31               	movwf	(pinMode@type+1)^0,c
   801  0013A2  0E00               	movlw	0
   802  0013A4  6E30               	movwf	pinMode@type^0,c
   803  0013A6  EC20  F003         	call	_pinMode	;wreg free
   804                           
   805                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 105:     pinMode(PIN_A3, 0);
   806  0013AA  0E00               	movlw	0
   807  0013AC  6E2F               	movwf	(pinMode@pin+1)^0,c
   808  0013AE  0E03               	movlw	3
   809  0013B0  6E2E               	movwf	pinMode@pin^0,c
   810  0013B2  0E00               	movlw	0
   811  0013B4  6E31               	movwf	(pinMode@type+1)^0,c
   812  0013B6  0E00               	movlw	0
   813  0013B8  6E30               	movwf	pinMode@type^0,c
   814  0013BA  EC20  F003         	call	_pinMode	;wreg free
   815                           
   816                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 106:     pinMode(PIN_A4, 0);
   817  0013BE  0E00               	movlw	0
   818  0013C0  6E2F               	movwf	(pinMode@pin+1)^0,c
   819  0013C2  0E04               	movlw	4
   820  0013C4  6E2E               	movwf	pinMode@pin^0,c
   821  0013C6  0E00               	movlw	0
   822  0013C8  6E31               	movwf	(pinMode@type+1)^0,c
   823  0013CA  0E00               	movlw	0
   824  0013CC  6E30               	movwf	pinMode@type^0,c
   825  0013CE  EC20  F003         	call	_pinMode	;wreg free
   826                           
   827                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 107:     pinMode(PIN_A5, 0);
   828  0013D2  0E00               	movlw	0
   829  0013D4  6E2F               	movwf	(pinMode@pin+1)^0,c
   830  0013D6  0E05               	movlw	5
   831  0013D8  6E2E               	movwf	pinMode@pin^0,c
   832  0013DA  0E00               	movlw	0
   833  0013DC  6E31               	movwf	(pinMode@type+1)^0,c
   834  0013DE  0E00               	movlw	0
   835  0013E0  6E30               	movwf	pinMode@type^0,c
   836  0013E2  EC20  F003         	call	_pinMode	;wreg free
   837  0013E6                     
   838                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 110:     TRISD = 0x00;
   839  0013E6  0E00               	movlw	0
   840  0013E8  6E95               	movwf	149,c	;volatile
   841  0013EA  0012               	return		;funcret
   842  0013EC                     __end_of_ssdInit:
   843                           	callstack 0
   844                           
   845 ;; *************** function _songsInit *****************
   846 ;; Defined at:
   847 ;;		line 23 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  i               2   14[COMRAM] unsigned int 
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   861 ;;      Params:         0       0       0       0       0       0       0
   862 ;;      Locals:         2       0       0       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0       0       0
   864 ;;      Totals:         2       0       0       0       0       0       0
   865 ;;Total ram usage:        2 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; Hardware stack levels required when called:    1
   868 ;; This function calls:
   869 ;;		___wmul
   870 ;;		_strcpy
   871 ;; This function is called by:
   872 ;;		_main
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	text2
   877  000F7E                     __ptext2:
   878                           	callstack 0
   879  000F7E                     _songsInit:
   880                           	callstack 29
   881  000F7E                     
   882                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 25:     for (unsigned int i = 0;
      +                           i < 10; i++) {
   883  000F7E  0E00               	movlw	0
   884  000F80  6E3D               	movwf	(songsInit@i+1)^0,c
   885  000F82  0E00               	movlw	0
   886  000F84  6E3C               	movwf	songsInit@i^0,c
   887  000F86                     l1738:
   888                           
   889                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 26:         musicas[i].duracao =
      +                           duracoes[i];
   890  000F86  90D8               	bcf	status,0,c
   891  000F88  343C               	rlcf	songsInit@i^0,w,c
   892  000F8A  6ED9               	movwf	fsr2l,c
   893  000F8C  343D               	rlcf	(songsInit@i+1)^0,w,c
   894  000F8E  6EDA               	movwf	fsr2h,c
   895  000F90  0E01               	movlw	low _duracoes
   896  000F92  26D9               	addwf	fsr2l,f,c
   897  000F94  0E00               	movlw	high _duracoes
   898  000F96  22DA               	addwfc	fsr2h,f,c
   899  000F98  C03C  F02E         	movff	songsInit@i,___wmul@multiplier
   900  000F9C  C03D  F02F         	movff	songsInit@i+1,___wmul@multiplier+1
   901  000FA0  0E00               	movlw	0
   902  000FA2  6E31               	movwf	(___wmul@multiplicand+1)^0,c
   903  000FA4  0E13               	movlw	19
   904  000FA6  6E30               	movwf	___wmul@multiplicand^0,c
   905  000FA8  EC3F  F00A         	call	___wmul	;wreg free
   906  000FAC  0E00               	movlw	low _musicas
   907  000FAE  242E               	addwf	?___wmul^0,w,c
   908  000FB0  6EE1               	movwf	fsr1l,c
   909  000FB2  0E01               	movlw	high _musicas
   910  000FB4  202F               	addwfc	(?___wmul+1)^0,w,c
   911  000FB6  6EE2               	movwf	fsr1h,c
   912  000FB8  CFDE FFE6          	movff	postinc2,postinc1
   913  000FBC  CFDD FFE5          	movff	postdec2,postdec1
   914                           
   915                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 27:         strcpy(musicas[i].no
      +                          me, (char*) nomes[i]);
   916  000FC0  C03C  F02E         	movff	songsInit@i,___wmul@multiplier
   917  000FC4  C03D  F02F         	movff	songsInit@i+1,___wmul@multiplier+1
   918  000FC8  0E00               	movlw	0
   919  000FCA  6E31               	movwf	(___wmul@multiplicand+1)^0,c
   920  000FCC  0E13               	movlw	19
   921  000FCE  6E30               	movwf	___wmul@multiplicand^0,c
   922  000FD0  EC3F  F00A         	call	___wmul	;wreg free
   923  000FD4  0E02               	movlw	low (_musicas+2)
   924  000FD6  242E               	addwf	?___wmul^0,w,c
   925  000FD8  6E34               	movwf	strcpy@dest^0,c
   926  000FDA  0E01               	movlw	high (_musicas+2)
   927  000FDC  202F               	addwfc	(?___wmul+1)^0,w,c
   928  000FDE  6E35               	movwf	(strcpy@dest+1)^0,c
   929  000FE0  C03C  F02E         	movff	songsInit@i,___wmul@multiplier
   930  000FE4  C03D  F02F         	movff	songsInit@i+1,___wmul@multiplier+1
   931  000FE8  0E00               	movlw	0
   932  000FEA  6E31               	movwf	(___wmul@multiplicand+1)^0,c
   933  000FEC  0E11               	movlw	17
   934  000FEE  6E30               	movwf	___wmul@multiplicand^0,c
   935  000FF0  EC3F  F00A         	call	___wmul	;wreg free
   936  000FF4  0E00               	movlw	low _nomes
   937  000FF6  242E               	addwf	?___wmul^0,w,c
   938  000FF8  6E36               	movwf	strcpy@src^0,c
   939  000FFA  0E02               	movlw	high _nomes
   940  000FFC  202F               	addwfc	(?___wmul+1)^0,w,c
   941  000FFE  6E37               	movwf	(strcpy@src+1)^0,c
   942  001000  EC20  F00A         	call	_strcpy	;wreg free
   943  001004                     
   944                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 28:     }
   945  001004  4A3C               	infsnz	songsInit@i^0,f,c
   946  001006  2A3D               	incf	(songsInit@i+1)^0,f,c
   947  001008  503D               	movf	(songsInit@i+1)^0,w,c
   948  00100A  E109               	bnz	u1470
   949  00100C  0E0A               	movlw	10
   950  00100E  5C3C               	subwf	songsInit@i^0,w,c
   951  001010  A0D8               	btfss	status,0,c
   952  001012  EF0D  F008         	goto	u1471
   953  001016  EF0F  F008         	goto	u1470
   954  00101A                     u1471:
   955  00101A  EFC3  F007         	goto	l1738
   956  00101E                     u1470:
   957  00101E  0012               	return		;funcret
   958  001020                     __end_of_songsInit:
   959                           	callstack 0
   960                           
   961 ;; *************** function _strcpy *****************
   962 ;; Defined at:
   963 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strcpy.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;  dest            2    6[COMRAM] PTR unsigned char 
   966 ;;		 -> musicas(190), 
   967 ;;  src             2    8[COMRAM] PTR const unsigned char 
   968 ;;		 -> nomes(170), 
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  d               2   12[COMRAM] PTR unsigned char 
   971 ;;		 -> musicas(190), 
   972 ;;  s               2   10[COMRAM] PTR const unsigned char 
   973 ;;		 -> nomes(170), 
   974 ;; Return value:  Size  Location     Type
   975 ;;                  2    6[COMRAM] PTR unsigned char 
   976 ;; Registers used:
   977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   983 ;;      Params:         4       0       0       0       0       0       0
   984 ;;      Locals:         4       0       0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0       0       0
   986 ;;      Totals:         8       0       0       0       0       0       0
   987 ;;Total ram usage:        8 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_songsInit
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text3
   997  001440                     __ptext3:
   998                           	callstack 0
   999  001440                     _strcpy:
  1000                           	callstack 29
  1001  001440  C036  F038         	movff	strcpy@src,strcpy@s
  1002  001444  C037  F039         	movff	strcpy@src+1,strcpy@s+1
  1003  001448  C034  F03A         	movff	strcpy@dest,strcpy@d
  1004  00144C  C035  F03B         	movff	strcpy@dest+1,strcpy@d+1
  1005  001450                     l1720:
  1006  001450  C038  FFD9         	movff	strcpy@s,fsr2l
  1007  001454  C039  FFDA         	movff	strcpy@s+1,fsr2h
  1008  001458  4A38               	infsnz	strcpy@s^0,f,c
  1009  00145A  2A39               	incf	(strcpy@s+1)^0,f,c
  1010  00145C  C03A  FFE1         	movff	strcpy@d,fsr1l
  1011  001460  C03B  FFE2         	movff	strcpy@d+1,fsr1h
  1012  001464  4A3A               	infsnz	strcpy@d^0,f,c
  1013  001466  2A3B               	incf	(strcpy@d+1)^0,f,c
  1014  001468  CFDF FFE7          	movff	indf2,indf1
  1015  00146C  50E7               	movf	indf1,w,c
  1016  00146E  A4D8               	btfss	status,2,c
  1017  001470  EF3C  F00A         	goto	u1461
  1018  001474  EF3E  F00A         	goto	u1460
  1019  001478                     u1461:
  1020  001478  EF28  F00A         	goto	l1720
  1021  00147C                     u1460:
  1022  00147C  0012               	return		;funcret
  1023  00147E                     __end_of_strcpy:
  1024                           	callstack 0
  1025                           
  1026 ;; *************** function ___wmul *****************
  1027 ;; Defined at:
  1028 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;  multiplier      2    0[COMRAM] unsigned int 
  1031 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;  product         2    4[COMRAM] unsigned int 
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  2    0[COMRAM] unsigned int 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2, status,0, prodl, prodh
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1043 ;;      Params:         4       0       0       0       0       0       0
  1044 ;;      Locals:         2       0       0       0       0       0       0
  1045 ;;      Temps:          0       0       0       0       0       0       0
  1046 ;;      Totals:         6       0       0       0       0       0       0
  1047 ;;Total ram usage:        6 bytes
  1048 ;; Hardware stack levels used:    1
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_songsInit
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text4
  1057  00147E                     __ptext4:
  1058                           	callstack 0
  1059  00147E                     ___wmul:
  1060                           	callstack 29
  1061  00147E  502E               	movf	___wmul@multiplier^0,w,c
  1062  001480  0230               	mulwf	___wmul@multiplicand^0,c
  1063  001482  CFF3 F032          	movff	prodl,___wmul@product
  1064  001486  CFF4 F033          	movff	prodh,___wmul@product+1
  1065  00148A  502E               	movf	___wmul@multiplier^0,w,c
  1066  00148C  0231               	mulwf	(___wmul@multiplicand+1)^0,c
  1067  00148E  50F3               	movf	243,w,c
  1068  001490  2633               	addwf	(___wmul@product+1)^0,f,c
  1069  001492  502F               	movf	(___wmul@multiplier+1)^0,w,c
  1070  001494  0230               	mulwf	___wmul@multiplicand^0,c
  1071  001496  50F3               	movf	243,w,c
  1072  001498  2633               	addwf	(___wmul@product+1)^0,f,c
  1073  00149A  C032  F02E         	movff	___wmul@product,?___wmul
  1074  00149E  C033  F02F         	movff	___wmul@product+1,?___wmul+1
  1075  0014A2  0012               	return		;funcret
  1076  0014A4                     __end_of___wmul:
  1077                           	callstack 0
  1078                           
  1079 ;; *************** function _lcdInit *****************
  1080 ;; Defined at:
  1081 ;;		line 87 in file "lcd.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;		None
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      void 
  1088 ;; Registers used:
  1089 ;;		wreg, status,2, status,0, cstack
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1095 ;;      Params:         0       0       0       0       0       0       0
  1096 ;;      Locals:         0       0       0       0       0       0       0
  1097 ;;      Temps:          0       0       0       0       0       0       0
  1098 ;;      Totals:         0       0       0       0       0       0       0
  1099 ;;Total ram usage:        0 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; Hardware stack levels required when called:    3
  1102 ;; This function calls:
  1103 ;;		_Delay2ms
  1104 ;;		_lcdCommand
  1105 ;;		_pinMode
  1106 ;; This function is called by:
  1107 ;;		_main
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           	psect	text5
  1112  00112A                     __ptext5:
  1113                           	callstack 0
  1114  00112A                     _lcdInit:
  1115                           	callstack 27
  1116  00112A                     
  1117                           ;lcd.c: 89:     pinMode(PIN_E2, 0);
  1118  00112A  0E00               	movlw	0
  1119  00112C  6E2F               	movwf	(pinMode@pin+1)^0,c
  1120  00112E  0E22               	movlw	34
  1121  001130  6E2E               	movwf	pinMode@pin^0,c
  1122  001132  0E00               	movlw	0
  1123  001134  6E31               	movwf	(pinMode@type+1)^0,c
  1124  001136  0E00               	movlw	0
  1125  001138  6E30               	movwf	pinMode@type^0,c
  1126  00113A  EC20  F003         	call	_pinMode	;wreg free
  1127                           
  1128                           ;lcd.c: 90:     pinMode(PIN_E1, 0);
  1129  00113E  0E00               	movlw	0
  1130  001140  6E2F               	movwf	(pinMode@pin+1)^0,c
  1131  001142  0E21               	movlw	33
  1132  001144  6E2E               	movwf	pinMode@pin^0,c
  1133  001146  0E00               	movlw	0
  1134  001148  6E31               	movwf	(pinMode@type+1)^0,c
  1135  00114A  0E00               	movlw	0
  1136  00114C  6E30               	movwf	pinMode@type^0,c
  1137  00114E  EC20  F003         	call	_pinMode	;wreg free
  1138  001152                     
  1139                           ;lcd.c: 91:     TRISD = 0x00;
  1140  001152  0E00               	movlw	0
  1141  001154  6E95               	movwf	149,c	;volatile
  1142  001156                     
  1143                           ;lcd.c: 94:     Delay2ms();
  1144  001156  EC61  F00A         	call	_Delay2ms	;wreg free
  1145  00115A                     
  1146                           ;lcd.c: 95:     Delay2ms();
  1147  00115A  EC61  F00A         	call	_Delay2ms	;wreg free
  1148  00115E                     
  1149                           ;lcd.c: 96:     Delay2ms();
  1150  00115E  EC61  F00A         	call	_Delay2ms	;wreg free
  1151  001162                     
  1152                           ;lcd.c: 97:     Delay2ms();
  1153  001162  EC61  F00A         	call	_Delay2ms	;wreg free
  1154  001166                     
  1155                           ;lcd.c: 98:     Delay2ms();
  1156  001166  EC61  F00A         	call	_Delay2ms	;wreg free
  1157  00116A                     
  1158                           ;lcd.c: 100:     lcdCommand(0x38);
  1159  00116A  0E38               	movlw	56
  1160  00116C  EC56  F008         	call	_lcdCommand
  1161  001170                     
  1162                           ;lcd.c: 101:     Delay2ms();
  1163  001170  EC61  F00A         	call	_Delay2ms	;wreg free
  1164  001174                     
  1165                           ;lcd.c: 102:     Delay2ms();
  1166  001174  EC61  F00A         	call	_Delay2ms	;wreg free
  1167  001178                     
  1168                           ;lcd.c: 103:     lcdCommand(0x38);
  1169  001178  0E38               	movlw	56
  1170  00117A  EC56  F008         	call	_lcdCommand
  1171  00117E                     
  1172                           ;lcd.c: 104:     Delay2ms();
  1173  00117E  EC61  F00A         	call	_Delay2ms	;wreg free
  1174  001182                     
  1175                           ;lcd.c: 105:     lcdCommand(0x38);
  1176  001182  0E38               	movlw	56
  1177  001184  EC56  F008         	call	_lcdCommand
  1178  001188                     
  1179                           ;lcd.c: 107:     lcdCommand(0x38);
  1180  001188  0E38               	movlw	56
  1181  00118A  EC56  F008         	call	_lcdCommand
  1182  00118E                     
  1183                           ;lcd.c: 108:     lcdCommand(0x06);
  1184  00118E  0E06               	movlw	6
  1185  001190  EC56  F008         	call	_lcdCommand
  1186  001194                     
  1187                           ;lcd.c: 111:     lcdCommand(0x0C);
  1188  001194  0E0C               	movlw	12
  1189  001196  EC56  F008         	call	_lcdCommand
  1190  00119A                     
  1191                           ;lcd.c: 112:     lcdCommand(0x01);
  1192  00119A  0E01               	movlw	1
  1193  00119C  EC56  F008         	call	_lcdCommand
  1194  0011A0  0012               	return		;funcret
  1195  0011A2                     __end_of_lcdInit:
  1196                           	callstack 0
  1197                           
  1198 ;; *************** function _pinMode *****************
  1199 ;; Defined at:
  1200 ;;		line 54 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;  pin             2    0[COMRAM] int 
  1203 ;;  type            2    2[COMRAM] int 
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;		None
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      void 
  1208 ;; Registers used:
  1209 ;;		wreg, status,2, status,0
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1215 ;;      Params:         4       0       0       0       0       0       0
  1216 ;;      Locals:         0       0       0       0       0       0       0
  1217 ;;      Temps:          2       0       0       0       0       0       0
  1218 ;;      Totals:         6       0       0       0       0       0       0
  1219 ;;Total ram usage:        6 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		_ssdInit
  1225 ;;		_lcdInit
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text6
  1230  000640                     __ptext6:
  1231                           	callstack 0
  1232  000640                     _pinMode:
  1233                           	callstack 29
  1234  000640                     
  1235                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 56:     if(pin <8){
  1236  000640  BE2F               	btfsc	(pinMode@pin+1)^0,7,c
  1237  000642  EF2E  F003         	goto	u1120
  1238  000646  502F               	movf	(pinMode@pin+1)^0,w,c
  1239  000648  E107               	bnz	u1121
  1240  00064A  0E08               	movlw	8
  1241  00064C  5C2E               	subwf	pinMode@pin^0,w,c
  1242  00064E  B0D8               	btfsc	status,0,c
  1243  000650  EF2C  F003         	goto	u1121
  1244  000654  EF2E  F003         	goto	u1120
  1245  000658                     u1121:
  1246  000658  EF58  F003         	goto	l1580
  1247  00065C                     u1120:
  1248  00065C                     
  1249                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 57:         if (type){ ((TRISA) |= 
      +                          (1<<(pin)));}
  1250  00065C  5030               	movf	pinMode@type^0,w,c
  1251  00065E  1031               	iorwf	(pinMode@type+1)^0,w,c
  1252  000660  B4D8               	btfsc	status,2,c
  1253  000662  EF35  F003         	goto	u1131
  1254  000666  EF37  F003         	goto	u1130
  1255  00066A                     u1131:
  1256  00066A  EF47  F003         	goto	l1578
  1257  00066E                     u1130:
  1258  00066E  C02E  F032         	movff	pinMode@pin,??_pinMode
  1259  000672  0E01               	movlw	1
  1260  000674  6E33               	movwf	(??_pinMode+1)^0,c
  1261  000676  2A32               	incf	??_pinMode^0,f,c
  1262  000678  EF40  F003         	goto	u1144
  1263  00067C                     u1145:
  1264  00067C  90D8               	bcf	status,0,c
  1265  00067E  3633               	rlcf	(??_pinMode+1)^0,f,c
  1266  000680                     u1144:
  1267  000680  2E32               	decfsz	??_pinMode^0,f,c
  1268  000682  EF3E  F003         	goto	u1145
  1269  000686  5033               	movf	(??_pinMode+1)^0,w,c
  1270  000688  1292               	iorwf	146,f,c	;volatile
  1271  00068A  EF46  F004         	goto	l76
  1272  00068E                     l1578:
  1273  00068E  C02E  F032         	movff	pinMode@pin,??_pinMode
  1274  000692  0E01               	movlw	1
  1275  000694  6E33               	movwf	(??_pinMode+1)^0,c
  1276  000696  2A32               	incf	??_pinMode^0,f,c
  1277  000698  EF50  F003         	goto	u1154
  1278  00069C                     u1155:
  1279  00069C  90D8               	bcf	status,0,c
  1280  00069E  3633               	rlcf	(??_pinMode+1)^0,f,c
  1281  0006A0                     u1154:
  1282  0006A0  2E32               	decfsz	??_pinMode^0,f,c
  1283  0006A2  EF4E  F003         	goto	u1155
  1284  0006A6  5033               	movf	(??_pinMode+1)^0,w,c
  1285  0006A8  0AFF               	xorlw	255
  1286  0006AA  1692               	andwf	146,f,c	;volatile
  1287  0006AC  EF46  F004         	goto	l76
  1288  0006B0                     l1580:
  1289  0006B0  BE2F               	btfsc	(pinMode@pin+1)^0,7,c
  1290  0006B2  EF66  F003         	goto	u1160
  1291  0006B6  502F               	movf	(pinMode@pin+1)^0,w,c
  1292  0006B8  E107               	bnz	u1161
  1293  0006BA  0E10               	movlw	16
  1294  0006BC  5C2E               	subwf	pinMode@pin^0,w,c
  1295  0006BE  B0D8               	btfsc	status,0,c
  1296  0006C0  EF64  F003         	goto	u1161
  1297  0006C4  EF66  F003         	goto	u1160
  1298  0006C8                     u1161:
  1299  0006C8  EF94  F003         	goto	l1588
  1300  0006CC                     u1160:
  1301  0006CC                     
  1302                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 60:         if (type){ ((TRISB) |= 
      +                          (1<<(pin-8)));}
  1303  0006CC  5030               	movf	pinMode@type^0,w,c
  1304  0006CE  1031               	iorwf	(pinMode@type+1)^0,w,c
  1305  0006D0  B4D8               	btfsc	status,2,c
  1306  0006D2  EF6D  F003         	goto	u1171
  1307  0006D6  EF6F  F003         	goto	u1170
  1308  0006DA                     u1171:
  1309  0006DA  EF81  F003         	goto	l1586
  1310  0006DE                     u1170:
  1311  0006DE  C02E  F032         	movff	pinMode@pin,??_pinMode
  1312  0006E2  0EF8               	movlw	-8
  1313  0006E4  2632               	addwf	??_pinMode^0,f,c
  1314  0006E6  0E01               	movlw	1
  1315  0006E8  6E33               	movwf	(??_pinMode+1)^0,c
  1316  0006EA  2A32               	incf	??_pinMode^0,f,c
  1317  0006EC  EF7A  F003         	goto	u1184
  1318  0006F0                     u1185:
  1319  0006F0  90D8               	bcf	status,0,c
  1320  0006F2  3633               	rlcf	(??_pinMode+1)^0,f,c
  1321  0006F4                     u1184:
  1322  0006F4  2E32               	decfsz	??_pinMode^0,f,c
  1323  0006F6  EF78  F003         	goto	u1185
  1324  0006FA  5033               	movf	(??_pinMode+1)^0,w,c
  1325  0006FC  1293               	iorwf	147,f,c	;volatile
  1326  0006FE  EF46  F004         	goto	l76
  1327  000702                     l1586:
  1328  000702  C02E  F032         	movff	pinMode@pin,??_pinMode
  1329  000706  0EF8               	movlw	-8
  1330  000708  2632               	addwf	??_pinMode^0,f,c
  1331  00070A  0E01               	movlw	1
  1332  00070C  6E33               	movwf	(??_pinMode+1)^0,c
  1333  00070E  2A32               	incf	??_pinMode^0,f,c
  1334  000710  EF8C  F003         	goto	u1194
  1335  000714                     u1195:
  1336  000714  90D8               	bcf	status,0,c
  1337  000716  3633               	rlcf	(??_pinMode+1)^0,f,c
  1338  000718                     u1194:
  1339  000718  2E32               	decfsz	??_pinMode^0,f,c
  1340  00071A  EF8A  F003         	goto	u1195
  1341  00071E  5033               	movf	(??_pinMode+1)^0,w,c
  1342  000720  0AFF               	xorlw	255
  1343  000722  1693               	andwf	147,f,c	;volatile
  1344  000724  EF46  F004         	goto	l76
  1345  000728                     l1588:
  1346  000728  BE2F               	btfsc	(pinMode@pin+1)^0,7,c
  1347  00072A  EFA2  F003         	goto	u1200
  1348  00072E  502F               	movf	(pinMode@pin+1)^0,w,c
  1349  000730  E107               	bnz	u1201
  1350  000732  0E18               	movlw	24
  1351  000734  5C2E               	subwf	pinMode@pin^0,w,c
  1352  000736  B0D8               	btfsc	status,0,c
  1353  000738  EFA0  F003         	goto	u1201
  1354  00073C  EFA2  F003         	goto	u1200
  1355  000740                     u1201:
  1356  000740  EFD0  F003         	goto	l1596
  1357  000744                     u1200:
  1358  000744                     
  1359                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 63:         if (type){ ((TRISC) |= 
      +                          (1<<(pin-16)));}
  1360  000744  5030               	movf	pinMode@type^0,w,c
  1361  000746  1031               	iorwf	(pinMode@type+1)^0,w,c
  1362  000748  B4D8               	btfsc	status,2,c
  1363  00074A  EFA9  F003         	goto	u1211
  1364  00074E  EFAB  F003         	goto	u1210
  1365  000752                     u1211:
  1366  000752  EFBD  F003         	goto	l1594
  1367  000756                     u1210:
  1368  000756  C02E  F032         	movff	pinMode@pin,??_pinMode
  1369  00075A  0EF0               	movlw	-16
  1370  00075C  2632               	addwf	??_pinMode^0,f,c
  1371  00075E  0E01               	movlw	1
  1372  000760  6E33               	movwf	(??_pinMode+1)^0,c
  1373  000762  2A32               	incf	??_pinMode^0,f,c
  1374  000764  EFB6  F003         	goto	u1224
  1375  000768                     u1225:
  1376  000768  90D8               	bcf	status,0,c
  1377  00076A  3633               	rlcf	(??_pinMode+1)^0,f,c
  1378  00076C                     u1224:
  1379  00076C  2E32               	decfsz	??_pinMode^0,f,c
  1380  00076E  EFB4  F003         	goto	u1225
  1381  000772  5033               	movf	(??_pinMode+1)^0,w,c
  1382  000774  1294               	iorwf	148,f,c	;volatile
  1383  000776  EF46  F004         	goto	l76
  1384  00077A                     l1594:
  1385  00077A  C02E  F032         	movff	pinMode@pin,??_pinMode
  1386  00077E  0EF0               	movlw	-16
  1387  000780  2632               	addwf	??_pinMode^0,f,c
  1388  000782  0E01               	movlw	1
  1389  000784  6E33               	movwf	(??_pinMode+1)^0,c
  1390  000786  2A32               	incf	??_pinMode^0,f,c
  1391  000788  EFC8  F003         	goto	u1234
  1392  00078C                     u1235:
  1393  00078C  90D8               	bcf	status,0,c
  1394  00078E  3633               	rlcf	(??_pinMode+1)^0,f,c
  1395  000790                     u1234:
  1396  000790  2E32               	decfsz	??_pinMode^0,f,c
  1397  000792  EFC6  F003         	goto	u1235
  1398  000796  5033               	movf	(??_pinMode+1)^0,w,c
  1399  000798  0AFF               	xorlw	255
  1400  00079A  1694               	andwf	148,f,c	;volatile
  1401  00079C  EF46  F004         	goto	l76
  1402  0007A0                     l1596:
  1403  0007A0  BE2F               	btfsc	(pinMode@pin+1)^0,7,c
  1404  0007A2  EFDE  F003         	goto	u1240
  1405  0007A6  502F               	movf	(pinMode@pin+1)^0,w,c
  1406  0007A8  E107               	bnz	u1241
  1407  0007AA  0E20               	movlw	32
  1408  0007AC  5C2E               	subwf	pinMode@pin^0,w,c
  1409  0007AE  B0D8               	btfsc	status,0,c
  1410  0007B0  EFDC  F003         	goto	u1241
  1411  0007B4  EFDE  F003         	goto	u1240
  1412  0007B8                     u1241:
  1413  0007B8  EF0C  F004         	goto	l1604
  1414  0007BC                     u1240:
  1415  0007BC                     
  1416                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 66:         if (type){ ((TRISD) |= 
      +                          (1<<(pin-24)));}
  1417  0007BC  5030               	movf	pinMode@type^0,w,c
  1418  0007BE  1031               	iorwf	(pinMode@type+1)^0,w,c
  1419  0007C0  B4D8               	btfsc	status,2,c
  1420  0007C2  EFE5  F003         	goto	u1251
  1421  0007C6  EFE7  F003         	goto	u1250
  1422  0007CA                     u1251:
  1423  0007CA  EFF9  F003         	goto	l1602
  1424  0007CE                     u1250:
  1425  0007CE  C02E  F032         	movff	pinMode@pin,??_pinMode
  1426  0007D2  0EE8               	movlw	-24
  1427  0007D4  2632               	addwf	??_pinMode^0,f,c
  1428  0007D6  0E01               	movlw	1
  1429  0007D8  6E33               	movwf	(??_pinMode+1)^0,c
  1430  0007DA  2A32               	incf	??_pinMode^0,f,c
  1431  0007DC  EFF2  F003         	goto	u1264
  1432  0007E0                     u1265:
  1433  0007E0  90D8               	bcf	status,0,c
  1434  0007E2  3633               	rlcf	(??_pinMode+1)^0,f,c
  1435  0007E4                     u1264:
  1436  0007E4  2E32               	decfsz	??_pinMode^0,f,c
  1437  0007E6  EFF0  F003         	goto	u1265
  1438  0007EA  5033               	movf	(??_pinMode+1)^0,w,c
  1439  0007EC  1295               	iorwf	149,f,c	;volatile
  1440  0007EE  EF46  F004         	goto	l76
  1441  0007F2                     l1602:
  1442  0007F2  C02E  F032         	movff	pinMode@pin,??_pinMode
  1443  0007F6  0EE8               	movlw	-24
  1444  0007F8  2632               	addwf	??_pinMode^0,f,c
  1445  0007FA  0E01               	movlw	1
  1446  0007FC  6E33               	movwf	(??_pinMode+1)^0,c
  1447  0007FE  2A32               	incf	??_pinMode^0,f,c
  1448  000800  EF04  F004         	goto	u1274
  1449  000804                     u1275:
  1450  000804  90D8               	bcf	status,0,c
  1451  000806  3633               	rlcf	(??_pinMode+1)^0,f,c
  1452  000808                     u1274:
  1453  000808  2E32               	decfsz	??_pinMode^0,f,c
  1454  00080A  EF02  F004         	goto	u1275
  1455  00080E  5033               	movf	(??_pinMode+1)^0,w,c
  1456  000810  0AFF               	xorlw	255
  1457  000812  1695               	andwf	149,f,c	;volatile
  1458  000814  EF46  F004         	goto	l76
  1459  000818                     l1604:
  1460  000818  BE2F               	btfsc	(pinMode@pin+1)^0,7,c
  1461  00081A  EF1A  F004         	goto	u1280
  1462  00081E  502F               	movf	(pinMode@pin+1)^0,w,c
  1463  000820  E107               	bnz	u1281
  1464  000822  0E28               	movlw	40
  1465  000824  5C2E               	subwf	pinMode@pin^0,w,c
  1466  000826  B0D8               	btfsc	status,0,c
  1467  000828  EF18  F004         	goto	u1281
  1468  00082C  EF1A  F004         	goto	u1280
  1469  000830                     u1281:
  1470  000830  EF46  F004         	goto	l76
  1471  000834                     u1280:
  1472  000834                     
  1473                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 69:         if (type){ ((TRISE) |= 
      +                          (1<<(pin-32)));}
  1474  000834  5030               	movf	pinMode@type^0,w,c
  1475  000836  1031               	iorwf	(pinMode@type+1)^0,w,c
  1476  000838  B4D8               	btfsc	status,2,c
  1477  00083A  EF21  F004         	goto	u1291
  1478  00083E  EF23  F004         	goto	u1290
  1479  000842                     u1291:
  1480  000842  EF35  F004         	goto	l1610
  1481  000846                     u1290:
  1482  000846  C02E  F032         	movff	pinMode@pin,??_pinMode
  1483  00084A  0EE0               	movlw	-32
  1484  00084C  2632               	addwf	??_pinMode^0,f,c
  1485  00084E  0E01               	movlw	1
  1486  000850  6E33               	movwf	(??_pinMode+1)^0,c
  1487  000852  2A32               	incf	??_pinMode^0,f,c
  1488  000854  EF2E  F004         	goto	u1304
  1489  000858                     u1305:
  1490  000858  90D8               	bcf	status,0,c
  1491  00085A  3633               	rlcf	(??_pinMode+1)^0,f,c
  1492  00085C                     u1304:
  1493  00085C  2E32               	decfsz	??_pinMode^0,f,c
  1494  00085E  EF2C  F004         	goto	u1305
  1495  000862  5033               	movf	(??_pinMode+1)^0,w,c
  1496  000864  1296               	iorwf	150,f,c	;volatile
  1497  000866  EF46  F004         	goto	l76
  1498  00086A                     l1610:
  1499  00086A  C02E  F032         	movff	pinMode@pin,??_pinMode
  1500  00086E  0EE0               	movlw	-32
  1501  000870  2632               	addwf	??_pinMode^0,f,c
  1502  000872  0E01               	movlw	1
  1503  000874  6E33               	movwf	(??_pinMode+1)^0,c
  1504  000876  2A32               	incf	??_pinMode^0,f,c
  1505  000878  EF40  F004         	goto	u1314
  1506  00087C                     u1315:
  1507  00087C  90D8               	bcf	status,0,c
  1508  00087E  3633               	rlcf	(??_pinMode+1)^0,f,c
  1509  000880                     u1314:
  1510  000880  2E32               	decfsz	??_pinMode^0,f,c
  1511  000882  EF3E  F004         	goto	u1315
  1512  000886  5033               	movf	(??_pinMode+1)^0,w,c
  1513  000888  0AFF               	xorlw	255
  1514  00088A  1696               	andwf	150,f,c	;volatile
  1515  00088C                     l76:
  1516  00088C  0012               	return		;funcret
  1517  00088E                     __end_of_pinMode:
  1518                           	callstack 0
  1519                           
  1520 ;; *************** function _kpInit *****************
  1521 ;; Defined at:
  1522 ;;		line 89 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;		None
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;		None
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      void 
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, status,0
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1536 ;;      Params:         0       0       0       0       0       0       0
  1537 ;;      Locals:         0       0       0       0       0       0       0
  1538 ;;      Temps:          0       0       0       0       0       0       0
  1539 ;;      Totals:         0       0       0       0       0       0       0
  1540 ;;Total ram usage:        0 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; This function calls:
  1543 ;;		Nothing
  1544 ;; This function is called by:
  1545 ;;		_main
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text7
  1550  0014F6                     __ptext7:
  1551                           	callstack 0
  1552  0014F6                     _kpInit:
  1553                           	callstack 30
  1554  0014F6                     
  1555                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 91:     TRISB &= 0x07;
  1556  0014F6  0E07               	movlw	7
  1557  0014F8  1693               	andwf	147,f,c	;volatile
  1558                           
  1559                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 93:     TRISD |= 0x0f;
  1560  0014FA  0E0F               	movlw	15
  1561  0014FC  1295               	iorwf	149,f,c	;volatile
  1562  0014FE  0012               	return		;funcret
  1563  001500                     __end_of_kpInit:
  1564                           	callstack 0
  1565                           
  1566 ;; *************** function _chooseSong *****************
  1567 ;; Defined at:
  1568 ;;		line 32 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1582 ;;      Params:         0       0       0       0       0       0       0
  1583 ;;      Locals:         0       0       0       0       0       0       0
  1584 ;;      Temps:          2       0       0       0       0       0       0
  1585 ;;      Totals:         2       0       0       0       0       0       0
  1586 ;;Total ram usage:        2 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    4
  1589 ;; This function calls:
  1590 ;;		_atraso_ms
  1591 ;;		_kpDebounce
  1592 ;;		_kpRead
  1593 ;;		_lcdCommand
  1594 ;;		_lcdPosition
  1595 ;;		_lcdStr
  1596 ;;		_ssdDigit
  1597 ;;		_ssdUpdate
  1598 ;; This function is called by:
  1599 ;;		_main
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text8
  1604  000D96                     __ptext8:
  1605                           	callstack 0
  1606  000D96                     _chooseSong:
  1607                           	callstack 26
  1608  000D96                     
  1609                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 33:     kpDebounce();
  1610  000D96  EC6E  F005         	call	_kpDebounce	;wreg free
  1611  000D9A                     
  1612                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 34:     tecla = kpRead();
  1613  000D9A  EC80  F00A         	call	_kpRead	;wreg free
  1614  000D9E  502E               	movf	?_kpRead^0,w,c
  1615  000DA0  6E1D               	movwf	_tecla^0,c
  1616  000DA2                     
  1617                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 35:     if (((tecla) & (1<<(3)))
      +                          ||((tecla) & (1<<(7)))) {
  1618  000DA2  B61D               	btfsc	_tecla^0,3,c
  1619  000DA4  EFD6  F006         	goto	u1481
  1620  000DA8  EFD8  F006         	goto	u1480
  1621  000DAC                     u1481:
  1622  000DAC  EFDF  F006         	goto	l1786
  1623  000DB0                     u1480:
  1624  000DB0  AE1D               	btfss	_tecla^0,7,c
  1625  000DB2  EFDD  F006         	goto	u1491
  1626  000DB6  EFDF  F006         	goto	u1490
  1627  000DBA                     u1491:
  1628  000DBA  EF69  F007         	goto	l314
  1629  000DBE                     u1490:
  1630  000DBE                     l1786:
  1631                           
  1632                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 36:         flag = 1;
  1633  000DBE  0E01               	movlw	1
  1634  000DC0  6E24               	movwf	_flag^0,c
  1635  000DC2                     l1788:
  1636                           
  1637                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 38:             ssdUpdate();
  1638  000DC2  EC2B  F006         	call	_ssdUpdate	;wreg free
  1639  000DC6                     
  1640                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 39:             kpDebounce();
  1641  000DC6  EC6E  F005         	call	_kpDebounce	;wreg free
  1642  000DCA                     
  1643                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 40:             atraso_ms(10);
  1644  000DCA  0E00               	movlw	0
  1645  000DCC  6E2F               	movwf	(atraso_ms@t+1)^0,c
  1646  000DCE  0E0A               	movlw	10
  1647  000DD0  6E2E               	movwf	atraso_ms@t^0,c
  1648  000DD2  EC0D  F009         	call	_atraso_ms	;wreg free
  1649  000DD6                     
  1650                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 41:             if ((kpRead() !=
      +                           tecla)||flag == 1) {
  1651  000DD6  501D               	movf	_tecla^0,w,c
  1652  000DD8  6E3B               	movwf	??_chooseSong^0,c
  1653  000DDA  6A3C               	clrf	(??_chooseSong+1)^0,c
  1654  000DDC  EC80  F00A         	call	_kpRead	;wreg free
  1655  000DE0  503B               	movf	??_chooseSong^0,w,c
  1656  000DE2  182E               	xorwf	?_kpRead^0,w,c
  1657  000DE4  E107               	bnz	u1501
  1658  000DE6  503C               	movf	(??_chooseSong+1)^0,w,c
  1659  000DE8  182F               	xorwf	(?_kpRead+1)^0,w,c
  1660  000DEA  A4D8               	btfss	status,2,c
  1661  000DEC  EFFA  F006         	goto	u1501
  1662  000DF0  EFFC  F006         	goto	u1500
  1663  000DF4                     u1501:
  1664  000DF4  EF04  F007         	goto	l1798
  1665  000DF8                     u1500:
  1666  000DF8  0424               	decf	_flag^0,w,c
  1667  000DFA  A4D8               	btfss	status,2,c
  1668  000DFC  EF02  F007         	goto	u1511
  1669  000E00  EF04  F007         	goto	u1510
  1670  000E04                     u1511:
  1671  000E04  EFE1  F006         	goto	l1788
  1672  000E08                     u1510:
  1673  000E08                     l1798:
  1674                           
  1675                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 42:                 tecla = kpRe
      +                          ad();
  1676  000E08  EC80  F00A         	call	_kpRead	;wreg free
  1677  000E0C  502E               	movf	?_kpRead^0,w,c
  1678  000E0E  6E1D               	movwf	_tecla^0,c
  1679  000E10                     
  1680                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 43:                 if (((tecla)
      +                           & (1<<(3)))) {
  1681  000E10  A61D               	btfss	_tecla^0,3,c
  1682  000E12  EF0D  F007         	goto	u1521
  1683  000E16  EF0F  F007         	goto	u1520
  1684  000E1A                     u1521:
  1685  000E1A  EF1E  F007         	goto	l304
  1686  000E1E                     u1520:
  1687  000E1E                     
  1688                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 44:                     if (indi
      +                          ce == 0) {indice = 9;}
  1689  000E1E  5026               	movf	_indice^0,w,c
  1690  000E20  A4D8               	btfss	status,2,c
  1691  000E22  EF15  F007         	goto	u1531
  1692  000E26  EF17  F007         	goto	u1530
  1693  000E2A                     u1531:
  1694  000E2A  EF1B  F007         	goto	l1806
  1695  000E2E                     u1530:
  1696  000E2E  0E09               	movlw	9
  1697  000E30  6E26               	movwf	_indice^0,c
  1698  000E32  EF3E  F007         	goto	l1816
  1699  000E36                     l1806:
  1700  000E36  0626               	decf	_indice^0,f,c
  1701  000E38  EF3E  F007         	goto	l1816
  1702  000E3C                     l304:
  1703  000E3C  AE1D               	btfss	_tecla^0,7,c
  1704  000E3E  EF23  F007         	goto	u1541
  1705  000E42  EF25  F007         	goto	u1540
  1706  000E46                     u1541:
  1707  000E46  EF35  F007         	goto	l308
  1708  000E4A                     u1540:
  1709  000E4A                     
  1710                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 47:                     if (indi
      +                          ce == 9) {indice = 0;}
  1711  000E4A  0E09               	movlw	9
  1712  000E4C  1826               	xorwf	_indice^0,w,c
  1713  000E4E  A4D8               	btfss	status,2,c
  1714  000E50  EF2C  F007         	goto	u1551
  1715  000E54  EF2E  F007         	goto	u1550
  1716  000E58                     u1551:
  1717  000E58  EF32  F007         	goto	l1812
  1718  000E5C                     u1550:
  1719  000E5C  0E00               	movlw	0
  1720  000E5E  6E26               	movwf	_indice^0,c
  1721  000E60  EF3E  F007         	goto	l1816
  1722  000E64                     l1812:
  1723  000E64  2A26               	incf	_indice^0,f,c
  1724  000E66  EF3E  F007         	goto	l1816
  1725  000E6A                     l308:
  1726  000E6A  A01D               	btfss	_tecla^0,0,c
  1727  000E6C  EF3A  F007         	goto	u1561
  1728  000E70  EF3C  F007         	goto	u1560
  1729  000E74                     u1561:
  1730  000E74  EF3E  F007         	goto	l1816
  1731  000E78                     u1560:
  1732  000E78  EF64  F007         	goto	l1828
  1733  000E7C                     l1816:
  1734                           
  1735                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 61:                 lcdCommand(0
      +                          x01);
  1736  000E7C  0E01               	movlw	1
  1737  000E7E  EC56  F008         	call	_lcdCommand
  1738                           
  1739                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 62:                 lcdPosition(
      +                          1, 0);
  1740  000E82  0E00               	movlw	0
  1741  000E84  6E36               	movwf	lcdPosition@coluna^0,c
  1742  000E86  0E01               	movlw	1
  1743  000E88  EC9E  F009         	call	_lcdPosition
  1744  000E8C                     
  1745                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 63:                 lcdStr("<-(1
      +                          ) (*)  (2)->");
  1746  000E8C  0E11               	movlw	low STR_4
  1747  000E8E  6E36               	movwf	lcdStr@str^0,c
  1748  000E90  0E06               	movlw	high STR_4
  1749  000E92  6E37               	movwf	(lcdStr@str+1)^0,c
  1750  000E94  ECD1  F008         	call	_lcdStr	;wreg free
  1751  000E98                     
  1752                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 64:                 lcdPosition(
      +                          0, 0);
  1753  000E98  0E00               	movlw	0
  1754  000E9A  6E36               	movwf	lcdPosition@coluna^0,c
  1755  000E9C  0E00               	movlw	0
  1756  000E9E  EC9E  F009         	call	_lcdPosition
  1757  000EA2                     
  1758                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 67:                 lcdStr(music
      +                          as[indice].nome);
  1759  000EA2  5026               	movf	_indice^0,w,c
  1760  000EA4  0D13               	mullw	19
  1761  000EA6  0E02               	movlw	low (_musicas+2)
  1762  000EA8  24F3               	addwf	243,w,c
  1763  000EAA  6E36               	movwf	lcdStr@str^0,c
  1764  000EAC  0E01               	movlw	high (_musicas+2)
  1765  000EAE  20F4               	addwfc	prodh,w,c
  1766  000EB0  6E37               	movwf	(lcdStr@str+1)^0,c
  1767  000EB2  ECD1  F008         	call	_lcdStr	;wreg free
  1768  000EB6                     
  1769                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 68:                 ssdDigit(ind
      +                          ice, 3);
  1770  000EB6  0E03               	movlw	3
  1771  000EB8  6E2E               	movwf	ssdDigit@pos^0,c
  1772  000EBA  5026               	movf	_indice^0,w,c
  1773  000EBC  EC70  F009         	call	_ssdDigit
  1774  000EC0                     
  1775                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 69:                 flag = 0;
  1776  000EC0  0E00               	movlw	0
  1777  000EC2  6E24               	movwf	_flag^0,c
  1778  000EC4  EFE1  F006         	goto	l1788
  1779  000EC8                     l1828:
  1780                           
  1781                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 72:         lcdPosition(0, 0);
  1782  000EC8  0E00               	movlw	0
  1783  000ECA  6E36               	movwf	lcdPosition@coluna^0,c
  1784  000ECC  0E00               	movlw	0
  1785  000ECE  EC9E  F009         	call	_lcdPosition
  1786  000ED2                     l314:
  1787  000ED2  0012               	return		;funcret
  1788  000ED4                     __end_of_chooseSong:
  1789                           	callstack 0
  1790                           
  1791 ;; *************** function _ssdUpdate *****************
  1792 ;; Defined at:
  1793 ;;		line 55 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1807 ;;      Params:         0       0       0       0       0       0       0
  1808 ;;      Locals:         0       0       0       0       0       0       0
  1809 ;;      Temps:          2       0       0       0       0       0       0
  1810 ;;      Totals:         2       0       0       0       0       0       0
  1811 ;;Total ram usage:        2 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:    1
  1814 ;; This function calls:
  1815 ;;		_digitalWrite
  1816 ;; This function is called by:
  1817 ;;		_chooseSong
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text9
  1822  000C56                     __ptext9:
  1823                           	callstack 0
  1824  000C56                     _ssdUpdate:
  1825                           	callstack 28
  1826  000C56                     
  1827                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 59:     TRISD= 0x00;
  1828  000C56  0E00               	movlw	0
  1829  000C58  6E95               	movwf	149,c	;volatile
  1830  000C5A                     
  1831                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 61:     digitalWrite(PIN_A2,0);
  1832  000C5A  0E00               	movlw	0
  1833  000C5C  6E2F               	movwf	(digitalWrite@pin+1)^0,c
  1834  000C5E  0E02               	movlw	2
  1835  000C60  6E2E               	movwf	digitalWrite@pin^0,c
  1836  000C62  0E00               	movlw	0
  1837  000C64  6E31               	movwf	(digitalWrite@value+1)^0,c
  1838  000C66  0E00               	movlw	0
  1839  000C68  6E30               	movwf	digitalWrite@value^0,c
  1840  000C6A  EC47  F004         	call	_digitalWrite	;wreg free
  1841  000C6E                     
  1842                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 62:     digitalWrite(PIN_A3,0);
  1843  000C6E  0E00               	movlw	0
  1844  000C70  6E2F               	movwf	(digitalWrite@pin+1)^0,c
  1845  000C72  0E03               	movlw	3
  1846  000C74  6E2E               	movwf	digitalWrite@pin^0,c
  1847  000C76  0E00               	movlw	0
  1848  000C78  6E31               	movwf	(digitalWrite@value+1)^0,c
  1849  000C7A  0E00               	movlw	0
  1850  000C7C  6E30               	movwf	digitalWrite@value^0,c
  1851  000C7E  EC47  F004         	call	_digitalWrite	;wreg free
  1852  000C82                     
  1853                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 63:     digitalWrite(PIN_A4,0);
  1854  000C82  0E00               	movlw	0
  1855  000C84  6E2F               	movwf	(digitalWrite@pin+1)^0,c
  1856  000C86  0E04               	movlw	4
  1857  000C88  6E2E               	movwf	digitalWrite@pin^0,c
  1858  000C8A  0E00               	movlw	0
  1859  000C8C  6E31               	movwf	(digitalWrite@value+1)^0,c
  1860  000C8E  0E00               	movlw	0
  1861  000C90  6E30               	movwf	digitalWrite@value^0,c
  1862  000C92  EC47  F004         	call	_digitalWrite	;wreg free
  1863  000C96                     
  1864                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 64:     digitalWrite(PIN_A5,0);
  1865  000C96  0E00               	movlw	0
  1866  000C98  6E2F               	movwf	(digitalWrite@pin+1)^0,c
  1867  000C9A  0E05               	movlw	5
  1868  000C9C  6E2E               	movwf	digitalWrite@pin^0,c
  1869  000C9E  0E00               	movlw	0
  1870  000CA0  6E31               	movwf	(digitalWrite@value+1)^0,c
  1871  000CA2  0E00               	movlw	0
  1872  000CA4  6E30               	movwf	digitalWrite@value^0,c
  1873  000CA6  EC47  F004         	call	_digitalWrite	;wreg free
  1874                           
  1875                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 67:     PORTD = 0x00;
  1876  000CAA  0E00               	movlw	0
  1877  000CAC  6E83               	movwf	131,c	;volatile
  1878                           
  1879                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 70:     switch (display)
  1880  000CAE  EFAD  F006         	goto	l1660
  1881  000CB2                     l1642:
  1882                           
  1883                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 73:             PORTD = valor[v0];
  1884  000CB2  0E01               	movlw	low _valor@ssd$F104
  1885  000CB4  242A               	addwf	_v0^0,w,c
  1886  000CB6  6EF6               	movwf	tblptrl,c
  1887  000CB8  6AF7               	clrf	tblptrh,c
  1888  000CBA  0E06               	movlw	high _valor@ssd$F104
  1889  000CBC  22F7               	addwfc	tblptrh,f,c
  1890  000CBE                     	if	0	;There are less than 3 active tblptr bytes
  1891  000CBE                     	endif
  1892  000CBE  0008               	tblrd		*
  1893  000CC0  CFF5 FF83          	movff	tablat,3971	;volatile
  1894  000CC4                     
  1895                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 74:             digitalWrite(PIN_A
      +                          2,1);
  1896  000CC4  0E00               	movlw	0
  1897  000CC6  6E2F               	movwf	(digitalWrite@pin+1)^0,c
  1898  000CC8  0E02               	movlw	2
  1899  000CCA  6E2E               	movwf	digitalWrite@pin^0,c
  1900  000CCC  0E00               	movlw	0
  1901  000CCE  6E31               	movwf	(digitalWrite@value+1)^0,c
  1902  000CD0  0E01               	movlw	1
  1903  000CD2  6E30               	movwf	digitalWrite@value^0,c
  1904  000CD4  EC47  F004         	call	_digitalWrite	;wreg free
  1905                           
  1906                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 76:             break;
  1907  000CD8  EFCA  F006         	goto	l153
  1908  000CDC                     l1646:
  1909                           
  1910                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 79:             PORTD = valor[v1];
  1911  000CDC  0E01               	movlw	low _valor@ssd$F104
  1912  000CDE  2429               	addwf	_v1^0,w,c
  1913  000CE0  6EF6               	movwf	tblptrl,c
  1914  000CE2  6AF7               	clrf	tblptrh,c
  1915  000CE4  0E06               	movlw	high _valor@ssd$F104
  1916  000CE6  22F7               	addwfc	tblptrh,f,c
  1917  000CE8                     	if	0	;There are less than 3 active tblptr bytes
  1918  000CE8                     	endif
  1919  000CE8  0008               	tblrd		*
  1920  000CEA  CFF5 FF83          	movff	tablat,3971	;volatile
  1921  000CEE                     
  1922                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 80:             digitalWrite(PIN_A
      +                          3,1);
  1923  000CEE  0E00               	movlw	0
  1924  000CF0  6E2F               	movwf	(digitalWrite@pin+1)^0,c
  1925  000CF2  0E03               	movlw	3
  1926  000CF4  6E2E               	movwf	digitalWrite@pin^0,c
  1927  000CF6  0E00               	movlw	0
  1928  000CF8  6E31               	movwf	(digitalWrite@value+1)^0,c
  1929  000CFA  0E01               	movlw	1
  1930  000CFC  6E30               	movwf	digitalWrite@value^0,c
  1931  000CFE  EC47  F004         	call	_digitalWrite	;wreg free
  1932                           
  1933                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 82:             break;
  1934  000D02  EFCA  F006         	goto	l153
  1935  000D06                     l1650:
  1936                           
  1937                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 85:             PORTD = valor[v2];
  1938  000D06  0E01               	movlw	low _valor@ssd$F104
  1939  000D08  2428               	addwf	_v2^0,w,c
  1940  000D0A  6EF6               	movwf	tblptrl,c
  1941  000D0C  6AF7               	clrf	tblptrh,c
  1942  000D0E  0E06               	movlw	high _valor@ssd$F104
  1943  000D10  22F7               	addwfc	tblptrh,f,c
  1944  000D12                     	if	0	;There are less than 3 active tblptr bytes
  1945  000D12                     	endif
  1946  000D12  0008               	tblrd		*
  1947  000D14  CFF5 FF83          	movff	tablat,3971	;volatile
  1948  000D18                     
  1949                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 86:             digitalWrite(PIN_A
      +                          4,1);
  1950  000D18  0E00               	movlw	0
  1951  000D1A  6E2F               	movwf	(digitalWrite@pin+1)^0,c
  1952  000D1C  0E04               	movlw	4
  1953  000D1E  6E2E               	movwf	digitalWrite@pin^0,c
  1954  000D20  0E00               	movlw	0
  1955  000D22  6E31               	movwf	(digitalWrite@value+1)^0,c
  1956  000D24  0E01               	movlw	1
  1957  000D26  6E30               	movwf	digitalWrite@value^0,c
  1958  000D28  EC47  F004         	call	_digitalWrite	;wreg free
  1959                           
  1960                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 88:             break;
  1961  000D2C  EFCA  F006         	goto	l153
  1962  000D30                     l1654:
  1963                           
  1964                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 91:             PORTD = valor[v3];
  1965  000D30  0E01               	movlw	low _valor@ssd$F104
  1966  000D32  2427               	addwf	_v3^0,w,c
  1967  000D34  6EF6               	movwf	tblptrl,c
  1968  000D36  6AF7               	clrf	tblptrh,c
  1969  000D38  0E06               	movlw	high _valor@ssd$F104
  1970  000D3A  22F7               	addwfc	tblptrh,f,c
  1971  000D3C                     	if	0	;There are less than 3 active tblptr bytes
  1972  000D3C                     	endif
  1973  000D3C  0008               	tblrd		*
  1974  000D3E  CFF5 FF83          	movff	tablat,3971	;volatile
  1975  000D42                     
  1976                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 92:             digitalWrite(PIN_A
      +                          5,1);
  1977  000D42  0E00               	movlw	0
  1978  000D44  6E2F               	movwf	(digitalWrite@pin+1)^0,c
  1979  000D46  0E05               	movlw	5
  1980  000D48  6E2E               	movwf	digitalWrite@pin^0,c
  1981  000D4A  0E00               	movlw	0
  1982  000D4C  6E31               	movwf	(digitalWrite@value+1)^0,c
  1983  000D4E  0E01               	movlw	1
  1984  000D50  6E30               	movwf	digitalWrite@value^0,c
  1985  000D52  EC47  F004         	call	_digitalWrite	;wreg free
  1986                           
  1987                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 94:             break;
  1988  000D56  EFCA  F006         	goto	l153
  1989  000D5A                     l1660:
  1990  000D5A  502B               	movf	_display^0,w,c
  1991  000D5C  6E34               	movwf	??_ssdUpdate^0,c
  1992  000D5E  6A35               	clrf	(??_ssdUpdate+1)^0,c
  1993                           
  1994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1995                           ; Switch size 1, requested type "simple"
  1996                           ; Number of cases is 1, Range of values is 0 to 0
  1997                           ; switch strategies available:
  1998                           ; Name         Instructions Cycles
  1999                           ; simple_byte            4     3 (average)
  2000                           ;	Chosen strategy is simple_byte
  2001  000D60  5035               	movf	(??_ssdUpdate+1)^0,w,c
  2002  000D62  0A00               	xorlw	0	; case 0
  2003  000D64  B4D8               	btfsc	status,2,c
  2004  000D66  EFB7  F006         	goto	l1866
  2005  000D6A  EFCA  F006         	goto	l153
  2006  000D6E                     l1866:
  2007                           
  2008                           ; Switch size 1, requested type "simple"
  2009                           ; Number of cases is 4, Range of values is 0 to 3
  2010                           ; switch strategies available:
  2011                           ; Name         Instructions Cycles
  2012                           ; simple_byte           13     7 (average)
  2013                           ;	Chosen strategy is simple_byte
  2014  000D6E  5034               	movf	??_ssdUpdate^0,w,c
  2015  000D70  0A00               	xorlw	0	; case 0
  2016  000D72  B4D8               	btfsc	status,2,c
  2017  000D74  EF59  F006         	goto	l1642
  2018  000D78  0A01               	xorlw	1	; case 1
  2019  000D7A  B4D8               	btfsc	status,2,c
  2020  000D7C  EF6E  F006         	goto	l1646
  2021  000D80  0A03               	xorlw	3	; case 2
  2022  000D82  B4D8               	btfsc	status,2,c
  2023  000D84  EF83  F006         	goto	l1650
  2024  000D88  0A01               	xorlw	1	; case 3
  2025  000D8A  B4D8               	btfsc	status,2,c
  2026  000D8C  EF98  F006         	goto	l1654
  2027  000D90  EFCA  F006         	goto	l153
  2028  000D94                     l153:
  2029  000D94  0012               	return		;funcret
  2030  000D96                     __end_of_ssdUpdate:
  2031                           	callstack 0
  2032                           
  2033 ;; *************** function _ssdDigit *****************
  2034 ;; Defined at:
  2035 ;;		line 38 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  val             1    wreg     unsigned char 
  2038 ;;  pos             1    0[COMRAM] unsigned char 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  val             1    1[COMRAM] unsigned char 
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  1    wreg      void 
  2043 ;; Registers used:
  2044 ;;		wreg, status,2, status,0
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2050 ;;      Params:         1       0       0       0       0       0       0
  2051 ;;      Locals:         1       0       0       0       0       0       0
  2052 ;;      Temps:          0       0       0       0       0       0       0
  2053 ;;      Totals:         2       0       0       0       0       0       0
  2054 ;;Total ram usage:        2 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_chooseSong
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text10
  2064  0012E0                     __ptext10:
  2065                           	callstack 0
  2066  0012E0                     _ssdDigit:
  2067                           	callstack 29
  2068                           
  2069                           ;incstack = 0
  2070                           ;ssdDigit@val stored from wreg
  2071  0012E0  6E2F               	movwf	ssdDigit@val^0,c
  2072  0012E2                     
  2073                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 39:     display = pos;
  2074  0012E2  C02E  F02B         	movff	ssdDigit@pos,_display
  2075  0012E6                     
  2076                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 40:     if (pos == 0) {
  2077  0012E6  502E               	movf	ssdDigit@pos^0,w,c
  2078  0012E8  A4D8               	btfss	status,2,c
  2079  0012EA  EF79  F009         	goto	u1321
  2080  0012EE  EF7B  F009         	goto	u1320
  2081  0012F2                     u1321:
  2082  0012F2  EF7D  F009         	goto	l1620
  2083  0012F6                     u1320:
  2084  0012F6                     
  2085                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 41:         v0 = val;
  2086  0012F6  C02F  F02A         	movff	ssdDigit@val,_v0
  2087  0012FA                     l1620:
  2088                           
  2089                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 43:     if (pos == 1) {
  2090  0012FA  042E               	decf	ssdDigit@pos^0,w,c
  2091  0012FC  A4D8               	btfss	status,2,c
  2092  0012FE  EF83  F009         	goto	u1331
  2093  001302  EF85  F009         	goto	u1330
  2094  001306                     u1331:
  2095  001306  EF87  F009         	goto	l1624
  2096  00130A                     u1330:
  2097  00130A                     
  2098                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 44:         v1 = val;
  2099  00130A  C02F  F029         	movff	ssdDigit@val,_v1
  2100  00130E                     l1624:
  2101                           
  2102                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 46:     if (pos == 2) {
  2103  00130E  0E02               	movlw	2
  2104  001310  182E               	xorwf	ssdDigit@pos^0,w,c
  2105  001312  A4D8               	btfss	status,2,c
  2106  001314  EF8E  F009         	goto	u1341
  2107  001318  EF90  F009         	goto	u1340
  2108  00131C                     u1341:
  2109  00131C  EF92  F009         	goto	l1628
  2110  001320                     u1340:
  2111  001320                     
  2112                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 47:         v2 = val;
  2113  001320  C02F  F028         	movff	ssdDigit@val,_v2
  2114  001324                     l1628:
  2115                           
  2116                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 49:     if (pos == 3) {
  2117  001324  0E03               	movlw	3
  2118  001326  182E               	xorwf	ssdDigit@pos^0,w,c
  2119  001328  A4D8               	btfss	status,2,c
  2120  00132A  EF99  F009         	goto	u1351
  2121  00132E  EF9B  F009         	goto	u1350
  2122  001332                     u1351:
  2123  001332  EF9D  F009         	goto	l143
  2124  001336                     u1350:
  2125  001336                     
  2126                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/ssd.c: 50:         v3 = val;
  2127  001336  C02F  F027         	movff	ssdDigit@val,_v3
  2128  00133A                     l143:
  2129  00133A  0012               	return		;funcret
  2130  00133C                     __end_of_ssdDigit:
  2131                           	callstack 0
  2132                           
  2133 ;; *************** function _lcdStr *****************
  2134 ;; Defined at:
  2135 ;;		line 128 in file "lcd.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;  str             2    8[COMRAM] PTR const unsigned char 
  2138 ;;		 -> STR_5(17), musicas.nome(17), musicas(190), STR_4(17), 
  2139 ;;		 -> STR_3(17), STR_2(7), STR_1(4), 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  i               1   12[COMRAM] unsigned char 
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      void 
  2144 ;; Registers used:
  2145 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2151 ;;      Params:         2       0       0       0       0       0       0
  2152 ;;      Locals:         1       0       0       0       0       0       0
  2153 ;;      Temps:          2       0       0       0       0       0       0
  2154 ;;      Totals:         5       0       0       0       0       0       0
  2155 ;;Total ram usage:        5 bytes
  2156 ;; Hardware stack levels used:    1
  2157 ;; Hardware stack levels required when called:    2
  2158 ;; This function calls:
  2159 ;;		_lcdData
  2160 ;; This function is called by:
  2161 ;;		_main
  2162 ;;		_chooseSong
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text11
  2167  0011A2                     __ptext11:
  2168                           	callstack 0
  2169  0011A2                     _lcdStr:
  2170                           	callstack 28
  2171  0011A2                     
  2172                           ;lcd.c: 129:     unsigned char i = 0;
  2173  0011A2  0E00               	movlw	0
  2174  0011A4  6E3A               	movwf	lcdStr@i^0,c
  2175                           
  2176                           ;lcd.c: 131:     while (str[i] != 0) {
  2177  0011A6  EFEE  F008         	goto	l1716
  2178  0011AA                     l1712:
  2179                           
  2180                           ;lcd.c: 132:         lcdData(str[i]);
  2181  0011AA  503A               	movf	lcdStr@i^0,w,c
  2182  0011AC  2436               	addwf	lcdStr@str^0,w,c
  2183  0011AE  6E38               	movwf	??_lcdStr^0,c
  2184  0011B0  0E00               	movlw	0
  2185  0011B2  2037               	addwfc	(lcdStr@str+1)^0,w,c
  2186  0011B4  6E39               	movwf	(??_lcdStr+1)^0,c
  2187  0011B6  C038  FFF6         	movff	??_lcdStr,tblptrl
  2188  0011BA  C039  FFF7         	movff	??_lcdStr+1,tblptrh
  2189  0011BE  6AF8               	clrf	tblptru,c
  2190  0011C0  0E05               	movlw	(high __ramtop+-1)
  2191  0011C2  64F7               	cpfsgt	tblptrh,c
  2192  0011C4  D003               	bra	u1437
  2193  0011C6  0008               	tblrd		*
  2194  0011C8  50F5               	movf	tablat,w,c
  2195  0011CA  D005               	bra	u1430
  2196  0011CC                     u1437:
  2197  0011CC  CFF6 FFE9          	movff	tblptrl,fsr0l
  2198  0011D0  CFF7 FFEA          	movff	tblptrh,fsr0h
  2199  0011D4  50EF               	movf	indf0,w,c
  2200  0011D6                     u1430:
  2201  0011D6  ECF6  F009         	call	_lcdData
  2202  0011DA                     
  2203                           ;lcd.c: 133:         i++;
  2204  0011DA  2A3A               	incf	lcdStr@i^0,f,c
  2205  0011DC                     l1716:
  2206                           
  2207                           ;lcd.c: 131:     while (str[i] != 0) {
  2208  0011DC  503A               	movf	lcdStr@i^0,w,c
  2209  0011DE  2436               	addwf	lcdStr@str^0,w,c
  2210  0011E0  6E38               	movwf	??_lcdStr^0,c
  2211  0011E2  0E00               	movlw	0
  2212  0011E4  2037               	addwfc	(lcdStr@str+1)^0,w,c
  2213  0011E6  6E39               	movwf	(??_lcdStr+1)^0,c
  2214  0011E8  C038  FFF6         	movff	??_lcdStr,tblptrl
  2215  0011EC  C039  FFF7         	movff	??_lcdStr+1,tblptrh
  2216  0011F0  6AF8               	clrf	tblptru,c
  2217  0011F2  0E05               	movlw	(high __ramtop+-1)
  2218  0011F4  64F7               	cpfsgt	tblptrh,c
  2219  0011F6  D003               	bra	u1447
  2220  0011F8  0008               	tblrd		*
  2221  0011FA  50F5               	movf	tablat,w,c
  2222  0011FC  D005               	bra	u1440
  2223  0011FE                     u1447:
  2224  0011FE  CFF6 FFE9          	movff	tblptrl,fsr0l
  2225  001202  CFF7 FFEA          	movff	tblptrh,fsr0h
  2226  001206  50EF               	movf	indf0,w,c
  2227  001208                     u1440:
  2228  001208  0900               	iorlw	0
  2229  00120A  A4D8               	btfss	status,2,c
  2230  00120C  EF0A  F009         	goto	u1451
  2231  001210  EF0C  F009         	goto	u1450
  2232  001214                     u1451:
  2233  001214  EFD5  F008         	goto	l1712
  2234  001218                     u1450:
  2235  001218  0012               	return		;funcret
  2236  00121A                     __end_of_lcdStr:
  2237                           	callstack 0
  2238                           
  2239 ;; *************** function _lcdData *****************
  2240 ;; Defined at:
  2241 ;;		line 68 in file "lcd.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  valor           1    wreg     unsigned char 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  valor           1    6[COMRAM] unsigned char 
  2246 ;;  old_D           1    7[COMRAM] unsigned char 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2256 ;;      Params:         0       0       0       0       0       0       0
  2257 ;;      Locals:         2       0       0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0
  2259 ;;      Totals:         2       0       0       0       0       0       0
  2260 ;;Total ram usage:        2 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    1
  2263 ;; This function calls:
  2264 ;;		_Delay40us
  2265 ;;		_digitalWrite
  2266 ;; This function is called by:
  2267 ;;		_lcdStr
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text12
  2272  0013EC                     __ptext12:
  2273                           	callstack 0
  2274  0013EC                     _lcdData:
  2275                           	callstack 28
  2276                           
  2277                           ;incstack = 0
  2278                           ;lcdData@valor stored from wreg
  2279  0013EC  6E34               	movwf	lcdData@valor^0,c
  2280  0013EE                     
  2281                           ;lcd.c: 70:     unsigned char old_D;;lcd.c: 71:     old_D = PORTD;
  2282  0013EE  CF83 F035          	movff	3971,lcdData@old_D	;volatile
  2283  0013F2                     
  2284                           ;lcd.c: 73:     TRISD = 0x00;
  2285  0013F2  0E00               	movlw	0
  2286  0013F4  6E95               	movwf	149,c	;volatile
  2287  0013F6                     
  2288                           ;lcd.c: 74:     digitalWrite(PIN_E2, 1);
  2289  0013F6  0E00               	movlw	0
  2290  0013F8  6E2F               	movwf	(digitalWrite@pin+1)^0,c
  2291  0013FA  0E22               	movlw	34
  2292  0013FC  6E2E               	movwf	digitalWrite@pin^0,c
  2293  0013FE  0E00               	movlw	0
  2294  001400  6E31               	movwf	(digitalWrite@value+1)^0,c
  2295  001402  0E01               	movlw	1
  2296  001404  6E30               	movwf	digitalWrite@value^0,c
  2297  001406  EC47  F004         	call	_digitalWrite	;wreg free
  2298  00140A                     
  2299                           ;lcd.c: 76:     PORTD = valor;
  2300  00140A  C034  FF83         	movff	lcdData@valor,3971	;volatile
  2301  00140E                     
  2302                           ;lcd.c: 78:     digitalWrite(PIN_E1, 1);
  2303  00140E  0E00               	movlw	0
  2304  001410  6E2F               	movwf	(digitalWrite@pin+1)^0,c
  2305  001412  0E21               	movlw	33
  2306  001414  6E2E               	movwf	digitalWrite@pin^0,c
  2307  001416  0E00               	movlw	0
  2308  001418  6E31               	movwf	(digitalWrite@value+1)^0,c
  2309  00141A  0E01               	movlw	1
  2310  00141C  6E30               	movwf	digitalWrite@value^0,c
  2311  00141E  EC47  F004         	call	_digitalWrite	;wreg free
  2312  001422                     
  2313                           ;lcd.c: 79:     digitalWrite(PIN_E1, 0);
  2314  001422  0E00               	movlw	0
  2315  001424  6E2F               	movwf	(digitalWrite@pin+1)^0,c
  2316  001426  0E21               	movlw	33
  2317  001428  6E2E               	movwf	digitalWrite@pin^0,c
  2318  00142A  0E00               	movlw	0
  2319  00142C  6E31               	movwf	(digitalWrite@value+1)^0,c
  2320  00142E  0E00               	movlw	0
  2321  001430  6E30               	movwf	digitalWrite@value^0,c
  2322  001432  EC47  F004         	call	_digitalWrite	;wreg free
  2323  001436                     
  2324                           ;lcd.c: 81:     PORTD = old_D;
  2325  001436  C035  FF83         	movff	lcdData@old_D,3971	;volatile
  2326  00143A                     
  2327                           ;lcd.c: 83:     Delay40us();
  2328  00143A  EC6F  F00A         	call	_Delay40us	;wreg free
  2329  00143E  0012               	return		;funcret
  2330  001440                     __end_of_lcdData:
  2331                           	callstack 0
  2332                           
  2333 ;; *************** function _lcdPosition *****************
  2334 ;; Defined at:
  2335 ;;		line 115 in file "lcd.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  linha           1    wreg     unsigned char 
  2338 ;;  coluna          1    8[COMRAM] unsigned char 
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;  linha           1    9[COMRAM] unsigned char 
  2341 ;;  comando         1   10[COMRAM] unsigned char 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      void 
  2344 ;; Registers used:
  2345 ;;		wreg, status,2, status,0, cstack
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2351 ;;      Params:         1       0       0       0       0       0       0
  2352 ;;      Locals:         2       0       0       0       0       0       0
  2353 ;;      Temps:          0       0       0       0       0       0       0
  2354 ;;      Totals:         3       0       0       0       0       0       0
  2355 ;;Total ram usage:        3 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; Hardware stack levels required when called:    3
  2358 ;; This function calls:
  2359 ;;		_lcdCommand
  2360 ;; This function is called by:
  2361 ;;		_main
  2362 ;;		_chooseSong
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text13
  2367  00133C                     __ptext13:
  2368                           	callstack 0
  2369  00133C                     _lcdPosition:
  2370                           	callstack 27
  2371                           
  2372                           ;incstack = 0
  2373                           ;lcdPosition@linha stored from wreg
  2374  00133C  6E37               	movwf	lcdPosition@linha^0,c
  2375  00133E                     
  2376                           ;lcd.c: 116:     char comando = 0;
  2377  00133E  0E00               	movlw	0
  2378  001340  6E38               	movwf	lcdPosition@comando^0,c
  2379  001342                     
  2380                           ;lcd.c: 117:     if (linha == 0 && comando != 0x01) comando = 0x80 + coluna;
  2381  001342  5037               	movf	lcdPosition@linha^0,w,c
  2382  001344  A4D8               	btfss	status,2,c
  2383  001346  EFA7  F009         	goto	u1391
  2384  00134A  EFA9  F009         	goto	u1390
  2385  00134E                     u1391:
  2386  00134E  EFAC  F009         	goto	l247
  2387  001352                     u1390:
  2388  001352  5036               	movf	lcdPosition@coluna^0,w,c
  2389  001354  0F80               	addlw	128
  2390  001356  6E38               	movwf	lcdPosition@comando^0,c
  2391  001358                     l247:
  2392                           
  2393                           ;lcd.c: 118:     if (linha == 1 && comando != 0x01) comando = 0xC0 + coluna;
  2394  001358  0437               	decf	lcdPosition@linha^0,w,c
  2395  00135A  A4D8               	btfss	status,2,c
  2396  00135C  EFB2  F009         	goto	u1401
  2397  001360  EFB4  F009         	goto	u1400
  2398  001364                     u1401:
  2399  001364  EFBF  F009         	goto	l248
  2400  001368                     u1400:
  2401  001368  0438               	decf	lcdPosition@comando^0,w,c
  2402  00136A  B4D8               	btfsc	status,2,c
  2403  00136C  EFBA  F009         	goto	u1411
  2404  001370  EFBC  F009         	goto	u1410
  2405  001374                     u1411:
  2406  001374  EFBF  F009         	goto	l248
  2407  001378                     u1410:
  2408  001378  5036               	movf	lcdPosition@coluna^0,w,c
  2409  00137A  0FC0               	addlw	192
  2410  00137C  6E38               	movwf	lcdPosition@comando^0,c
  2411  00137E                     l248:
  2412                           
  2413                           ;lcd.c: 119:     if (coluna > 15) {
  2414  00137E  0E0F               	movlw	15
  2415  001380  6436               	cpfsgt	lcdPosition@coluna^0,c
  2416  001382  EFC5  F009         	goto	u1421
  2417  001386  EFC7  F009         	goto	u1420
  2418  00138A                     u1421:
  2419  00138A  EFC7  F009         	goto	l1708
  2420  00138E                     u1420:
  2421  00138E                     l1708:
  2422                           
  2423                           ;lcd.c: 125:     lcdCommand(comando);
  2424  00138E  5038               	movf	lcdPosition@comando^0,w,c
  2425  001390  EC56  F008         	call	_lcdCommand
  2426  001394  0012               	return		;funcret
  2427  001396                     __end_of_lcdPosition:
  2428                           	callstack 0
  2429                           
  2430 ;; *************** function _lcdCommand *****************
  2431 ;; Defined at:
  2432 ;;		line 43 in file "lcd.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;  cmd             1    wreg     unsigned char 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  cmd             1    7[COMRAM] unsigned char 
  2437 ;;  old_D           1    6[COMRAM] unsigned char 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      void 
  2440 ;; Registers used:
  2441 ;;		wreg, status,2, status,0, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2447 ;;      Params:         0       0       0       0       0       0       0
  2448 ;;      Locals:         2       0       0       0       0       0       0
  2449 ;;      Temps:          0       0       0       0       0       0       0
  2450 ;;      Totals:         2       0       0       0       0       0       0
  2451 ;;Total ram usage:        2 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; Hardware stack levels required when called:    2
  2454 ;; This function calls:
  2455 ;;		_Delay2ms
  2456 ;;		_Delay40us
  2457 ;;		_digitalWrite
  2458 ;; This function is called by:
  2459 ;;		_main
  2460 ;;		_lcdInit
  2461 ;;		_lcdPosition
  2462 ;;		_chooseSong
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           	psect	text14
  2467  0010AC                     __ptext14:
  2468                           	callstack 0
  2469  0010AC                     _lcdCommand:
  2470                           	callstack 27
  2471                           
  2472                           ;incstack = 0
  2473                           ;lcdCommand@cmd stored from wreg
  2474  0010AC  6E35               	movwf	lcdCommand@cmd^0,c
  2475  0010AE                     
  2476                           ;lcd.c: 44:     unsigned char old_D;;lcd.c: 45:     old_D = PORTD;
  2477  0010AE  CF83 F034          	movff	3971,lcdCommand@old_D	;volatile
  2478  0010B2                     
  2479                           ;lcd.c: 48:     TRISD = 0x00;
  2480  0010B2  0E00               	movlw	0
  2481  0010B4  6E95               	movwf	149,c	;volatile
  2482  0010B6                     
  2483                           ;lcd.c: 50:     digitalWrite(PIN_E2, 0);
  2484  0010B6  0E00               	movlw	0
  2485  0010B8  6E2F               	movwf	(digitalWrite@pin+1)^0,c
  2486  0010BA  0E22               	movlw	34
  2487  0010BC  6E2E               	movwf	digitalWrite@pin^0,c
  2488  0010BE  0E00               	movlw	0
  2489  0010C0  6E31               	movwf	(digitalWrite@value+1)^0,c
  2490  0010C2  0E00               	movlw	0
  2491  0010C4  6E30               	movwf	digitalWrite@value^0,c
  2492  0010C6  EC47  F004         	call	_digitalWrite	;wreg free
  2493  0010CA                     
  2494                           ;lcd.c: 51:     PORTD = cmd;
  2495  0010CA  C035  FF83         	movff	lcdCommand@cmd,3971	;volatile
  2496  0010CE                     
  2497                           ;lcd.c: 53:     digitalWrite(PIN_E1, 1);
  2498  0010CE  0E00               	movlw	0
  2499  0010D0  6E2F               	movwf	(digitalWrite@pin+1)^0,c
  2500  0010D2  0E21               	movlw	33
  2501  0010D4  6E2E               	movwf	digitalWrite@pin^0,c
  2502  0010D6  0E00               	movlw	0
  2503  0010D8  6E31               	movwf	(digitalWrite@value+1)^0,c
  2504  0010DA  0E01               	movlw	1
  2505  0010DC  6E30               	movwf	digitalWrite@value^0,c
  2506  0010DE  EC47  F004         	call	_digitalWrite	;wreg free
  2507  0010E2                     
  2508                           ;lcd.c: 54:     digitalWrite(PIN_E1, 0);
  2509  0010E2  0E00               	movlw	0
  2510  0010E4  6E2F               	movwf	(digitalWrite@pin+1)^0,c
  2511  0010E6  0E21               	movlw	33
  2512  0010E8  6E2E               	movwf	digitalWrite@pin^0,c
  2513  0010EA  0E00               	movlw	0
  2514  0010EC  6E31               	movwf	(digitalWrite@value+1)^0,c
  2515  0010EE  0E00               	movlw	0
  2516  0010F0  6E30               	movwf	digitalWrite@value^0,c
  2517  0010F2  EC47  F004         	call	_digitalWrite	;wreg free
  2518  0010F6                     
  2519                           ;lcd.c: 57:     PORTD = old_D;
  2520  0010F6  C034  FF83         	movff	lcdCommand@old_D,3971	;volatile
  2521  0010FA                     
  2522                           ;lcd.c: 59:     if ((cmd == 0x02) || (cmd == 0x01)) {
  2523  0010FA  0E02               	movlw	2
  2524  0010FC  1835               	xorwf	lcdCommand@cmd^0,w,c
  2525  0010FE  B4D8               	btfsc	status,2,c
  2526  001100  EF84  F008         	goto	u1101
  2527  001104  EF86  F008         	goto	u1100
  2528  001108                     u1101:
  2529  001108  EF8E  F008         	goto	l1552
  2530  00110C                     u1100:
  2531  00110C  0435               	decf	lcdCommand@cmd^0,w,c
  2532  00110E  A4D8               	btfss	status,2,c
  2533  001110  EF8C  F008         	goto	u1111
  2534  001114  EF8E  F008         	goto	u1110
  2535  001118                     u1111:
  2536  001118  EF92  F008         	goto	l1554
  2537  00111C                     u1110:
  2538  00111C                     l1552:
  2539                           
  2540                           ;lcd.c: 60:         Delay2ms();
  2541  00111C  EC61  F00A         	call	_Delay2ms	;wreg free
  2542                           
  2543                           ;lcd.c: 61:     } else {
  2544  001120  EF94  F008         	goto	l238
  2545  001124                     l1554:
  2546                           
  2547                           ;lcd.c: 62:         Delay40us();
  2548  001124  EC6F  F00A         	call	_Delay40us	;wreg free
  2549  001128                     l238:
  2550  001128  0012               	return		;funcret
  2551  00112A                     __end_of_lcdCommand:
  2552                           	callstack 0
  2553                           
  2554 ;; *************** function _digitalWrite *****************
  2555 ;; Defined at:
  2556 ;;		line 14 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  pin             2    0[COMRAM] int 
  2559 ;;  value           2    2[COMRAM] int 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;		None
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg, status,2, status,0
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2571 ;;      Params:         4       0       0       0       0       0       0
  2572 ;;      Locals:         0       0       0       0       0       0       0
  2573 ;;      Temps:          2       0       0       0       0       0       0
  2574 ;;      Totals:         6       0       0       0       0       0       0
  2575 ;;Total ram usage:        6 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; This function calls:
  2578 ;;		Nothing
  2579 ;; This function is called by:
  2580 ;;		_ssdUpdate
  2581 ;;		_lcdCommand
  2582 ;;		_lcdData
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text15
  2587  00088E                     __ptext15:
  2588                           	callstack 0
  2589  00088E                     _digitalWrite:
  2590                           	callstack 28
  2591  00088E                     
  2592                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 16:     if(pin <8){
  2593  00088E  BE2F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2594  000890  EF55  F004         	goto	u900
  2595  000894  502F               	movf	(digitalWrite@pin+1)^0,w,c
  2596  000896  E107               	bnz	u901
  2597  000898  0E08               	movlw	8
  2598  00089A  5C2E               	subwf	digitalWrite@pin^0,w,c
  2599  00089C  B0D8               	btfsc	status,0,c
  2600  00089E  EF53  F004         	goto	u901
  2601  0008A2  EF55  F004         	goto	u900
  2602  0008A6                     u901:
  2603  0008A6  EF7F  F004         	goto	l1502
  2604  0008AA                     u900:
  2605  0008AA                     
  2606                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 17:         if (value){ ((PORTA) |=
      +                           (1<<(pin)));}
  2607  0008AA  5030               	movf	digitalWrite@value^0,w,c
  2608  0008AC  1031               	iorwf	(digitalWrite@value+1)^0,w,c
  2609  0008AE  B4D8               	btfsc	status,2,c
  2610  0008B0  EF5C  F004         	goto	u911
  2611  0008B4  EF5E  F004         	goto	u910
  2612  0008B8                     u911:
  2613  0008B8  EF6E  F004         	goto	l1500
  2614  0008BC                     u910:
  2615  0008BC  C02E  F032         	movff	digitalWrite@pin,??_digitalWrite
  2616  0008C0  0E01               	movlw	1
  2617  0008C2  6E33               	movwf	(??_digitalWrite+1)^0,c
  2618  0008C4  2A32               	incf	??_digitalWrite^0,f,c
  2619  0008C6  EF67  F004         	goto	u924
  2620  0008CA                     u925:
  2621  0008CA  90D8               	bcf	status,0,c
  2622  0008CC  3633               	rlcf	(??_digitalWrite+1)^0,f,c
  2623  0008CE                     u924:
  2624  0008CE  2E32               	decfsz	??_digitalWrite^0,f,c
  2625  0008D0  EF65  F004         	goto	u925
  2626  0008D4  5033               	movf	(??_digitalWrite+1)^0,w,c
  2627  0008D6  1280               	iorwf	128,f,c	;volatile
  2628  0008D8  EF6D  F005         	goto	l42
  2629  0008DC                     l1500:
  2630  0008DC  C02E  F032         	movff	digitalWrite@pin,??_digitalWrite
  2631  0008E0  0E01               	movlw	1
  2632  0008E2  6E33               	movwf	(??_digitalWrite+1)^0,c
  2633  0008E4  2A32               	incf	??_digitalWrite^0,f,c
  2634  0008E6  EF77  F004         	goto	u934
  2635  0008EA                     u935:
  2636  0008EA  90D8               	bcf	status,0,c
  2637  0008EC  3633               	rlcf	(??_digitalWrite+1)^0,f,c
  2638  0008EE                     u934:
  2639  0008EE  2E32               	decfsz	??_digitalWrite^0,f,c
  2640  0008F0  EF75  F004         	goto	u935
  2641  0008F4  5033               	movf	(??_digitalWrite+1)^0,w,c
  2642  0008F6  0AFF               	xorlw	255
  2643  0008F8  1680               	andwf	128,f,c	;volatile
  2644  0008FA  EF6D  F005         	goto	l42
  2645  0008FE                     l1502:
  2646  0008FE  BE2F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2647  000900  EF8D  F004         	goto	u940
  2648  000904  502F               	movf	(digitalWrite@pin+1)^0,w,c
  2649  000906  E107               	bnz	u941
  2650  000908  0E10               	movlw	16
  2651  00090A  5C2E               	subwf	digitalWrite@pin^0,w,c
  2652  00090C  B0D8               	btfsc	status,0,c
  2653  00090E  EF8B  F004         	goto	u941
  2654  000912  EF8D  F004         	goto	u940
  2655  000916                     u941:
  2656  000916  EFBB  F004         	goto	l1510
  2657  00091A                     u940:
  2658  00091A                     
  2659                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 20:         pin -=8;
  2660  00091A  0EF8               	movlw	248
  2661  00091C  262E               	addwf	digitalWrite@pin^0,f,c
  2662  00091E  0EFF               	movlw	255
  2663  000920  222F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2664                           
  2665                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 21:         if (value){ ((PORTB) |=
      +                           (1<<(pin)));}
  2666  000922  5030               	movf	digitalWrite@value^0,w,c
  2667  000924  1031               	iorwf	(digitalWrite@value+1)^0,w,c
  2668  000926  B4D8               	btfsc	status,2,c
  2669  000928  EF98  F004         	goto	u951
  2670  00092C  EF9A  F004         	goto	u950
  2671  000930                     u951:
  2672  000930  EFAA  F004         	goto	l1508
  2673  000934                     u950:
  2674  000934  C02E  F032         	movff	digitalWrite@pin,??_digitalWrite
  2675  000938  0E01               	movlw	1
  2676  00093A  6E33               	movwf	(??_digitalWrite+1)^0,c
  2677  00093C  2A32               	incf	??_digitalWrite^0,f,c
  2678  00093E  EFA3  F004         	goto	u964
  2679  000942                     u965:
  2680  000942  90D8               	bcf	status,0,c
  2681  000944  3633               	rlcf	(??_digitalWrite+1)^0,f,c
  2682  000946                     u964:
  2683  000946  2E32               	decfsz	??_digitalWrite^0,f,c
  2684  000948  EFA1  F004         	goto	u965
  2685  00094C  5033               	movf	(??_digitalWrite+1)^0,w,c
  2686  00094E  1281               	iorwf	129,f,c	;volatile
  2687  000950  EF6D  F005         	goto	l42
  2688  000954                     l1508:
  2689  000954  C02E  F032         	movff	digitalWrite@pin,??_digitalWrite
  2690  000958  0E01               	movlw	1
  2691  00095A  6E33               	movwf	(??_digitalWrite+1)^0,c
  2692  00095C  2A32               	incf	??_digitalWrite^0,f,c
  2693  00095E  EFB3  F004         	goto	u974
  2694  000962                     u975:
  2695  000962  90D8               	bcf	status,0,c
  2696  000964  3633               	rlcf	(??_digitalWrite+1)^0,f,c
  2697  000966                     u974:
  2698  000966  2E32               	decfsz	??_digitalWrite^0,f,c
  2699  000968  EFB1  F004         	goto	u975
  2700  00096C  5033               	movf	(??_digitalWrite+1)^0,w,c
  2701  00096E  0AFF               	xorlw	255
  2702  000970  1681               	andwf	129,f,c	;volatile
  2703  000972  EF6D  F005         	goto	l42
  2704  000976                     l1510:
  2705  000976  BE2F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2706  000978  EFC9  F004         	goto	u980
  2707  00097C  502F               	movf	(digitalWrite@pin+1)^0,w,c
  2708  00097E  E107               	bnz	u981
  2709  000980  0E18               	movlw	24
  2710  000982  5C2E               	subwf	digitalWrite@pin^0,w,c
  2711  000984  B0D8               	btfsc	status,0,c
  2712  000986  EFC7  F004         	goto	u981
  2713  00098A  EFC9  F004         	goto	u980
  2714  00098E                     u981:
  2715  00098E  EFF7  F004         	goto	l1518
  2716  000992                     u980:
  2717  000992                     
  2718                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 24:         pin -=16;
  2719  000992  0EF0               	movlw	240
  2720  000994  262E               	addwf	digitalWrite@pin^0,f,c
  2721  000996  0EFF               	movlw	255
  2722  000998  222F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2723                           
  2724                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 25:         if (value){ ((PORTC) |=
      +                           (1<<(pin)));}
  2725  00099A  5030               	movf	digitalWrite@value^0,w,c
  2726  00099C  1031               	iorwf	(digitalWrite@value+1)^0,w,c
  2727  00099E  B4D8               	btfsc	status,2,c
  2728  0009A0  EFD4  F004         	goto	u991
  2729  0009A4  EFD6  F004         	goto	u990
  2730  0009A8                     u991:
  2731  0009A8  EFE6  F004         	goto	l1516
  2732  0009AC                     u990:
  2733  0009AC  C02E  F032         	movff	digitalWrite@pin,??_digitalWrite
  2734  0009B0  0E01               	movlw	1
  2735  0009B2  6E33               	movwf	(??_digitalWrite+1)^0,c
  2736  0009B4  2A32               	incf	??_digitalWrite^0,f,c
  2737  0009B6  EFDF  F004         	goto	u1004
  2738  0009BA                     u1005:
  2739  0009BA  90D8               	bcf	status,0,c
  2740  0009BC  3633               	rlcf	(??_digitalWrite+1)^0,f,c
  2741  0009BE                     u1004:
  2742  0009BE  2E32               	decfsz	??_digitalWrite^0,f,c
  2743  0009C0  EFDD  F004         	goto	u1005
  2744  0009C4  5033               	movf	(??_digitalWrite+1)^0,w,c
  2745  0009C6  1282               	iorwf	130,f,c	;volatile
  2746  0009C8  EF6D  F005         	goto	l42
  2747  0009CC                     l1516:
  2748  0009CC  C02E  F032         	movff	digitalWrite@pin,??_digitalWrite
  2749  0009D0  0E01               	movlw	1
  2750  0009D2  6E33               	movwf	(??_digitalWrite+1)^0,c
  2751  0009D4  2A32               	incf	??_digitalWrite^0,f,c
  2752  0009D6  EFEF  F004         	goto	u1014
  2753  0009DA                     u1015:
  2754  0009DA  90D8               	bcf	status,0,c
  2755  0009DC  3633               	rlcf	(??_digitalWrite+1)^0,f,c
  2756  0009DE                     u1014:
  2757  0009DE  2E32               	decfsz	??_digitalWrite^0,f,c
  2758  0009E0  EFED  F004         	goto	u1015
  2759  0009E4  5033               	movf	(??_digitalWrite+1)^0,w,c
  2760  0009E6  0AFF               	xorlw	255
  2761  0009E8  1682               	andwf	130,f,c	;volatile
  2762  0009EA  EF6D  F005         	goto	l42
  2763  0009EE                     l1518:
  2764  0009EE  BE2F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2765  0009F0  EF05  F005         	goto	u1020
  2766  0009F4  502F               	movf	(digitalWrite@pin+1)^0,w,c
  2767  0009F6  E107               	bnz	u1021
  2768  0009F8  0E20               	movlw	32
  2769  0009FA  5C2E               	subwf	digitalWrite@pin^0,w,c
  2770  0009FC  B0D8               	btfsc	status,0,c
  2771  0009FE  EF03  F005         	goto	u1021
  2772  000A02  EF05  F005         	goto	u1020
  2773  000A06                     u1021:
  2774  000A06  EF33  F005         	goto	l1526
  2775  000A0A                     u1020:
  2776  000A0A                     
  2777                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 28:         pin -=24;
  2778  000A0A  0EE8               	movlw	232
  2779  000A0C  262E               	addwf	digitalWrite@pin^0,f,c
  2780  000A0E  0EFF               	movlw	255
  2781  000A10  222F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2782                           
  2783                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 29:         if (value){ ((PORTD) |=
      +                           (1<<(pin)));}
  2784  000A12  5030               	movf	digitalWrite@value^0,w,c
  2785  000A14  1031               	iorwf	(digitalWrite@value+1)^0,w,c
  2786  000A16  B4D8               	btfsc	status,2,c
  2787  000A18  EF10  F005         	goto	u1031
  2788  000A1C  EF12  F005         	goto	u1030
  2789  000A20                     u1031:
  2790  000A20  EF22  F005         	goto	l1524
  2791  000A24                     u1030:
  2792  000A24  C02E  F032         	movff	digitalWrite@pin,??_digitalWrite
  2793  000A28  0E01               	movlw	1
  2794  000A2A  6E33               	movwf	(??_digitalWrite+1)^0,c
  2795  000A2C  2A32               	incf	??_digitalWrite^0,f,c
  2796  000A2E  EF1B  F005         	goto	u1044
  2797  000A32                     u1045:
  2798  000A32  90D8               	bcf	status,0,c
  2799  000A34  3633               	rlcf	(??_digitalWrite+1)^0,f,c
  2800  000A36                     u1044:
  2801  000A36  2E32               	decfsz	??_digitalWrite^0,f,c
  2802  000A38  EF19  F005         	goto	u1045
  2803  000A3C  5033               	movf	(??_digitalWrite+1)^0,w,c
  2804  000A3E  1283               	iorwf	131,f,c	;volatile
  2805  000A40  EF6D  F005         	goto	l42
  2806  000A44                     l1524:
  2807  000A44  C02E  F032         	movff	digitalWrite@pin,??_digitalWrite
  2808  000A48  0E01               	movlw	1
  2809  000A4A  6E33               	movwf	(??_digitalWrite+1)^0,c
  2810  000A4C  2A32               	incf	??_digitalWrite^0,f,c
  2811  000A4E  EF2B  F005         	goto	u1054
  2812  000A52                     u1055:
  2813  000A52  90D8               	bcf	status,0,c
  2814  000A54  3633               	rlcf	(??_digitalWrite+1)^0,f,c
  2815  000A56                     u1054:
  2816  000A56  2E32               	decfsz	??_digitalWrite^0,f,c
  2817  000A58  EF29  F005         	goto	u1055
  2818  000A5C  5033               	movf	(??_digitalWrite+1)^0,w,c
  2819  000A5E  0AFF               	xorlw	255
  2820  000A60  1683               	andwf	131,f,c	;volatile
  2821  000A62  EF6D  F005         	goto	l42
  2822  000A66                     l1526:
  2823  000A66  BE2F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2824  000A68  EF41  F005         	goto	u1060
  2825  000A6C  502F               	movf	(digitalWrite@pin+1)^0,w,c
  2826  000A6E  E107               	bnz	u1061
  2827  000A70  0E28               	movlw	40
  2828  000A72  5C2E               	subwf	digitalWrite@pin^0,w,c
  2829  000A74  B0D8               	btfsc	status,0,c
  2830  000A76  EF3F  F005         	goto	u1061
  2831  000A7A  EF41  F005         	goto	u1060
  2832  000A7E                     u1061:
  2833  000A7E  EF6D  F005         	goto	l42
  2834  000A82                     u1060:
  2835  000A82                     
  2836                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 32:         pin -=32;
  2837  000A82  0EE0               	movlw	224
  2838  000A84  262E               	addwf	digitalWrite@pin^0,f,c
  2839  000A86  0EFF               	movlw	255
  2840  000A88  222F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2841                           
  2842                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 33:         if (value){ ((PORTE) |=
      +                           (1<<(pin)));}
  2843  000A8A  5030               	movf	digitalWrite@value^0,w,c
  2844  000A8C  1031               	iorwf	(digitalWrite@value+1)^0,w,c
  2845  000A8E  B4D8               	btfsc	status,2,c
  2846  000A90  EF4C  F005         	goto	u1071
  2847  000A94  EF4E  F005         	goto	u1070
  2848  000A98                     u1071:
  2849  000A98  EF5E  F005         	goto	l1532
  2850  000A9C                     u1070:
  2851  000A9C  C02E  F032         	movff	digitalWrite@pin,??_digitalWrite
  2852  000AA0  0E01               	movlw	1
  2853  000AA2  6E33               	movwf	(??_digitalWrite+1)^0,c
  2854  000AA4  2A32               	incf	??_digitalWrite^0,f,c
  2855  000AA6  EF57  F005         	goto	u1084
  2856  000AAA                     u1085:
  2857  000AAA  90D8               	bcf	status,0,c
  2858  000AAC  3633               	rlcf	(??_digitalWrite+1)^0,f,c
  2859  000AAE                     u1084:
  2860  000AAE  2E32               	decfsz	??_digitalWrite^0,f,c
  2861  000AB0  EF55  F005         	goto	u1085
  2862  000AB4  5033               	movf	(??_digitalWrite+1)^0,w,c
  2863  000AB6  1284               	iorwf	132,f,c	;volatile
  2864  000AB8  EF6D  F005         	goto	l42
  2865  000ABC                     l1532:
  2866  000ABC  C02E  F032         	movff	digitalWrite@pin,??_digitalWrite
  2867  000AC0  0E01               	movlw	1
  2868  000AC2  6E33               	movwf	(??_digitalWrite+1)^0,c
  2869  000AC4  2A32               	incf	??_digitalWrite^0,f,c
  2870  000AC6  EF67  F005         	goto	u1094
  2871  000ACA                     u1095:
  2872  000ACA  90D8               	bcf	status,0,c
  2873  000ACC  3633               	rlcf	(??_digitalWrite+1)^0,f,c
  2874  000ACE                     u1094:
  2875  000ACE  2E32               	decfsz	??_digitalWrite^0,f,c
  2876  000AD0  EF65  F005         	goto	u1095
  2877  000AD4  5033               	movf	(??_digitalWrite+1)^0,w,c
  2878  000AD6  0AFF               	xorlw	255
  2879  000AD8  1684               	andwf	132,f,c	;volatile
  2880  000ADA                     l42:
  2881  000ADA  0012               	return		;funcret
  2882  000ADC                     __end_of_digitalWrite:
  2883                           	callstack 0
  2884                           
  2885 ;; *************** function _Delay2ms *****************
  2886 ;; Defined at:
  2887 ;;		line 36 in file "lcd.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;		None
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  i               1    1[COMRAM] unsigned char 
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  1    wreg      void 
  2894 ;; Registers used:
  2895 ;;		wreg, status,2, status,0, cstack
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2901 ;;      Params:         0       0       0       0       0       0       0
  2902 ;;      Locals:         1       0       0       0       0       0       0
  2903 ;;      Temps:          0       0       0       0       0       0       0
  2904 ;;      Totals:         1       0       0       0       0       0       0
  2905 ;;Total ram usage:        1 bytes
  2906 ;; Hardware stack levels used:    1
  2907 ;; Hardware stack levels required when called:    1
  2908 ;; This function calls:
  2909 ;;		_Delay40us
  2910 ;; This function is called by:
  2911 ;;		_lcdCommand
  2912 ;;		_lcdInit
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           	psect	text16
  2917  0014C2                     __ptext16:
  2918                           	callstack 0
  2919  0014C2                     _Delay2ms:
  2920                           	callstack 27
  2921  0014C2                     
  2922                           ;lcd.c: 37:     unsigned char i;;lcd.c: 38:     for (i = 0; i < 50; i++) {
  2923  0014C2  0E00               	movlw	0
  2924  0014C4  6E2F               	movwf	Delay2ms@i^0,c
  2925  0014C6                     l1052:
  2926                           
  2927                           ;lcd.c: 39:         Delay40us();
  2928  0014C6  EC6F  F00A         	call	_Delay40us	;wreg free
  2929  0014CA                     
  2930                           ;lcd.c: 40:     }
  2931  0014CA  2A2F               	incf	Delay2ms@i^0,f,c
  2932  0014CC  0E31               	movlw	49
  2933  0014CE  642F               	cpfsgt	Delay2ms@i^0,c
  2934  0014D0  EF6C  F00A         	goto	u221
  2935  0014D4  EF6E  F00A         	goto	u220
  2936  0014D8                     u221:
  2937  0014D8  EF63  F00A         	goto	l1052
  2938  0014DC                     u220:
  2939  0014DC  0012               	return		;funcret
  2940  0014DE                     __end_of_Delay2ms:
  2941                           	callstack 0
  2942                           
  2943 ;; *************** function _Delay40us *****************
  2944 ;; Defined at:
  2945 ;;		line 31 in file "lcd.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;		None
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  i               1    0[COMRAM] unsigned char 
  2950 ;; Return value:  Size  Location     Type
  2951 ;;                  1    wreg      void 
  2952 ;; Registers used:
  2953 ;;		wreg, status,2, status,0
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2959 ;;      Params:         0       0       0       0       0       0       0
  2960 ;;      Locals:         1       0       0       0       0       0       0
  2961 ;;      Temps:          0       0       0       0       0       0       0
  2962 ;;      Totals:         1       0       0       0       0       0       0
  2963 ;;Total ram usage:        1 bytes
  2964 ;; Hardware stack levels used:    1
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_Delay2ms
  2969 ;;		_lcdCommand
  2970 ;;		_lcdData
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text17
  2975  0014DE                     __ptext17:
  2976                           	callstack 0
  2977  0014DE                     _Delay40us:
  2978                           	callstack 28
  2979  0014DE                     
  2980                           ;lcd.c: 32:     unsigned char i;;lcd.c: 33:     for (i = 0; i < 25; i++);
  2981  0014DE  0E00               	movlw	0
  2982  0014E0  6E2E               	movwf	Delay40us@i^0,c
  2983  0014E2                     l1002:
  2984  0014E2  2A2E               	incf	Delay40us@i^0,f,c
  2985  0014E4  0E18               	movlw	24
  2986  0014E6  642E               	cpfsgt	Delay40us@i^0,c
  2987  0014E8  EF78  F00A         	goto	u11
  2988  0014EC  EF7A  F00A         	goto	u10
  2989  0014F0                     u11:
  2990  0014F0  EF71  F00A         	goto	l1002
  2991  0014F4                     u10:
  2992  0014F4  0012               	return		;funcret
  2993  0014F6                     __end_of_Delay40us:
  2994                           	callstack 0
  2995                           
  2996 ;; *************** function _kpRead *****************
  2997 ;; Defined at:
  2998 ;;		line 37 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;		None
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;		None
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  2    0[COMRAM] unsigned int 
  3005 ;; Registers used:
  3006 ;;		None
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3012 ;;      Params:         2       0       0       0       0       0       0
  3013 ;;      Locals:         0       0       0       0       0       0       0
  3014 ;;      Temps:          0       0       0       0       0       0       0
  3015 ;;      Totals:         2       0       0       0       0       0       0
  3016 ;;Total ram usage:        2 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; This function calls:
  3019 ;;		Nothing
  3020 ;; This function is called by:
  3021 ;;		_chooseSong
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           	psect	text18
  3026  001500                     __ptext18:
  3027                           	callstack 0
  3028  001500                     _kpRead:
  3029                           	callstack 29
  3030  001500                     
  3031                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 38:     return valor;
  3032  001500  C022  F02E         	movff	_valor,?_kpRead
  3033  001504  C023  F02F         	movff	_valor+1,?_kpRead+1
  3034  001508  0012               	return		;funcret
  3035  00150A                     __end_of_kpRead:
  3036                           	callstack 0
  3037                           
  3038 ;; *************** function _kpDebounce *****************
  3039 ;; Defined at:
  3040 ;;		line 41 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;		None
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  k               2    6[COMRAM] int 
  3045 ;;  i               1    9[COMRAM] unsigned char 
  3046 ;;  j               1    8[COMRAM] unsigned char 
  3047 ;;  old_D           1    5[COMRAM] unsigned char 
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  1    wreg      void 
  3050 ;; Registers used:
  3051 ;;		wreg, status,2, status,0, prodl, prodh
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3057 ;;      Params:         0       0       0       0       0       0       0
  3058 ;;      Locals:         5       0       0       0       0       0       0
  3059 ;;      Temps:          5       0       0       0       0       0       0
  3060 ;;      Totals:        10       0       0       0       0       0       0
  3061 ;;Total ram usage:       10 bytes
  3062 ;; Hardware stack levels used:    1
  3063 ;; This function calls:
  3064 ;;		Nothing
  3065 ;; This function is called by:
  3066 ;;		_chooseSong
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           	psect	text19
  3071  000ADC                     __ptext19:
  3072                           	callstack 0
  3073  000ADC                     _kpDebounce:
  3074                           	callstack 29
  3075  000ADC                     
  3076                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 42:     unsigned char i, j;;D:/
      +                          Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 43:     static unsigned char tempo;
      +                          ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 44:     static unsigned int val
      +                          orNovo = 0x0000;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 45:     static 
      +                          unsigned int valorAntigo = 0x0000;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.
      +                          c: 48:     unsigned char old_D;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 
      +                          49:     old_D = PORTD;
  3077  000ADC  CF83 F033          	movff	3971,kpDebounce@old_D	;volatile
  3078  000AE0                     
  3079                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 53:     TRISD |= 0x0f;
  3080  000AE0  0E0F               	movlw	15
  3081  000AE2  1295               	iorwf	149,f,c	;volatile
  3082  000AE4                     
  3083                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 55:     for (i = 0; i < 3; i++)
      +                           {
  3084  000AE4  0E00               	movlw	0
  3085  000AE6  6E37               	movwf	kpDebounce@i^0,c
  3086  000AE8                     l1148:
  3087                           
  3088                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 57:         TRISB &= 0xF8;
  3089  000AE8  0EF8               	movlw	248
  3090  000AEA  1693               	andwf	147,f,c	;volatile
  3091                           
  3092                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 59:         ((TRISB) |= (1<<(i)
      +                          ));
  3093  000AEC  C037  F02E         	movff	kpDebounce@i,??_kpDebounce
  3094  000AF0  0E01               	movlw	1
  3095  000AF2  6E2F               	movwf	(??_kpDebounce+1)^0,c
  3096  000AF4  2A2E               	incf	??_kpDebounce^0,f,c
  3097  000AF6  EF7F  F005         	goto	u454
  3098  000AFA                     u455:
  3099  000AFA  90D8               	bcf	status,0,c
  3100  000AFC  362F               	rlcf	(??_kpDebounce+1)^0,f,c
  3101  000AFE                     u454:
  3102  000AFE  2E2E               	decfsz	??_kpDebounce^0,f,c
  3103  000B00  EF7D  F005         	goto	u455
  3104  000B04  502F               	movf	(??_kpDebounce+1)^0,w,c
  3105  000B06  1293               	iorwf	147,f,c	;volatile
  3106                           
  3107                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 61:         PORTB |= 0x07;
  3108  000B08  0E07               	movlw	7
  3109  000B0A  1281               	iorwf	129,f,c	;volatile
  3110                           
  3111                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 62:         ((PORTB) &= ~(1<<(i
      +                          )));
  3112  000B0C  C037  F02E         	movff	kpDebounce@i,??_kpDebounce
  3113  000B10  0E01               	movlw	1
  3114  000B12  6E2F               	movwf	(??_kpDebounce+1)^0,c
  3115  000B14  2A2E               	incf	??_kpDebounce^0,f,c
  3116  000B16  EF8F  F005         	goto	u464
  3117  000B1A                     u465:
  3118  000B1A  90D8               	bcf	status,0,c
  3119  000B1C  362F               	rlcf	(??_kpDebounce+1)^0,f,c
  3120  000B1E                     u464:
  3121  000B1E  2E2E               	decfsz	??_kpDebounce^0,f,c
  3122  000B20  EF8D  F005         	goto	u465
  3123  000B24  502F               	movf	(??_kpDebounce+1)^0,w,c
  3124  000B26  0AFF               	xorlw	255
  3125  000B28  1681               	andwf	129,f,c	;volatile
  3126  000B2A                     
  3127                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 65:         for (int k = 0; k <
      +                           10; k++);
  3128  000B2A  0E00               	movlw	0
  3129  000B2C  6E35               	movwf	(kpDebounce@k+1)^0,c
  3130  000B2E  0E00               	movlw	0
  3131  000B30  6E34               	movwf	kpDebounce@k^0,c
  3132  000B32                     l1156:
  3133  000B32  4A34               	infsnz	kpDebounce@k^0,f,c
  3134  000B34  2A35               	incf	(kpDebounce@k+1)^0,f,c
  3135  000B36  BE35               	btfsc	(kpDebounce@k+1)^0,7,c
  3136  000B38  EFA7  F005         	goto	u471
  3137  000B3C  5035               	movf	(kpDebounce@k+1)^0,w,c
  3138  000B3E  E109               	bnz	u470
  3139  000B40  0E0A               	movlw	10
  3140  000B42  5C34               	subwf	kpDebounce@k^0,w,c
  3141  000B44  A0D8               	btfss	status,0,c
  3142  000B46  EFA7  F005         	goto	u471
  3143  000B4A  EFA9  F005         	goto	u470
  3144  000B4E                     u471:
  3145  000B4E  EF99  F005         	goto	l1156
  3146  000B52                     u470:
  3147  000B52                     
  3148                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 68:         for (j = 0; j < 4; 
      +                          j++) {
  3149  000B52  0E00               	movlw	0
  3150  000B54  6E36               	movwf	kpDebounce@j^0,c
  3151  000B56                     l1166:
  3152                           
  3153                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 69:             if (!((PORTD) &
      +                           (1<<(j)))) {
  3154  000B56  C036  F02E         	movff	kpDebounce@j,??_kpDebounce
  3155  000B5A  0E01               	movlw	1
  3156  000B5C  6E2F               	movwf	(??_kpDebounce+1)^0,c
  3157  000B5E  2A2E               	incf	??_kpDebounce^0,f,c
  3158  000B60  EFB4  F005         	goto	u484
  3159  000B64                     u485:
  3160  000B64  90D8               	bcf	status,0,c
  3161  000B66  362F               	rlcf	(??_kpDebounce+1)^0,f,c
  3162  000B68                     u484:
  3163  000B68  2E2E               	decfsz	??_kpDebounce^0,f,c
  3164  000B6A  EFB2  F005         	goto	u485
  3165  000B6E  502F               	movf	(??_kpDebounce+1)^0,w,c
  3166  000B70  1483               	andwf	131,w,c	;volatile
  3167  000B72  0900               	iorlw	0
  3168  000B74  A4D8               	btfss	status,2,c
  3169  000B76  EFBF  F005         	goto	u491
  3170  000B7A  EFC1  F005         	goto	u490
  3171  000B7E                     u491:
  3172  000B7E  EFD9  F005         	goto	l1170
  3173  000B82                     u490:
  3174  000B82                     
  3175                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 70:                 ((valorNovo
      +                          ) |= (1<<((i * 4) + j)));
  3176  000B82  5037               	movf	kpDebounce@i^0,w,c
  3177  000B84  0D04               	mullw	4
  3178  000B86  50F3               	movf	243,w,c
  3179  000B88  2436               	addwf	kpDebounce@j^0,w,c
  3180  000B8A  6E2E               	movwf	??_kpDebounce^0,c
  3181  000B8C  0E01               	movlw	1
  3182  000B8E  6E2F               	movwf	(??_kpDebounce+1)^0,c
  3183  000B90  0E00               	movlw	0
  3184  000B92  6E30               	movwf	(??_kpDebounce+2)^0,c
  3185  000B94  2A2E               	incf	??_kpDebounce^0,f,c
  3186  000B96  EFD0  F005         	goto	u504
  3187  000B9A                     u505:
  3188  000B9A  90D8               	bcf	status,0,c
  3189  000B9C  362F               	rlcf	(??_kpDebounce+1)^0,f,c
  3190  000B9E  3630               	rlcf	(??_kpDebounce+2)^0,f,c
  3191  000BA0                     u504:
  3192  000BA0  2E2E               	decfsz	??_kpDebounce^0,f,c
  3193  000BA2  EFCD  F005         	goto	u505
  3194  000BA6  502F               	movf	(??_kpDebounce+1)^0,w,c
  3195  000BA8  1220               	iorwf	kpDebounce@valorNovo^0,f,c
  3196  000BAA  5030               	movf	(??_kpDebounce+2)^0,w,c
  3197  000BAC  1221               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  3198                           
  3199                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 71:             } else {
  3200  000BAE  EFF3  F005         	goto	l1172
  3201  000BB2                     l1170:
  3202                           
  3203                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 72:                 ((valorNovo
      +                          ) &= ~(1<<((i * 4) + j)));
  3204  000BB2  5037               	movf	kpDebounce@i^0,w,c
  3205  000BB4  0D04               	mullw	4
  3206  000BB6  50F3               	movf	243,w,c
  3207  000BB8  2436               	addwf	kpDebounce@j^0,w,c
  3208  000BBA  6E2E               	movwf	??_kpDebounce^0,c
  3209  000BBC  0E01               	movlw	1
  3210  000BBE  6E2F               	movwf	(??_kpDebounce+1)^0,c
  3211  000BC0  0E00               	movlw	0
  3212  000BC2  6E30               	movwf	(??_kpDebounce+2)^0,c
  3213  000BC4  2A2E               	incf	??_kpDebounce^0,f,c
  3214  000BC6  EFE8  F005         	goto	u514
  3215  000BCA                     u515:
  3216  000BCA  90D8               	bcf	status,0,c
  3217  000BCC  362F               	rlcf	(??_kpDebounce+1)^0,f,c
  3218  000BCE  3630               	rlcf	(??_kpDebounce+2)^0,f,c
  3219  000BD0                     u514:
  3220  000BD0  2E2E               	decfsz	??_kpDebounce^0,f,c
  3221  000BD2  EFE5  F005         	goto	u515
  3222  000BD6  1C2F               	comf	(??_kpDebounce+1)^0,w,c
  3223  000BD8  6E31               	movwf	(??_kpDebounce+3)^0,c
  3224  000BDA  1C30               	comf	(??_kpDebounce+2)^0,w,c
  3225  000BDC  6E32               	movwf	(??_kpDebounce+4)^0,c
  3226  000BDE  5031               	movf	(??_kpDebounce+3)^0,w,c
  3227  000BE0  1620               	andwf	kpDebounce@valorNovo^0,f,c
  3228  000BE2  5032               	movf	(??_kpDebounce+4)^0,w,c
  3229  000BE4  1621               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  3230  000BE6                     l1172:
  3231                           
  3232                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 74:         }
  3233  000BE6  2A36               	incf	kpDebounce@j^0,f,c
  3234  000BE8  0E03               	movlw	3
  3235  000BEA  6436               	cpfsgt	kpDebounce@j^0,c
  3236  000BEC  EFFA  F005         	goto	u521
  3237  000BF0  EFFC  F005         	goto	u520
  3238  000BF4                     u521:
  3239  000BF4  EFAB  F005         	goto	l1166
  3240  000BF8                     u520:
  3241  000BF8                     
  3242                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 75:     }
  3243  000BF8  2A37               	incf	kpDebounce@i^0,f,c
  3244  000BFA  0E02               	movlw	2
  3245  000BFC  6437               	cpfsgt	kpDebounce@i^0,c
  3246  000BFE  EF03  F006         	goto	u531
  3247  000C02  EF05  F006         	goto	u530
  3248  000C06                     u531:
  3249  000C06  EF74  F005         	goto	l1148
  3250  000C0A                     u530:
  3251  000C0A                     
  3252                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 76:     if (valorAntigo == valo
      +                          rNovo) {
  3253  000C0A  5020               	movf	kpDebounce@valorNovo^0,w,c
  3254  000C0C  181E               	xorwf	kpDebounce@valorAntigo^0,w,c
  3255  000C0E  E107               	bnz	u541
  3256  000C10  5021               	movf	(kpDebounce@valorNovo+1)^0,w,c
  3257  000C12  181F               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  3258  000C14  A4D8               	btfss	status,2,c
  3259  000C16  EF0F  F006         	goto	u541
  3260  000C1A  EF11  F006         	goto	u540
  3261  000C1E                     u541:
  3262  000C1E  EF14  F006         	goto	l1184
  3263  000C22                     u540:
  3264  000C22                     
  3265                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 77:         tempo--;
  3266  000C22  062C               	decf	kpDebounce@tempo^0,f,c
  3267                           
  3268                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 78:     } else {
  3269  000C24  EF1A  F006         	goto	l111
  3270  000C28                     l1184:
  3271                           
  3272                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 79:         tempo = 10;
  3273  000C28  0E0A               	movlw	10
  3274  000C2A  6E2C               	movwf	kpDebounce@tempo^0,c
  3275  000C2C                     
  3276                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 80:         valorAntigo = valor
      +                          Novo;
  3277  000C2C  C020  F01E         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  3278  000C30  C021  F01F         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  3279  000C34                     l111:
  3280                           
  3281                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 82:     if (tempo == 0) {
  3282  000C34  502C               	movf	kpDebounce@tempo^0,w,c
  3283  000C36  A4D8               	btfss	status,2,c
  3284  000C38  EF20  F006         	goto	u551
  3285  000C3C  EF22  F006         	goto	u550
  3286  000C40                     u551:
  3287  000C40  EF26  F006         	goto	l112
  3288  000C44                     u550:
  3289  000C44                     
  3290                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 83:         valor = valorAntigo
      +                          ;
  3291  000C44  C01E  F022         	movff	kpDebounce@valorAntigo,_valor
  3292  000C48  C01F  F023         	movff	kpDebounce@valorAntigo+1,_valor+1
  3293  000C4C                     l112:
  3294                           
  3295                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 85:     PORTD = old_D;
  3296  000C4C  C033  FF83         	movff	kpDebounce@old_D,3971	;volatile
  3297  000C50                     
  3298                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 86:     TRISD = 0x00;
  3299  000C50  0E00               	movlw	0
  3300  000C52  6E95               	movwf	149,c	;volatile
  3301  000C54  0012               	return		;funcret
  3302  000C56                     __end_of_kpDebounce:
  3303                           	callstack 0
  3304                           
  3305 ;; *************** function _atraso_ms *****************
  3306 ;; Defined at:
  3307 ;;		line 3 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;  t               2    0[COMRAM] int 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;  i               2    2[COMRAM] volatile unsigned int 
  3312 ;;  k               1    5[COMRAM] volatile unsigned char 
  3313 ;;  j               1    4[COMRAM] volatile unsigned char 
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      void 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3323 ;;      Params:         2       0       0       0       0       0       0
  3324 ;;      Locals:         4       0       0       0       0       0       0
  3325 ;;      Temps:          0       0       0       0       0       0       0
  3326 ;;      Totals:         6       0       0       0       0       0       0
  3327 ;;Total ram usage:        6 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_main
  3333 ;;		_chooseSong
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text20
  3338  00121A                     __ptext20:
  3339                           	callstack 0
  3340  00121A                     _atraso_ms:
  3341                           	callstack 29
  3342  00121A                     
  3343                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 4:     volatile unsigned char j,
      +                           k;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 5:     volatile unsigned int 
      +                          i;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 7:     for (i = 0; i < (t); i+
      +                          +) {
  3344  00121A  0E00               	movlw	0
  3345  00121C  6E31               	movwf	(atraso_ms@i+1)^0,c	;volatile
  3346  00121E  0E00               	movlw	0
  3347  001220  6E30               	movwf	atraso_ms@i^0,c	;volatile
  3348  001222  EF33  F009         	goto	l1690
  3349  001226                     l1668:
  3350                           
  3351                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 8:         for (j = 0; j < 41; j
      +                          ++) {
  3352  001226  0E00               	movlw	0
  3353  001228  6E32               	movwf	atraso_ms@j^0,c	;volatile
  3354  00122A                     l1670:
  3355  00122A  0E28               	movlw	40
  3356  00122C  6432               	cpfsgt	atraso_ms@j^0,c	;volatile
  3357  00122E  EF1B  F009         	goto	u1361
  3358  001232  EF1D  F009         	goto	u1360
  3359  001236                     u1361:
  3360  001236  EF1F  F009         	goto	l1674
  3361  00123A                     u1360:
  3362  00123A  EF31  F009         	goto	l1688
  3363  00123E                     l1674:
  3364                           
  3365                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 9:             for (k = 0; k < 3
      +                          ; k++);
  3366  00123E  0E00               	movlw	0
  3367  001240  6E33               	movwf	atraso_ms@k^0,c	;volatile
  3368  001242                     l1676:
  3369  001242  0E02               	movlw	2
  3370  001244  6433               	cpfsgt	atraso_ms@k^0,c	;volatile
  3371  001246  EF27  F009         	goto	u1371
  3372  00124A  EF29  F009         	goto	u1370
  3373  00124E                     u1371:
  3374  00124E  EF2B  F009         	goto	l1680
  3375  001252                     u1370:
  3376  001252  EF2E  F009         	goto	l1684
  3377  001256                     l1680:
  3378  001256  2A33               	incf	atraso_ms@k^0,f,c	;volatile
  3379  001258  EF21  F009         	goto	l1676
  3380  00125C                     l1684:
  3381                           
  3382                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 10:         }
  3383  00125C  2A32               	incf	atraso_ms@j^0,f,c	;volatile
  3384  00125E  EF15  F009         	goto	l1670
  3385  001262                     l1688:
  3386                           
  3387                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 11:     }
  3388  001262  4A30               	infsnz	atraso_ms@i^0,f,c	;volatile
  3389  001264  2A31               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  3390  001266                     l1690:
  3391  001266  502E               	movf	atraso_ms@t^0,w,c
  3392  001268  5C30               	subwf	atraso_ms@i^0,w,c	;volatile
  3393  00126A  502F               	movf	(atraso_ms@t+1)^0,w,c
  3394  00126C  5831               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  3395  00126E  A0D8               	btfss	status,0,c
  3396  001270  EF3C  F009         	goto	u1381
  3397  001274  EF3E  F009         	goto	u1380
  3398  001278                     u1381:
  3399  001278  EF13  F009         	goto	l1668
  3400  00127C                     u1380:
  3401  00127C  0012               	return		;funcret
  3402  00127E                     __end_of_atraso_ms:
  3403                           	callstack 0
  3404                           
  3405                           	psect	rparam
  3406  0000                     
  3407                           	psect	idloc
  3408                           
  3409                           ;Config register IDLOC0 @ 0x200000
  3410                           ;	unspecified, using default values
  3411  200000                     	org	2097152
  3412  200000  FF                 	db	255
  3413                           
  3414                           ;Config register IDLOC1 @ 0x200001
  3415                           ;	unspecified, using default values
  3416  200001                     	org	2097153
  3417  200001  FF                 	db	255
  3418                           
  3419                           ;Config register IDLOC2 @ 0x200002
  3420                           ;	unspecified, using default values
  3421  200002                     	org	2097154
  3422  200002  FF                 	db	255
  3423                           
  3424                           ;Config register IDLOC3 @ 0x200003
  3425                           ;	unspecified, using default values
  3426  200003                     	org	2097155
  3427  200003  FF                 	db	255
  3428                           
  3429                           ;Config register IDLOC4 @ 0x200004
  3430                           ;	unspecified, using default values
  3431  200004                     	org	2097156
  3432  200004  FF                 	db	255
  3433                           
  3434                           ;Config register IDLOC5 @ 0x200005
  3435                           ;	unspecified, using default values
  3436  200005                     	org	2097157
  3437  200005  FF                 	db	255
  3438                           
  3439                           ;Config register IDLOC6 @ 0x200006
  3440                           ;	unspecified, using default values
  3441  200006                     	org	2097158
  3442  200006  FF                 	db	255
  3443                           
  3444                           ;Config register IDLOC7 @ 0x200007
  3445                           ;	unspecified, using default values
  3446  200007                     	org	2097159
  3447  200007  FF                 	db	255
  3448                           
  3449                           	psect	config
  3450                           
  3451                           ; Padding undefined space
  3452  300000                     	org	3145728
  3453  300000  FF                 	db	255
  3454                           
  3455                           ;Config register CONFIG1H @ 0x300001
  3456                           ;	Oscillator Selection bits
  3457                           ;	OSC = HS, HS oscillator
  3458                           ;	Fail-Safe Clock Monitor Enable bit
  3459                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3460                           ;	Internal/External Oscillator Switchover bit
  3461                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3462  300001                     	org	3145729
  3463  300001  02                 	db	2
  3464                           
  3465                           ;Config register CONFIG2L @ 0x300002
  3466                           ;	Power-up Timer Enable bit
  3467                           ;	PWRT = OFF, PWRT disabled
  3468                           ;	Brown-out Reset Enable bits
  3469                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3470                           ;	Brown Out Reset Voltage bits
  3471                           ;	BORV = 0x2E, user specified literal
  3472  300002                     	org	3145730
  3473  300002  71                 	db	369
  3474                           
  3475                           ;Config register CONFIG2H @ 0x300003
  3476                           ;	Watchdog Timer Enable bit
  3477                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3478                           ;	Watchdog Timer Postscale Select bits
  3479                           ;	WDTPS = 1, 1:1
  3480  300003                     	org	3145731
  3481  300003  00                 	db	0
  3482                           
  3483                           ; Padding undefined space
  3484  300004                     	org	3145732
  3485  300004  FF                 	db	255
  3486                           
  3487                           ;Config register CONFIG3H @ 0x300005
  3488                           ;	CCP2 MUX bit
  3489                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3490                           ;	PORTB A/D Enable bit
  3491                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3492                           ;	Low-Power Timer1 Oscillator Enable bit
  3493                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3494                           ;	MCLR Pin Enable bit
  3495                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3496  300005                     	org	3145733
  3497  300005  83                 	db	131
  3498                           
  3499                           ;Config register CONFIG4L @ 0x300006
  3500                           ;	Stack Full/Underflow Reset Enable bit
  3501                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3502                           ;	Single-Supply ICSP Enable bit
  3503                           ;	LVP = OFF, Single-Supply ICSP disabled
  3504                           ;	Extended Instruction Set Enable bit
  3505                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3506                           ;	Background Debugger Enable bit
  3507                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3508  300006                     	org	3145734
  3509  300006  80                 	db	128
  3510                           
  3511                           ; Padding undefined space
  3512  300007                     	org	3145735
  3513  300007  FF                 	db	255
  3514                           
  3515                           ;Config register CONFIG5L @ 0x300008
  3516                           ;	Code Protection bit
  3517                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3518                           ;	Code Protection bit
  3519                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3520                           ;	Code Protection bit
  3521                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3522                           ;	Code Protection bit
  3523                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3524  300008                     	org	3145736
  3525  300008  0F                 	db	15
  3526                           
  3527                           ;Config register CONFIG5H @ 0x300009
  3528                           ;	Boot Block Code Protection bit
  3529                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3530                           ;	Data EEPROM Code Protection bit
  3531                           ;	CPD = OFF, Data EEPROM not code-protected
  3532  300009                     	org	3145737
  3533  300009  C0                 	db	192
  3534                           
  3535                           ;Config register CONFIG6L @ 0x30000A
  3536                           ;	Write Protection bit
  3537                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3538                           ;	Write Protection bit
  3539                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3540                           ;	Write Protection bit
  3541                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3542                           ;	Write Protection bit
  3543                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3544  30000A                     	org	3145738
  3545  30000A  0F                 	db	15
  3546                           
  3547                           ;Config register CONFIG6H @ 0x30000B
  3548                           ;	Configuration Register Write Protection bit
  3549                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3550                           ;	Boot Block Write Protection bit
  3551                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3552                           ;	Data EEPROM Write Protection bit
  3553                           ;	WRTD = OFF, Data EEPROM not write-protected
  3554  30000B                     	org	3145739
  3555  30000B  E0                 	db	224
  3556                           
  3557                           ;Config register CONFIG7L @ 0x30000C
  3558                           ;	Table Read Protection bit
  3559                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3560                           ;	Table Read Protection bit
  3561                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3562                           ;	Table Read Protection bit
  3563                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3564                           ;	Table Read Protection bit
  3565                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3566  30000C                     	org	3145740
  3567  30000C  0F                 	db	15
  3568                           
  3569                           ;Config register CONFIG7H @ 0x30000D
  3570                           ;	Boot Block Table Read Protection bit
  3571                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3572  30000D                     	org	3145741
  3573  30000D  40                 	db	64
  3574                           tosu	equ	0xFFF
  3575                           tosh	equ	0xFFE
  3576                           tosl	equ	0xFFD
  3577                           stkptr	equ	0xFFC
  3578                           pclatu	equ	0xFFB
  3579                           pclath	equ	0xFFA
  3580                           pcl	equ	0xFF9
  3581                           tblptru	equ	0xFF8
  3582                           tblptrh	equ	0xFF7
  3583                           tblptrl	equ	0xFF6
  3584                           tablat	equ	0xFF5
  3585                           prodh	equ	0xFF4
  3586                           prodl	equ	0xFF3
  3587                           indf0	equ	0xFEF
  3588                           postinc0	equ	0xFEE
  3589                           postdec0	equ	0xFED
  3590                           preinc0	equ	0xFEC
  3591                           plusw0	equ	0xFEB
  3592                           fsr0h	equ	0xFEA
  3593                           fsr0l	equ	0xFE9
  3594                           wreg	equ	0xFE8
  3595                           indf1	equ	0xFE7
  3596                           postinc1	equ	0xFE6
  3597                           postdec1	equ	0xFE5
  3598                           preinc1	equ	0xFE4
  3599                           plusw1	equ	0xFE3
  3600                           fsr1h	equ	0xFE2
  3601                           fsr1l	equ	0xFE1
  3602                           bsr	equ	0xFE0
  3603                           indf2	equ	0xFDF
  3604                           postinc2	equ	0xFDE
  3605                           postdec2	equ	0xFDD
  3606                           preinc2	equ	0xFDC
  3607                           plusw2	equ	0xFDB
  3608                           fsr2h	equ	0xFDA
  3609                           fsr2l	equ	0xFD9
  3610                           status	equ	0xFD8

Data Sizes:
    Strings     45
    Constant    16
    Data        199
    BSS         206
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     16      61
    BANK0           128      0       0
    BANK1           256      0     190
    BANK2           256      0     170
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 170
		 -> nomes(BANK2[170]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 170
		 -> nomes(BANK2[170]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    lcdStr@str	PTR const unsigned char  size(2) Largest target is 190
		 -> STR_5(CODE[17]), musicas.nome(BANK1[17]), musicas(BANK1[190]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[7]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_songsInit
    _ssdInit->_pinMode
    _songsInit->_strcpy
    _strcpy->___wmul
    _lcdInit->_lcdCommand
    _chooseSong->_lcdStr
    _ssdUpdate->_digitalWrite
    _lcdStr->_lcdData
    _lcdData->_digitalWrite
    _lcdPosition->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   28964
                          _atraso_ms
                         _chooseSong
                             _kpInit
                         _lcdCommand
                            _lcdInit
                        _lcdPosition
                             _lcdStr
                          _songsInit
                            _ssdInit
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    1352
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _songsInit                                            2     2      0     997
                                             14 COMRAM     2     2      0
                             ___wmul
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     4      4     248
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    4163
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _chooseSong                                           2     2      0   12754
                                             13 COMRAM     2     2      0
                          _atraso_ms
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                        _lcdPosition
                             _lcdStr
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _ssdUpdate                                            2     2      0    2572
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1     274
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _lcdStr                                               5     3      2    3193
                                              8 COMRAM     5     3      2
                            _lcdData
 ---------------------------------------------------------------------------------
 (2) _lcdData                                              2     2      0    2647
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _lcdPosition                                          3     2      1    3464
                                              8 COMRAM     3     2      1
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    2751
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    2572
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      60
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _kpDebounce                                          10    10      0     210
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (2) _atraso_ms                                            6     4      2     290
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _chooseSong
     _atraso_ms
     _kpDebounce
     _kpRead
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _lcdPosition
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
     _lcdStr
       _lcdData
         _Delay40us
         _digitalWrite
     _ssdDigit
     _ssdUpdate
       _digitalWrite
   _kpInit
   _lcdCommand
     _Delay2ms
       _Delay40us
     _Delay40us
     _digitalWrite
   _lcdInit
     _Delay2ms
       _Delay40us
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _pinMode
   _lcdPosition
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
   _lcdStr
     _lcdData
       _Delay40us
       _digitalWrite
   _songsInit
     ___wmul
     _strcpy
       ___wmul (ARG)
   _ssdInit
     _pinMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      AA       9       66.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      BE       7       74.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     10      3D       1       48.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A5      15        0.0%
DATA                 0      0     1A5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Dec 08 14:53:14 2020

                      _i 002D                       l42 0ADA                       l76 088C  
                     l93 1508                       u10 14F4                       u11 14F0  
                     _v0 002A                       _v1 0029                       _v2 0028  
                     _v3 0027      ___wmul@multiplicand 0030                      l111 0C34  
                    l112 0C4C                      l113 0C54                      l116 14FE  
                    l231 14DC                      l143 133A                      l304 0E3C  
                    l241 143E                      l153 0D94                      l226 14F4  
                    l314 0ED2                      l251 1394                      l308 0E6A  
                    l244 11A0                      l156 13EA                      l317 14A2  
                    l238 1128                      l247 1358                      l248 137E  
                    l257 1218                      l188 127C                      l294 101E  
                    l994 147C                      l996 14DE                      u220 14DC  
                    u221 14D8                      u520 0BF8                      u504 0BA0  
                    u521 0BF4                      u505 0B9A                      u530 0C0A  
                    u514 0BD0                      u531 0C06                      u515 0BCA  
                    u540 0C22                      u541 0C1E                      u550 0C44  
                    u470 0B52                      u454 0AFE                      u551 0C40  
                    u471 0B4E                      u455 0AFA                      u464 0B1E  
                    u465 0B1A                      u490 0B82                      u491 0B7E  
                    u484 0B68                      u900 08AA                      u485 0B64  
                    u901 08A6                      u910 08BC                      u911 08B8  
                    u940 091A                      u924 08CE                      u941 0916  
                    u925 08CA                      u950 0934                      u934 08EE  
                    u951 0930                      u935 08EA                      u980 0992  
                    u964 0946                      u981 098E                      u965 0942  
                    u990 09AC                      u974 0966                      u991 09A8  
                    u975 0962                      prod 000FF3                      wreg 000FE8  
                   l1002 14E2                     l1004 14E4                     l1140 0AE0  
                   l1052 14C6                     l1150 0B2A                     l1142 0AE4  
                   l1054 14CA                     l1046 14C2                     l1160 0B52  
                   l1056 14CC                     l1170 0BB2                     l1138 0ADC  
                   l1306 14F6                     l1180 0C0A                     l1172 0BE6  
                   l1156 0B32                     l1148 0AE8                     l1500 08DC  
                   l1190 0C50                     l1182 0C22                     l1174 0BE8  
                   l1166 0B56                     l1158 0B36                     l1510 0976  
                   l1502 08FE                     l1184 0C28                     l1176 0BF8  
                   l1168 0B82                     l1520 0A0A                     l1512 0992  
                   l1504 091A                     l1600 07CE                     l1186 0C2C  
                   l1178 0BFA                     l1530 0A9C                     l1522 0A24  
                   l1514 09AC                     l1506 0934                     l1610 086A  
                   l1602 07F2                     l1188 0C44                     l1612 1500  
                   l1532 0ABC                     l1524 0A44                     l1516 09CC  
                   l1508 0954                     l1540 10CA                     l1700 1368  
                   l1620 12FA                     l1604 0818                     l1526 0A66  
                   l1518 09EE                     l1550 110C                     l1542 10CE  
                   l1534 10AE                     l1702 1378                     l1710 11A2  
                   l1630 1336                     l1622 130A                     l1614 12E2  
                   l1606 0834                     l1528 0A82                     l1552 111C  
                   l1544 10E2                     l1536 10B2                     l1704 138E  
                   l1560 13F6                     l1712 11AA                     l1624 130E  
                   l1616 12E6                     l1640 0C96                     l1632 0C56  
                   l1800 0E10                     l1608 0846                     l1720 1450  
                   l1554 1124                     l1546 10F6                     l1538 10B6  
                   l1570 143A                     l1562 140A                     l1714 11DA  
                   l1626 1320                     l1618 12F6                     l1650 0D06  
                   l1642 0CB2                     l1634 0C5A                     l1810 0E5C  
                   l1802 0E1E                     l1722 147E                     l1730 13E6  
                   l1548 10FA                     l1708 138E                     l1564 140E  
                   l1556 13EE                     l1716 11DC                     l1628 1324  
                   l1652 0D18                     l1644 0CC4                     l1660 0D5A  
                   l1636 0C6E                     l1820 0E98                     l1812 0E64  
                   l1804 0E2E                     l1580 06B0                     l1572 0640  
                   l1724 149A                     l1740 1004                     l1732 0F7E  
                   l1670 122A                     l1494 088E                     l1566 1422  
                   l1558 13F2                     l1654 0D30                     l1646 0CDC  
                   l1638 0C82                     l1822 0EA2                     l1806 0E36  
                   l1590 0744                     l1582 06CC                     l1574 065C  
                   l1750 115A                     l1718 1440                     l1742 1008  
                   l1830 1020                     l1680 1256                     l1496 08AA  
                   l1568 1436                     l1656 0D42                     l1648 0CEE  
                   l1824 0EB6                     l1808 0E4A                     l1816 0E7C  
                   l1592 0756                     l1584 06DE                     l1576 066E  
                   l1760 1170                     l1752 115E                     l1744 112A  
                   l1728 1396                     l1840 1036                     l1832 1024  
                   l1674 123E                     l1690 1266                     l1666 121A  
                   l1498 08BC                     l1826 0EC0                     l1818 0E8C  
                   l1594 077A                     l1586 0702                     l1578 068E  
                   l1770 1188                     l1762 1174                     l1754 1162  
                   l1746 1152                     l1738 0F86                     l1850 106E  
                   l1842 1040                     l1834 1028                     l1684 125C  
                   l1676 1242                     l1668 1226                     l1692 133E  
                   l1828 0EC8                     l1780 0D9A                     l1596 07A0  
                   l1588 0728                     l1772 118E                     l1764 1178  
                   l1756 1166                     l1748 1156                     l1860 10A0  
                   l1852 1074                     l1844 104C                     l1836 102C  
                   l1694 1342                     l1790 0DC6                     l1782 0DA2  
                   l1598 07BC                     l1774 1194                     l1766 117E  
                   l1758 116A                     l1854 107E                     l1846 1056  
                   l1838 1030                     l1688 1262                     l1696 1352  
                   l1792 0DCA                     l1784 0DB0                     l1776 119A  
                   l1768 1182                     l1856 108A                     l1848 1062  
                   l1698 1352                     l1866 0D6E                     l1794 0DD6  
                   l1786 0DBE                     l1778 0D96                     l1858 1094  
                   l1796 0DF8                     l1788 0DC2                     l1798 0E08  
                   STR_1 063A                     STR_2 0633                     STR_3 0622  
                   STR_4 0611                     STR_5 0611                     u1020 0A0A  
                   u1004 09BE                     u1100 110C                     u1021 0A06  
                   u1005 09BA                     u1101 1108                     u1030 0A24  
                   u1014 09DE                     u1110 111C                     u1031 0A20  
                   u1015 09DA                     u1111 1118                     u1200 0744  
                   u1120 065C                     u1201 0740                     u1121 0658  
                   u1210 0756                     u1130 066E                     u1211 0752  
                   u1131 066A                     u1060 0A82                     u1044 0A36  
                   u1061 0A7E                     u1045 0A32                     u1070 0A9C  
                   u1054 0A56                     u1071 0A98                     u1055 0A52  
                   u1400 1368                     u1320 12F6                     u1304 085C  
                   u1240 07BC                     u1224 076C                     u1160 06CC  
                   u1144 0680                     u1401 1364                     u1321 12F2  
                   u1305 0858                     u1241 07B8                     u1225 0768  
                   u1161 06C8                     u1145 067C                     u1410 1378  
                   u1330 130A                     u1314 0880                     u1250 07CE  
                   u1234 0790                     u1170 06DE                     u1154 06A0  
                   u1411 1374                     u1331 1306                     u1315 087C  
                   u1251 07CA                     u1235 078C                     u1171 06DA  
                   u1155 069C                     u1084 0AAE                     u1420 138E  
                   u1340 1320                     u1500 0DF8                     u1085 0AAA  
                   u1421 138A                     u1341 131C                     u1501 0DF4  
                   u1094 0ACE                     u1430 11D6                     u1350 1336  
                   u1510 0E08                     u1095 0ACA                     u1351 1332  
                   u1511 0E04                     u1360 123A                     u1440 1208  
                   u1520 0E1E                     u1280 0834                     u1264 07E4  
                   u1184 06F4                     u1361 1236                     u1521 0E1A  
                   u1281 0830                     u1265 07E0                     u1185 06F0  
                   u1370 1252                     u1450 1218                     u1530 0E2E  
                   u1290 0846                     u1274 0808                     u1194 0718  
                   u1371 124E                     u1451 1214                     u1531 0E2A  
                   u1291 0842                     u1275 0804                     u1195 0714  
                   u1380 127C                     u1540 0E4A                     u1460 147C  
                   u1381 1278                     u1437 11CC                     u1541 0E46  
                   u1461 1478                     u1390 1352                     u1550 0E5C  
                   u1470 101E                     u1391 134E                     u1447 11FE  
                   u1551 0E58                     u1471 101A                     u1560 0E78  
                   u1480 0DB0                     u1561 0E74                     u1481 0DAC  
                   u1490 0DBE                     u1491 0DBA                     _flag 0024  
                   _cont 0025                     _main 1020                     fsr0h 000FEA  
                   fsr1h 000FE2                     indf0 000FEF                     fsr2h 000FDA  
                   fsr0l 000FE9                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     prodh 000FF4  
                   prodl 000FF3                     start 0000             ___param_bank 000000  
                  ?_main 002E                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96          __end_of_lcdData 1440  
        __end_of_lcdInit 11A2                    _tecla 001D                    _nomes 0200  
        __end_of_pinMode 088E                    _valor 0022                    tablat 000FF5  
        __end_of_ssdInit 13EC                    status 000FD8         __end_of_Delay2ms 14DE  
   __end_of_digitalWrite 0ADC          __initialization 127E             __end_of_main 10AC  
     __size_of_Delay40us 0018                   ??_main 003E            __activetblptr 000002  
   __size_of_lcdPosition 005A        lcdPosition@coluna 0036                   ___wmul 147E  
                 _lcdStr 11A2                   _kpInit 14F6                   _kpRead 1500  
                 _indice 0026                   clear_0 12C4                   clear_1 12D0  
                 _teclas 0015                ??_lcdData 0034                ??_lcdInit 0036  
                 _strcpy 1440         __end_of_ssdDigit 133C             __pdataCOMRAM 0001  
              ??_pinMode 0032             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_ssdInit 0034  
      __end_of_Delay40us 14F6               __accesstop 0080  __end_of__initialization 12D6  
          ___rparam_used 000001              pinMode@type 0030           __pcstackCOMRAM 002E  
           __pidataBANK2 0ED4                ?_Delay2ms 002E       __size_of_atraso_ms 0064  
             __pbssBANK1 0100    __size_of_digitalWrite 024E               _lcdCommand 10AC  
                ?___wmul 002E                  ?_lcdStr 0036                  ?_kpInit 002E  
                ?_kpRead 002E               _kpDebounce 0ADC               _chooseSong 0D96  
                ?_strcpy 0034       __size_of_ssdUpdate 0140               ??_Delay2ms 002F  
           _digitalWrite 088E       __size_of_songsInit 00A2                  __Hparam 0000  
                __Lparam 0000                ?_ssdDigit 002E          kpDebounce@old_D 0033  
     lcdPosition@comando 0038          kpDebounce@tempo 002C          __size_of___wmul 0026  
      __end_of_atraso_ms 127E             __psmallconst 0600          __size_of_lcdStr 0078  
        __size_of_kpInit 000A          __size_of_kpRead 000A              ssdDigit@val 002F  
            ssdDigit@pos 002E                  __pcinit 127E                  _lcdData 13EC  
                __ramtop 0600                  _lcdInit 112A                  __ptext0 1020  
                __ptext1 1396                  __ptext2 0F7E                  __ptext3 1440  
                __ptext4 147E                  __ptext5 112A                  __ptext6 0640  
                __ptext7 14F6                  __ptext8 0D96                  __ptext9 0C56  
                _display 002B          __size_of_strcpy 003E                  _pinMode 0640  
                _ssdInit 1396                  _musicas 0100                  lcdStr@i 003A  
              Delay2ms@i 002F      kpDebounce@valorNovo 0020     end_of_initialization 12D6  
          __Lmediumconst 0000        __end_of_ssdUpdate 0D96               ??_ssdDigit 002F  
      __end_of_songsInit 1020                  postdec1 000FE5                  postdec2 000FDD  
            ?_lcdCommand 002E                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE                  strcpy@d 003A                  strcpy@s 0038  
            ?_kpDebounce 002E              ?_chooseSong 002E           _valor@ssd$F104 0601  
          ??_lcdPosition 0037                _Delay40us 14DE               atraso_ms@i 0030  
             atraso_ms@j 0032               atraso_ms@k 0033               atraso_ms@t 002E  
         __end_of___wmul 14A4            __pidataCOMRAM 14A4           __end_of_lcdStr 121A  
         __end_of_kpInit 1500           __end_of_kpRead 150A   __end_of_valor@ssd$F104 0611  
         __end_of_strcpy 147E      start_initialization 127E        __size_of_Delay2ms 001C  
    __size_of_lcdCommand 007E      __size_of_kpDebounce 017A               ?_Delay40us 002E  
    __size_of_chooseSong 013E      __end_of_lcdPosition 1396         lcdPosition@linha 0037  
               ??___wmul 0032                 ??_lcdStr 0038                 ??_kpInit 002E  
               ??_kpRead 0030              __pdataBANK2 0200                 ??_strcpy 0038  
            __pbssCOMRAM 001E               pinMode@pin 002E        __size_of_ssdDigit 005C  
               ?_lcdData 002E                 ?_lcdInit 002E            lcdCommand@cmd 0035  
              _atraso_ms 121A              __smallconst 0600                 ?_pinMode 002E  
               ?_ssdInit 002E              _lcdPosition 133C              ??_Delay40us 002E  
         ___wmul@product 0032             ??_lcdCommand 0034                _ssdUpdate 0C56  
              lcdStr@str 0036             ??_kpDebounce 002E             ??_chooseSong 003B  
              _songsInit 0F7E        ___wmul@multiplier 002E               ?_atraso_ms 002E  
        lcdCommand@old_D 0034    kpDebounce@valorAntigo 001E                 _Delay2ms 14C2  
              copy_data0 1292                copy_data1 12B2       __end_of_lcdCommand 112A  
           lcdData@old_D 0035             lcdData@valor 0034               songsInit@i 003C  
     __end_of_kpDebounce 0C56       __end_of_chooseSong 0ED4                 __Hrparam 0000  
               __Lrparam 0000               ?_ssdUpdate 002E               ?_songsInit 002E  
       __size_of_lcdData 0054         __size_of_lcdInit 0078         __size_of_pinMode 024E  
               __ptext10 12E0                 __ptext11 11A2                 __ptext20 121A  
               __ptext12 13EC                 __ptext13 133C                 __ptext14 10AC  
               __ptext15 088E                 __ptext16 14C2                 __ptext17 14DE  
               __ptext18 1500                 __ptext19 0ADC         __size_of_ssdInit 0056  
             strcpy@dest 0034                 _duracoes 0001            __size_of_main 008C  
             Delay40us@i 002E                 _ssdDigit 12E0              ??_atraso_ms 0030  
          ?_digitalWrite 002E        digitalWrite@value 0030                strcpy@src 0036  
            ??_ssdUpdate 0034              ??_songsInit 003C              kpDebounce@i 0037  
            kpDebounce@j 0036              kpDebounce@k 0034           ??_digitalWrite 0032  
           ?_lcdPosition 0036          digitalWrite@pin 002E  
