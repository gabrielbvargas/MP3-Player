

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Dec 08 16:30:38 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4520 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78                           	psect	idataCOMRAM
    79  001890                     __pidataCOMRAM:
    80                           	callstack 0
    81                           
    82                           ;initializer for _duracoes
    83  001890  00B4               	dw	180
    84  001892  00B4               	dw	180
    85  001894  00B4               	dw	180
    86  001896  00B4               	dw	180
    87  001898  00B4               	dw	180
    88  00189A  00B4               	dw	180
    89  00189C  00B4               	dw	180
    90  00189E  00B4               	dw	180
    91  0018A0  00B4               	dw	180
    92  0018A2  00B4               	dw	180
    93                           
    94                           ;initializer for _teclas
    95  0018A4  0A                 	db	10
    96  0018A5  07                 	db	7
    97  0018A6  04                 	db	4
    98  0018A7  01                 	db	1
    99  0018A8  00                 	db	0
   100  0018A9  08                 	db	8
   101  0018AA  05                 	db	5
   102  0018AB  02                 	db	2
   103                           
   104                           ;initializer for _pause
   105  0018AC  01                 	db	1
   106                           
   107                           ;initializer for _tecla
   108  0018AD  10                 	db	16
   109                           
   110                           	psect	idataBANK2
   111  0012C0                     __pidataBANK2:
   112                           	callstack 0
   113                           
   114                           ;initializer for _nomes
   115  0012C0  45                 	db	69
   116  0012C1  73                 	db	115
   117  0012C2  74                 	db	116
   118  0012C3  61                 	db	97
   119  0012C4  6D                 	db	109
   120  0012C5  6F                 	db	111
   121  0012C6  73                 	db	115
   122  0012C7  20                 	db	32
   123  0012C8  56                 	db	86
   124  0012C9  69                 	db	105
   125  0012CA  76                 	db	118
   126  0012CB  6F                 	db	111
   127  0012CC  73                 	db	115
   128  0012CD  00                 	db	0
   129  0012CE  00                 	db	0
   130  0012CF  00                 	db	0
   131  0012D0  00                 	db	0
   132  0012D1  43                 	db	67
   133  0012D2  68                 	db	104
   134  0012D3  65                 	db	101
   135  0012D4  69                 	db	105
   136  0012D5  61                 	db	97
   137  0012D6  20                 	db	32
   138  0012D7  64                 	db	100
   139  0012D8  65                 	db	101
   140  0012D9  20                 	db	32
   141  0012DA  4D                 	db	77
   142  0012DB  61                 	db	97
   143  0012DC  6E                 	db	110
   144  0012DD  69                 	db	105
   145  0012DE  61                 	db	97
   146  0012DF  73                 	db	115
   147  0012E0  00                 	db	0
   148  0012E1  00                 	db	0
   149  0012E2  45                 	db	69
   150  0012E3  20                 	db	32
   151  0012E4  54                 	db	84
   152  0012E5  61                 	db	97
   153  0012E6  72                 	db	114
   154  0012E7  64                 	db	100
   155  0012E8  65                 	db	101
   156  0012E9  20                 	db	32
   157  0012EA  44                 	db	68
   158  0012EB  65                 	db	101
   159  0012EC  6D                 	db	109
   160  0012ED  61                 	db	97
   161  0012EE  69                 	db	105
   162  0012EF  73                 	db	115
   163  0012F0  00                 	db	0
   164  0012F1  00                 	db	0
   165  0012F2  00                 	db	0
   166  0012F3  53                 	db	83
   167  0012F4  6F                 	db	111
   168  0012F5  7A                 	db	122
   169  0012F6  69                 	db	105
   170  0012F7  6E                 	db	110
   171  0012F8  68                 	db	104
   172  0012F9  6F                 	db	111
   173  0012FA  00                 	db	0
   174  0012FB  00                 	db	0
   175  0012FC  00                 	db	0
   176  0012FD  00                 	db	0
   177  0012FE  00                 	db	0
   178  0012FF  00                 	db	0
   179  001300  00                 	db	0
   180  001301  00                 	db	0
   181  001302  00                 	db	0
   182  001303  00                 	db	0
   183  001304  43                 	db	67
   184  001305  69                 	db	105
   185  001306  67                 	db	103
   186  001307  61                 	db	97
   187  001308  6E                 	db	110
   188  001309  61                 	db	97
   189  00130A  00                 	db	0
   190  00130B  00                 	db	0
   191  00130C  00                 	db	0
   192  00130D  00                 	db	0
   193  00130E  00                 	db	0
   194  00130F  00                 	db	0
   195  001310  00                 	db	0
   196  001311  00                 	db	0
   197  001312  00                 	db	0
   198  001313  00                 	db	0
   199  001314  00                 	db	0
   200  001315  43                 	db	67
   201  001316  69                 	db	105
   202  001317  75                 	db	117
   203  001318  6D                 	db	109
   204  001319  65                 	db	101
   205  00131A  73                 	db	115
   206  00131B  20                 	db	32
   207  00131C  64                 	db	100
   208  00131D  65                 	db	101
   209  00131E  20                 	db	32
   210  00131F  56                 	db	86
   211  001320  6F                 	db	111
   212  001321  63                 	db	99
   213  001322  65                 	db	101
   214  001323  00                 	db	0
   215  001324  00                 	db	0
   216  001325  00                 	db	0
   217  001326  45                 	db	69
   218  001327  78                 	db	120
   219  001328  74                 	db	116
   220  001329  72                 	db	114
   221  00132A  61                 	db	97
   222  00132B  70                 	db	112
   223  00132C  6F                 	db	111
   224  00132D  6C                 	db	108
   225  00132E  65                 	db	101
   226  00132F  69                 	db	105
   227  001330  00                 	db	0
   228  001331  00                 	db	0
   229  001332  00                 	db	0
   230  001333  00                 	db	0
   231  001334  00                 	db	0
   232  001335  00                 	db	0
   233  001336  00                 	db	0
   234  001337  44                 	db	68
   235  001338  65                 	db	101
   236  001339  75                 	db	117
   237  00133A  73                 	db	115
   238  00133B  20                 	db	32
   239  00133C  6D                 	db	109
   240  00133D  65                 	db	101
   241  00133E  20                 	db	32
   242  00133F  4C                 	db	76
   243  001340  69                 	db	105
   244  001341  76                 	db	118
   245  001342  72                 	db	114
   246  001343  65                 	db	101
   247  001344  00                 	db	0
   248  001345  00                 	db	0
   249  001346  00                 	db	0
   250  001347  00                 	db	0
   251  001348  4D                 	db	77
   252  001349  61                 	db	97
   253  00134A  72                 	db	114
   254  00134B  61                 	db	97
   255  00134C  76                 	db	118
   256  00134D  69                 	db	105
   257  00134E  6C                 	db	108
   258  00134F  68                 	db	104
   259  001350  61                 	db	97
   260  001351  00                 	db	0
   261  001352  00                 	db	0
   262  001353  00                 	db	0
   263  001354  00                 	db	0
   264  001355  00                 	db	0
   265  001356  00                 	db	0
   266  001357  00                 	db	0
   267  001358  00                 	db	0
   268  001359  4D                 	db	77
   269  00135A  65                 	db	101
   270  00135B  64                 	db	100
   271  00135C  69                 	db	105
   272  00135D  64                 	db	100
   273  00135E  61                 	db	97
   274  00135F  20                 	db	32
   275  001360  45                 	db	69
   276  001361  78                 	db	120
   277  001362  61                 	db	97
   278  001363  74                 	db	116
   279  001364  61                 	db	97
   280  001365  00                 	db	0
   281  001366  00                 	db	0
   282  001367  00                 	db	0
   283  001368  00                 	db	0
   284  001369  00                 	db	0
   285                           
   286                           	psect	smallconst
   287  000600                     __psmallconst:
   288                           	callstack 0
   289  000600  00                 	db	0
   290  000601                     _valor:
   291                           	callstack 0
   292  000601  3F                 	db	63
   293  000602  06                 	db	6
   294  000603  5B                 	db	91
   295  000604  4F                 	db	79
   296  000605  66                 	db	102
   297  000606  6D                 	db	109
   298  000607  7D                 	db	125
   299  000608  07                 	db	7
   300  000609  7F                 	db	127
   301  00060A  6F                 	db	111
   302  00060B  77                 	db	119
   303  00060C  7C                 	db	124
   304  00060D  39                 	db	57
   305  00060E  5E                 	db	94
   306  00060F  79                 	db	121
   307  000610  71                 	db	113
   308  000611                     __end_of_valor:
   309                           	callstack 0
   310  0000                     _T0CON	set	4053
   311  0000                     _TMR0L	set	4054
   312  0000                     _TMR0H	set	4055
   313  0000                     _INTCON	set	4082
   314  0000                     _TRISE	set	3990
   315  0000                     _TRISD	set	3989
   316  0000                     _TRISC	set	3988
   317  0000                     _TRISB	set	3987
   318  0000                     _TRISA	set	3986
   319  0000                     _PORTE	set	3972
   320  0000                     _PORTD	set	3971
   321  0000                     _PORTC	set	3970
   322  0000                     _PORTB	set	3969
   323  0000                     _PORTA	set	3968
   324  000611                     STR_4:
   325  000611  3C                 	db	60	;'<'
   326  000612  2D                 	db	45
   327  000613  28                 	db	40
   328  000614  31                 	db	49	;'1'
   329  000615  29                 	db	41
   330  000616  20                 	db	32
   331  000617  28                 	db	40
   332  000618  2A                 	db	42
   333  000619  29                 	db	41
   334  00061A  20                 	db	32
   335  00061B  20                 	db	32
   336  00061C  28                 	db	40
   337  00061D  32                 	db	50	;'2'
   338  00061E  29                 	db	41
   339  00061F  2D                 	db	45
   340  000620  3E                 	db	62	;'>'
   341  000621  00                 	db	0
   342  000622                     STR_3:
   343  000622  45                 	db	69	;'E'
   344  000623  73                 	db	115	;'s'
   345  000624  63                 	db	99	;'c'
   346  000625  6F                 	db	111	;'o'
   347  000626  6C                 	db	108	;'l'
   348  000627  68                 	db	104	;'h'
   349  000628  61                 	db	97	;'a'
   350  000629  20                 	db	32
   351  00062A  61                 	db	97	;'a'
   352  00062B  20                 	db	32
   353  00062C  6D                 	db	109	;'m'
   354  00062D  75                 	db	117	;'u'
   355  00062E  73                 	db	115	;'s'
   356  00062F  69                 	db	105	;'i'
   357  000630  63                 	db	99	;'c'
   358  000631  61                 	db	97	;'a'
   359  000632  00                 	db	0
   360  000633                     STR_6:
   361  000633  2D                 	db	45
   362  000634  28                 	db	40
   363  000635  31                 	db	49	;'1'
   364  000636  29                 	db	41
   365  000637  20                 	db	32
   366  000638  20                 	db	32
   367  000639  28                 	db	40
   368  00063A  2A                 	db	42
   369  00063B  29                 	db	41
   370  00063C  20                 	db	32
   371  00063D  20                 	db	32
   372  00063E  28                 	db	40
   373  00063F  32                 	db	50	;'2'
   374  000640  29                 	db	41
   375  000641  2B                 	db	43
   376  000642  00                 	db	0
   377  000643                     STR_2:
   378  000643  50                 	db	80	;'P'
   379  000644  6C                 	db	108	;'l'
   380  000645  61                 	db	97	;'a'
   381  000646  79                 	db	121	;'y'
   382  000647  65                 	db	101	;'e'
   383  000648  72                 	db	114	;'r'
   384  000649  00                 	db	0
   385  00064A                     STR_1:
   386  00064A  4D                 	db	77	;'M'
   387  00064B  50                 	db	80	;'P'
   388  00064C  33                 	db	51	;'3'
   389  00064D  00                 	db	0
   390  00064E  00                 	db	0	; dummy byte at the end
   391  0000                     
   392                           ; #config settings
   393                           
   394                           	psect	cinit
   395  00166E                     __pcinit:
   396                           	callstack 0
   397  00166E                     start_initialization:
   398                           	callstack 0
   399  00166E                     __initialization:
   400                           	callstack 0
   401                           
   402                           ; Initialize objects allocated to BANK2 (170 bytes)
   403                           ; load TBLPTR registers with __pidataBANK2
   404  00166E  0EC0               	movlw	low __pidataBANK2
   405  001670  6EF6               	movwf	tblptrl,c
   406  001672  0E12               	movlw	high __pidataBANK2
   407  001674  6EF7               	movwf	tblptrh,c
   408  001676  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   409  001678  6EF8               	movwf	tblptru,c
   410  00167A  EE02  F000         	lfsr	0,__pdataBANK2
   411  00167E  EE10 F0AA          	lfsr	1,170
   412  001682                     copy_data0:
   413  001682  0009               	tblrd		*+
   414  001684  CFF5 FFEE          	movff	tablat,postinc0
   415  001688  50E5               	movf	postdec1,w,c
   416  00168A  50E1               	movf	fsr1l,w,c
   417  00168C  E1FA               	bnz	copy_data0
   418                           
   419                           ; Initialize objects allocated to COMRAM (30 bytes)
   420                           ; load TBLPTR registers with __pidataCOMRAM
   421  00168E  0E90               	movlw	low __pidataCOMRAM
   422  001690  6EF6               	movwf	tblptrl,c
   423  001692  0E18               	movlw	high __pidataCOMRAM
   424  001694  6EF7               	movwf	tblptrh,c
   425  001696  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   426  001698  6EF8               	movwf	tblptru,c
   427  00169A  EE00  F001         	lfsr	0,__pdataCOMRAM
   428  00169E  EE10 F01E          	lfsr	1,30
   429  0016A2                     copy_data1:
   430  0016A2  0009               	tblrd		*+
   431  0016A4  CFF5 FFEE          	movff	tablat,postinc0
   432  0016A8  50E5               	movf	postdec1,w,c
   433  0016AA  50E1               	movf	fsr1l,w,c
   434  0016AC  E1FA               	bnz	copy_data1
   435                           
   436                           ; Clear objects allocated to BANK1 (190 bytes)
   437  0016AE  EE01  F000         	lfsr	0,__pbssBANK1
   438  0016B2  0EBE               	movlw	190
   439  0016B4                     clear_0:
   440  0016B4  6AEE               	clrf	postinc0,c
   441  0016B6  06E8               	decf	wreg,f,c
   442  0016B8  E1FD               	bnz	clear_0
   443                           
   444                           ; Clear objects allocated to COMRAM (22 bytes)
   445  0016BA  EE00  F036         	lfsr	0,__pbssCOMRAM
   446  0016BE  0E16               	movlw	22
   447  0016C0                     clear_1:
   448  0016C0  6AEE               	clrf	postinc0,c
   449  0016C2  06E8               	decf	wreg,f,c
   450  0016C4  E1FD               	bnz	clear_1
   451  0016C6                     end_of_initialization:
   452                           	callstack 0
   453  0016C6                     __end_of__initialization:
   454                           	callstack 0
   455  0016C6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   456  0016C8  6EF8               	movwf	tblptru,c
   457  0016CA  0100               	movlb	0
   458  0016CC  EF08  F00A         	goto	_main	;jump to C main() function
   459                           
   460                           	psect	bssCOMRAM
   461  000036                     __pbssCOMRAM:
   462                           	callstack 0
   463  000036                     kpDebounce@valorAntigo:
   464                           	callstack 0
   465  000036                     	ds	2
   466  000038                     kpDebounce@valorNovo:
   467                           	callstack 0
   468  000038                     	ds	2
   469  00003A                     _valor@keypad$F284:
   470                           	callstack 0
   471  00003A                     	ds	2
   472  00003C                     kpDebounce@tempo:
   473                           	callstack 0
   474  00003C                     	ds	1
   475  00003D                     _i:
   476                           	callstack 0
   477  00003D                     	ds	1
   478  00003E                     _v3:
   479                           	callstack 0
   480  00003E                     	ds	1
   481  00003F                     _v2:
   482                           	callstack 0
   483  00003F                     	ds	1
   484  000040                     _v1:
   485                           	callstack 0
   486  000040                     	ds	1
   487  000041                     _v0:
   488                           	callstack 0
   489  000041                     	ds	1
   490  000042                     _display:
   491                           	callstack 0
   492  000042                     	ds	1
   493  000043                     _cnt:
   494                           	callstack 0
   495  000043                     	ds	1
   496  000044                     _segundo2:
   497                           	callstack 0
   498  000044                     	ds	1
   499  000045                     _segundo1:
   500                           	callstack 0
   501  000045                     	ds	1
   502  000046                     _minuto2:
   503                           	callstack 0
   504  000046                     	ds	1
   505  000047                     _minuto1:
   506                           	callstack 0
   507  000047                     	ds	1
   508  000048                     _tempo:
   509                           	callstack 0
   510  000048                     	ds	1
   511  000049                     _flag:
   512                           	callstack 0
   513  000049                     	ds	1
   514  00004A                     _cont:
   515                           	callstack 0
   516  00004A                     	ds	1
   517  00004B                     _indice:
   518                           	callstack 0
   519  00004B                     	ds	1
   520                           
   521                           	psect	dataCOMRAM
   522  000001                     __pdataCOMRAM:
   523                           	callstack 0
   524  000001                     _duracoes:
   525                           	callstack 0
   526  000001                     	ds	20
   527  000015                     _teclas:
   528                           	callstack 0
   529  000015                     	ds	8
   530  00001D                     _pause:
   531                           	callstack 0
   532  00001D                     	ds	1
   533  00001E                     _tecla:
   534                           	callstack 0
   535  00001E                     	ds	1
   536                           
   537                           	psect	bssBANK1
   538  000100                     __pbssBANK1:
   539                           	callstack 0
   540  000100                     _musicas:
   541                           	callstack 0
   542  000100                     	ds	190
   543                           
   544                           	psect	dataBANK2
   545  000200                     __pdataBANK2:
   546                           	callstack 0
   547  000200                     _nomes:
   548                           	callstack 0
   549  000200                     	ds	170
   550                           
   551                           	psect	cstackCOMRAM
   552  00001F                     __pcstackCOMRAM:
   553                           	callstack 0
   554  00001F                     ??_kpDebounce:
   555  00001F                     ?_kpRead:
   556                           	callstack 0
   557  00001F                     ?___wmul:
   558                           	callstack 0
   559  00001F                     ?___awdiv:
   560                           	callstack 0
   561  00001F                     Delay40us@i:
   562                           	callstack 0
   563  00001F                     ssdDigit@pos:
   564                           	callstack 0
   565  00001F                     digitalWrite@pin:
   566                           	callstack 0
   567  00001F                     pinMode@pin:
   568                           	callstack 0
   569  00001F                     atraso_ms@t:
   570                           	callstack 0
   571  00001F                     ___wmul@multiplier:
   572                           	callstack 0
   573  00001F                     ___awdiv@dividend:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x0
   577  00001F                     	ds	1
   578  000020                     Delay2ms@i:
   579                           	callstack 0
   580  000020                     ssdDigit@val:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x1
   584  000020                     	ds	1
   585  000021                     digitalWrite@value:
   586                           	callstack 0
   587  000021                     pinMode@type:
   588                           	callstack 0
   589  000021                     atraso_ms@i:
   590                           	callstack 0
   591  000021                     ___wmul@multiplicand:
   592                           	callstack 0
   593  000021                     ___awdiv@divisor:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x2
   597  000021                     	ds	2
   598  000023                     ??_digitalWrite:
   599  000023                     ??_pinMode:
   600  000023                     atraso_ms@j:
   601                           	callstack 0
   602  000023                     ___awdiv@counter:
   603                           	callstack 0
   604  000023                     ___wmul@product:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x4
   608  000023                     	ds	1
   609  000024                     atraso_ms@k:
   610                           	callstack 0
   611  000024                     kpDebounce@old_D:
   612                           	callstack 0
   613  000024                     ___awdiv@sign:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x5
   617  000024                     	ds	1
   618  000025                     ??_ssdUpdate:
   619  000025                     lcdCommand@old_D:
   620                           	callstack 0
   621  000025                     lcdData@valor:
   622                           	callstack 0
   623  000025                     kpDebounce@k:
   624                           	callstack 0
   625  000025                     ___awdiv@quotient:
   626                           	callstack 0
   627  000025                     strcpy@dest:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x6
   631  000025                     	ds	1
   632  000026                     lcdCommand@cmd:
   633                           	callstack 0
   634  000026                     lcdData@old_D:
   635                           	callstack 0
   636                           
   637                           ; 1 bytes @ 0x7
   638  000026                     	ds	1
   639  000027                     ?___awmod:
   640                           	callstack 0
   641  000027                     lcdPosition@coluna:
   642                           	callstack 0
   643  000027                     kpDebounce@j:
   644                           	callstack 0
   645  000027                     lcdStr@str:
   646                           	callstack 0
   647  000027                     ___awmod@dividend:
   648                           	callstack 0
   649  000027                     strcpy@src:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x8
   653  000027                     	ds	1
   654  000028                     lcdPosition@linha:
   655                           	callstack 0
   656  000028                     kpDebounce@i:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x9
   660  000028                     	ds	1
   661  000029                     ??_lcdStr:
   662  000029                     lcdPosition@comando:
   663                           	callstack 0
   664  000029                     ___awmod@divisor:
   665                           	callstack 0
   666  000029                     strcpy@s:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0xA
   670  000029                     	ds	2
   671  00002B                     lcdStr@i:
   672                           	callstack 0
   673  00002B                     ___awmod@counter:
   674                           	callstack 0
   675  00002B                     strcpy@d:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0xC
   679  00002B                     	ds	1
   680  00002C                     ___awmod@sign:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0xD
   684  00002C                     	ds	1
   685  00002D                     ??_playSong:
   686  00002D                     songsInit@i:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0xE
   690  00002D                     	ds	2
   691  00002F                     _playSong$950:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x10
   695  00002F                     	ds	2
   696  000031                     _playSong$951:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x12
   700  000031                     	ds	2
   701  000033                     playSong@j:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x14
   705  000033                     	ds	1
   706  000034                     ??_chooseSong:
   707                           
   708                           ; 1 bytes @ 0x15
   709  000034                     	ds	2
   710  000036                     
   711                           ; 1 bytes @ 0x17
   712 ;;
   713 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   714 ;;
   715 ;; *************** function _main *****************
   716 ;; Defined at:
   717 ;;		line 11 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   731 ;;      Params:         0       0       0       0       0       0       0
   732 ;;      Locals:         0       0       0       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0       0       0
   734 ;;      Totals:         0       0       0       0       0       0       0
   735 ;;Total ram usage:        0 bytes
   736 ;; Hardware stack levels required when called:    6
   737 ;; This function calls:
   738 ;;		_atraso_ms
   739 ;;		_chooseSong
   740 ;;		_kpInit
   741 ;;		_lcdCommand
   742 ;;		_lcdInit
   743 ;;		_lcdPosition
   744 ;;		_lcdStr
   745 ;;		_songsInit
   746 ;;		_ssdInit
   747 ;; This function is called by:
   748 ;;		Startup code after reset
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text0
   753  001410                     __ptext0:
   754                           	callstack 0
   755  001410                     _main:
   756                           	callstack 25
   757  001410                     
   758                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 13:     songsInit();
   759  001410  ECB5  F009         	call	_songsInit	;wreg free
   760  001414                     
   761                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 14:     lcdInit();
   762  001414  EC8D  F00A         	call	_lcdInit	;wreg free
   763  001418                     
   764                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 15:     ssdInit();
   765  001418  ECC1  F00B         	call	_ssdInit	;wreg free
   766  00141C                     
   767                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 16:     kpInit();
   768  00141C  EC71  F00C         	call	_kpInit	;wreg free
   769  001420                     
   770                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 17:     lcdCommand(0x0F);
   771  001420  0E0F               	movlw	15
   772  001422  EC4E  F00A         	call	_lcdCommand
   773  001426                     
   774                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 19:     lcdPosition(0, 6);
   775  001426  0E06               	movlw	6
   776  001428  6E27               	movwf	lcdPosition@coluna^0,c
   777  00142A  0E00               	movlw	0
   778  00142C  EC68  F00B         	call	_lcdPosition
   779  001430                     
   780                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 20:     lcdStr("MP3");
   781  001430  0E4A               	movlw	low STR_1
   782  001432  6E27               	movwf	lcdStr@str^0,c
   783  001434  0E06               	movlw	high STR_1
   784  001436  6E28               	movwf	(lcdStr@str+1)^0,c
   785  001438  ECC9  F00A         	call	_lcdStr	;wreg free
   786  00143C                     
   787                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 21:     lcdPosition(1, 4);
   788  00143C  0E04               	movlw	4
   789  00143E  6E27               	movwf	lcdPosition@coluna^0,c
   790  001440  0E01               	movlw	1
   791  001442  EC68  F00B         	call	_lcdPosition
   792  001446                     
   793                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 22:     lcdStr("Player");
   794  001446  0E43               	movlw	low STR_2
   795  001448  6E27               	movwf	lcdStr@str^0,c
   796  00144A  0E06               	movlw	high STR_2
   797  00144C  6E28               	movwf	(lcdStr@str+1)^0,c
   798  00144E  ECC9  F00A         	call	_lcdStr	;wreg free
   799  001452                     
   800                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 23:     atraso_ms(2000);
   801  001452  0E07               	movlw	7
   802  001454  6E20               	movwf	(atraso_ms@t+1)^0,c
   803  001456  0ED0               	movlw	208
   804  001458  6E1F               	movwf	atraso_ms@t^0,c
   805  00145A  EC05  F00B         	call	_atraso_ms	;wreg free
   806  00145E                     
   807                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 25:     lcdCommand(0x01);
   808  00145E  0E01               	movlw	1
   809  001460  EC4E  F00A         	call	_lcdCommand
   810  001464                     
   811                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 26:     lcdPosition(0, 0);
   812  001464  0E00               	movlw	0
   813  001466  6E27               	movwf	lcdPosition@coluna^0,c
   814  001468  0E00               	movlw	0
   815  00146A  EC68  F00B         	call	_lcdPosition
   816  00146E                     
   817                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 27:     lcdStr("Escolha a musica"
      +                          );
   818  00146E  0E22               	movlw	low STR_3
   819  001470  6E27               	movwf	lcdStr@str^0,c
   820  001472  0E06               	movlw	high STR_3
   821  001474  6E28               	movwf	(lcdStr@str+1)^0,c
   822  001476  ECC9  F00A         	call	_lcdStr	;wreg free
   823  00147A                     l2339:
   824                           
   825                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 29:         lcdPosition(1, 0);
   826  00147A  0E00               	movlw	0
   827  00147C  6E27               	movwf	lcdPosition@coluna^0,c
   828  00147E  0E01               	movlw	1
   829  001480  EC68  F00B         	call	_lcdPosition
   830  001484                     
   831                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 30:         lcdStr("<-(1) (*)  (2
      +                          )->");
   832  001484  0E11               	movlw	low STR_4
   833  001486  6E27               	movwf	lcdStr@str^0,c
   834  001488  0E06               	movlw	high STR_4
   835  00148A  6E28               	movwf	(lcdStr@str+1)^0,c
   836  00148C  ECC9  F00A         	call	_lcdStr	;wreg free
   837  001490                     
   838                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 31:         chooseSong();
   839  001490  EC08  F008         	call	_chooseSong	;wreg free
   840                           
   841                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 32:     }
   842  001494  EF3D  F00A         	goto	l2339
   843  001498  EF00  F000         	goto	start
   844  00149C                     __end_of_main:
   845                           	callstack 0
   846                           
   847 ;; *************** function _ssdInit *****************
   848 ;; Defined at:
   849 ;;		line 101 in file "ssd.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		wreg, status,2, status,0, cstack
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   863 ;;      Params:         0       0       0       0       0       0       0
   864 ;;      Locals:         0       0       0       0       0       0       0
   865 ;;      Temps:          0       0       0       0       0       0       0
   866 ;;      Totals:         0       0       0       0       0       0       0
   867 ;;Total ram usage:        0 bytes
   868 ;; Hardware stack levels used:    1
   869 ;; Hardware stack levels required when called:    1
   870 ;; This function calls:
   871 ;;		_pinMode
   872 ;; This function is called by:
   873 ;;		_main
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           	psect	text1
   878  001782                     __ptext1:
   879                           	callstack 0
   880  001782                     _ssdInit:
   881                           	callstack 29
   882  001782                     
   883                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
   884  001782  0E00               	movlw	0
   885  001784  6E20               	movwf	(pinMode@pin+1)^0,c
   886  001786  0E02               	movlw	2
   887  001788  6E1F               	movwf	pinMode@pin^0,c
   888  00178A  0E00               	movlw	0
   889  00178C  6E22               	movwf	(pinMode@type+1)^0,c
   890  00178E  0E00               	movlw	0
   891  001790  6E21               	movwf	pinMode@type^0,c
   892  001792  EC55  F004         	call	_pinMode	;wreg free
   893                           
   894                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
   895  001796  0E00               	movlw	0
   896  001798  6E20               	movwf	(pinMode@pin+1)^0,c
   897  00179A  0E03               	movlw	3
   898  00179C  6E1F               	movwf	pinMode@pin^0,c
   899  00179E  0E00               	movlw	0
   900  0017A0  6E22               	movwf	(pinMode@type+1)^0,c
   901  0017A2  0E00               	movlw	0
   902  0017A4  6E21               	movwf	pinMode@type^0,c
   903  0017A6  EC55  F004         	call	_pinMode	;wreg free
   904                           
   905                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
   906  0017AA  0E00               	movlw	0
   907  0017AC  6E20               	movwf	(pinMode@pin+1)^0,c
   908  0017AE  0E04               	movlw	4
   909  0017B0  6E1F               	movwf	pinMode@pin^0,c
   910  0017B2  0E00               	movlw	0
   911  0017B4  6E22               	movwf	(pinMode@type+1)^0,c
   912  0017B6  0E00               	movlw	0
   913  0017B8  6E21               	movwf	pinMode@type^0,c
   914  0017BA  EC55  F004         	call	_pinMode	;wreg free
   915                           
   916                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
   917  0017BE  0E00               	movlw	0
   918  0017C0  6E20               	movwf	(pinMode@pin+1)^0,c
   919  0017C2  0E05               	movlw	5
   920  0017C4  6E1F               	movwf	pinMode@pin^0,c
   921  0017C6  0E00               	movlw	0
   922  0017C8  6E22               	movwf	(pinMode@type+1)^0,c
   923  0017CA  0E00               	movlw	0
   924  0017CC  6E21               	movwf	pinMode@type^0,c
   925  0017CE  EC55  F004         	call	_pinMode	;wreg free
   926  0017D2                     
   927                           ;ssd.c: 109:     TRISD = 0x00;
   928  0017D2  0E00               	movlw	0
   929  0017D4  6E95               	movwf	149,c	;volatile
   930  0017D6  0012               	return		;funcret
   931  0017D8                     __end_of_ssdInit:
   932                           	callstack 0
   933                           
   934 ;; *************** function _songsInit *****************
   935 ;; Defined at:
   936 ;;		line 22 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;  i               2   14[COMRAM] unsigned int 
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   950 ;;      Params:         0       0       0       0       0       0       0
   951 ;;      Locals:         2       0       0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0       0       0
   953 ;;      Totals:         2       0       0       0       0       0       0
   954 ;;Total ram usage:        2 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; Hardware stack levels required when called:    1
   957 ;; This function calls:
   958 ;;		___wmul
   959 ;;		_strcpy
   960 ;; This function is called by:
   961 ;;		_main
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text2
   966  00136A                     __ptext2:
   967                           	callstack 0
   968  00136A                     _songsInit:
   969                           	callstack 29
   970  00136A                     
   971                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 23:     TRISC=0x00;
   972  00136A  0E00               	movlw	0
   973  00136C  6E94               	movwf	148,c	;volatile
   974                           
   975                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 24:     for (unsigned int i = 0;
      +                           i < 10; i++) {
   976  00136E  0E00               	movlw	0
   977  001370  6E2E               	movwf	(songsInit@i+1)^0,c
   978  001372  0E00               	movlw	0
   979  001374  6E2D               	movwf	songsInit@i^0,c
   980  001376                     l2217:
   981                           
   982                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 25:         musicas[i].duracao =
      +                           duracoes[i];
   983  001376  90D8               	bcf	status,0,c
   984  001378  342D               	rlcf	songsInit@i^0,w,c
   985  00137A  6ED9               	movwf	fsr2l,c
   986  00137C  342E               	rlcf	(songsInit@i+1)^0,w,c
   987  00137E  6EDA               	movwf	fsr2h,c
   988  001380  0E01               	movlw	low _duracoes
   989  001382  26D9               	addwf	fsr2l,f,c
   990  001384  0E00               	movlw	high _duracoes
   991  001386  22DA               	addwfc	fsr2h,f,c
   992  001388  C02D  F01F         	movff	songsInit@i,___wmul@multiplier
   993  00138C  C02E  F020         	movff	songsInit@i+1,___wmul@multiplier+1
   994  001390  0E00               	movlw	0
   995  001392  6E22               	movwf	(___wmul@multiplicand+1)^0,c
   996  001394  0E13               	movlw	19
   997  001396  6E21               	movwf	___wmul@multiplicand^0,c
   998  001398  EC35  F00C         	call	___wmul	;wreg free
   999  00139C  0E00               	movlw	low _musicas
  1000  00139E  241F               	addwf	?___wmul^0,w,c
  1001  0013A0  6EE1               	movwf	fsr1l,c
  1002  0013A2  0E01               	movlw	high _musicas
  1003  0013A4  2020               	addwfc	(?___wmul+1)^0,w,c
  1004  0013A6  6EE2               	movwf	fsr1h,c
  1005  0013A8  CFDE FFE6          	movff	postinc2,postinc1
  1006  0013AC  CFDD FFE5          	movff	postdec2,postdec1
  1007                           
  1008                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 26:         strcpy(musicas[i].no
      +                          me, (char*) nomes[i]);
  1009  0013B0  C02D  F01F         	movff	songsInit@i,___wmul@multiplier
  1010  0013B4  C02E  F020         	movff	songsInit@i+1,___wmul@multiplier+1
  1011  0013B8  0E00               	movlw	0
  1012  0013BA  6E22               	movwf	(___wmul@multiplicand+1)^0,c
  1013  0013BC  0E13               	movlw	19
  1014  0013BE  6E21               	movwf	___wmul@multiplicand^0,c
  1015  0013C0  EC35  F00C         	call	___wmul	;wreg free
  1016  0013C4  0E02               	movlw	low (_musicas+2)
  1017  0013C6  241F               	addwf	?___wmul^0,w,c
  1018  0013C8  6E25               	movwf	strcpy@dest^0,c
  1019  0013CA  0E01               	movlw	high (_musicas+2)
  1020  0013CC  2020               	addwfc	(?___wmul+1)^0,w,c
  1021  0013CE  6E26               	movwf	(strcpy@dest+1)^0,c
  1022  0013D0  C02D  F01F         	movff	songsInit@i,___wmul@multiplier
  1023  0013D4  C02E  F020         	movff	songsInit@i+1,___wmul@multiplier+1
  1024  0013D8  0E00               	movlw	0
  1025  0013DA  6E22               	movwf	(___wmul@multiplicand+1)^0,c
  1026  0013DC  0E11               	movlw	17
  1027  0013DE  6E21               	movwf	___wmul@multiplicand^0,c
  1028  0013E0  EC35  F00C         	call	___wmul	;wreg free
  1029  0013E4  0E00               	movlw	low _nomes
  1030  0013E6  241F               	addwf	?___wmul^0,w,c
  1031  0013E8  6E27               	movwf	strcpy@src^0,c
  1032  0013EA  0E02               	movlw	high _nomes
  1033  0013EC  2020               	addwfc	(?___wmul+1)^0,w,c
  1034  0013EE  6E28               	movwf	(strcpy@src+1)^0,c
  1035  0013F0  EC16  F00C         	call	_strcpy	;wreg free
  1036  0013F4                     
  1037                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 27:     }
  1038  0013F4  4A2D               	infsnz	songsInit@i^0,f,c
  1039  0013F6  2A2E               	incf	(songsInit@i+1)^0,f,c
  1040  0013F8  502E               	movf	(songsInit@i+1)^0,w,c
  1041  0013FA  E109               	bnz	u2090
  1042  0013FC  0E0A               	movlw	10
  1043  0013FE  5C2D               	subwf	songsInit@i^0,w,c
  1044  001400  A0D8               	btfss	status,0,c
  1045  001402  EF05  F00A         	goto	u2091
  1046  001406  EF07  F00A         	goto	u2090
  1047  00140A                     u2091:
  1048  00140A  EFBB  F009         	goto	l2217
  1049  00140E                     u2090:
  1050  00140E  0012               	return		;funcret
  1051  001410                     __end_of_songsInit:
  1052                           	callstack 0
  1053                           
  1054 ;; *************** function _strcpy *****************
  1055 ;; Defined at:
  1056 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;  dest            2    6[COMRAM] PTR unsigned char 
  1059 ;;		 -> musicas(190), 
  1060 ;;  src             2    8[COMRAM] PTR const unsigned char 
  1061 ;;		 -> nomes(170), 
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;  d               2   12[COMRAM] PTR unsigned char 
  1064 ;;		 -> musicas(190), 
  1065 ;;  s               2   10[COMRAM] PTR const unsigned char 
  1066 ;;		 -> nomes(170), 
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  2    6[COMRAM] PTR unsigned char 
  1069 ;; Registers used:
  1070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1076 ;;      Params:         4       0       0       0       0       0       0
  1077 ;;      Locals:         4       0       0       0       0       0       0
  1078 ;;      Temps:          0       0       0       0       0       0       0
  1079 ;;      Totals:         8       0       0       0       0       0       0
  1080 ;;Total ram usage:        8 bytes
  1081 ;; Hardware stack levels used:    1
  1082 ;; This function calls:
  1083 ;;		Nothing
  1084 ;; This function is called by:
  1085 ;;		_songsInit
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           	psect	text3
  1090  00182C                     __ptext3:
  1091                           	callstack 0
  1092  00182C                     _strcpy:
  1093                           	callstack 29
  1094  00182C  C027  F029         	movff	strcpy@src,strcpy@s
  1095  001830  C028  F02A         	movff	strcpy@src+1,strcpy@s+1
  1096  001834  C025  F02B         	movff	strcpy@dest,strcpy@d
  1097  001838  C026  F02C         	movff	strcpy@dest+1,strcpy@d+1
  1098  00183C                     l2131:
  1099  00183C  C029  FFD9         	movff	strcpy@s,fsr2l
  1100  001840  C02A  FFDA         	movff	strcpy@s+1,fsr2h
  1101  001844  4A29               	infsnz	strcpy@s^0,f,c
  1102  001846  2A2A               	incf	(strcpy@s+1)^0,f,c
  1103  001848  C02B  FFE1         	movff	strcpy@d,fsr1l
  1104  00184C  C02C  FFE2         	movff	strcpy@d+1,fsr1h
  1105  001850  4A2B               	infsnz	strcpy@d^0,f,c
  1106  001852  2A2C               	incf	(strcpy@d+1)^0,f,c
  1107  001854  CFDF FFE7          	movff	indf2,indf1
  1108  001858  50E7               	movf	indf1,w,c
  1109  00185A  A4D8               	btfss	status,2,c
  1110  00185C  EF32  F00C         	goto	u1961
  1111  001860  EF34  F00C         	goto	u1960
  1112  001864                     u1961:
  1113  001864  EF1E  F00C         	goto	l2131
  1114  001868                     u1960:
  1115  001868  0012               	return		;funcret
  1116  00186A                     __end_of_strcpy:
  1117                           	callstack 0
  1118                           
  1119 ;; *************** function ___wmul *****************
  1120 ;; Defined at:
  1121 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  multiplier      2    0[COMRAM] unsigned int 
  1124 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  product         2    4[COMRAM] unsigned int 
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  2    0[COMRAM] unsigned int 
  1129 ;; Registers used:
  1130 ;;		wreg, status,2, status,0, prodl, prodh
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1136 ;;      Params:         4       0       0       0       0       0       0
  1137 ;;      Locals:         2       0       0       0       0       0       0
  1138 ;;      Temps:          0       0       0       0       0       0       0
  1139 ;;      Totals:         6       0       0       0       0       0       0
  1140 ;;Total ram usage:        6 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; This function calls:
  1143 ;;		Nothing
  1144 ;; This function is called by:
  1145 ;;		_songsInit
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text4
  1150  00186A                     __ptext4:
  1151                           	callstack 0
  1152  00186A                     ___wmul:
  1153                           	callstack 29
  1154  00186A  501F               	movf	___wmul@multiplier^0,w,c
  1155  00186C  0221               	mulwf	___wmul@multiplicand^0,c
  1156  00186E  CFF3 F023          	movff	prodl,___wmul@product
  1157  001872  CFF4 F024          	movff	prodh,___wmul@product+1
  1158  001876  501F               	movf	___wmul@multiplier^0,w,c
  1159  001878  0222               	mulwf	(___wmul@multiplicand+1)^0,c
  1160  00187A  50F3               	movf	243,w,c
  1161  00187C  2624               	addwf	(___wmul@product+1)^0,f,c
  1162  00187E  5020               	movf	(___wmul@multiplier+1)^0,w,c
  1163  001880  0221               	mulwf	___wmul@multiplicand^0,c
  1164  001882  50F3               	movf	243,w,c
  1165  001884  2624               	addwf	(___wmul@product+1)^0,f,c
  1166  001886  C023  F01F         	movff	___wmul@product,?___wmul
  1167  00188A  C024  F020         	movff	___wmul@product+1,?___wmul+1
  1168  00188E  0012               	return		;funcret
  1169  001890                     __end_of___wmul:
  1170                           	callstack 0
  1171                           
  1172 ;; *************** function _lcdInit *****************
  1173 ;; Defined at:
  1174 ;;		line 87 in file "lcd.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;		None
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;		None
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      void 
  1181 ;; Registers used:
  1182 ;;		wreg, status,2, status,0, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1188 ;;      Params:         0       0       0       0       0       0       0
  1189 ;;      Locals:         0       0       0       0       0       0       0
  1190 ;;      Temps:          0       0       0       0       0       0       0
  1191 ;;      Totals:         0       0       0       0       0       0       0
  1192 ;;Total ram usage:        0 bytes
  1193 ;; Hardware stack levels used:    1
  1194 ;; Hardware stack levels required when called:    3
  1195 ;; This function calls:
  1196 ;;		_Delay2ms
  1197 ;;		_lcdCommand
  1198 ;;		_pinMode
  1199 ;; This function is called by:
  1200 ;;		_main
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text5
  1205  00151A                     __ptext5:
  1206                           	callstack 0
  1207  00151A                     _lcdInit:
  1208                           	callstack 27
  1209  00151A                     
  1210                           ;lcd.c: 89:     pinMode(PIN_E2, 0);
  1211  00151A  0E00               	movlw	0
  1212  00151C  6E20               	movwf	(pinMode@pin+1)^0,c
  1213  00151E  0E22               	movlw	34
  1214  001520  6E1F               	movwf	pinMode@pin^0,c
  1215  001522  0E00               	movlw	0
  1216  001524  6E22               	movwf	(pinMode@type+1)^0,c
  1217  001526  0E00               	movlw	0
  1218  001528  6E21               	movwf	pinMode@type^0,c
  1219  00152A  EC55  F004         	call	_pinMode	;wreg free
  1220                           
  1221                           ;lcd.c: 90:     pinMode(PIN_E1, 0);
  1222  00152E  0E00               	movlw	0
  1223  001530  6E20               	movwf	(pinMode@pin+1)^0,c
  1224  001532  0E21               	movlw	33
  1225  001534  6E1F               	movwf	pinMode@pin^0,c
  1226  001536  0E00               	movlw	0
  1227  001538  6E22               	movwf	(pinMode@type+1)^0,c
  1228  00153A  0E00               	movlw	0
  1229  00153C  6E21               	movwf	pinMode@type^0,c
  1230  00153E  EC55  F004         	call	_pinMode	;wreg free
  1231  001542                     
  1232                           ;lcd.c: 91:     TRISD = 0x00;
  1233  001542  0E00               	movlw	0
  1234  001544  6E95               	movwf	149,c	;volatile
  1235  001546                     
  1236                           ;lcd.c: 94:     Delay2ms();
  1237  001546  EC57  F00C         	call	_Delay2ms	;wreg free
  1238  00154A                     
  1239                           ;lcd.c: 95:     Delay2ms();
  1240  00154A  EC57  F00C         	call	_Delay2ms	;wreg free
  1241  00154E                     
  1242                           ;lcd.c: 96:     Delay2ms();
  1243  00154E  EC57  F00C         	call	_Delay2ms	;wreg free
  1244  001552                     
  1245                           ;lcd.c: 97:     Delay2ms();
  1246  001552  EC57  F00C         	call	_Delay2ms	;wreg free
  1247  001556                     
  1248                           ;lcd.c: 98:     Delay2ms();
  1249  001556  EC57  F00C         	call	_Delay2ms	;wreg free
  1250  00155A                     
  1251                           ;lcd.c: 100:     lcdCommand(0x38);
  1252  00155A  0E38               	movlw	56
  1253  00155C  EC4E  F00A         	call	_lcdCommand
  1254  001560                     
  1255                           ;lcd.c: 101:     Delay2ms();
  1256  001560  EC57  F00C         	call	_Delay2ms	;wreg free
  1257  001564                     
  1258                           ;lcd.c: 102:     Delay2ms();
  1259  001564  EC57  F00C         	call	_Delay2ms	;wreg free
  1260  001568                     
  1261                           ;lcd.c: 103:     lcdCommand(0x38);
  1262  001568  0E38               	movlw	56
  1263  00156A  EC4E  F00A         	call	_lcdCommand
  1264  00156E                     
  1265                           ;lcd.c: 104:     Delay2ms();
  1266  00156E  EC57  F00C         	call	_Delay2ms	;wreg free
  1267  001572                     
  1268                           ;lcd.c: 105:     lcdCommand(0x38);
  1269  001572  0E38               	movlw	56
  1270  001574  EC4E  F00A         	call	_lcdCommand
  1271  001578                     
  1272                           ;lcd.c: 107:     lcdCommand(0x38);
  1273  001578  0E38               	movlw	56
  1274  00157A  EC4E  F00A         	call	_lcdCommand
  1275  00157E                     
  1276                           ;lcd.c: 108:     lcdCommand(0x06);
  1277  00157E  0E06               	movlw	6
  1278  001580  EC4E  F00A         	call	_lcdCommand
  1279  001584                     
  1280                           ;lcd.c: 111:     lcdCommand(0x0C);
  1281  001584  0E0C               	movlw	12
  1282  001586  EC4E  F00A         	call	_lcdCommand
  1283  00158A                     
  1284                           ;lcd.c: 112:     lcdCommand(0x01);
  1285  00158A  0E01               	movlw	1
  1286  00158C  EC4E  F00A         	call	_lcdCommand
  1287  001590  0012               	return		;funcret
  1288  001592                     __end_of_lcdInit:
  1289                           	callstack 0
  1290                           
  1291 ;; *************** function _pinMode *****************
  1292 ;; Defined at:
  1293 ;;		line 54 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;  pin             2    0[COMRAM] int 
  1296 ;;  type            2    2[COMRAM] int 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		wreg, status,2, status,0
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1308 ;;      Params:         4       0       0       0       0       0       0
  1309 ;;      Locals:         0       0       0       0       0       0       0
  1310 ;;      Temps:          2       0       0       0       0       0       0
  1311 ;;      Totals:         6       0       0       0       0       0       0
  1312 ;;Total ram usage:        6 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_lcdInit
  1318 ;;		_ssdInit
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text6
  1323  0008AA                     __ptext6:
  1324                           	callstack 0
  1325  0008AA                     _pinMode:
  1326                           	callstack 29
  1327  0008AA                     
  1328                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 56:     if(pin <8){
  1329  0008AA  BE20               	btfsc	(pinMode@pin+1)^0,7,c
  1330  0008AC  EF63  F004         	goto	u1760
  1331  0008B0  5020               	movf	(pinMode@pin+1)^0,w,c
  1332  0008B2  E107               	bnz	u1761
  1333  0008B4  0E08               	movlw	8
  1334  0008B6  5C1F               	subwf	pinMode@pin^0,w,c
  1335  0008B8  B0D8               	btfsc	status,0,c
  1336  0008BA  EF61  F004         	goto	u1761
  1337  0008BE  EF63  F004         	goto	u1760
  1338  0008C2                     u1761:
  1339  0008C2  EF8D  F004         	goto	l2097
  1340  0008C6                     u1760:
  1341  0008C6                     
  1342                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 57:         if (type){ ((TRISA) |= 
      +                          (1<<(pin)));}
  1343  0008C6  5021               	movf	pinMode@type^0,w,c
  1344  0008C8  1022               	iorwf	(pinMode@type+1)^0,w,c
  1345  0008CA  B4D8               	btfsc	status,2,c
  1346  0008CC  EF6A  F004         	goto	u1771
  1347  0008D0  EF6C  F004         	goto	u1770
  1348  0008D4                     u1771:
  1349  0008D4  EF7C  F004         	goto	l2095
  1350  0008D8                     u1770:
  1351  0008D8  C01F  F023         	movff	pinMode@pin,??_pinMode
  1352  0008DC  0E01               	movlw	1
  1353  0008DE  6E24               	movwf	(??_pinMode+1)^0,c
  1354  0008E0  2A23               	incf	??_pinMode^0,f,c
  1355  0008E2  EF75  F004         	goto	u1784
  1356  0008E6                     u1785:
  1357  0008E6  90D8               	bcf	status,0,c
  1358  0008E8  3624               	rlcf	(??_pinMode+1)^0,f,c
  1359  0008EA                     u1784:
  1360  0008EA  2E23               	decfsz	??_pinMode^0,f,c
  1361  0008EC  EF73  F004         	goto	u1785
  1362  0008F0  5024               	movf	(??_pinMode+1)^0,w,c
  1363  0008F2  1292               	iorwf	146,f,c	;volatile
  1364  0008F4  EF7B  F005         	goto	l76
  1365  0008F8                     l2095:
  1366  0008F8  C01F  F023         	movff	pinMode@pin,??_pinMode
  1367  0008FC  0E01               	movlw	1
  1368  0008FE  6E24               	movwf	(??_pinMode+1)^0,c
  1369  000900  2A23               	incf	??_pinMode^0,f,c
  1370  000902  EF85  F004         	goto	u1794
  1371  000906                     u1795:
  1372  000906  90D8               	bcf	status,0,c
  1373  000908  3624               	rlcf	(??_pinMode+1)^0,f,c
  1374  00090A                     u1794:
  1375  00090A  2E23               	decfsz	??_pinMode^0,f,c
  1376  00090C  EF83  F004         	goto	u1795
  1377  000910  5024               	movf	(??_pinMode+1)^0,w,c
  1378  000912  0AFF               	xorlw	255
  1379  000914  1692               	andwf	146,f,c	;volatile
  1380  000916  EF7B  F005         	goto	l76
  1381  00091A                     l2097:
  1382  00091A  BE20               	btfsc	(pinMode@pin+1)^0,7,c
  1383  00091C  EF9B  F004         	goto	u1800
  1384  000920  5020               	movf	(pinMode@pin+1)^0,w,c
  1385  000922  E107               	bnz	u1801
  1386  000924  0E10               	movlw	16
  1387  000926  5C1F               	subwf	pinMode@pin^0,w,c
  1388  000928  B0D8               	btfsc	status,0,c
  1389  00092A  EF99  F004         	goto	u1801
  1390  00092E  EF9B  F004         	goto	u1800
  1391  000932                     u1801:
  1392  000932  EFC9  F004         	goto	l2105
  1393  000936                     u1800:
  1394  000936                     
  1395                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 60:         if (type){ ((TRISB) |= 
      +                          (1<<(pin-8)));}
  1396  000936  5021               	movf	pinMode@type^0,w,c
  1397  000938  1022               	iorwf	(pinMode@type+1)^0,w,c
  1398  00093A  B4D8               	btfsc	status,2,c
  1399  00093C  EFA2  F004         	goto	u1811
  1400  000940  EFA4  F004         	goto	u1810
  1401  000944                     u1811:
  1402  000944  EFB6  F004         	goto	l2103
  1403  000948                     u1810:
  1404  000948  C01F  F023         	movff	pinMode@pin,??_pinMode
  1405  00094C  0EF8               	movlw	-8
  1406  00094E  2623               	addwf	??_pinMode^0,f,c
  1407  000950  0E01               	movlw	1
  1408  000952  6E24               	movwf	(??_pinMode+1)^0,c
  1409  000954  2A23               	incf	??_pinMode^0,f,c
  1410  000956  EFAF  F004         	goto	u1824
  1411  00095A                     u1825:
  1412  00095A  90D8               	bcf	status,0,c
  1413  00095C  3624               	rlcf	(??_pinMode+1)^0,f,c
  1414  00095E                     u1824:
  1415  00095E  2E23               	decfsz	??_pinMode^0,f,c
  1416  000960  EFAD  F004         	goto	u1825
  1417  000964  5024               	movf	(??_pinMode+1)^0,w,c
  1418  000966  1293               	iorwf	147,f,c	;volatile
  1419  000968  EF7B  F005         	goto	l76
  1420  00096C                     l2103:
  1421  00096C  C01F  F023         	movff	pinMode@pin,??_pinMode
  1422  000970  0EF8               	movlw	-8
  1423  000972  2623               	addwf	??_pinMode^0,f,c
  1424  000974  0E01               	movlw	1
  1425  000976  6E24               	movwf	(??_pinMode+1)^0,c
  1426  000978  2A23               	incf	??_pinMode^0,f,c
  1427  00097A  EFC1  F004         	goto	u1834
  1428  00097E                     u1835:
  1429  00097E  90D8               	bcf	status,0,c
  1430  000980  3624               	rlcf	(??_pinMode+1)^0,f,c
  1431  000982                     u1834:
  1432  000982  2E23               	decfsz	??_pinMode^0,f,c
  1433  000984  EFBF  F004         	goto	u1835
  1434  000988  5024               	movf	(??_pinMode+1)^0,w,c
  1435  00098A  0AFF               	xorlw	255
  1436  00098C  1693               	andwf	147,f,c	;volatile
  1437  00098E  EF7B  F005         	goto	l76
  1438  000992                     l2105:
  1439  000992  BE20               	btfsc	(pinMode@pin+1)^0,7,c
  1440  000994  EFD7  F004         	goto	u1840
  1441  000998  5020               	movf	(pinMode@pin+1)^0,w,c
  1442  00099A  E107               	bnz	u1841
  1443  00099C  0E18               	movlw	24
  1444  00099E  5C1F               	subwf	pinMode@pin^0,w,c
  1445  0009A0  B0D8               	btfsc	status,0,c
  1446  0009A2  EFD5  F004         	goto	u1841
  1447  0009A6  EFD7  F004         	goto	u1840
  1448  0009AA                     u1841:
  1449  0009AA  EF05  F005         	goto	l2113
  1450  0009AE                     u1840:
  1451  0009AE                     
  1452                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 63:         if (type){ ((TRISC) |= 
      +                          (1<<(pin-16)));}
  1453  0009AE  5021               	movf	pinMode@type^0,w,c
  1454  0009B0  1022               	iorwf	(pinMode@type+1)^0,w,c
  1455  0009B2  B4D8               	btfsc	status,2,c
  1456  0009B4  EFDE  F004         	goto	u1851
  1457  0009B8  EFE0  F004         	goto	u1850
  1458  0009BC                     u1851:
  1459  0009BC  EFF2  F004         	goto	l2111
  1460  0009C0                     u1850:
  1461  0009C0  C01F  F023         	movff	pinMode@pin,??_pinMode
  1462  0009C4  0EF0               	movlw	-16
  1463  0009C6  2623               	addwf	??_pinMode^0,f,c
  1464  0009C8  0E01               	movlw	1
  1465  0009CA  6E24               	movwf	(??_pinMode+1)^0,c
  1466  0009CC  2A23               	incf	??_pinMode^0,f,c
  1467  0009CE  EFEB  F004         	goto	u1864
  1468  0009D2                     u1865:
  1469  0009D2  90D8               	bcf	status,0,c
  1470  0009D4  3624               	rlcf	(??_pinMode+1)^0,f,c
  1471  0009D6                     u1864:
  1472  0009D6  2E23               	decfsz	??_pinMode^0,f,c
  1473  0009D8  EFE9  F004         	goto	u1865
  1474  0009DC  5024               	movf	(??_pinMode+1)^0,w,c
  1475  0009DE  1294               	iorwf	148,f,c	;volatile
  1476  0009E0  EF7B  F005         	goto	l76
  1477  0009E4                     l2111:
  1478  0009E4  C01F  F023         	movff	pinMode@pin,??_pinMode
  1479  0009E8  0EF0               	movlw	-16
  1480  0009EA  2623               	addwf	??_pinMode^0,f,c
  1481  0009EC  0E01               	movlw	1
  1482  0009EE  6E24               	movwf	(??_pinMode+1)^0,c
  1483  0009F0  2A23               	incf	??_pinMode^0,f,c
  1484  0009F2  EFFD  F004         	goto	u1874
  1485  0009F6                     u1875:
  1486  0009F6  90D8               	bcf	status,0,c
  1487  0009F8  3624               	rlcf	(??_pinMode+1)^0,f,c
  1488  0009FA                     u1874:
  1489  0009FA  2E23               	decfsz	??_pinMode^0,f,c
  1490  0009FC  EFFB  F004         	goto	u1875
  1491  000A00  5024               	movf	(??_pinMode+1)^0,w,c
  1492  000A02  0AFF               	xorlw	255
  1493  000A04  1694               	andwf	148,f,c	;volatile
  1494  000A06  EF7B  F005         	goto	l76
  1495  000A0A                     l2113:
  1496  000A0A  BE20               	btfsc	(pinMode@pin+1)^0,7,c
  1497  000A0C  EF13  F005         	goto	u1880
  1498  000A10  5020               	movf	(pinMode@pin+1)^0,w,c
  1499  000A12  E107               	bnz	u1881
  1500  000A14  0E20               	movlw	32
  1501  000A16  5C1F               	subwf	pinMode@pin^0,w,c
  1502  000A18  B0D8               	btfsc	status,0,c
  1503  000A1A  EF11  F005         	goto	u1881
  1504  000A1E  EF13  F005         	goto	u1880
  1505  000A22                     u1881:
  1506  000A22  EF41  F005         	goto	l2121
  1507  000A26                     u1880:
  1508  000A26                     
  1509                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 66:         if (type){ ((TRISD) |= 
      +                          (1<<(pin-24)));}
  1510  000A26  5021               	movf	pinMode@type^0,w,c
  1511  000A28  1022               	iorwf	(pinMode@type+1)^0,w,c
  1512  000A2A  B4D8               	btfsc	status,2,c
  1513  000A2C  EF1A  F005         	goto	u1891
  1514  000A30  EF1C  F005         	goto	u1890
  1515  000A34                     u1891:
  1516  000A34  EF2E  F005         	goto	l2119
  1517  000A38                     u1890:
  1518  000A38  C01F  F023         	movff	pinMode@pin,??_pinMode
  1519  000A3C  0EE8               	movlw	-24
  1520  000A3E  2623               	addwf	??_pinMode^0,f,c
  1521  000A40  0E01               	movlw	1
  1522  000A42  6E24               	movwf	(??_pinMode+1)^0,c
  1523  000A44  2A23               	incf	??_pinMode^0,f,c
  1524  000A46  EF27  F005         	goto	u1904
  1525  000A4A                     u1905:
  1526  000A4A  90D8               	bcf	status,0,c
  1527  000A4C  3624               	rlcf	(??_pinMode+1)^0,f,c
  1528  000A4E                     u1904:
  1529  000A4E  2E23               	decfsz	??_pinMode^0,f,c
  1530  000A50  EF25  F005         	goto	u1905
  1531  000A54  5024               	movf	(??_pinMode+1)^0,w,c
  1532  000A56  1295               	iorwf	149,f,c	;volatile
  1533  000A58  EF7B  F005         	goto	l76
  1534  000A5C                     l2119:
  1535  000A5C  C01F  F023         	movff	pinMode@pin,??_pinMode
  1536  000A60  0EE8               	movlw	-24
  1537  000A62  2623               	addwf	??_pinMode^0,f,c
  1538  000A64  0E01               	movlw	1
  1539  000A66  6E24               	movwf	(??_pinMode+1)^0,c
  1540  000A68  2A23               	incf	??_pinMode^0,f,c
  1541  000A6A  EF39  F005         	goto	u1914
  1542  000A6E                     u1915:
  1543  000A6E  90D8               	bcf	status,0,c
  1544  000A70  3624               	rlcf	(??_pinMode+1)^0,f,c
  1545  000A72                     u1914:
  1546  000A72  2E23               	decfsz	??_pinMode^0,f,c
  1547  000A74  EF37  F005         	goto	u1915
  1548  000A78  5024               	movf	(??_pinMode+1)^0,w,c
  1549  000A7A  0AFF               	xorlw	255
  1550  000A7C  1695               	andwf	149,f,c	;volatile
  1551  000A7E  EF7B  F005         	goto	l76
  1552  000A82                     l2121:
  1553  000A82  BE20               	btfsc	(pinMode@pin+1)^0,7,c
  1554  000A84  EF4F  F005         	goto	u1920
  1555  000A88  5020               	movf	(pinMode@pin+1)^0,w,c
  1556  000A8A  E107               	bnz	u1921
  1557  000A8C  0E28               	movlw	40
  1558  000A8E  5C1F               	subwf	pinMode@pin^0,w,c
  1559  000A90  B0D8               	btfsc	status,0,c
  1560  000A92  EF4D  F005         	goto	u1921
  1561  000A96  EF4F  F005         	goto	u1920
  1562  000A9A                     u1921:
  1563  000A9A  EF7B  F005         	goto	l76
  1564  000A9E                     u1920:
  1565  000A9E                     
  1566                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 69:         if (type){ ((TRISE) |= 
      +                          (1<<(pin-32)));}
  1567  000A9E  5021               	movf	pinMode@type^0,w,c
  1568  000AA0  1022               	iorwf	(pinMode@type+1)^0,w,c
  1569  000AA2  B4D8               	btfsc	status,2,c
  1570  000AA4  EF56  F005         	goto	u1931
  1571  000AA8  EF58  F005         	goto	u1930
  1572  000AAC                     u1931:
  1573  000AAC  EF6A  F005         	goto	l2127
  1574  000AB0                     u1930:
  1575  000AB0  C01F  F023         	movff	pinMode@pin,??_pinMode
  1576  000AB4  0EE0               	movlw	-32
  1577  000AB6  2623               	addwf	??_pinMode^0,f,c
  1578  000AB8  0E01               	movlw	1
  1579  000ABA  6E24               	movwf	(??_pinMode+1)^0,c
  1580  000ABC  2A23               	incf	??_pinMode^0,f,c
  1581  000ABE  EF63  F005         	goto	u1944
  1582  000AC2                     u1945:
  1583  000AC2  90D8               	bcf	status,0,c
  1584  000AC4  3624               	rlcf	(??_pinMode+1)^0,f,c
  1585  000AC6                     u1944:
  1586  000AC6  2E23               	decfsz	??_pinMode^0,f,c
  1587  000AC8  EF61  F005         	goto	u1945
  1588  000ACC  5024               	movf	(??_pinMode+1)^0,w,c
  1589  000ACE  1296               	iorwf	150,f,c	;volatile
  1590  000AD0  EF7B  F005         	goto	l76
  1591  000AD4                     l2127:
  1592  000AD4  C01F  F023         	movff	pinMode@pin,??_pinMode
  1593  000AD8  0EE0               	movlw	-32
  1594  000ADA  2623               	addwf	??_pinMode^0,f,c
  1595  000ADC  0E01               	movlw	1
  1596  000ADE  6E24               	movwf	(??_pinMode+1)^0,c
  1597  000AE0  2A23               	incf	??_pinMode^0,f,c
  1598  000AE2  EF75  F005         	goto	u1954
  1599  000AE6                     u1955:
  1600  000AE6  90D8               	bcf	status,0,c
  1601  000AE8  3624               	rlcf	(??_pinMode+1)^0,f,c
  1602  000AEA                     u1954:
  1603  000AEA  2E23               	decfsz	??_pinMode^0,f,c
  1604  000AEC  EF73  F005         	goto	u1955
  1605  000AF0  5024               	movf	(??_pinMode+1)^0,w,c
  1606  000AF2  0AFF               	xorlw	255
  1607  000AF4  1696               	andwf	150,f,c	;volatile
  1608  000AF6                     l76:
  1609  000AF6  0012               	return		;funcret
  1610  000AF8                     __end_of_pinMode:
  1611                           	callstack 0
  1612                           
  1613 ;; *************** function _kpInit *****************
  1614 ;; Defined at:
  1615 ;;		line 89 in file "keypad.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;		None
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;		None
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, status,2, status,0
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1629 ;;      Params:         0       0       0       0       0       0       0
  1630 ;;      Locals:         0       0       0       0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0       0       0
  1632 ;;      Totals:         0       0       0       0       0       0       0
  1633 ;;Total ram usage:        0 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; This function calls:
  1636 ;;		Nothing
  1637 ;; This function is called by:
  1638 ;;		_main
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text7
  1643  0018E2                     __ptext7:
  1644                           	callstack 0
  1645  0018E2                     _kpInit:
  1646                           	callstack 30
  1647  0018E2                     
  1648                           ;keypad.c: 91:     TRISB &= 0x07;
  1649  0018E2  0E07               	movlw	7
  1650  0018E4  1693               	andwf	147,f,c	;volatile
  1651                           
  1652                           ;keypad.c: 93:     TRISD |= 0x0f;
  1653  0018E6  0E0F               	movlw	15
  1654  0018E8  1295               	iorwf	149,f,c	;volatile
  1655  0018EA  0012               	return		;funcret
  1656  0018EC                     __end_of_kpInit:
  1657                           	callstack 0
  1658                           
  1659 ;; *************** function _chooseSong *****************
  1660 ;; Defined at:
  1661 ;;		line 31 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;		None
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1675 ;;      Params:         0       0       0       0       0       0       0
  1676 ;;      Locals:         0       0       0       0       0       0       0
  1677 ;;      Temps:          2       0       0       0       0       0       0
  1678 ;;      Totals:         2       0       0       0       0       0       0
  1679 ;;Total ram usage:        2 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; Hardware stack levels required when called:    5
  1682 ;; This function calls:
  1683 ;;		_atraso_ms
  1684 ;;		_kpDebounce
  1685 ;;		_kpRead
  1686 ;;		_lcdCommand
  1687 ;;		_lcdPosition
  1688 ;;		_lcdStr
  1689 ;;		_playSong
  1690 ;;		_ssdDigit
  1691 ;;		_ssdUpdate
  1692 ;; This function is called by:
  1693 ;;		_main
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text8
  1698  001010                     __ptext8:
  1699                           	callstack 0
  1700  001010                     _chooseSong:
  1701                           	callstack 25
  1702  001010                     
  1703                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 32:     kpDebounce();
  1704  001010  ECA3  F006         	call	_kpDebounce	;wreg free
  1705  001014                     
  1706                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 33:     tecla = kpRead();
  1707  001014  EC76  F00C         	call	_kpRead	;wreg free
  1708  001018  501F               	movf	?_kpRead^0,w,c
  1709  00101A  6E1E               	movwf	_tecla^0,c
  1710  00101C                     
  1711                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 34:     if (((tecla) & (1<<(3)))
      +                           || ((tecla) & (1<<(7)))) {
  1712  00101C  B61E               	btfsc	_tecla^0,3,c
  1713  00101E  EF13  F008         	goto	u2101
  1714  001022  EF15  F008         	goto	u2100
  1715  001026                     u2101:
  1716  001026  EF1C  F008         	goto	l2269
  1717  00102A                     u2100:
  1718  00102A  AE1E               	btfss	_tecla^0,7,c
  1719  00102C  EF1A  F008         	goto	u2111
  1720  001030  EF1C  F008         	goto	u2110
  1721  001034                     u2111:
  1722  001034  EFA5  F008         	goto	l252
  1723  001038                     u2110:
  1724  001038                     l2269:
  1725                           
  1726                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 35:         flag = 1;
  1727  001038  0E01               	movlw	1
  1728  00103A  6E49               	movwf	_flag^0,c
  1729  00103C                     l2271:
  1730                           
  1731                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 37:             ssdUpdate();
  1732  00103C  EC60  F007         	call	_ssdUpdate	;wreg free
  1733  001040                     
  1734                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 38:             kpDebounce();
  1735  001040  ECA3  F006         	call	_kpDebounce	;wreg free
  1736  001044                     
  1737                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 39:             atraso_ms(10);
  1738  001044  0E00               	movlw	0
  1739  001046  6E20               	movwf	(atraso_ms@t+1)^0,c
  1740  001048  0E0A               	movlw	10
  1741  00104A  6E1F               	movwf	atraso_ms@t^0,c
  1742  00104C  EC05  F00B         	call	_atraso_ms	;wreg free
  1743  001050                     
  1744                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 40:             if ((kpRead() !=
      +                           tecla) || flag == 1) {
  1745  001050  501E               	movf	_tecla^0,w,c
  1746  001052  6E34               	movwf	??_chooseSong^0,c
  1747  001054  6A35               	clrf	(??_chooseSong+1)^0,c
  1748  001056  EC76  F00C         	call	_kpRead	;wreg free
  1749  00105A  5034               	movf	??_chooseSong^0,w,c
  1750  00105C  181F               	xorwf	?_kpRead^0,w,c
  1751  00105E  E107               	bnz	u2121
  1752  001060  5035               	movf	(??_chooseSong+1)^0,w,c
  1753  001062  1820               	xorwf	(?_kpRead+1)^0,w,c
  1754  001064  A4D8               	btfss	status,2,c
  1755  001066  EF37  F008         	goto	u2121
  1756  00106A  EF39  F008         	goto	u2120
  1757  00106E                     u2121:
  1758  00106E  EF41  F008         	goto	l2281
  1759  001072                     u2120:
  1760  001072  0449               	decf	_flag^0,w,c
  1761  001074  A4D8               	btfss	status,2,c
  1762  001076  EF3F  F008         	goto	u2131
  1763  00107A  EF41  F008         	goto	u2130
  1764  00107E                     u2131:
  1765  00107E  EF1E  F008         	goto	l2271
  1766  001082                     u2130:
  1767  001082                     l2281:
  1768                           
  1769                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 41:                 tecla = kpRe
      +                          ad();
  1770  001082  EC76  F00C         	call	_kpRead	;wreg free
  1771  001086  501F               	movf	?_kpRead^0,w,c
  1772  001088  6E1E               	movwf	_tecla^0,c
  1773  00108A                     
  1774                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 42:                 if (((tecla)
      +                           & (1<<(3)))) {
  1775  00108A  A61E               	btfss	_tecla^0,3,c
  1776  00108C  EF4A  F008         	goto	u2141
  1777  001090  EF4C  F008         	goto	u2140
  1778  001094                     u2141:
  1779  001094  EF5B  F008         	goto	l242
  1780  001098                     u2140:
  1781  001098                     
  1782                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 43:                     if (indi
      +                          ce == 0) {
  1783  001098  504B               	movf	_indice^0,w,c
  1784  00109A  A4D8               	btfss	status,2,c
  1785  00109C  EF52  F008         	goto	u2151
  1786  0010A0  EF54  F008         	goto	u2150
  1787  0010A4                     u2151:
  1788  0010A4  EF58  F008         	goto	l2289
  1789  0010A8                     u2150:
  1790  0010A8                     
  1791                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 44:                         indi
      +                          ce = 9;
  1792  0010A8  0E09               	movlw	9
  1793  0010AA  6E4B               	movwf	_indice^0,c
  1794                           
  1795                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 45:                     } else {
  1796  0010AC  EF7D  F008         	goto	l2299
  1797  0010B0                     l2289:
  1798                           
  1799                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 46:                         indi
      +                          ce -= 1;
  1800  0010B0  064B               	decf	_indice^0,f,c
  1801  0010B2  EF7D  F008         	goto	l2299
  1802  0010B6                     l242:
  1803  0010B6  AE1E               	btfss	_tecla^0,7,c
  1804  0010B8  EF60  F008         	goto	u2161
  1805  0010BC  EF62  F008         	goto	u2160
  1806  0010C0                     u2161:
  1807  0010C0  EF72  F008         	goto	l246
  1808  0010C4                     u2160:
  1809  0010C4                     
  1810                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 49:                     if (indi
      +                          ce == 9) {
  1811  0010C4  0E09               	movlw	9
  1812  0010C6  184B               	xorwf	_indice^0,w,c
  1813  0010C8  A4D8               	btfss	status,2,c
  1814  0010CA  EF69  F008         	goto	u2171
  1815  0010CE  EF6B  F008         	goto	u2170
  1816  0010D2                     u2171:
  1817  0010D2  EF6F  F008         	goto	l2295
  1818  0010D6                     u2170:
  1819  0010D6                     
  1820                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 50:                         indi
      +                          ce = 0;
  1821  0010D6  0E00               	movlw	0
  1822  0010D8  6E4B               	movwf	_indice^0,c
  1823                           
  1824                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 51:                     } else {
  1825  0010DA  EF7D  F008         	goto	l2299
  1826  0010DE                     l2295:
  1827                           
  1828                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 52:                         indi
      +                          ce += 1;
  1829  0010DE  2A4B               	incf	_indice^0,f,c
  1830  0010E0  EF7D  F008         	goto	l2299
  1831  0010E4                     l246:
  1832  0010E4  A01E               	btfss	_tecla^0,0,c
  1833  0010E6  EF77  F008         	goto	u2181
  1834  0010EA  EF79  F008         	goto	u2180
  1835  0010EE                     u2181:
  1836  0010EE  EF7D  F008         	goto	l2299
  1837  0010F2                     u2180:
  1838  0010F2                     
  1839                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 55:                     flag = 0
      +                          ;
  1840  0010F2  0E00               	movlw	0
  1841  0010F4  6E49               	movwf	_flag^0,c
  1842                           
  1843                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 56:                     break;
  1844  0010F6  EFA3  F008         	goto	l2311
  1845  0010FA                     l2299:
  1846                           
  1847                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 58:                 lcdCommand(0
      +                          x01);
  1848  0010FA  0E01               	movlw	1
  1849  0010FC  EC4E  F00A         	call	_lcdCommand
  1850                           
  1851                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 59:                 lcdPosition(
      +                          1, 0);
  1852  001100  0E00               	movlw	0
  1853  001102  6E27               	movwf	lcdPosition@coluna^0,c
  1854  001104  0E01               	movlw	1
  1855  001106  EC68  F00B         	call	_lcdPosition
  1856  00110A                     
  1857                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 60:                 lcdStr("<-(1
      +                          ) (*)  (2)->");
  1858  00110A  0E11               	movlw	low STR_4
  1859  00110C  6E27               	movwf	lcdStr@str^0,c
  1860  00110E  0E06               	movlw	high STR_4
  1861  001110  6E28               	movwf	(lcdStr@str+1)^0,c
  1862  001112  ECC9  F00A         	call	_lcdStr	;wreg free
  1863  001116                     
  1864                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 61:                 lcdPosition(
      +                          0, 0);
  1865  001116  0E00               	movlw	0
  1866  001118  6E27               	movwf	lcdPosition@coluna^0,c
  1867  00111A  0E00               	movlw	0
  1868  00111C  EC68  F00B         	call	_lcdPosition
  1869  001120                     
  1870                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 62:                 lcdStr(music
      +                          as[indice].nome);
  1871  001120  504B               	movf	_indice^0,w,c
  1872  001122  0D13               	mullw	19
  1873  001124  0E02               	movlw	low (_musicas+2)
  1874  001126  24F3               	addwf	243,w,c
  1875  001128  6E27               	movwf	lcdStr@str^0,c
  1876  00112A  0E01               	movlw	high (_musicas+2)
  1877  00112C  20F4               	addwfc	prodh,w,c
  1878  00112E  6E28               	movwf	(lcdStr@str+1)^0,c
  1879  001130  ECC9  F00A         	call	_lcdStr	;wreg free
  1880  001134                     
  1881                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 63:                 ssdDigit(ind
      +                          ice, 3);
  1882  001134  0E03               	movlw	3
  1883  001136  6E1F               	movwf	ssdDigit@pos^0,c
  1884  001138  504B               	movf	_indice^0,w,c
  1885  00113A  EC95  F00B         	call	_ssdDigit
  1886  00113E                     
  1887                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 64:                 flag = 0;
  1888  00113E  0E00               	movlw	0
  1889  001140  6E49               	movwf	_flag^0,c
  1890  001142  EF1E  F008         	goto	l2271
  1891  001146                     l2311:
  1892                           
  1893                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 67:         playSong();
  1894  001146  EC28  F003         	call	_playSong	;wreg free
  1895  00114A                     l252:
  1896  00114A  0012               	return		;funcret
  1897  00114C                     __end_of_chooseSong:
  1898                           	callstack 0
  1899                           
  1900 ;; *************** function _playSong *****************
  1901 ;; Defined at:
  1902 ;;		line 71 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;		None
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  j               1   20[COMRAM] unsigned char 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1916 ;;      Params:         0       0       0       0       0       0       0
  1917 ;;      Locals:         5       0       0       0       0       0       0
  1918 ;;      Temps:          2       0       0       0       0       0       0
  1919 ;;      Totals:         7       0       0       0       0       0       0
  1920 ;;Total ram usage:        7 bytes
  1921 ;; Hardware stack levels used:    1
  1922 ;; Hardware stack levels required when called:    4
  1923 ;; This function calls:
  1924 ;;		___awdiv
  1925 ;;		___awmod
  1926 ;;		_atraso_ms
  1927 ;;		_kpDebounce
  1928 ;;		_kpRead
  1929 ;;		_lcdCommand
  1930 ;;		_lcdPosition
  1931 ;;		_lcdStr
  1932 ;;		_ssdDigit
  1933 ;;		_ssdUpdate
  1934 ;; This function is called by:
  1935 ;;		_chooseSong
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text9
  1940  000650                     __ptext9:
  1941                           	callstack 0
  1942  000650                     _playSong:
  1943                           	callstack 25
  1944  000650                     
  1945                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 72:     lcdCommand(0x01);
  1946  000650  0E01               	movlw	1
  1947  000652  EC4E  F00A         	call	_lcdCommand
  1948                           
  1949                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 73:     lcdPosition(0, 0);
  1950  000656  0E00               	movlw	0
  1951  000658  6E27               	movwf	lcdPosition@coluna^0,c
  1952  00065A  0E00               	movlw	0
  1953  00065C  EC68  F00B         	call	_lcdPosition
  1954  000660                     
  1955                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 74:     lcdStr(musicas[indice].n
      +                          ome);
  1956  000660  504B               	movf	_indice^0,w,c
  1957  000662  0D13               	mullw	19
  1958  000664  0E02               	movlw	low (_musicas+2)
  1959  000666  24F3               	addwf	243,w,c
  1960  000668  6E27               	movwf	lcdStr@str^0,c
  1961  00066A  0E01               	movlw	high (_musicas+2)
  1962  00066C  20F4               	addwfc	prodh,w,c
  1963  00066E  6E28               	movwf	(lcdStr@str+1)^0,c
  1964  000670  ECC9  F00A         	call	_lcdStr	;wreg free
  1965  000674                     
  1966                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 75:     lcdPosition(1, 0);
  1967  000674  0E00               	movlw	0
  1968  000676  6E27               	movwf	lcdPosition@coluna^0,c
  1969  000678  0E01               	movlw	1
  1970  00067A  EC68  F00B         	call	_lcdPosition
  1971  00067E                     
  1972                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 76:     lcdStr("-(1)  (*)  (2)+"
      +                          );
  1973  00067E  0E33               	movlw	low STR_6
  1974  000680  6E27               	movwf	lcdStr@str^0,c
  1975  000682  0E06               	movlw	high STR_6
  1976  000684  6E28               	movwf	(lcdStr@str+1)^0,c
  1977  000686  ECC9  F00A         	call	_lcdStr	;wreg free
  1978  00068A                     
  1979                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 78:     tempo = musicas[indice].
      +                          duracao;
  1980  00068A  504B               	movf	_indice^0,w,c
  1981  00068C  0D13               	mullw	19
  1982  00068E  0E00               	movlw	low _musicas
  1983  000690  24F3               	addwf	243,w,c
  1984  000692  6ED9               	movwf	fsr2l,c
  1985  000694  0E01               	movlw	high _musicas
  1986  000696  20F4               	addwfc	prodh,w,c
  1987  000698  6EDA               	movwf	fsr2h,c
  1988  00069A  50DF               	movf	indf2,w,c
  1989  00069C  6E48               	movwf	_tempo^0,c
  1990                           
  1991                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 80:     while (tempo != 0) {
  1992  00069E  EF44  F004         	goto	l2197
  1993  0006A2                     l2143:
  1994                           
  1995                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 81:         minuto1 = (tempo / 6
      +                          0) % 10;
  1996  0006A2  0E00               	movlw	0
  1997  0006A4  6E22               	movwf	(___awdiv@divisor+1)^0,c
  1998  0006A6  0E3C               	movlw	60
  1999  0006A8  6E21               	movwf	___awdiv@divisor^0,c
  2000  0006AA  C048  F01F         	movff	_tempo,___awdiv@dividend
  2001  0006AE  6A20               	clrf	(___awdiv@dividend+1)^0,c
  2002  0006B0  ECA6  F008         	call	___awdiv	;wreg free
  2003  0006B4  C01F  F027         	movff	?___awdiv,___awmod@dividend
  2004  0006B8  C020  F028         	movff	?___awdiv+1,___awmod@dividend+1
  2005  0006BC  0E00               	movlw	0
  2006  0006BE  6E2A               	movwf	(___awmod@divisor+1)^0,c
  2007  0006C0  0E0A               	movlw	10
  2008  0006C2  6E29               	movwf	___awmod@divisor^0,c
  2009  0006C4  EC08  F009         	call	___awmod	;wreg free
  2010  0006C8  5027               	movf	?___awmod^0,w,c
  2011  0006CA  6E47               	movwf	_minuto1^0,c
  2012                           
  2013                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 82:         minuto2 = (tempo / 6
      +                          0) / 10;
  2014  0006CC  0E00               	movlw	0
  2015  0006CE  6E22               	movwf	(___awdiv@divisor+1)^0,c
  2016  0006D0  0E3C               	movlw	60
  2017  0006D2  6E21               	movwf	___awdiv@divisor^0,c
  2018  0006D4  C048  F01F         	movff	_tempo,___awdiv@dividend
  2019  0006D8  6A20               	clrf	(___awdiv@dividend+1)^0,c
  2020  0006DA  ECA6  F008         	call	___awdiv	;wreg free
  2021  0006DE  C01F  F02F         	movff	?___awdiv,_playSong$950
  2022  0006E2  C020  F030         	movff	?___awdiv+1,_playSong$950+1
  2023                           
  2024                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 82:         minuto2 = (tempo / 6
      +                          0) / 10;
  2025  0006E6  C02F  F01F         	movff	_playSong$950,___awdiv@dividend
  2026  0006EA  C030  F020         	movff	_playSong$950+1,___awdiv@dividend+1
  2027  0006EE  0E00               	movlw	0
  2028  0006F0  6E22               	movwf	(___awdiv@divisor+1)^0,c
  2029  0006F2  0E0A               	movlw	10
  2030  0006F4  6E21               	movwf	___awdiv@divisor^0,c
  2031  0006F6  ECA6  F008         	call	___awdiv	;wreg free
  2032  0006FA  501F               	movf	?___awdiv^0,w,c
  2033  0006FC  6E46               	movwf	_minuto2^0,c
  2034                           
  2035                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 83:         segundo1 = (tempo % 
      +                          60) % 10;
  2036  0006FE  0E00               	movlw	0
  2037  000700  6E2A               	movwf	(___awmod@divisor+1)^0,c
  2038  000702  0E3C               	movlw	60
  2039  000704  6E29               	movwf	___awmod@divisor^0,c
  2040  000706  C048  F027         	movff	_tempo,___awmod@dividend
  2041  00070A  6A28               	clrf	(___awmod@dividend+1)^0,c
  2042  00070C  EC08  F009         	call	___awmod	;wreg free
  2043  000710  C027  F031         	movff	?___awmod,_playSong$951
  2044  000714  C028  F032         	movff	?___awmod+1,_playSong$951+1
  2045                           
  2046                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 83:         segundo1 = (tempo % 
      +                          60) % 10;
  2047  000718  C031  F027         	movff	_playSong$951,___awmod@dividend
  2048  00071C  C032  F028         	movff	_playSong$951+1,___awmod@dividend+1
  2049  000720  0E00               	movlw	0
  2050  000722  6E2A               	movwf	(___awmod@divisor+1)^0,c
  2051  000724  0E0A               	movlw	10
  2052  000726  6E29               	movwf	___awmod@divisor^0,c
  2053  000728  EC08  F009         	call	___awmod	;wreg free
  2054  00072C  5027               	movf	?___awmod^0,w,c
  2055  00072E  6E45               	movwf	_segundo1^0,c
  2056                           
  2057                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 84:         segundo2 = (tempo % 
      +                          60) / 10;
  2058  000730  0E00               	movlw	0
  2059  000732  6E2A               	movwf	(___awmod@divisor+1)^0,c
  2060  000734  0E3C               	movlw	60
  2061  000736  6E29               	movwf	___awmod@divisor^0,c
  2062  000738  C048  F027         	movff	_tempo,___awmod@dividend
  2063  00073C  6A28               	clrf	(___awmod@dividend+1)^0,c
  2064  00073E  EC08  F009         	call	___awmod	;wreg free
  2065  000742  C027  F01F         	movff	?___awmod,___awdiv@dividend
  2066  000746  C028  F020         	movff	?___awmod+1,___awdiv@dividend+1
  2067  00074A  0E00               	movlw	0
  2068  00074C  6E22               	movwf	(___awdiv@divisor+1)^0,c
  2069  00074E  0E0A               	movlw	10
  2070  000750  6E21               	movwf	___awdiv@divisor^0,c
  2071  000752  ECA6  F008         	call	___awdiv	;wreg free
  2072  000756  501F               	movf	?___awdiv^0,w,c
  2073  000758  6E44               	movwf	_segundo2^0,c
  2074                           
  2075                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 86:         ssdDigit(minuto2, 0)
      +                          ;
  2076  00075A  0E00               	movlw	0
  2077  00075C  6E1F               	movwf	ssdDigit@pos^0,c
  2078  00075E  5046               	movf	_minuto2^0,w,c
  2079  000760  EC95  F00B         	call	_ssdDigit
  2080                           
  2081                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 87:         ssdDigit(minuto1, 1)
      +                          ;
  2082  000764  0E01               	movlw	1
  2083  000766  6E1F               	movwf	ssdDigit@pos^0,c
  2084  000768  5047               	movf	_minuto1^0,w,c
  2085  00076A  EC95  F00B         	call	_ssdDigit
  2086                           
  2087                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 88:         ssdDigit(segundo2, 2
      +                          );
  2088  00076E  0E02               	movlw	2
  2089  000770  6E1F               	movwf	ssdDigit@pos^0,c
  2090  000772  5044               	movf	_segundo2^0,w,c
  2091  000774  EC95  F00B         	call	_ssdDigit
  2092                           
  2093                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 89:         ssdDigit(segundo1, 3
      +                          );
  2094  000778  0E03               	movlw	3
  2095  00077A  6E1F               	movwf	ssdDigit@pos^0,c
  2096  00077C  5045               	movf	_segundo1^0,w,c
  2097  00077E  EC95  F00B         	call	_ssdDigit
  2098  000782                     
  2099                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 91:         for (unsigned char j
      +                           = 0; j < 100; j++) {
  2100  000782  0E00               	movlw	0
  2101  000784  6E33               	movwf	playSong@j^0,c
  2102  000786                     l2151:
  2103                           
  2104                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 92:             ssdUpdate();
  2105  000786  EC60  F007         	call	_ssdUpdate	;wreg free
  2106  00078A                     
  2107                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 93:             atraso_ms(10);
  2108  00078A  0E00               	movlw	0
  2109  00078C  6E20               	movwf	(atraso_ms@t+1)^0,c
  2110  00078E  0E0A               	movlw	10
  2111  000790  6E1F               	movwf	atraso_ms@t^0,c
  2112  000792  EC05  F00B         	call	_atraso_ms	;wreg free
  2113  000796                     
  2114                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 94:             kpDebounce();
  2115  000796  ECA3  F006         	call	_kpDebounce	;wreg free
  2116  00079A                     
  2117                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 95:             tecla = kpRead()
      +                          ;
  2118  00079A  EC76  F00C         	call	_kpRead	;wreg free
  2119  00079E  501F               	movf	?_kpRead^0,w,c
  2120  0007A0  6E1E               	movwf	_tecla^0,c
  2121  0007A2                     
  2122                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 96:             if (((tecla) & (
      +                          1<<(3))) || ((tecla) & (1<<(7))) || ((tecla) & (1<<(0)))) {
  2123  0007A2  B61E               	btfsc	_tecla^0,3,c
  2124  0007A4  EFD6  F003         	goto	u1971
  2125  0007A8  EFD8  F003         	goto	u1970
  2126  0007AC                     u1971:
  2127  0007AC  EFE6  F003         	goto	l2165
  2128  0007B0                     u1970:
  2129  0007B0  BE1E               	btfsc	_tecla^0,7,c
  2130  0007B2  EFDD  F003         	goto	u1981
  2131  0007B6  EFDF  F003         	goto	u1980
  2132  0007BA                     u1981:
  2133  0007BA  EFE6  F003         	goto	l2165
  2134  0007BE                     u1980:
  2135  0007BE  A01E               	btfss	_tecla^0,0,c
  2136  0007C0  EFE4  F003         	goto	u1991
  2137  0007C4  EFE6  F003         	goto	u1990
  2138  0007C8                     u1991:
  2139  0007C8  EF32  F004         	goto	l2189
  2140  0007CC                     u1990:
  2141  0007CC                     l2165:
  2142                           
  2143                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 97:                 flag=1;
  2144  0007CC  0E01               	movlw	1
  2145  0007CE  6E49               	movwf	_flag^0,c
  2146  0007D0                     l2167:
  2147                           
  2148                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 99:                     kpDeboun
      +                          ce();
  2149  0007D0  ECA3  F006         	call	_kpDebounce	;wreg free
  2150  0007D4                     
  2151                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 100:                     tecla =
      +                           kpRead();
  2152  0007D4  EC76  F00C         	call	_kpRead	;wreg free
  2153  0007D8  501F               	movf	?_kpRead^0,w,c
  2154  0007DA  6E1E               	movwf	_tecla^0,c
  2155  0007DC                     
  2156                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 101:                     if ((kp
      +                          Read() != tecla) || flag == 1) {
  2157  0007DC  501E               	movf	_tecla^0,w,c
  2158  0007DE  6E2D               	movwf	??_playSong^0,c
  2159  0007E0  6A2E               	clrf	(??_playSong+1)^0,c
  2160  0007E2  EC76  F00C         	call	_kpRead	;wreg free
  2161  0007E6  502D               	movf	??_playSong^0,w,c
  2162  0007E8  181F               	xorwf	?_kpRead^0,w,c
  2163  0007EA  E107               	bnz	u2001
  2164  0007EC  502E               	movf	(??_playSong+1)^0,w,c
  2165  0007EE  1820               	xorwf	(?_kpRead+1)^0,w,c
  2166  0007F0  A4D8               	btfss	status,2,c
  2167  0007F2  EFFD  F003         	goto	u2001
  2168  0007F6  EFFF  F003         	goto	u2000
  2169  0007FA                     u2001:
  2170  0007FA  EF07  F004         	goto	l265
  2171  0007FE                     u2000:
  2172  0007FE  0449               	decf	_flag^0,w,c
  2173  000800  A4D8               	btfss	status,2,c
  2174  000802  EF05  F004         	goto	u2011
  2175  000806  EF07  F004         	goto	u2010
  2176  00080A                     u2011:
  2177  00080A  EFE8  F003         	goto	l2167
  2178  00080E                     u2010:
  2179  00080E                     l265:
  2180                           
  2181                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 102:                         if 
      +                          (((tecla) & (1<<(3)))) {
  2182  00080E  A61E               	btfss	_tecla^0,3,c
  2183  000810  EF0C  F004         	goto	u2021
  2184  000814  EF0E  F004         	goto	u2020
  2185  000818                     u2021:
  2186  000818  EF10  F004         	goto	l266
  2187  00081C                     u2020:
  2188  00081C  EF32  F004         	goto	l2189
  2189  000820                     l266:
  2190  000820  AE1E               	btfss	_tecla^0,7,c
  2191  000822  EF15  F004         	goto	u2031
  2192  000826  EF17  F004         	goto	u2030
  2193  00082A                     u2031:
  2194  00082A  EF19  F004         	goto	l269
  2195  00082E                     u2030:
  2196  00082E  EF32  F004         	goto	l2189
  2197  000832                     l269:
  2198  000832  A01E               	btfss	_tecla^0,0,c
  2199  000834  EF1E  F004         	goto	u2041
  2200  000838  EF20  F004         	goto	u2040
  2201  00083C                     u2041:
  2202  00083C  EF30  F004         	goto	l268
  2203  000840                     u2040:
  2204  000840                     
  2205                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 107:                            
      +                           if(pause==0) {pause=1;} else {pause = 0;}
  2206  000840  501D               	movf	_pause^0,w,c
  2207  000842  A4D8               	btfss	status,2,c
  2208  000844  EF26  F004         	goto	u2051
  2209  000848  EF28  F004         	goto	u2050
  2210  00084C                     u2051:
  2211  00084C  EF2C  F004         	goto	l2187
  2212  000850                     u2050:
  2213  000850  0E01               	movlw	1
  2214  000852  6E1D               	movwf	_pause^0,c
  2215  000854  EF32  F004         	goto	l2189
  2216  000858                     l2187:
  2217  000858  0E00               	movlw	0
  2218  00085A  6E1D               	movwf	_pause^0,c
  2219  00085C  EF32  F004         	goto	l2189
  2220  000860                     l268:
  2221  000860  EFE8  F003         	goto	l2167
  2222  000864                     l2189:
  2223                           
  2224                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 114:         }
  2225  000864  2A33               	incf	playSong@j^0,f,c
  2226  000866  0E63               	movlw	99
  2227  000868  6433               	cpfsgt	playSong@j^0,c
  2228  00086A  EF39  F004         	goto	u2061
  2229  00086E  EF3B  F004         	goto	u2060
  2230  000872                     u2061:
  2231  000872  EFC3  F003         	goto	l2151
  2232  000876                     u2060:
  2233  000876                     
  2234                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 115:         if (pause == 0) {
  2235  000876  501D               	movf	_pause^0,w,c
  2236  000878  A4D8               	btfss	status,2,c
  2237  00087A  EF41  F004         	goto	u2071
  2238  00087E  EF43  F004         	goto	u2070
  2239  000882                     u2071:
  2240  000882  EF44  F004         	goto	l2197
  2241  000886                     u2070:
  2242  000886                     
  2243                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 116:             tempo -= 1;
  2244  000886  0648               	decf	_tempo^0,f,c
  2245  000888                     l2197:
  2246                           
  2247                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 80:     while (tempo != 0) {
  2248  000888  5048               	movf	_tempo^0,w,c
  2249  00088A  A4D8               	btfss	status,2,c
  2250  00088C  EF4A  F004         	goto	u2081
  2251  000890  EF4C  F004         	goto	u2080
  2252  000894                     u2081:
  2253  000894  EF51  F003         	goto	l2143
  2254  000898                     u2080:
  2255  000898                     
  2256                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 119:     ((TRISC) |= (1<<(1)));
  2257  000898  8294               	bsf	148,1,c	;volatile
  2258  00089A                     
  2259                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 120:     atraso_ms(500);
  2260  00089A  0E01               	movlw	1
  2261  00089C  6E20               	movwf	(atraso_ms@t+1)^0,c
  2262  00089E  0EF4               	movlw	244
  2263  0008A0  6E1F               	movwf	atraso_ms@t^0,c
  2264  0008A2  EC05  F00B         	call	_atraso_ms	;wreg free
  2265  0008A6                     
  2266                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 121:     ((TRISC) |= (1<<(0)));
  2267  0008A6  8094               	bsf	148,0,c	;volatile
  2268  0008A8  0012               	return		;funcret
  2269  0008AA                     __end_of_playSong:
  2270                           	callstack 0
  2271                           
  2272 ;; *************** function _ssdUpdate *****************
  2273 ;; Defined at:
  2274 ;;		line 54 in file "ssd.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2288 ;;      Params:         0       0       0       0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0       0       0
  2290 ;;      Temps:          2       0       0       0       0       0       0
  2291 ;;      Totals:         2       0       0       0       0       0       0
  2292 ;;Total ram usage:        2 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    1
  2295 ;; This function calls:
  2296 ;;		_digitalWrite
  2297 ;; This function is called by:
  2298 ;;		_chooseSong
  2299 ;;		_playSong
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text10
  2304  000EC0                     __ptext10:
  2305                           	callstack 0
  2306  000EC0                     _ssdUpdate:
  2307                           	callstack 28
  2308  000EC0                     
  2309                           ;ssd.c: 58:     TRISD= 0x00;
  2310  000EC0  0E00               	movlw	0
  2311  000EC2  6E95               	movwf	149,c	;volatile
  2312  000EC4                     
  2313                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  2314  000EC4  0E00               	movlw	0
  2315  000EC6  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2316  000EC8  0E02               	movlw	2
  2317  000ECA  6E1F               	movwf	digitalWrite@pin^0,c
  2318  000ECC  0E00               	movlw	0
  2319  000ECE  6E22               	movwf	(digitalWrite@value+1)^0,c
  2320  000ED0  0E00               	movlw	0
  2321  000ED2  6E21               	movwf	digitalWrite@value^0,c
  2322  000ED4  EC7C  F005         	call	_digitalWrite	;wreg free
  2323  000ED8                     
  2324                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  2325  000ED8  0E00               	movlw	0
  2326  000EDA  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2327  000EDC  0E03               	movlw	3
  2328  000EDE  6E1F               	movwf	digitalWrite@pin^0,c
  2329  000EE0  0E00               	movlw	0
  2330  000EE2  6E22               	movwf	(digitalWrite@value+1)^0,c
  2331  000EE4  0E00               	movlw	0
  2332  000EE6  6E21               	movwf	digitalWrite@value^0,c
  2333  000EE8  EC7C  F005         	call	_digitalWrite	;wreg free
  2334  000EEC                     
  2335                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  2336  000EEC  0E00               	movlw	0
  2337  000EEE  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2338  000EF0  0E04               	movlw	4
  2339  000EF2  6E1F               	movwf	digitalWrite@pin^0,c
  2340  000EF4  0E00               	movlw	0
  2341  000EF6  6E22               	movwf	(digitalWrite@value+1)^0,c
  2342  000EF8  0E00               	movlw	0
  2343  000EFA  6E21               	movwf	digitalWrite@value^0,c
  2344  000EFC  EC7C  F005         	call	_digitalWrite	;wreg free
  2345  000F00                     
  2346                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  2347  000F00  0E00               	movlw	0
  2348  000F02  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2349  000F04  0E05               	movlw	5
  2350  000F06  6E1F               	movwf	digitalWrite@pin^0,c
  2351  000F08  0E00               	movlw	0
  2352  000F0A  6E22               	movwf	(digitalWrite@value+1)^0,c
  2353  000F0C  0E00               	movlw	0
  2354  000F0E  6E21               	movwf	digitalWrite@value^0,c
  2355  000F10  EC7C  F005         	call	_digitalWrite	;wreg free
  2356                           
  2357                           ;ssd.c: 66:     PORTD = 0x00;
  2358  000F14  0E00               	movlw	0
  2359  000F16  6E83               	movwf	131,c	;volatile
  2360                           
  2361                           ;ssd.c: 69:     switch (display)
  2362  000F18  EFEA  F007         	goto	l1987
  2363  000F1C                     l1959:
  2364                           
  2365                           ;ssd.c: 72:             PORTD = valor[v0];
  2366  000F1C  0E01               	movlw	low _valor
  2367  000F1E  2441               	addwf	_v0^0,w,c
  2368  000F20  6EF6               	movwf	tblptrl,c
  2369  000F22  6AF7               	clrf	tblptrh,c
  2370  000F24  0E06               	movlw	high _valor
  2371  000F26  22F7               	addwfc	tblptrh,f,c
  2372  000F28                     	if	0	;There are less than 3 active tblptr bytes
  2373  000F28                     	endif
  2374  000F28  0008               	tblrd		*
  2375  000F2A  CFF5 FF83          	movff	tablat,3971	;volatile
  2376  000F2E                     
  2377                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  2378  000F2E  0E00               	movlw	0
  2379  000F30  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2380  000F32  0E02               	movlw	2
  2381  000F34  6E1F               	movwf	digitalWrite@pin^0,c
  2382  000F36  0E00               	movlw	0
  2383  000F38  6E22               	movwf	(digitalWrite@value+1)^0,c
  2384  000F3A  0E01               	movlw	1
  2385  000F3C  6E21               	movwf	digitalWrite@value^0,c
  2386  000F3E  EC7C  F005         	call	_digitalWrite	;wreg free
  2387  000F42                     
  2388                           ;ssd.c: 74:             display = 1;
  2389  000F42  0E01               	movlw	1
  2390  000F44  6E42               	movwf	_display^0,c
  2391                           
  2392                           ;ssd.c: 75:             break;
  2393  000F46  EF07  F008         	goto	l313
  2394  000F4A                     l1965:
  2395                           
  2396                           ;ssd.c: 78:             PORTD = valor[v1];
  2397  000F4A  0E01               	movlw	low _valor
  2398  000F4C  2440               	addwf	_v1^0,w,c
  2399  000F4E  6EF6               	movwf	tblptrl,c
  2400  000F50  6AF7               	clrf	tblptrh,c
  2401  000F52  0E06               	movlw	high _valor
  2402  000F54  22F7               	addwfc	tblptrh,f,c
  2403  000F56                     	if	0	;There are less than 3 active tblptr bytes
  2404  000F56                     	endif
  2405  000F56  0008               	tblrd		*
  2406  000F58  CFF5 FF83          	movff	tablat,3971	;volatile
  2407  000F5C                     
  2408                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  2409  000F5C  0E00               	movlw	0
  2410  000F5E  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2411  000F60  0E03               	movlw	3
  2412  000F62  6E1F               	movwf	digitalWrite@pin^0,c
  2413  000F64  0E00               	movlw	0
  2414  000F66  6E22               	movwf	(digitalWrite@value+1)^0,c
  2415  000F68  0E01               	movlw	1
  2416  000F6A  6E21               	movwf	digitalWrite@value^0,c
  2417  000F6C  EC7C  F005         	call	_digitalWrite	;wreg free
  2418  000F70                     
  2419                           ;ssd.c: 80:             display = 2;
  2420  000F70  0E02               	movlw	2
  2421  000F72  6E42               	movwf	_display^0,c
  2422                           
  2423                           ;ssd.c: 81:             break;
  2424  000F74  EF07  F008         	goto	l313
  2425  000F78                     l1971:
  2426                           
  2427                           ;ssd.c: 84:             PORTD = valor[v2];
  2428  000F78  0E01               	movlw	low _valor
  2429  000F7A  243F               	addwf	_v2^0,w,c
  2430  000F7C  6EF6               	movwf	tblptrl,c
  2431  000F7E  6AF7               	clrf	tblptrh,c
  2432  000F80  0E06               	movlw	high _valor
  2433  000F82  22F7               	addwfc	tblptrh,f,c
  2434  000F84                     	if	0	;There are less than 3 active tblptr bytes
  2435  000F84                     	endif
  2436  000F84  0008               	tblrd		*
  2437  000F86  CFF5 FF83          	movff	tablat,3971	;volatile
  2438  000F8A                     
  2439                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  2440  000F8A  0E00               	movlw	0
  2441  000F8C  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2442  000F8E  0E04               	movlw	4
  2443  000F90  6E1F               	movwf	digitalWrite@pin^0,c
  2444  000F92  0E00               	movlw	0
  2445  000F94  6E22               	movwf	(digitalWrite@value+1)^0,c
  2446  000F96  0E01               	movlw	1
  2447  000F98  6E21               	movwf	digitalWrite@value^0,c
  2448  000F9A  EC7C  F005         	call	_digitalWrite	;wreg free
  2449  000F9E                     
  2450                           ;ssd.c: 86:             display = 3;
  2451  000F9E  0E03               	movlw	3
  2452  000FA0  6E42               	movwf	_display^0,c
  2453                           
  2454                           ;ssd.c: 87:             break;
  2455  000FA2  EF07  F008         	goto	l313
  2456  000FA6                     l1977:
  2457                           
  2458                           ;ssd.c: 90:             PORTD = valor[v3];
  2459  000FA6  0E01               	movlw	low _valor
  2460  000FA8  243E               	addwf	_v3^0,w,c
  2461  000FAA  6EF6               	movwf	tblptrl,c
  2462  000FAC  6AF7               	clrf	tblptrh,c
  2463  000FAE  0E06               	movlw	high _valor
  2464  000FB0  22F7               	addwfc	tblptrh,f,c
  2465  000FB2                     	if	0	;There are less than 3 active tblptr bytes
  2466  000FB2                     	endif
  2467  000FB2  0008               	tblrd		*
  2468  000FB4  CFF5 FF83          	movff	tablat,3971	;volatile
  2469  000FB8                     
  2470                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  2471  000FB8  0E00               	movlw	0
  2472  000FBA  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2473  000FBC  0E05               	movlw	5
  2474  000FBE  6E1F               	movwf	digitalWrite@pin^0,c
  2475  000FC0  0E00               	movlw	0
  2476  000FC2  6E22               	movwf	(digitalWrite@value+1)^0,c
  2477  000FC4  0E01               	movlw	1
  2478  000FC6  6E21               	movwf	digitalWrite@value^0,c
  2479  000FC8  EC7C  F005         	call	_digitalWrite	;wreg free
  2480  000FCC                     l1981:
  2481                           
  2482                           ;ssd.c: 92:             display = 0;
  2483  000FCC  0E00               	movlw	0
  2484  000FCE  6E42               	movwf	_display^0,c
  2485                           
  2486                           ;ssd.c: 93:             break;
  2487  000FD0  EF07  F008         	goto	l313
  2488  000FD4                     l1987:
  2489  000FD4  5042               	movf	_display^0,w,c
  2490  000FD6  6E25               	movwf	??_ssdUpdate^0,c
  2491  000FD8  6A26               	clrf	(??_ssdUpdate+1)^0,c
  2492                           
  2493                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2494                           ; Switch size 1, requested type "simple"
  2495                           ; Number of cases is 1, Range of values is 0 to 0
  2496                           ; switch strategies available:
  2497                           ; Name         Instructions Cycles
  2498                           ; simple_byte            4     3 (average)
  2499                           ;	Chosen strategy is simple_byte
  2500  000FDA  5026               	movf	(??_ssdUpdate+1)^0,w,c
  2501  000FDC  0A00               	xorlw	0	; case 0
  2502  000FDE  B4D8               	btfsc	status,2,c
  2503  000FE0  EFF4  F007         	goto	l2349
  2504  000FE4  EFE6  F007         	goto	l1981
  2505  000FE8                     l2349:
  2506                           
  2507                           ; Switch size 1, requested type "simple"
  2508                           ; Number of cases is 4, Range of values is 0 to 3
  2509                           ; switch strategies available:
  2510                           ; Name         Instructions Cycles
  2511                           ; simple_byte           13     7 (average)
  2512                           ;	Chosen strategy is simple_byte
  2513  000FE8  5025               	movf	??_ssdUpdate^0,w,c
  2514  000FEA  0A00               	xorlw	0	; case 0
  2515  000FEC  B4D8               	btfsc	status,2,c
  2516  000FEE  EF8E  F007         	goto	l1959
  2517  000FF2  0A01               	xorlw	1	; case 1
  2518  000FF4  B4D8               	btfsc	status,2,c
  2519  000FF6  EFA5  F007         	goto	l1965
  2520  000FFA  0A03               	xorlw	3	; case 2
  2521  000FFC  B4D8               	btfsc	status,2,c
  2522  000FFE  EFBC  F007         	goto	l1971
  2523  001002  0A01               	xorlw	1	; case 3
  2524  001004  B4D8               	btfsc	status,2,c
  2525  001006  EFD3  F007         	goto	l1977
  2526  00100A  EFE6  F007         	goto	l1981
  2527  00100E                     l313:
  2528  00100E  0012               	return		;funcret
  2529  001010                     __end_of_ssdUpdate:
  2530                           	callstack 0
  2531                           
  2532 ;; *************** function _ssdDigit *****************
  2533 ;; Defined at:
  2534 ;;		line 38 in file "ssd.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;  val             1    wreg     unsigned char 
  2537 ;;  pos             1    0[COMRAM] unsigned char 
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;  val             1    1[COMRAM] unsigned char 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      void 
  2542 ;; Registers used:
  2543 ;;		wreg, status,2, status,0
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2549 ;;      Params:         1       0       0       0       0       0       0
  2550 ;;      Locals:         1       0       0       0       0       0       0
  2551 ;;      Temps:          0       0       0       0       0       0       0
  2552 ;;      Totals:         2       0       0       0       0       0       0
  2553 ;;Total ram usage:        2 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_chooseSong
  2559 ;;		_playSong
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           	psect	text11
  2564  00172A                     __ptext11:
  2565                           	callstack 0
  2566  00172A                     _ssdDigit:
  2567                           	callstack 29
  2568                           
  2569                           ;incstack = 0
  2570                           ;ssdDigit@val stored from wreg
  2571  00172A  6E20               	movwf	ssdDigit@val^0,c
  2572  00172C                     
  2573                           ;ssd.c: 39:     if (pos == 0) {
  2574  00172C  501F               	movf	ssdDigit@pos^0,w,c
  2575  00172E  A4D8               	btfss	status,2,c
  2576  001730  EF9C  F00B         	goto	u1601
  2577  001734  EF9E  F00B         	goto	u1600
  2578  001738                     u1601:
  2579  001738  EFA0  F00B         	goto	l1997
  2580  00173C                     u1600:
  2581  00173C                     
  2582                           ;ssd.c: 40:         v0 = val;
  2583  00173C  C020  F041         	movff	ssdDigit@val,_v0
  2584  001740                     l1997:
  2585                           
  2586                           ;ssd.c: 42:     if (pos == 1) {
  2587  001740  041F               	decf	ssdDigit@pos^0,w,c
  2588  001742  A4D8               	btfss	status,2,c
  2589  001744  EFA6  F00B         	goto	u1611
  2590  001748  EFA8  F00B         	goto	u1610
  2591  00174C                     u1611:
  2592  00174C  EFAA  F00B         	goto	l2001
  2593  001750                     u1610:
  2594  001750                     
  2595                           ;ssd.c: 43:         v1 = val;
  2596  001750  C020  F040         	movff	ssdDigit@val,_v1
  2597  001754                     l2001:
  2598                           
  2599                           ;ssd.c: 45:     if (pos == 2) {
  2600  001754  0E02               	movlw	2
  2601  001756  181F               	xorwf	ssdDigit@pos^0,w,c
  2602  001758  A4D8               	btfss	status,2,c
  2603  00175A  EFB1  F00B         	goto	u1621
  2604  00175E  EFB3  F00B         	goto	u1620
  2605  001762                     u1621:
  2606  001762  EFB5  F00B         	goto	l2005
  2607  001766                     u1620:
  2608  001766                     
  2609                           ;ssd.c: 46:         v2 = val;
  2610  001766  C020  F03F         	movff	ssdDigit@val,_v2
  2611  00176A                     l2005:
  2612                           
  2613                           ;ssd.c: 48:     if (pos == 3) {
  2614  00176A  0E03               	movlw	3
  2615  00176C  181F               	xorwf	ssdDigit@pos^0,w,c
  2616  00176E  A4D8               	btfss	status,2,c
  2617  001770  EFBC  F00B         	goto	u1631
  2618  001774  EFBE  F00B         	goto	u1630
  2619  001778                     u1631:
  2620  001778  EFC0  F00B         	goto	l303
  2621  00177C                     u1630:
  2622  00177C                     
  2623                           ;ssd.c: 49:         v3 = val;
  2624  00177C  C020  F03E         	movff	ssdDigit@val,_v3
  2625  001780                     l303:
  2626  001780  0012               	return		;funcret
  2627  001782                     __end_of_ssdDigit:
  2628                           	callstack 0
  2629                           
  2630 ;; *************** function _lcdStr *****************
  2631 ;; Defined at:
  2632 ;;		line 128 in file "lcd.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;  str             2    8[COMRAM] PTR const unsigned char 
  2635 ;;		 -> STR_6(16), STR_5(17), musicas.nome(17), musicas(190), 
  2636 ;;		 -> STR_4(17), STR_3(17), STR_2(7), STR_1(4), 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  i               1   12[COMRAM] unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2648 ;;      Params:         2       0       0       0       0       0       0
  2649 ;;      Locals:         1       0       0       0       0       0       0
  2650 ;;      Temps:          2       0       0       0       0       0       0
  2651 ;;      Totals:         5       0       0       0       0       0       0
  2652 ;;Total ram usage:        5 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    2
  2655 ;; This function calls:
  2656 ;;		_lcdData
  2657 ;; This function is called by:
  2658 ;;		_main
  2659 ;;		_chooseSong
  2660 ;;		_playSong
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text12
  2665  001592                     __ptext12:
  2666                           	callstack 0
  2667  001592                     _lcdStr:
  2668                           	callstack 28
  2669  001592                     
  2670                           ;lcd.c: 129:     unsigned char i = 0;
  2671  001592  0E00               	movlw	0
  2672  001594  6E2B               	movwf	lcdStr@i^0,c
  2673                           
  2674                           ;lcd.c: 131:     while (str[i] != 0) {
  2675  001596  EFE6  F00A         	goto	l1891
  2676  00159A                     l1887:
  2677                           
  2678                           ;lcd.c: 132:         lcdData(str[i]);
  2679  00159A  502B               	movf	lcdStr@i^0,w,c
  2680  00159C  2427               	addwf	lcdStr@str^0,w,c
  2681  00159E  6E29               	movwf	??_lcdStr^0,c
  2682  0015A0  0E00               	movlw	0
  2683  0015A2  2028               	addwfc	(lcdStr@str+1)^0,w,c
  2684  0015A4  6E2A               	movwf	(??_lcdStr+1)^0,c
  2685  0015A6  C029  FFF6         	movff	??_lcdStr,tblptrl
  2686  0015AA  C02A  FFF7         	movff	??_lcdStr+1,tblptrh
  2687  0015AE  6AF8               	clrf	tblptru,c
  2688  0015B0  0E05               	movlw	(high __ramtop+-1)
  2689  0015B2  64F7               	cpfsgt	tblptrh,c
  2690  0015B4  D003               	bra	u1467
  2691  0015B6  0008               	tblrd		*
  2692  0015B8  50F5               	movf	tablat,w,c
  2693  0015BA  D005               	bra	u1460
  2694  0015BC                     u1467:
  2695  0015BC  CFF6 FFE9          	movff	tblptrl,fsr0l
  2696  0015C0  CFF7 FFEA          	movff	tblptrh,fsr0h
  2697  0015C4  50EF               	movf	indf0,w,c
  2698  0015C6                     u1460:
  2699  0015C6  ECEC  F00B         	call	_lcdData
  2700  0015CA                     
  2701                           ;lcd.c: 133:         i++;
  2702  0015CA  2A2B               	incf	lcdStr@i^0,f,c
  2703  0015CC                     l1891:
  2704                           
  2705                           ;lcd.c: 131:     while (str[i] != 0) {
  2706  0015CC  502B               	movf	lcdStr@i^0,w,c
  2707  0015CE  2427               	addwf	lcdStr@str^0,w,c
  2708  0015D0  6E29               	movwf	??_lcdStr^0,c
  2709  0015D2  0E00               	movlw	0
  2710  0015D4  2028               	addwfc	(lcdStr@str+1)^0,w,c
  2711  0015D6  6E2A               	movwf	(??_lcdStr+1)^0,c
  2712  0015D8  C029  FFF6         	movff	??_lcdStr,tblptrl
  2713  0015DC  C02A  FFF7         	movff	??_lcdStr+1,tblptrh
  2714  0015E0  6AF8               	clrf	tblptru,c
  2715  0015E2  0E05               	movlw	(high __ramtop+-1)
  2716  0015E4  64F7               	cpfsgt	tblptrh,c
  2717  0015E6  D003               	bra	u1477
  2718  0015E8  0008               	tblrd		*
  2719  0015EA  50F5               	movf	tablat,w,c
  2720  0015EC  D005               	bra	u1470
  2721  0015EE                     u1477:
  2722  0015EE  CFF6 FFE9          	movff	tblptrl,fsr0l
  2723  0015F2  CFF7 FFEA          	movff	tblptrh,fsr0h
  2724  0015F6  50EF               	movf	indf0,w,c
  2725  0015F8                     u1470:
  2726  0015F8  0900               	iorlw	0
  2727  0015FA  A4D8               	btfss	status,2,c
  2728  0015FC  EF02  F00B         	goto	u1481
  2729  001600  EF04  F00B         	goto	u1480
  2730  001604                     u1481:
  2731  001604  EFCD  F00A         	goto	l1887
  2732  001608                     u1480:
  2733  001608  0012               	return		;funcret
  2734  00160A                     __end_of_lcdStr:
  2735                           	callstack 0
  2736                           
  2737 ;; *************** function _lcdData *****************
  2738 ;; Defined at:
  2739 ;;		line 68 in file "lcd.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  valor           1    wreg     unsigned char 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  valor           1    6[COMRAM] unsigned char 
  2744 ;;  old_D           1    7[COMRAM] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2754 ;;      Params:         0       0       0       0       0       0       0
  2755 ;;      Locals:         2       0       0       0       0       0       0
  2756 ;;      Temps:          0       0       0       0       0       0       0
  2757 ;;      Totals:         2       0       0       0       0       0       0
  2758 ;;Total ram usage:        2 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    1
  2761 ;; This function calls:
  2762 ;;		_Delay40us
  2763 ;;		_digitalWrite
  2764 ;; This function is called by:
  2765 ;;		_lcdStr
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text13
  2770  0017D8                     __ptext13:
  2771                           	callstack 0
  2772  0017D8                     _lcdData:
  2773                           	callstack 28
  2774                           
  2775                           ;incstack = 0
  2776                           ;lcdData@valor stored from wreg
  2777  0017D8  6E25               	movwf	lcdData@valor^0,c
  2778  0017DA                     
  2779                           ;lcd.c: 70:     unsigned char old_D;;lcd.c: 71:     old_D = PORTD;
  2780  0017DA  CF83 F026          	movff	3971,lcdData@old_D	;volatile
  2781  0017DE                     
  2782                           ;lcd.c: 73:     TRISD = 0x00;
  2783  0017DE  0E00               	movlw	0
  2784  0017E0  6E95               	movwf	149,c	;volatile
  2785  0017E2                     
  2786                           ;lcd.c: 74:     digitalWrite(PIN_E2, 1);
  2787  0017E2  0E00               	movlw	0
  2788  0017E4  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2789  0017E6  0E22               	movlw	34
  2790  0017E8  6E1F               	movwf	digitalWrite@pin^0,c
  2791  0017EA  0E00               	movlw	0
  2792  0017EC  6E22               	movwf	(digitalWrite@value+1)^0,c
  2793  0017EE  0E01               	movlw	1
  2794  0017F0  6E21               	movwf	digitalWrite@value^0,c
  2795  0017F2  EC7C  F005         	call	_digitalWrite	;wreg free
  2796  0017F6                     
  2797                           ;lcd.c: 76:     PORTD = valor;
  2798  0017F6  C025  FF83         	movff	lcdData@valor,3971	;volatile
  2799  0017FA                     
  2800                           ;lcd.c: 78:     digitalWrite(PIN_E1, 1);
  2801  0017FA  0E00               	movlw	0
  2802  0017FC  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2803  0017FE  0E21               	movlw	33
  2804  001800  6E1F               	movwf	digitalWrite@pin^0,c
  2805  001802  0E00               	movlw	0
  2806  001804  6E22               	movwf	(digitalWrite@value+1)^0,c
  2807  001806  0E01               	movlw	1
  2808  001808  6E21               	movwf	digitalWrite@value^0,c
  2809  00180A  EC7C  F005         	call	_digitalWrite	;wreg free
  2810  00180E                     
  2811                           ;lcd.c: 79:     digitalWrite(PIN_E1, 0);
  2812  00180E  0E00               	movlw	0
  2813  001810  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2814  001812  0E21               	movlw	33
  2815  001814  6E1F               	movwf	digitalWrite@pin^0,c
  2816  001816  0E00               	movlw	0
  2817  001818  6E22               	movwf	(digitalWrite@value+1)^0,c
  2818  00181A  0E00               	movlw	0
  2819  00181C  6E21               	movwf	digitalWrite@value^0,c
  2820  00181E  EC7C  F005         	call	_digitalWrite	;wreg free
  2821  001822                     
  2822                           ;lcd.c: 81:     PORTD = old_D;
  2823  001822  C026  FF83         	movff	lcdData@old_D,3971	;volatile
  2824  001826                     
  2825                           ;lcd.c: 83:     Delay40us();
  2826  001826  EC65  F00C         	call	_Delay40us	;wreg free
  2827  00182A  0012               	return		;funcret
  2828  00182C                     __end_of_lcdData:
  2829                           	callstack 0
  2830                           
  2831 ;; *************** function _lcdPosition *****************
  2832 ;; Defined at:
  2833 ;;		line 115 in file "lcd.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  linha           1    wreg     unsigned char 
  2836 ;;  coluna          1    8[COMRAM] unsigned char 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  linha           1    9[COMRAM] unsigned char 
  2839 ;;  comando         1   10[COMRAM] unsigned char 
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  1    wreg      void 
  2842 ;; Registers used:
  2843 ;;		wreg, status,2, status,0, cstack
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2849 ;;      Params:         1       0       0       0       0       0       0
  2850 ;;      Locals:         2       0       0       0       0       0       0
  2851 ;;      Temps:          0       0       0       0       0       0       0
  2852 ;;      Totals:         3       0       0       0       0       0       0
  2853 ;;Total ram usage:        3 bytes
  2854 ;; Hardware stack levels used:    1
  2855 ;; Hardware stack levels required when called:    3
  2856 ;; This function calls:
  2857 ;;		_lcdCommand
  2858 ;; This function is called by:
  2859 ;;		_main
  2860 ;;		_chooseSong
  2861 ;;		_playSong
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text14
  2866  0016D0                     __ptext14:
  2867                           	callstack 0
  2868  0016D0                     _lcdPosition:
  2869                           	callstack 27
  2870                           
  2871                           ;incstack = 0
  2872                           ;lcdPosition@linha stored from wreg
  2873  0016D0  6E28               	movwf	lcdPosition@linha^0,c
  2874  0016D2                     
  2875                           ;lcd.c: 116:     char comando = 0;
  2876  0016D2  0E00               	movlw	0
  2877  0016D4  6E29               	movwf	lcdPosition@comando^0,c
  2878  0016D6                     
  2879                           ;lcd.c: 117:     if (linha == 0 && comando != 0x01) comando = 0x80 + coluna;
  2880  0016D6  5028               	movf	lcdPosition@linha^0,w,c
  2881  0016D8  A4D8               	btfss	status,2,c
  2882  0016DA  EF71  F00B         	goto	u1421
  2883  0016DE  EF73  F00B         	goto	u1420
  2884  0016E2                     u1421:
  2885  0016E2  EF76  F00B         	goto	l167
  2886  0016E6                     u1420:
  2887  0016E6  5027               	movf	lcdPosition@coluna^0,w,c
  2888  0016E8  0F80               	addlw	128
  2889  0016EA  6E29               	movwf	lcdPosition@comando^0,c
  2890  0016EC                     l167:
  2891                           
  2892                           ;lcd.c: 118:     if (linha == 1 && comando != 0x01) comando = 0xC0 + coluna;
  2893  0016EC  0428               	decf	lcdPosition@linha^0,w,c
  2894  0016EE  A4D8               	btfss	status,2,c
  2895  0016F0  EF7C  F00B         	goto	u1431
  2896  0016F4  EF7E  F00B         	goto	u1430
  2897  0016F8                     u1431:
  2898  0016F8  EF89  F00B         	goto	l168
  2899  0016FC                     u1430:
  2900  0016FC  0429               	decf	lcdPosition@comando^0,w,c
  2901  0016FE  B4D8               	btfsc	status,2,c
  2902  001700  EF84  F00B         	goto	u1441
  2903  001704  EF86  F00B         	goto	u1440
  2904  001708                     u1441:
  2905  001708  EF89  F00B         	goto	l168
  2906  00170C                     u1440:
  2907  00170C  5027               	movf	lcdPosition@coluna^0,w,c
  2908  00170E  0FC0               	addlw	192
  2909  001710  6E29               	movwf	lcdPosition@comando^0,c
  2910  001712                     l168:
  2911                           
  2912                           ;lcd.c: 119:     if (coluna > 15) {
  2913  001712  0E0F               	movlw	15
  2914  001714  6427               	cpfsgt	lcdPosition@coluna^0,c
  2915  001716  EF8F  F00B         	goto	u1451
  2916  00171A  EF91  F00B         	goto	u1450
  2917  00171E                     u1451:
  2918  00171E  EF91  F00B         	goto	l1883
  2919  001722                     u1450:
  2920  001722                     l1883:
  2921                           
  2922                           ;lcd.c: 125:     lcdCommand(comando);
  2923  001722  5029               	movf	lcdPosition@comando^0,w,c
  2924  001724  EC4E  F00A         	call	_lcdCommand
  2925  001728  0012               	return		;funcret
  2926  00172A                     __end_of_lcdPosition:
  2927                           	callstack 0
  2928                           
  2929 ;; *************** function _lcdCommand *****************
  2930 ;; Defined at:
  2931 ;;		line 43 in file "lcd.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  cmd             1    wreg     unsigned char 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  cmd             1    7[COMRAM] unsigned char 
  2936 ;;  old_D           1    6[COMRAM] unsigned char 
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      void 
  2939 ;; Registers used:
  2940 ;;		wreg, status,2, status,0, cstack
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2946 ;;      Params:         0       0       0       0       0       0       0
  2947 ;;      Locals:         2       0       0       0       0       0       0
  2948 ;;      Temps:          0       0       0       0       0       0       0
  2949 ;;      Totals:         2       0       0       0       0       0       0
  2950 ;;Total ram usage:        2 bytes
  2951 ;; Hardware stack levels used:    1
  2952 ;; Hardware stack levels required when called:    2
  2953 ;; This function calls:
  2954 ;;		_Delay2ms
  2955 ;;		_Delay40us
  2956 ;;		_digitalWrite
  2957 ;; This function is called by:
  2958 ;;		_main
  2959 ;;		_lcdInit
  2960 ;;		_lcdPosition
  2961 ;;		_chooseSong
  2962 ;;		_playSong
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           	psect	text15
  2967  00149C                     __ptext15:
  2968                           	callstack 0
  2969  00149C                     _lcdCommand:
  2970                           	callstack 27
  2971                           
  2972                           ;incstack = 0
  2973                           ;lcdCommand@cmd stored from wreg
  2974  00149C  6E26               	movwf	lcdCommand@cmd^0,c
  2975  00149E                     
  2976                           ;lcd.c: 44:     unsigned char old_D;;lcd.c: 45:     old_D = PORTD;
  2977  00149E  CF83 F025          	movff	3971,lcdCommand@old_D	;volatile
  2978  0014A2                     
  2979                           ;lcd.c: 48:     TRISD = 0x00;
  2980  0014A2  0E00               	movlw	0
  2981  0014A4  6E95               	movwf	149,c	;volatile
  2982  0014A6                     
  2983                           ;lcd.c: 50:     digitalWrite(PIN_E2, 0);
  2984  0014A6  0E00               	movlw	0
  2985  0014A8  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2986  0014AA  0E22               	movlw	34
  2987  0014AC  6E1F               	movwf	digitalWrite@pin^0,c
  2988  0014AE  0E00               	movlw	0
  2989  0014B0  6E22               	movwf	(digitalWrite@value+1)^0,c
  2990  0014B2  0E00               	movlw	0
  2991  0014B4  6E21               	movwf	digitalWrite@value^0,c
  2992  0014B6  EC7C  F005         	call	_digitalWrite	;wreg free
  2993  0014BA                     
  2994                           ;lcd.c: 51:     PORTD = cmd;
  2995  0014BA  C026  FF83         	movff	lcdCommand@cmd,3971	;volatile
  2996  0014BE                     
  2997                           ;lcd.c: 53:     digitalWrite(PIN_E1, 1);
  2998  0014BE  0E00               	movlw	0
  2999  0014C0  6E20               	movwf	(digitalWrite@pin+1)^0,c
  3000  0014C2  0E21               	movlw	33
  3001  0014C4  6E1F               	movwf	digitalWrite@pin^0,c
  3002  0014C6  0E00               	movlw	0
  3003  0014C8  6E22               	movwf	(digitalWrite@value+1)^0,c
  3004  0014CA  0E01               	movlw	1
  3005  0014CC  6E21               	movwf	digitalWrite@value^0,c
  3006  0014CE  EC7C  F005         	call	_digitalWrite	;wreg free
  3007  0014D2                     
  3008                           ;lcd.c: 54:     digitalWrite(PIN_E1, 0);
  3009  0014D2  0E00               	movlw	0
  3010  0014D4  6E20               	movwf	(digitalWrite@pin+1)^0,c
  3011  0014D6  0E21               	movlw	33
  3012  0014D8  6E1F               	movwf	digitalWrite@pin^0,c
  3013  0014DA  0E00               	movlw	0
  3014  0014DC  6E22               	movwf	(digitalWrite@value+1)^0,c
  3015  0014DE  0E00               	movlw	0
  3016  0014E0  6E21               	movwf	digitalWrite@value^0,c
  3017  0014E2  EC7C  F005         	call	_digitalWrite	;wreg free
  3018  0014E6                     
  3019                           ;lcd.c: 57:     PORTD = old_D;
  3020  0014E6  C025  FF83         	movff	lcdCommand@old_D,3971	;volatile
  3021  0014EA                     
  3022                           ;lcd.c: 59:     if ((cmd == 0x02) || (cmd == 0x01)) {
  3023  0014EA  0E02               	movlw	2
  3024  0014EC  1826               	xorwf	lcdCommand@cmd^0,w,c
  3025  0014EE  B4D8               	btfsc	status,2,c
  3026  0014F0  EF7C  F00A         	goto	u1371
  3027  0014F4  EF7E  F00A         	goto	u1370
  3028  0014F8                     u1371:
  3029  0014F8  EF86  F00A         	goto	l1821
  3030  0014FC                     u1370:
  3031  0014FC  0426               	decf	lcdCommand@cmd^0,w,c
  3032  0014FE  A4D8               	btfss	status,2,c
  3033  001500  EF84  F00A         	goto	u1381
  3034  001504  EF86  F00A         	goto	u1380
  3035  001508                     u1381:
  3036  001508  EF8A  F00A         	goto	l1823
  3037  00150C                     u1380:
  3038  00150C                     l1821:
  3039                           
  3040                           ;lcd.c: 60:         Delay2ms();
  3041  00150C  EC57  F00C         	call	_Delay2ms	;wreg free
  3042                           
  3043                           ;lcd.c: 61:     } else {
  3044  001510  EF8C  F00A         	goto	l158
  3045  001514                     l1823:
  3046                           
  3047                           ;lcd.c: 62:         Delay40us();
  3048  001514  EC65  F00C         	call	_Delay40us	;wreg free
  3049  001518                     l158:
  3050  001518  0012               	return		;funcret
  3051  00151A                     __end_of_lcdCommand:
  3052                           	callstack 0
  3053                           
  3054 ;; *************** function _digitalWrite *****************
  3055 ;; Defined at:
  3056 ;;		line 14 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;  pin             2    0[COMRAM] int 
  3059 ;;  value           2    2[COMRAM] int 
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;		None
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  1    wreg      void 
  3064 ;; Registers used:
  3065 ;;		wreg, status,2, status,0
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3071 ;;      Params:         4       0       0       0       0       0       0
  3072 ;;      Locals:         0       0       0       0       0       0       0
  3073 ;;      Temps:          2       0       0       0       0       0       0
  3074 ;;      Totals:         6       0       0       0       0       0       0
  3075 ;;Total ram usage:        6 bytes
  3076 ;; Hardware stack levels used:    1
  3077 ;; This function calls:
  3078 ;;		Nothing
  3079 ;; This function is called by:
  3080 ;;		_lcdCommand
  3081 ;;		_lcdData
  3082 ;;		_ssdUpdate
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text16
  3087  000AF8                     __ptext16:
  3088                           	callstack 0
  3089  000AF8                     _digitalWrite:
  3090                           	callstack 28
  3091  000AF8                     
  3092                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 16:     if(pin <8){
  3093  000AF8  BE20               	btfsc	(digitalWrite@pin+1)^0,7,c
  3094  000AFA  EF8A  F005         	goto	u1160
  3095  000AFE  5020               	movf	(digitalWrite@pin+1)^0,w,c
  3096  000B00  E107               	bnz	u1161
  3097  000B02  0E08               	movlw	8
  3098  000B04  5C1F               	subwf	digitalWrite@pin^0,w,c
  3099  000B06  B0D8               	btfsc	status,0,c
  3100  000B08  EF88  F005         	goto	u1161
  3101  000B0C  EF8A  F005         	goto	u1160
  3102  000B10                     u1161:
  3103  000B10  EFB4  F005         	goto	l1759
  3104  000B14                     u1160:
  3105  000B14                     
  3106                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 17:         if (value){ ((PORTA) |=
      +                           (1<<(pin)));}
  3107  000B14  5021               	movf	digitalWrite@value^0,w,c
  3108  000B16  1022               	iorwf	(digitalWrite@value+1)^0,w,c
  3109  000B18  B4D8               	btfsc	status,2,c
  3110  000B1A  EF91  F005         	goto	u1171
  3111  000B1E  EF93  F005         	goto	u1170
  3112  000B22                     u1171:
  3113  000B22  EFA3  F005         	goto	l1757
  3114  000B26                     u1170:
  3115  000B26  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  3116  000B2A  0E01               	movlw	1
  3117  000B2C  6E24               	movwf	(??_digitalWrite+1)^0,c
  3118  000B2E  2A23               	incf	??_digitalWrite^0,f,c
  3119  000B30  EF9C  F005         	goto	u1184
  3120  000B34                     u1185:
  3121  000B34  90D8               	bcf	status,0,c
  3122  000B36  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  3123  000B38                     u1184:
  3124  000B38  2E23               	decfsz	??_digitalWrite^0,f,c
  3125  000B3A  EF9A  F005         	goto	u1185
  3126  000B3E  5024               	movf	(??_digitalWrite+1)^0,w,c
  3127  000B40  1280               	iorwf	128,f,c	;volatile
  3128  000B42  EFA2  F006         	goto	l42
  3129  000B46                     l1757:
  3130  000B46  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  3131  000B4A  0E01               	movlw	1
  3132  000B4C  6E24               	movwf	(??_digitalWrite+1)^0,c
  3133  000B4E  2A23               	incf	??_digitalWrite^0,f,c
  3134  000B50  EFAC  F005         	goto	u1194
  3135  000B54                     u1195:
  3136  000B54  90D8               	bcf	status,0,c
  3137  000B56  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  3138  000B58                     u1194:
  3139  000B58  2E23               	decfsz	??_digitalWrite^0,f,c
  3140  000B5A  EFAA  F005         	goto	u1195
  3141  000B5E  5024               	movf	(??_digitalWrite+1)^0,w,c
  3142  000B60  0AFF               	xorlw	255
  3143  000B62  1680               	andwf	128,f,c	;volatile
  3144  000B64  EFA2  F006         	goto	l42
  3145  000B68                     l1759:
  3146  000B68  BE20               	btfsc	(digitalWrite@pin+1)^0,7,c
  3147  000B6A  EFC2  F005         	goto	u1200
  3148  000B6E  5020               	movf	(digitalWrite@pin+1)^0,w,c
  3149  000B70  E107               	bnz	u1201
  3150  000B72  0E10               	movlw	16
  3151  000B74  5C1F               	subwf	digitalWrite@pin^0,w,c
  3152  000B76  B0D8               	btfsc	status,0,c
  3153  000B78  EFC0  F005         	goto	u1201
  3154  000B7C  EFC2  F005         	goto	u1200
  3155  000B80                     u1201:
  3156  000B80  EFF0  F005         	goto	l1767
  3157  000B84                     u1200:
  3158  000B84                     
  3159                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 20:         pin -=8;
  3160  000B84  0EF8               	movlw	248
  3161  000B86  261F               	addwf	digitalWrite@pin^0,f,c
  3162  000B88  0EFF               	movlw	255
  3163  000B8A  2220               	addwfc	(digitalWrite@pin+1)^0,f,c
  3164                           
  3165                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 21:         if (value){ ((PORTB) |=
      +                           (1<<(pin)));}
  3166  000B8C  5021               	movf	digitalWrite@value^0,w,c
  3167  000B8E  1022               	iorwf	(digitalWrite@value+1)^0,w,c
  3168  000B90  B4D8               	btfsc	status,2,c
  3169  000B92  EFCD  F005         	goto	u1211
  3170  000B96  EFCF  F005         	goto	u1210
  3171  000B9A                     u1211:
  3172  000B9A  EFDF  F005         	goto	l1765
  3173  000B9E                     u1210:
  3174  000B9E  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  3175  000BA2  0E01               	movlw	1
  3176  000BA4  6E24               	movwf	(??_digitalWrite+1)^0,c
  3177  000BA6  2A23               	incf	??_digitalWrite^0,f,c
  3178  000BA8  EFD8  F005         	goto	u1224
  3179  000BAC                     u1225:
  3180  000BAC  90D8               	bcf	status,0,c
  3181  000BAE  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  3182  000BB0                     u1224:
  3183  000BB0  2E23               	decfsz	??_digitalWrite^0,f,c
  3184  000BB2  EFD6  F005         	goto	u1225
  3185  000BB6  5024               	movf	(??_digitalWrite+1)^0,w,c
  3186  000BB8  1281               	iorwf	129,f,c	;volatile
  3187  000BBA  EFA2  F006         	goto	l42
  3188  000BBE                     l1765:
  3189  000BBE  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  3190  000BC2  0E01               	movlw	1
  3191  000BC4  6E24               	movwf	(??_digitalWrite+1)^0,c
  3192  000BC6  2A23               	incf	??_digitalWrite^0,f,c
  3193  000BC8  EFE8  F005         	goto	u1234
  3194  000BCC                     u1235:
  3195  000BCC  90D8               	bcf	status,0,c
  3196  000BCE  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  3197  000BD0                     u1234:
  3198  000BD0  2E23               	decfsz	??_digitalWrite^0,f,c
  3199  000BD2  EFE6  F005         	goto	u1235
  3200  000BD6  5024               	movf	(??_digitalWrite+1)^0,w,c
  3201  000BD8  0AFF               	xorlw	255
  3202  000BDA  1681               	andwf	129,f,c	;volatile
  3203  000BDC  EFA2  F006         	goto	l42
  3204  000BE0                     l1767:
  3205  000BE0  BE20               	btfsc	(digitalWrite@pin+1)^0,7,c
  3206  000BE2  EFFE  F005         	goto	u1240
  3207  000BE6  5020               	movf	(digitalWrite@pin+1)^0,w,c
  3208  000BE8  E107               	bnz	u1241
  3209  000BEA  0E18               	movlw	24
  3210  000BEC  5C1F               	subwf	digitalWrite@pin^0,w,c
  3211  000BEE  B0D8               	btfsc	status,0,c
  3212  000BF0  EFFC  F005         	goto	u1241
  3213  000BF4  EFFE  F005         	goto	u1240
  3214  000BF8                     u1241:
  3215  000BF8  EF2C  F006         	goto	l1775
  3216  000BFC                     u1240:
  3217  000BFC                     
  3218                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 24:         pin -=16;
  3219  000BFC  0EF0               	movlw	240
  3220  000BFE  261F               	addwf	digitalWrite@pin^0,f,c
  3221  000C00  0EFF               	movlw	255
  3222  000C02  2220               	addwfc	(digitalWrite@pin+1)^0,f,c
  3223                           
  3224                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 25:         if (value){ ((PORTC) |=
      +                           (1<<(pin)));}
  3225  000C04  5021               	movf	digitalWrite@value^0,w,c
  3226  000C06  1022               	iorwf	(digitalWrite@value+1)^0,w,c
  3227  000C08  B4D8               	btfsc	status,2,c
  3228  000C0A  EF09  F006         	goto	u1251
  3229  000C0E  EF0B  F006         	goto	u1250
  3230  000C12                     u1251:
  3231  000C12  EF1B  F006         	goto	l1773
  3232  000C16                     u1250:
  3233  000C16  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  3234  000C1A  0E01               	movlw	1
  3235  000C1C  6E24               	movwf	(??_digitalWrite+1)^0,c
  3236  000C1E  2A23               	incf	??_digitalWrite^0,f,c
  3237  000C20  EF14  F006         	goto	u1264
  3238  000C24                     u1265:
  3239  000C24  90D8               	bcf	status,0,c
  3240  000C26  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  3241  000C28                     u1264:
  3242  000C28  2E23               	decfsz	??_digitalWrite^0,f,c
  3243  000C2A  EF12  F006         	goto	u1265
  3244  000C2E  5024               	movf	(??_digitalWrite+1)^0,w,c
  3245  000C30  1282               	iorwf	130,f,c	;volatile
  3246  000C32  EFA2  F006         	goto	l42
  3247  000C36                     l1773:
  3248  000C36  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  3249  000C3A  0E01               	movlw	1
  3250  000C3C  6E24               	movwf	(??_digitalWrite+1)^0,c
  3251  000C3E  2A23               	incf	??_digitalWrite^0,f,c
  3252  000C40  EF24  F006         	goto	u1274
  3253  000C44                     u1275:
  3254  000C44  90D8               	bcf	status,0,c
  3255  000C46  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  3256  000C48                     u1274:
  3257  000C48  2E23               	decfsz	??_digitalWrite^0,f,c
  3258  000C4A  EF22  F006         	goto	u1275
  3259  000C4E  5024               	movf	(??_digitalWrite+1)^0,w,c
  3260  000C50  0AFF               	xorlw	255
  3261  000C52  1682               	andwf	130,f,c	;volatile
  3262  000C54  EFA2  F006         	goto	l42
  3263  000C58                     l1775:
  3264  000C58  BE20               	btfsc	(digitalWrite@pin+1)^0,7,c
  3265  000C5A  EF3A  F006         	goto	u1280
  3266  000C5E  5020               	movf	(digitalWrite@pin+1)^0,w,c
  3267  000C60  E107               	bnz	u1281
  3268  000C62  0E20               	movlw	32
  3269  000C64  5C1F               	subwf	digitalWrite@pin^0,w,c
  3270  000C66  B0D8               	btfsc	status,0,c
  3271  000C68  EF38  F006         	goto	u1281
  3272  000C6C  EF3A  F006         	goto	u1280
  3273  000C70                     u1281:
  3274  000C70  EF68  F006         	goto	l1783
  3275  000C74                     u1280:
  3276  000C74                     
  3277                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 28:         pin -=24;
  3278  000C74  0EE8               	movlw	232
  3279  000C76  261F               	addwf	digitalWrite@pin^0,f,c
  3280  000C78  0EFF               	movlw	255
  3281  000C7A  2220               	addwfc	(digitalWrite@pin+1)^0,f,c
  3282                           
  3283                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 29:         if (value){ ((PORTD) |=
      +                           (1<<(pin)));}
  3284  000C7C  5021               	movf	digitalWrite@value^0,w,c
  3285  000C7E  1022               	iorwf	(digitalWrite@value+1)^0,w,c
  3286  000C80  B4D8               	btfsc	status,2,c
  3287  000C82  EF45  F006         	goto	u1291
  3288  000C86  EF47  F006         	goto	u1290
  3289  000C8A                     u1291:
  3290  000C8A  EF57  F006         	goto	l1781
  3291  000C8E                     u1290:
  3292  000C8E  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  3293  000C92  0E01               	movlw	1
  3294  000C94  6E24               	movwf	(??_digitalWrite+1)^0,c
  3295  000C96  2A23               	incf	??_digitalWrite^0,f,c
  3296  000C98  EF50  F006         	goto	u1304
  3297  000C9C                     u1305:
  3298  000C9C  90D8               	bcf	status,0,c
  3299  000C9E  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  3300  000CA0                     u1304:
  3301  000CA0  2E23               	decfsz	??_digitalWrite^0,f,c
  3302  000CA2  EF4E  F006         	goto	u1305
  3303  000CA6  5024               	movf	(??_digitalWrite+1)^0,w,c
  3304  000CA8  1283               	iorwf	131,f,c	;volatile
  3305  000CAA  EFA2  F006         	goto	l42
  3306  000CAE                     l1781:
  3307  000CAE  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  3308  000CB2  0E01               	movlw	1
  3309  000CB4  6E24               	movwf	(??_digitalWrite+1)^0,c
  3310  000CB6  2A23               	incf	??_digitalWrite^0,f,c
  3311  000CB8  EF60  F006         	goto	u1314
  3312  000CBC                     u1315:
  3313  000CBC  90D8               	bcf	status,0,c
  3314  000CBE  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  3315  000CC0                     u1314:
  3316  000CC0  2E23               	decfsz	??_digitalWrite^0,f,c
  3317  000CC2  EF5E  F006         	goto	u1315
  3318  000CC6  5024               	movf	(??_digitalWrite+1)^0,w,c
  3319  000CC8  0AFF               	xorlw	255
  3320  000CCA  1683               	andwf	131,f,c	;volatile
  3321  000CCC  EFA2  F006         	goto	l42
  3322  000CD0                     l1783:
  3323  000CD0  BE20               	btfsc	(digitalWrite@pin+1)^0,7,c
  3324  000CD2  EF76  F006         	goto	u1320
  3325  000CD6  5020               	movf	(digitalWrite@pin+1)^0,w,c
  3326  000CD8  E107               	bnz	u1321
  3327  000CDA  0E28               	movlw	40
  3328  000CDC  5C1F               	subwf	digitalWrite@pin^0,w,c
  3329  000CDE  B0D8               	btfsc	status,0,c
  3330  000CE0  EF74  F006         	goto	u1321
  3331  000CE4  EF76  F006         	goto	u1320
  3332  000CE8                     u1321:
  3333  000CE8  EFA2  F006         	goto	l42
  3334  000CEC                     u1320:
  3335  000CEC                     
  3336                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 32:         pin -=32;
  3337  000CEC  0EE0               	movlw	224
  3338  000CEE  261F               	addwf	digitalWrite@pin^0,f,c
  3339  000CF0  0EFF               	movlw	255
  3340  000CF2  2220               	addwfc	(digitalWrite@pin+1)^0,f,c
  3341                           
  3342                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 33:         if (value){ ((PORTE) |=
      +                           (1<<(pin)));}
  3343  000CF4  5021               	movf	digitalWrite@value^0,w,c
  3344  000CF6  1022               	iorwf	(digitalWrite@value+1)^0,w,c
  3345  000CF8  B4D8               	btfsc	status,2,c
  3346  000CFA  EF81  F006         	goto	u1331
  3347  000CFE  EF83  F006         	goto	u1330
  3348  000D02                     u1331:
  3349  000D02  EF93  F006         	goto	l1789
  3350  000D06                     u1330:
  3351  000D06  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  3352  000D0A  0E01               	movlw	1
  3353  000D0C  6E24               	movwf	(??_digitalWrite+1)^0,c
  3354  000D0E  2A23               	incf	??_digitalWrite^0,f,c
  3355  000D10  EF8C  F006         	goto	u1344
  3356  000D14                     u1345:
  3357  000D14  90D8               	bcf	status,0,c
  3358  000D16  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  3359  000D18                     u1344:
  3360  000D18  2E23               	decfsz	??_digitalWrite^0,f,c
  3361  000D1A  EF8A  F006         	goto	u1345
  3362  000D1E  5024               	movf	(??_digitalWrite+1)^0,w,c
  3363  000D20  1284               	iorwf	132,f,c	;volatile
  3364  000D22  EFA2  F006         	goto	l42
  3365  000D26                     l1789:
  3366  000D26  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  3367  000D2A  0E01               	movlw	1
  3368  000D2C  6E24               	movwf	(??_digitalWrite+1)^0,c
  3369  000D2E  2A23               	incf	??_digitalWrite^0,f,c
  3370  000D30  EF9C  F006         	goto	u1354
  3371  000D34                     u1355:
  3372  000D34  90D8               	bcf	status,0,c
  3373  000D36  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  3374  000D38                     u1354:
  3375  000D38  2E23               	decfsz	??_digitalWrite^0,f,c
  3376  000D3A  EF9A  F006         	goto	u1355
  3377  000D3E  5024               	movf	(??_digitalWrite+1)^0,w,c
  3378  000D40  0AFF               	xorlw	255
  3379  000D42  1684               	andwf	132,f,c	;volatile
  3380  000D44                     l42:
  3381  000D44  0012               	return		;funcret
  3382  000D46                     __end_of_digitalWrite:
  3383                           	callstack 0
  3384                           
  3385 ;; *************** function _Delay2ms *****************
  3386 ;; Defined at:
  3387 ;;		line 36 in file "lcd.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;		None
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  i               1    1[COMRAM] unsigned char 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg, status,2, status,0, cstack
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3401 ;;      Params:         0       0       0       0       0       0       0
  3402 ;;      Locals:         1       0       0       0       0       0       0
  3403 ;;      Temps:          0       0       0       0       0       0       0
  3404 ;;      Totals:         1       0       0       0       0       0       0
  3405 ;;Total ram usage:        1 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; Hardware stack levels required when called:    1
  3408 ;; This function calls:
  3409 ;;		_Delay40us
  3410 ;; This function is called by:
  3411 ;;		_lcdCommand
  3412 ;;		_lcdInit
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           	psect	text17
  3417  0018AE                     __ptext17:
  3418                           	callstack 0
  3419  0018AE                     _Delay2ms:
  3420                           	callstack 27
  3421  0018AE                     
  3422                           ;lcd.c: 37:     unsigned char i;;lcd.c: 38:     for (i = 0; i < 50; i++) {
  3423  0018AE  0E00               	movlw	0
  3424  0018B0  6E20               	movwf	Delay2ms@i^0,c
  3425  0018B2                     l1797:
  3426                           
  3427                           ;lcd.c: 39:         Delay40us();
  3428  0018B2  EC65  F00C         	call	_Delay40us	;wreg free
  3429  0018B6                     
  3430                           ;lcd.c: 40:     }
  3431  0018B6  2A20               	incf	Delay2ms@i^0,f,c
  3432  0018B8  0E31               	movlw	49
  3433  0018BA  6420               	cpfsgt	Delay2ms@i^0,c
  3434  0018BC  EF62  F00C         	goto	u1361
  3435  0018C0  EF64  F00C         	goto	u1360
  3436  0018C4                     u1361:
  3437  0018C4  EF59  F00C         	goto	l1797
  3438  0018C8                     u1360:
  3439  0018C8  0012               	return		;funcret
  3440  0018CA                     __end_of_Delay2ms:
  3441                           	callstack 0
  3442                           
  3443 ;; *************** function _Delay40us *****************
  3444 ;; Defined at:
  3445 ;;		line 31 in file "lcd.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;		None
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;  i               1    0[COMRAM] unsigned char 
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      void 
  3452 ;; Registers used:
  3453 ;;		wreg, status,2, status,0
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3459 ;;      Params:         0       0       0       0       0       0       0
  3460 ;;      Locals:         1       0       0       0       0       0       0
  3461 ;;      Temps:          0       0       0       0       0       0       0
  3462 ;;      Totals:         1       0       0       0       0       0       0
  3463 ;;Total ram usage:        1 bytes
  3464 ;; Hardware stack levels used:    1
  3465 ;; This function calls:
  3466 ;;		Nothing
  3467 ;; This function is called by:
  3468 ;;		_Delay2ms
  3469 ;;		_lcdCommand
  3470 ;;		_lcdData
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           	psect	text18
  3475  0018CA                     __ptext18:
  3476                           	callstack 0
  3477  0018CA                     _Delay40us:
  3478                           	callstack 28
  3479  0018CA                     
  3480                           ;lcd.c: 32:     unsigned char i;;lcd.c: 33:     for (i = 0; i < 25; i++);
  3481  0018CA  0E00               	movlw	0
  3482  0018CC  6E1F               	movwf	Delay40us@i^0,c
  3483  0018CE                     l1747:
  3484  0018CE  2A1F               	incf	Delay40us@i^0,f,c
  3485  0018D0  0E18               	movlw	24
  3486  0018D2  641F               	cpfsgt	Delay40us@i^0,c
  3487  0018D4  EF6E  F00C         	goto	u1151
  3488  0018D8  EF70  F00C         	goto	u1150
  3489  0018DC                     u1151:
  3490  0018DC  EF67  F00C         	goto	l1747
  3491  0018E0                     u1150:
  3492  0018E0  0012               	return		;funcret
  3493  0018E2                     __end_of_Delay40us:
  3494                           	callstack 0
  3495                           
  3496 ;; *************** function _kpRead *****************
  3497 ;; Defined at:
  3498 ;;		line 37 in file "keypad.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;		None
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;		None
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  2    0[COMRAM] unsigned int 
  3505 ;; Registers used:
  3506 ;;		None
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3512 ;;      Params:         2       0       0       0       0       0       0
  3513 ;;      Locals:         0       0       0       0       0       0       0
  3514 ;;      Temps:          0       0       0       0       0       0       0
  3515 ;;      Totals:         2       0       0       0       0       0       0
  3516 ;;Total ram usage:        2 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; This function calls:
  3519 ;;		Nothing
  3520 ;; This function is called by:
  3521 ;;		_chooseSong
  3522 ;;		_playSong
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           	psect	text19
  3527  0018EC                     __ptext19:
  3528                           	callstack 0
  3529  0018EC                     _kpRead:
  3530                           	callstack 28
  3531  0018EC                     
  3532                           ;keypad.c: 38:     return valor;
  3533  0018EC  C03A  F01F         	movff	_valor@keypad$F284,?_kpRead
  3534  0018F0  C03B  F020         	movff	_valor@keypad$F284+1,?_kpRead+1
  3535  0018F4  0012               	return		;funcret
  3536  0018F6                     __end_of_kpRead:
  3537                           	callstack 0
  3538                           
  3539 ;; *************** function _kpDebounce *****************
  3540 ;; Defined at:
  3541 ;;		line 41 in file "keypad.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;		None
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;  k               2    6[COMRAM] int 
  3546 ;;  i               1    9[COMRAM] unsigned char 
  3547 ;;  j               1    8[COMRAM] unsigned char 
  3548 ;;  old_D           1    5[COMRAM] unsigned char 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      void 
  3551 ;; Registers used:
  3552 ;;		wreg, status,2, status,0, prodl, prodh
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3558 ;;      Params:         0       0       0       0       0       0       0
  3559 ;;      Locals:         5       0       0       0       0       0       0
  3560 ;;      Temps:          5       0       0       0       0       0       0
  3561 ;;      Totals:        10       0       0       0       0       0       0
  3562 ;;Total ram usage:       10 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_chooseSong
  3568 ;;		_playSong
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text20
  3573  000D46                     __ptext20:
  3574                           	callstack 0
  3575  000D46                     _kpDebounce:
  3576                           	callstack 28
  3577  000D46                     
  3578                           ;keypad.c: 42:     unsigned char i, j;;keypad.c: 43:     static unsigned char tempo;;key
      +                          pad.c: 44:     static unsigned int valorNovo = 0x0000;;keypad.c: 45:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 48:     unsigned char old_D;;keypad.c: 49:     old_
      +                          D = PORTD;
  3579  000D46  CF83 F024          	movff	3971,kpDebounce@old_D	;volatile
  3580  000D4A                     
  3581                           ;keypad.c: 53:     TRISD |= 0x0f;
  3582  000D4A  0E0F               	movlw	15
  3583  000D4C  1295               	iorwf	149,f,c	;volatile
  3584  000D4E                     
  3585                           ;keypad.c: 55:     for (i = 0; i < 3; i++) {
  3586  000D4E  0E00               	movlw	0
  3587  000D50  6E28               	movwf	kpDebounce@i^0,c
  3588  000D52                     l1903:
  3589                           
  3590                           ;keypad.c: 57:         TRISB &= 0xF8;
  3591  000D52  0EF8               	movlw	248
  3592  000D54  1693               	andwf	147,f,c	;volatile
  3593                           
  3594                           ;keypad.c: 59:         ((TRISB) |= (1<<(i)));
  3595  000D56  C028  F01F         	movff	kpDebounce@i,??_kpDebounce
  3596  000D5A  0E01               	movlw	1
  3597  000D5C  6E20               	movwf	(??_kpDebounce+1)^0,c
  3598  000D5E  2A1F               	incf	??_kpDebounce^0,f,c
  3599  000D60  EFB4  F006         	goto	u1494
  3600  000D64                     u1495:
  3601  000D64  90D8               	bcf	status,0,c
  3602  000D66  3620               	rlcf	(??_kpDebounce+1)^0,f,c
  3603  000D68                     u1494:
  3604  000D68  2E1F               	decfsz	??_kpDebounce^0,f,c
  3605  000D6A  EFB2  F006         	goto	u1495
  3606  000D6E  5020               	movf	(??_kpDebounce+1)^0,w,c
  3607  000D70  1293               	iorwf	147,f,c	;volatile
  3608                           
  3609                           ;keypad.c: 61:         PORTB |= 0x07;
  3610  000D72  0E07               	movlw	7
  3611  000D74  1281               	iorwf	129,f,c	;volatile
  3612                           
  3613                           ;keypad.c: 62:         ((PORTB) &= ~(1<<(i)));
  3614  000D76  C028  F01F         	movff	kpDebounce@i,??_kpDebounce
  3615  000D7A  0E01               	movlw	1
  3616  000D7C  6E20               	movwf	(??_kpDebounce+1)^0,c
  3617  000D7E  2A1F               	incf	??_kpDebounce^0,f,c
  3618  000D80  EFC4  F006         	goto	u1504
  3619  000D84                     u1505:
  3620  000D84  90D8               	bcf	status,0,c
  3621  000D86  3620               	rlcf	(??_kpDebounce+1)^0,f,c
  3622  000D88                     u1504:
  3623  000D88  2E1F               	decfsz	??_kpDebounce^0,f,c
  3624  000D8A  EFC2  F006         	goto	u1505
  3625  000D8E  5020               	movf	(??_kpDebounce+1)^0,w,c
  3626  000D90  0AFF               	xorlw	255
  3627  000D92  1681               	andwf	129,f,c	;volatile
  3628  000D94                     
  3629                           ;keypad.c: 65:         for (int k = 0; k < 10; k++);
  3630  000D94  0E00               	movlw	0
  3631  000D96  6E26               	movwf	(kpDebounce@k+1)^0,c
  3632  000D98  0E00               	movlw	0
  3633  000D9A  6E25               	movwf	kpDebounce@k^0,c
  3634  000D9C                     l1911:
  3635  000D9C  4A25               	infsnz	kpDebounce@k^0,f,c
  3636  000D9E  2A26               	incf	(kpDebounce@k+1)^0,f,c
  3637  000DA0  BE26               	btfsc	(kpDebounce@k+1)^0,7,c
  3638  000DA2  EFDC  F006         	goto	u1511
  3639  000DA6  5026               	movf	(kpDebounce@k+1)^0,w,c
  3640  000DA8  E109               	bnz	u1510
  3641  000DAA  0E0A               	movlw	10
  3642  000DAC  5C25               	subwf	kpDebounce@k^0,w,c
  3643  000DAE  A0D8               	btfss	status,0,c
  3644  000DB0  EFDC  F006         	goto	u1511
  3645  000DB4  EFDE  F006         	goto	u1510
  3646  000DB8                     u1511:
  3647  000DB8  EFCE  F006         	goto	l1911
  3648  000DBC                     u1510:
  3649  000DBC                     
  3650                           ;keypad.c: 68:         for (j = 0; j < 4; j++) {
  3651  000DBC  0E00               	movlw	0
  3652  000DBE  6E27               	movwf	kpDebounce@j^0,c
  3653  000DC0                     l1921:
  3654                           
  3655                           ;keypad.c: 69:             if (!((PORTD) & (1<<(j)))) {
  3656  000DC0  C027  F01F         	movff	kpDebounce@j,??_kpDebounce
  3657  000DC4  0E01               	movlw	1
  3658  000DC6  6E20               	movwf	(??_kpDebounce+1)^0,c
  3659  000DC8  2A1F               	incf	??_kpDebounce^0,f,c
  3660  000DCA  EFE9  F006         	goto	u1524
  3661  000DCE                     u1525:
  3662  000DCE  90D8               	bcf	status,0,c
  3663  000DD0  3620               	rlcf	(??_kpDebounce+1)^0,f,c
  3664  000DD2                     u1524:
  3665  000DD2  2E1F               	decfsz	??_kpDebounce^0,f,c
  3666  000DD4  EFE7  F006         	goto	u1525
  3667  000DD8  5020               	movf	(??_kpDebounce+1)^0,w,c
  3668  000DDA  1483               	andwf	131,w,c	;volatile
  3669  000DDC  0900               	iorlw	0
  3670  000DDE  A4D8               	btfss	status,2,c
  3671  000DE0  EFF4  F006         	goto	u1531
  3672  000DE4  EFF6  F006         	goto	u1530
  3673  000DE8                     u1531:
  3674  000DE8  EF0E  F007         	goto	l1925
  3675  000DEC                     u1530:
  3676  000DEC                     
  3677                           ;keypad.c: 70:                 ((valorNovo) |= (1<<((i * 4) + j)));
  3678  000DEC  5028               	movf	kpDebounce@i^0,w,c
  3679  000DEE  0D04               	mullw	4
  3680  000DF0  50F3               	movf	243,w,c
  3681  000DF2  2427               	addwf	kpDebounce@j^0,w,c
  3682  000DF4  6E1F               	movwf	??_kpDebounce^0,c
  3683  000DF6  0E01               	movlw	1
  3684  000DF8  6E20               	movwf	(??_kpDebounce+1)^0,c
  3685  000DFA  0E00               	movlw	0
  3686  000DFC  6E21               	movwf	(??_kpDebounce+2)^0,c
  3687  000DFE  2A1F               	incf	??_kpDebounce^0,f,c
  3688  000E00  EF05  F007         	goto	u1544
  3689  000E04                     u1545:
  3690  000E04  90D8               	bcf	status,0,c
  3691  000E06  3620               	rlcf	(??_kpDebounce+1)^0,f,c
  3692  000E08  3621               	rlcf	(??_kpDebounce+2)^0,f,c
  3693  000E0A                     u1544:
  3694  000E0A  2E1F               	decfsz	??_kpDebounce^0,f,c
  3695  000E0C  EF02  F007         	goto	u1545
  3696  000E10  5020               	movf	(??_kpDebounce+1)^0,w,c
  3697  000E12  1238               	iorwf	kpDebounce@valorNovo^0,f,c
  3698  000E14  5021               	movf	(??_kpDebounce+2)^0,w,c
  3699  000E16  1239               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  3700                           
  3701                           ;keypad.c: 71:             } else {
  3702  000E18  EF28  F007         	goto	l1927
  3703  000E1C                     l1925:
  3704                           
  3705                           ;keypad.c: 72:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  3706  000E1C  5028               	movf	kpDebounce@i^0,w,c
  3707  000E1E  0D04               	mullw	4
  3708  000E20  50F3               	movf	243,w,c
  3709  000E22  2427               	addwf	kpDebounce@j^0,w,c
  3710  000E24  6E1F               	movwf	??_kpDebounce^0,c
  3711  000E26  0E01               	movlw	1
  3712  000E28  6E20               	movwf	(??_kpDebounce+1)^0,c
  3713  000E2A  0E00               	movlw	0
  3714  000E2C  6E21               	movwf	(??_kpDebounce+2)^0,c
  3715  000E2E  2A1F               	incf	??_kpDebounce^0,f,c
  3716  000E30  EF1D  F007         	goto	u1554
  3717  000E34                     u1555:
  3718  000E34  90D8               	bcf	status,0,c
  3719  000E36  3620               	rlcf	(??_kpDebounce+1)^0,f,c
  3720  000E38  3621               	rlcf	(??_kpDebounce+2)^0,f,c
  3721  000E3A                     u1554:
  3722  000E3A  2E1F               	decfsz	??_kpDebounce^0,f,c
  3723  000E3C  EF1A  F007         	goto	u1555
  3724  000E40  1C20               	comf	(??_kpDebounce+1)^0,w,c
  3725  000E42  6E22               	movwf	(??_kpDebounce+3)^0,c
  3726  000E44  1C21               	comf	(??_kpDebounce+2)^0,w,c
  3727  000E46  6E23               	movwf	(??_kpDebounce+4)^0,c
  3728  000E48  5022               	movf	(??_kpDebounce+3)^0,w,c
  3729  000E4A  1638               	andwf	kpDebounce@valorNovo^0,f,c
  3730  000E4C  5023               	movf	(??_kpDebounce+4)^0,w,c
  3731  000E4E  1639               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  3732  000E50                     l1927:
  3733                           
  3734                           ;keypad.c: 74:         }
  3735  000E50  2A27               	incf	kpDebounce@j^0,f,c
  3736  000E52  0E03               	movlw	3
  3737  000E54  6427               	cpfsgt	kpDebounce@j^0,c
  3738  000E56  EF2F  F007         	goto	u1561
  3739  000E5A  EF31  F007         	goto	u1560
  3740  000E5E                     u1561:
  3741  000E5E  EFE0  F006         	goto	l1921
  3742  000E62                     u1560:
  3743  000E62                     
  3744                           ;keypad.c: 75:     }
  3745  000E62  2A28               	incf	kpDebounce@i^0,f,c
  3746  000E64  0E02               	movlw	2
  3747  000E66  6428               	cpfsgt	kpDebounce@i^0,c
  3748  000E68  EF38  F007         	goto	u1571
  3749  000E6C  EF3A  F007         	goto	u1570
  3750  000E70                     u1571:
  3751  000E70  EFA9  F006         	goto	l1903
  3752  000E74                     u1570:
  3753  000E74                     
  3754                           ;keypad.c: 76:     if (valorAntigo == valorNovo) {
  3755  000E74  5038               	movf	kpDebounce@valorNovo^0,w,c
  3756  000E76  1836               	xorwf	kpDebounce@valorAntigo^0,w,c
  3757  000E78  E107               	bnz	u1581
  3758  000E7A  5039               	movf	(kpDebounce@valorNovo+1)^0,w,c
  3759  000E7C  1837               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  3760  000E7E  A4D8               	btfss	status,2,c
  3761  000E80  EF44  F007         	goto	u1581
  3762  000E84  EF46  F007         	goto	u1580
  3763  000E88                     u1581:
  3764  000E88  EF49  F007         	goto	l1939
  3765  000E8C                     u1580:
  3766  000E8C                     
  3767                           ;keypad.c: 77:         tempo--;
  3768  000E8C  063C               	decf	kpDebounce@tempo^0,f,c
  3769                           
  3770                           ;keypad.c: 78:     } else {
  3771  000E8E  EF4F  F007         	goto	l351
  3772  000E92                     l1939:
  3773                           
  3774                           ;keypad.c: 79:         tempo = 10;
  3775  000E92  0E0A               	movlw	10
  3776  000E94  6E3C               	movwf	kpDebounce@tempo^0,c
  3777  000E96                     
  3778                           ;keypad.c: 80:         valorAntigo = valorNovo;
  3779  000E96  C038  F036         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  3780  000E9A  C039  F037         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  3781  000E9E                     l351:
  3782                           
  3783                           ;keypad.c: 82:     if (tempo == 0) {
  3784  000E9E  503C               	movf	kpDebounce@tempo^0,w,c
  3785  000EA0  A4D8               	btfss	status,2,c
  3786  000EA2  EF55  F007         	goto	u1591
  3787  000EA6  EF57  F007         	goto	u1590
  3788  000EAA                     u1591:
  3789  000EAA  EF5B  F007         	goto	l352
  3790  000EAE                     u1590:
  3791  000EAE                     
  3792                           ;keypad.c: 83:         valor = valorAntigo;
  3793  000EAE  C036  F03A         	movff	kpDebounce@valorAntigo,_valor@keypad$F284
  3794  000EB2  C037  F03B         	movff	kpDebounce@valorAntigo+1,_valor@keypad$F284+1
  3795  000EB6                     l352:
  3796                           
  3797                           ;keypad.c: 85:     PORTD = old_D;
  3798  000EB6  C024  FF83         	movff	kpDebounce@old_D,3971	;volatile
  3799  000EBA                     
  3800                           ;keypad.c: 86:     TRISD = 0x00;
  3801  000EBA  0E00               	movlw	0
  3802  000EBC  6E95               	movwf	149,c	;volatile
  3803  000EBE  0012               	return		;funcret
  3804  000EC0                     __end_of_kpDebounce:
  3805                           	callstack 0
  3806                           
  3807 ;; *************** function _atraso_ms *****************
  3808 ;; Defined at:
  3809 ;;		line 3 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;  t               2    0[COMRAM] int 
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;  i               2    2[COMRAM] volatile unsigned int 
  3814 ;;  k               1    5[COMRAM] volatile unsigned char 
  3815 ;;  j               1    4[COMRAM] volatile unsigned char 
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  1    wreg      void 
  3818 ;; Registers used:
  3819 ;;		wreg, status,2, status,0
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3825 ;;      Params:         2       0       0       0       0       0       0
  3826 ;;      Locals:         4       0       0       0       0       0       0
  3827 ;;      Temps:          0       0       0       0       0       0       0
  3828 ;;      Totals:         6       0       0       0       0       0       0
  3829 ;;Total ram usage:        6 bytes
  3830 ;; Hardware stack levels used:    1
  3831 ;; This function calls:
  3832 ;;		Nothing
  3833 ;; This function is called by:
  3834 ;;		_main
  3835 ;;		_chooseSong
  3836 ;;		_playSong
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text21
  3841  00160A                     __ptext21:
  3842                           	callstack 0
  3843  00160A                     _atraso_ms:
  3844                           	callstack 28
  3845  00160A                     
  3846                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 4:     volatile unsigned char j,
      +                           k;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 5:     volatile unsigned int 
      +                          i;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 7:     for (i = 0; i < (t); i+
      +                          +) {
  3847  00160A  0E00               	movlw	0
  3848  00160C  6E22               	movwf	(atraso_ms@i+1)^0,c	;volatile
  3849  00160E  0E00               	movlw	0
  3850  001610  6E21               	movwf	atraso_ms@i^0,c	;volatile
  3851  001612  EF2B  F00B         	goto	l1865
  3852  001616                     l1843:
  3853                           
  3854                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 8:         for (j = 0; j < 41; j
      +                          ++) {
  3855  001616  0E00               	movlw	0
  3856  001618  6E23               	movwf	atraso_ms@j^0,c	;volatile
  3857  00161A                     l1845:
  3858  00161A  0E28               	movlw	40
  3859  00161C  6423               	cpfsgt	atraso_ms@j^0,c	;volatile
  3860  00161E  EF13  F00B         	goto	u1391
  3861  001622  EF15  F00B         	goto	u1390
  3862  001626                     u1391:
  3863  001626  EF17  F00B         	goto	l1849
  3864  00162A                     u1390:
  3865  00162A  EF29  F00B         	goto	l1863
  3866  00162E                     l1849:
  3867                           
  3868                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 9:             for (k = 0; k < 3
      +                          ; k++);
  3869  00162E  0E00               	movlw	0
  3870  001630  6E24               	movwf	atraso_ms@k^0,c	;volatile
  3871  001632                     l1851:
  3872  001632  0E02               	movlw	2
  3873  001634  6424               	cpfsgt	atraso_ms@k^0,c	;volatile
  3874  001636  EF1F  F00B         	goto	u1401
  3875  00163A  EF21  F00B         	goto	u1400
  3876  00163E                     u1401:
  3877  00163E  EF23  F00B         	goto	l1855
  3878  001642                     u1400:
  3879  001642  EF26  F00B         	goto	l1859
  3880  001646                     l1855:
  3881  001646  2A24               	incf	atraso_ms@k^0,f,c	;volatile
  3882  001648  EF19  F00B         	goto	l1851
  3883  00164C                     l1859:
  3884                           
  3885                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 10:         }
  3886  00164C  2A23               	incf	atraso_ms@j^0,f,c	;volatile
  3887  00164E  EF0D  F00B         	goto	l1845
  3888  001652                     l1863:
  3889                           
  3890                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 11:     }
  3891  001652  4A21               	infsnz	atraso_ms@i^0,f,c	;volatile
  3892  001654  2A22               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  3893  001656                     l1865:
  3894  001656  501F               	movf	atraso_ms@t^0,w,c
  3895  001658  5C21               	subwf	atraso_ms@i^0,w,c	;volatile
  3896  00165A  5020               	movf	(atraso_ms@t+1)^0,w,c
  3897  00165C  5822               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  3898  00165E  A0D8               	btfss	status,0,c
  3899  001660  EF34  F00B         	goto	u1411
  3900  001664  EF36  F00B         	goto	u1410
  3901  001668                     u1411:
  3902  001668  EF0B  F00B         	goto	l1843
  3903  00166C                     u1410:
  3904  00166C  0012               	return		;funcret
  3905  00166E                     __end_of_atraso_ms:
  3906                           	callstack 0
  3907                           
  3908 ;; *************** function ___awmod *****************
  3909 ;; Defined at:
  3910 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awmod.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  dividend        2    8[COMRAM] int 
  3913 ;;  divisor         2   10[COMRAM] int 
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;  sign            1   13[COMRAM] unsigned char 
  3916 ;;  counter         1   12[COMRAM] unsigned char 
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  2    8[COMRAM] int 
  3919 ;; Registers used:
  3920 ;;		wreg, status,2, status,0
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3926 ;;      Params:         4       0       0       0       0       0       0
  3927 ;;      Locals:         2       0       0       0       0       0       0
  3928 ;;      Temps:          0       0       0       0       0       0       0
  3929 ;;      Totals:         6       0       0       0       0       0       0
  3930 ;;Total ram usage:        6 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; This function calls:
  3933 ;;		Nothing
  3934 ;; This function is called by:
  3935 ;;		_playSong
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939                           	psect	text22
  3940  001210                     __ptext22:
  3941                           	callstack 0
  3942  001210                     ___awmod:
  3943                           	callstack 28
  3944  001210  0E00               	movlw	0
  3945  001212  6E2C               	movwf	___awmod@sign^0,c
  3946  001214  BE28               	btfsc	(___awmod@dividend+1)^0,7,c
  3947  001216  EF11  F009         	goto	u1700
  3948  00121A  EF0F  F009         	goto	u1701
  3949  00121E                     u1701:
  3950  00121E  EF17  F009         	goto	l2061
  3951  001222                     u1700:
  3952  001222  6C27               	negf	___awmod@dividend^0,c
  3953  001224  1E28               	comf	(___awmod@dividend+1)^0,f,c
  3954  001226  B0D8               	btfsc	status,0,c
  3955  001228  2A28               	incf	(___awmod@dividend+1)^0,f,c
  3956  00122A  0E01               	movlw	1
  3957  00122C  6E2C               	movwf	___awmod@sign^0,c
  3958  00122E                     l2061:
  3959  00122E  BE2A               	btfsc	(___awmod@divisor+1)^0,7,c
  3960  001230  EF1E  F009         	goto	u1710
  3961  001234  EF1C  F009         	goto	u1711
  3962  001238                     u1711:
  3963  001238  EF22  F009         	goto	l2065
  3964  00123C                     u1710:
  3965  00123C  6C29               	negf	___awmod@divisor^0,c
  3966  00123E  1E2A               	comf	(___awmod@divisor+1)^0,f,c
  3967  001240  B0D8               	btfsc	status,0,c
  3968  001242  2A2A               	incf	(___awmod@divisor+1)^0,f,c
  3969  001244                     l2065:
  3970  001244  5029               	movf	___awmod@divisor^0,w,c
  3971  001246  102A               	iorwf	(___awmod@divisor+1)^0,w,c
  3972  001248  B4D8               	btfsc	status,2,c
  3973  00124A  EF29  F009         	goto	u1721
  3974  00124E  EF2B  F009         	goto	u1720
  3975  001252                     u1721:
  3976  001252  EF4F  F009         	goto	l2081
  3977  001256                     u1720:
  3978  001256  0E01               	movlw	1
  3979  001258  6E2B               	movwf	___awmod@counter^0,c
  3980  00125A  EF33  F009         	goto	l2071
  3981  00125E                     l2069:
  3982  00125E  90D8               	bcf	status,0,c
  3983  001260  3629               	rlcf	___awmod@divisor^0,f,c
  3984  001262  362A               	rlcf	(___awmod@divisor+1)^0,f,c
  3985  001264  2A2B               	incf	___awmod@counter^0,f,c
  3986  001266                     l2071:
  3987  001266  AE2A               	btfss	(___awmod@divisor+1)^0,7,c
  3988  001268  EF38  F009         	goto	u1731
  3989  00126C  EF3A  F009         	goto	u1730
  3990  001270                     u1731:
  3991  001270  EF2F  F009         	goto	l2069
  3992  001274                     u1730:
  3993  001274                     l2073:
  3994  001274  5029               	movf	___awmod@divisor^0,w,c
  3995  001276  5C27               	subwf	___awmod@dividend^0,w,c
  3996  001278  502A               	movf	(___awmod@divisor+1)^0,w,c
  3997  00127A  5828               	subwfb	(___awmod@dividend+1)^0,w,c
  3998  00127C  A0D8               	btfss	status,0,c
  3999  00127E  EF43  F009         	goto	u1741
  4000  001282  EF45  F009         	goto	u1740
  4001  001286                     u1741:
  4002  001286  EF49  F009         	goto	l2077
  4003  00128A                     u1740:
  4004  00128A  5029               	movf	___awmod@divisor^0,w,c
  4005  00128C  5E27               	subwf	___awmod@dividend^0,f,c
  4006  00128E  502A               	movf	(___awmod@divisor+1)^0,w,c
  4007  001290  5A28               	subwfb	(___awmod@dividend+1)^0,f,c
  4008  001292                     l2077:
  4009  001292  90D8               	bcf	status,0,c
  4010  001294  322A               	rrcf	(___awmod@divisor+1)^0,f,c
  4011  001296  3229               	rrcf	___awmod@divisor^0,f,c
  4012  001298  2E2B               	decfsz	___awmod@counter^0,f,c
  4013  00129A  EF3A  F009         	goto	l2073
  4014  00129E                     l2081:
  4015  00129E  502C               	movf	___awmod@sign^0,w,c
  4016  0012A0  B4D8               	btfsc	status,2,c
  4017  0012A2  EF55  F009         	goto	u1751
  4018  0012A6  EF57  F009         	goto	u1750
  4019  0012AA                     u1751:
  4020  0012AA  EF5B  F009         	goto	l2085
  4021  0012AE                     u1750:
  4022  0012AE  6C27               	negf	___awmod@dividend^0,c
  4023  0012B0  1E28               	comf	(___awmod@dividend+1)^0,f,c
  4024  0012B2  B0D8               	btfsc	status,0,c
  4025  0012B4  2A28               	incf	(___awmod@dividend+1)^0,f,c
  4026  0012B6                     l2085:
  4027  0012B6  C027  F027         	movff	___awmod@dividend,?___awmod
  4028  0012BA  C028  F028         	movff	___awmod@dividend+1,?___awmod+1
  4029  0012BE  0012               	return		;funcret
  4030  0012C0                     __end_of___awmod:
  4031                           	callstack 0
  4032                           
  4033 ;; *************** function ___awdiv *****************
  4034 ;; Defined at:
  4035 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  dividend        2    0[COMRAM] int 
  4038 ;;  divisor         2    2[COMRAM] int 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  quotient        2    6[COMRAM] int 
  4041 ;;  sign            1    5[COMRAM] unsigned char 
  4042 ;;  counter         1    4[COMRAM] unsigned char 
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  2    0[COMRAM] int 
  4045 ;; Registers used:
  4046 ;;		wreg, status,2, status,0
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4052 ;;      Params:         4       0       0       0       0       0       0
  4053 ;;      Locals:         4       0       0       0       0       0       0
  4054 ;;      Temps:          0       0       0       0       0       0       0
  4055 ;;      Totals:         8       0       0       0       0       0       0
  4056 ;;Total ram usage:        8 bytes
  4057 ;; Hardware stack levels used:    1
  4058 ;; This function calls:
  4059 ;;		Nothing
  4060 ;; This function is called by:
  4061 ;;		_playSong
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           	psect	text23
  4066  00114C                     __ptext23:
  4067                           	callstack 0
  4068  00114C                     ___awdiv:
  4069                           	callstack 28
  4070  00114C  0E00               	movlw	0
  4071  00114E  6E24               	movwf	___awdiv@sign^0,c
  4072  001150  BE22               	btfsc	(___awdiv@divisor+1)^0,7,c
  4073  001152  EFAF  F008         	goto	u1640
  4074  001156  EFAD  F008         	goto	u1641
  4075  00115A                     u1641:
  4076  00115A  EFB5  F008         	goto	l2017
  4077  00115E                     u1640:
  4078  00115E  6C21               	negf	___awdiv@divisor^0,c
  4079  001160  1E22               	comf	(___awdiv@divisor+1)^0,f,c
  4080  001162  B0D8               	btfsc	status,0,c
  4081  001164  2A22               	incf	(___awdiv@divisor+1)^0,f,c
  4082  001166  0E01               	movlw	1
  4083  001168  6E24               	movwf	___awdiv@sign^0,c
  4084  00116A                     l2017:
  4085  00116A  BE20               	btfsc	(___awdiv@dividend+1)^0,7,c
  4086  00116C  EFBC  F008         	goto	u1650
  4087  001170  EFBA  F008         	goto	u1651
  4088  001174                     u1651:
  4089  001174  EFC2  F008         	goto	l2023
  4090  001178                     u1650:
  4091  001178  6C1F               	negf	___awdiv@dividend^0,c
  4092  00117A  1E20               	comf	(___awdiv@dividend+1)^0,f,c
  4093  00117C  B0D8               	btfsc	status,0,c
  4094  00117E  2A20               	incf	(___awdiv@dividend+1)^0,f,c
  4095  001180  0E01               	movlw	1
  4096  001182  1A24               	xorwf	___awdiv@sign^0,f,c
  4097  001184                     l2023:
  4098  001184  0E00               	movlw	0
  4099  001186  6E26               	movwf	(___awdiv@quotient+1)^0,c
  4100  001188  0E00               	movlw	0
  4101  00118A  6E25               	movwf	___awdiv@quotient^0,c
  4102  00118C  5021               	movf	___awdiv@divisor^0,w,c
  4103  00118E  1022               	iorwf	(___awdiv@divisor+1)^0,w,c
  4104  001190  B4D8               	btfsc	status,2,c
  4105  001192  EFCD  F008         	goto	u1661
  4106  001196  EFCF  F008         	goto	u1660
  4107  00119A                     u1661:
  4108  00119A  EFF7  F008         	goto	l2045
  4109  00119E                     u1660:
  4110  00119E  0E01               	movlw	1
  4111  0011A0  6E23               	movwf	___awdiv@counter^0,c
  4112  0011A2  EFD7  F008         	goto	l2031
  4113  0011A6                     l2029:
  4114  0011A6  90D8               	bcf	status,0,c
  4115  0011A8  3621               	rlcf	___awdiv@divisor^0,f,c
  4116  0011AA  3622               	rlcf	(___awdiv@divisor+1)^0,f,c
  4117  0011AC  2A23               	incf	___awdiv@counter^0,f,c
  4118  0011AE                     l2031:
  4119  0011AE  AE22               	btfss	(___awdiv@divisor+1)^0,7,c
  4120  0011B0  EFDC  F008         	goto	u1671
  4121  0011B4  EFDE  F008         	goto	u1670
  4122  0011B8                     u1671:
  4123  0011B8  EFD3  F008         	goto	l2029
  4124  0011BC                     u1670:
  4125  0011BC                     l2033:
  4126  0011BC  90D8               	bcf	status,0,c
  4127  0011BE  3625               	rlcf	___awdiv@quotient^0,f,c
  4128  0011C0  3626               	rlcf	(___awdiv@quotient+1)^0,f,c
  4129  0011C2  5021               	movf	___awdiv@divisor^0,w,c
  4130  0011C4  5C1F               	subwf	___awdiv@dividend^0,w,c
  4131  0011C6  5022               	movf	(___awdiv@divisor+1)^0,w,c
  4132  0011C8  5820               	subwfb	(___awdiv@dividend+1)^0,w,c
  4133  0011CA  A0D8               	btfss	status,0,c
  4134  0011CC  EFEA  F008         	goto	u1681
  4135  0011D0  EFEC  F008         	goto	u1680
  4136  0011D4                     u1681:
  4137  0011D4  EFF1  F008         	goto	l2041
  4138  0011D8                     u1680:
  4139  0011D8  5021               	movf	___awdiv@divisor^0,w,c
  4140  0011DA  5E1F               	subwf	___awdiv@dividend^0,f,c
  4141  0011DC  5022               	movf	(___awdiv@divisor+1)^0,w,c
  4142  0011DE  5A20               	subwfb	(___awdiv@dividend+1)^0,f,c
  4143  0011E0  8025               	bsf	___awdiv@quotient^0,0,c
  4144  0011E2                     l2041:
  4145  0011E2  90D8               	bcf	status,0,c
  4146  0011E4  3222               	rrcf	(___awdiv@divisor+1)^0,f,c
  4147  0011E6  3221               	rrcf	___awdiv@divisor^0,f,c
  4148  0011E8  2E23               	decfsz	___awdiv@counter^0,f,c
  4149  0011EA  EFDE  F008         	goto	l2033
  4150  0011EE                     l2045:
  4151  0011EE  5024               	movf	___awdiv@sign^0,w,c
  4152  0011F0  B4D8               	btfsc	status,2,c
  4153  0011F2  EFFD  F008         	goto	u1691
  4154  0011F6  EFFF  F008         	goto	u1690
  4155  0011FA                     u1691:
  4156  0011FA  EF03  F009         	goto	l2049
  4157  0011FE                     u1690:
  4158  0011FE  6C25               	negf	___awdiv@quotient^0,c
  4159  001200  1E26               	comf	(___awdiv@quotient+1)^0,f,c
  4160  001202  B0D8               	btfsc	status,0,c
  4161  001204  2A26               	incf	(___awdiv@quotient+1)^0,f,c
  4162  001206                     l2049:
  4163  001206  C025  F01F         	movff	___awdiv@quotient,?___awdiv
  4164  00120A  C026  F020         	movff	___awdiv@quotient+1,?___awdiv+1
  4165  00120E  0012               	return		;funcret
  4166  001210                     __end_of___awdiv:
  4167                           	callstack 0
  4168                           
  4169                           	psect	rparam
  4170  0000                     
  4171                           	psect	idloc
  4172                           
  4173                           ;Config register IDLOC0 @ 0x200000
  4174                           ;	unspecified, using default values
  4175  200000                     	org	2097152
  4176  200000  FF                 	db	255
  4177                           
  4178                           ;Config register IDLOC1 @ 0x200001
  4179                           ;	unspecified, using default values
  4180  200001                     	org	2097153
  4181  200001  FF                 	db	255
  4182                           
  4183                           ;Config register IDLOC2 @ 0x200002
  4184                           ;	unspecified, using default values
  4185  200002                     	org	2097154
  4186  200002  FF                 	db	255
  4187                           
  4188                           ;Config register IDLOC3 @ 0x200003
  4189                           ;	unspecified, using default values
  4190  200003                     	org	2097155
  4191  200003  FF                 	db	255
  4192                           
  4193                           ;Config register IDLOC4 @ 0x200004
  4194                           ;	unspecified, using default values
  4195  200004                     	org	2097156
  4196  200004  FF                 	db	255
  4197                           
  4198                           ;Config register IDLOC5 @ 0x200005
  4199                           ;	unspecified, using default values
  4200  200005                     	org	2097157
  4201  200005  FF                 	db	255
  4202                           
  4203                           ;Config register IDLOC6 @ 0x200006
  4204                           ;	unspecified, using default values
  4205  200006                     	org	2097158
  4206  200006  FF                 	db	255
  4207                           
  4208                           ;Config register IDLOC7 @ 0x200007
  4209                           ;	unspecified, using default values
  4210  200007                     	org	2097159
  4211  200007  FF                 	db	255
  4212                           
  4213                           	psect	config
  4214                           
  4215                           ; Padding undefined space
  4216  300000                     	org	3145728
  4217  300000  FF                 	db	255
  4218                           
  4219                           ;Config register CONFIG1H @ 0x300001
  4220                           ;	Oscillator Selection bits
  4221                           ;	OSC = HS, HS oscillator
  4222                           ;	Fail-Safe Clock Monitor Enable bit
  4223                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4224                           ;	Internal/External Oscillator Switchover bit
  4225                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4226  300001                     	org	3145729
  4227  300001  02                 	db	2
  4228                           
  4229                           ;Config register CONFIG2L @ 0x300002
  4230                           ;	Power-up Timer Enable bit
  4231                           ;	PWRT = OFF, PWRT disabled
  4232                           ;	Brown-out Reset Enable bits
  4233                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4234                           ;	Brown Out Reset Voltage bits
  4235                           ;	BORV = 0x2E, user specified literal
  4236  300002                     	org	3145730
  4237  300002  71                 	db	369
  4238                           
  4239                           ;Config register CONFIG2H @ 0x300003
  4240                           ;	Watchdog Timer Enable bit
  4241                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4242                           ;	Watchdog Timer Postscale Select bits
  4243                           ;	WDTPS = 1, 1:1
  4244  300003                     	org	3145731
  4245  300003  00                 	db	0
  4246                           
  4247                           ; Padding undefined space
  4248  300004                     	org	3145732
  4249  300004  FF                 	db	255
  4250                           
  4251                           ;Config register CONFIG3H @ 0x300005
  4252                           ;	CCP2 MUX bit
  4253                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4254                           ;	PORTB A/D Enable bit
  4255                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4256                           ;	Low-Power Timer1 Oscillator Enable bit
  4257                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4258                           ;	MCLR Pin Enable bit
  4259                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4260  300005                     	org	3145733
  4261  300005  83                 	db	131
  4262                           
  4263                           ;Config register CONFIG4L @ 0x300006
  4264                           ;	Stack Full/Underflow Reset Enable bit
  4265                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4266                           ;	Single-Supply ICSP Enable bit
  4267                           ;	LVP = OFF, Single-Supply ICSP disabled
  4268                           ;	Extended Instruction Set Enable bit
  4269                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4270                           ;	Background Debugger Enable bit
  4271                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4272  300006                     	org	3145734
  4273  300006  80                 	db	128
  4274                           
  4275                           ; Padding undefined space
  4276  300007                     	org	3145735
  4277  300007  FF                 	db	255
  4278                           
  4279                           ;Config register CONFIG5L @ 0x300008
  4280                           ;	Code Protection bit
  4281                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4282                           ;	Code Protection bit
  4283                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4284                           ;	Code Protection bit
  4285                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4286                           ;	Code Protection bit
  4287                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4288  300008                     	org	3145736
  4289  300008  0F                 	db	15
  4290                           
  4291                           ;Config register CONFIG5H @ 0x300009
  4292                           ;	Boot Block Code Protection bit
  4293                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4294                           ;	Data EEPROM Code Protection bit
  4295                           ;	CPD = OFF, Data EEPROM not code-protected
  4296  300009                     	org	3145737
  4297  300009  C0                 	db	192
  4298                           
  4299                           ;Config register CONFIG6L @ 0x30000A
  4300                           ;	Write Protection bit
  4301                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4302                           ;	Write Protection bit
  4303                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4304                           ;	Write Protection bit
  4305                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4306                           ;	Write Protection bit
  4307                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4308  30000A                     	org	3145738
  4309  30000A  0F                 	db	15
  4310                           
  4311                           ;Config register CONFIG6H @ 0x30000B
  4312                           ;	Configuration Register Write Protection bit
  4313                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4314                           ;	Boot Block Write Protection bit
  4315                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4316                           ;	Data EEPROM Write Protection bit
  4317                           ;	WRTD = OFF, Data EEPROM not write-protected
  4318  30000B                     	org	3145739
  4319  30000B  E0                 	db	224
  4320                           
  4321                           ;Config register CONFIG7L @ 0x30000C
  4322                           ;	Table Read Protection bit
  4323                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4324                           ;	Table Read Protection bit
  4325                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4326                           ;	Table Read Protection bit
  4327                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4328                           ;	Table Read Protection bit
  4329                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4330  30000C                     	org	3145740
  4331  30000C  0F                 	db	15
  4332                           
  4333                           ;Config register CONFIG7H @ 0x30000D
  4334                           ;	Boot Block Table Read Protection bit
  4335                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4336  30000D                     	org	3145741
  4337  30000D  40                 	db	64
  4338                           tosu	equ	0xFFF
  4339                           tosh	equ	0xFFE
  4340                           tosl	equ	0xFFD
  4341                           stkptr	equ	0xFFC
  4342                           pclatu	equ	0xFFB
  4343                           pclath	equ	0xFFA
  4344                           pcl	equ	0xFF9
  4345                           tblptru	equ	0xFF8
  4346                           tblptrh	equ	0xFF7
  4347                           tblptrl	equ	0xFF6
  4348                           tablat	equ	0xFF5
  4349                           prodh	equ	0xFF4
  4350                           prodl	equ	0xFF3
  4351                           indf0	equ	0xFEF
  4352                           postinc0	equ	0xFEE
  4353                           postdec0	equ	0xFED
  4354                           preinc0	equ	0xFEC
  4355                           plusw0	equ	0xFEB
  4356                           fsr0h	equ	0xFEA
  4357                           fsr0l	equ	0xFE9
  4358                           wreg	equ	0xFE8
  4359                           indf1	equ	0xFE7
  4360                           postinc1	equ	0xFE6
  4361                           postdec1	equ	0xFE5
  4362                           preinc1	equ	0xFE4
  4363                           plusw1	equ	0xFE3
  4364                           fsr1h	equ	0xFE2
  4365                           fsr1l	equ	0xFE1
  4366                           bsr	equ	0xFE0
  4367                           indf2	equ	0xFDF
  4368                           postinc2	equ	0xFDE
  4369                           postdec2	equ	0xFDD
  4370                           preinc2	equ	0xFDC
  4371                           plusw2	equ	0xFDB
  4372                           fsr2h	equ	0xFDA
  4373                           fsr2l	equ	0xFD9
  4374                           status	equ	0xFD8

Data Sizes:
    Strings     61
    Constant    16
    Data        200
    BSS         212
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     23      75
    BANK0           128      0       0
    BANK1           256      0     190
    BANK2           256      0     170
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 170
		 -> nomes(BANK2[170]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 170
		 -> nomes(BANK2[170]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    lcdStr@str	PTR const unsigned char  size(2) Largest target is 190
		 -> STR_6(CODE[16]), STR_5(CODE[17]), musicas.nome(BANK1[17]), musicas(BANK1[190]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[7]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_chooseSong
    _ssdInit->_pinMode
    _songsInit->_strcpy
    _strcpy->___wmul
    _lcdInit->_lcdCommand
    _chooseSong->_playSong
    _playSong->___awmod
    _ssdUpdate->_digitalWrite
    _lcdStr->_lcdData
    _lcdData->_digitalWrite
    _lcdPosition->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   45952
                          _atraso_ms
                         _chooseSong
                             _kpInit
                         _lcdCommand
                            _lcdInit
                        _lcdPosition
                             _lcdStr
                          _songsInit
                            _ssdInit
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    1352
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _songsInit                                            2     2      0     997
                                             14 COMRAM     2     2      0
                             ___wmul
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     4      4     248
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    4243
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _chooseSong                                           2     2      0   29170
                                             21 COMRAM     2     2      0
                          _atraso_ms
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                        _lcdPosition
                             _lcdStr
                           _playSong
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _playSong                                             7     7      0   15537
                                             14 COMRAM     7     7      0
                            ___awdiv
                            ___awmod
                          _atraso_ms
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                        _lcdPosition
                             _lcdStr
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _ssdUpdate                                            2     2      0    2572
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1     556
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _lcdStr                                               5     3      2    3361
                                              8 COMRAM     5     3      2
                            _lcdData
 ---------------------------------------------------------------------------------
 (2) _lcdData                                              2     2      0    2663
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _lcdPosition                                          3     2      1    3588
                                              8 COMRAM     3     2      1
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    2799
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    2572
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      92
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _kpDebounce                                          10    10      0     315
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            6     4      2     442
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     904
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _chooseSong
     _atraso_ms
     _kpDebounce
     _kpRead
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _lcdPosition
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
     _lcdStr
       _lcdData
         _Delay40us
         _digitalWrite
     _playSong
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _atraso_ms
       _kpDebounce
       _kpRead
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
       _lcdPosition
         _lcdCommand
           _Delay2ms
             _Delay40us
           _Delay40us
           _digitalWrite
       _lcdStr
         _lcdData
           _Delay40us
           _digitalWrite
       _ssdDigit
       _ssdUpdate
         _digitalWrite
     _ssdDigit
     _ssdUpdate
       _digitalWrite
   _kpInit
   _lcdCommand
     _Delay2ms
       _Delay40us
     _Delay40us
     _digitalWrite
   _lcdInit
     _Delay2ms
       _Delay40us
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _pinMode
   _lcdPosition
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
   _lcdStr
     _lcdData
       _Delay40us
       _digitalWrite
   _songsInit
     ___wmul
     _strcpy
       ___wmul (ARG)
   _ssdInit
     _pinMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      AA       9       66.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      BE       7       74.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     17      4B       1       59.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B3      15        0.0%
DATA                 0      0     1B3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Dec 08 16:30:38 2020

                      _i 003D                       l42 0D44                       l76 0AF6  
           ___awdiv@sign 0024                       _v0 0041                       _v1 0040  
                     _v2 003F                       _v3 003E      ___wmul@multiplicand 0021  
                    l108 166C                      l151 18C8                      l303 1780  
                    l232 140E                      l161 182A                      l313 100E  
                    l146 18E0                      l242 10B6                      l171 1728  
                    l252 114A                      l164 1590                      l316 17D6  
                    l333 18F4                      l158 1518                      l246 10E4  
                    l351 0E9E                      l167 16EC                      l352 0EB6  
                    l168 1712                      l353 0EBE                      l177 1608  
                    l265 080E                      l266 0820                      l276 08A8  
                    l268 0860                      l356 18EA                      l613 120E  
                    l269 0832                      l382 188E                      l626 12BE  
                    _cnt 0043             ___awmod@sign 002C                      prod 000FF3  
                    wreg 000FE8                     l2001 1754                     l2011 1150  
                   l2003 1766                     l2021 1180                     l2013 115E  
                   l2005 176A                     l2101 0948                     l2031 11AE  
                   l2023 1184                     l2015 1166                     l2007 177C  
                   l2111 09E4                     l2103 096C                     l2041 11E2  
                   l2033 11BC                     l2025 118C                     l2017 116A  
                   l2009 114C                     l2201 089A                     l2121 0A82  
                   l2113 0A0A                     l2105 0992                     l2043 11E8  
                   l2035 11C2                     l2027 119E                     l2019 1178  
                   l2203 08A6                     l2123 0A9E                     l2115 0A26  
                   l2107 09AE                     l1059 1868                     l2131 183C  
                   l2211 136A                     l2037 11D8                     l2029 11A6  
                   l2045 11EE                     l2061 122E                     l2053 1210  
                   l2141 068A                     l2133 0650                     l2301 110A  
                   l2125 0AB0                     l2117 0A38                     l2109 09C0  
                   l2205 186A                     l2221 13F8                     l2047 11FE  
                   l2039 11E0                     l2071 1266                     l2063 123C  
                   l2055 1214                     l2151 0786                     l2143 06A2  
                   l2135 0660                     l2303 1116                     l2311 1146  
                   l2127 0AD4                     l2119 0A5C                     l2231 154E  
                   l2223 151A                     l2207 1886                     l2049 1206  
                   l2073 1274                     l2081 129E                     l2065 1244  
                   l2057 1222                     l2161 07B0                     l2153 078A  
                   l2145 0782                     l2137 0674                     l2305 1120  
                   l2241 1564                     l2233 1552                     l2225 1542  
                   l2129 182C                     l2217 1376                     l2321 1420  
                   l2313 1410                     l2083 12AE                     l2075 128A  
                   l2067 1256                     l2059 122A                     l2171 07DC  
                   l2163 07BE                     l2155 0796                     l2139 067E  
                   l2307 1134                     l2091 08C6                     l2251 157E  
                   l2243 1568                     l2235 1556                     l2227 1546  
                   l2219 13F4                     l2331 1452                     l2323 1426  
                   l2315 1414                     l2085 12B6                     l2077 1292  
                   l2069 125E                     l2173 07FE                     l2165 07CC  
                   l2157 079A                     l2309 113E                     l2261 1010  
                   l2093 08D8                     l2253 1584                     l2245 156E  
                   l2237 155A                     l2229 154A                     l2341 1484  
                   l2333 145E                     l2325 1430                     l2317 1418  
                   l2079 1298                     l2191 0866                     l2183 0840  
                   l2167 07D0                     l2159 07A2                     l2271 103C  
                   l2263 1014                     l2095 08F8                     l2255 158A  
                   l2247 1572                     l2239 1560                     l2343 1490  
                   l2335 1464                     l2327 143C                     l2319 141C  
                   l1801 18B8                     l2193 0876                     l2185 0850  
                   l2169 07D4                     l2281 1082                     l2273 1040  
                   l2265 101C                     l2097 091A                     l2089 08AA  
                   l2249 1578                     l2257 1782                     l2337 146E  
                   l2329 1446                     l1811 14BE                     l1803 149E  
                   l2195 0886                     l2187 0858                     l2291 10C4  
                   l2283 108A                     l2275 1044                     l2267 102A  
                   l2099 0936                     l2259 17D2                     l2339 147A  
                   l1741 18CA                     l1821 150C                     l1813 14D2  
                   l1805 14A2                     l2349 0FE8                     l2189 0864  
                   l2197 0888                     l2293 10D6                     l2285 1098  
                   l2277 1050                     l2269 1038                     l1581 18E2  
                   l1911 0D9C                     l1903 0D52                     l1751 0AF8  
                   l1823 1514                     l1815 14E6                     l1807 14A6  
                   l1831 17F6                     l2199 0898                     l2295 10DE  
                   l2287 10A8                     l2279 1072                     l1841 160A  
                   l1921 0DC0                     l1913 0DA0                     l1905 0D94  
                   l1761 0B84                     l1753 0B14                     l1817 14EA  
                   l1809 14BA                     l1833 17FA                     l1825 17DA  
                   l2297 10F2                     l2289 10B0                     l1851 1632  
                   l1843 1616                     l1931 0E62                     l1923 0DEC  
                   l1915 0DBC                     l1747 18CE                     l1771 0C16  
                   l1763 0B9E                     l1755 0B26                     l1819 14FC  
                   l1835 180E                     l1827 17DE                     l2299 10FA  
                   l1845 161A                     l1941 0E96                     l1933 0E64  
                   l1925 0E1C                     l1749 18D0                     l1781 0CAE  
                   l1773 0C36                     l1765 0BBE                     l1757 0B46  
                   l1837 1822                     l1829 17E2                     l1855 1646  
                   l1863 1652                     l1943 0EAE                     l1935 0E74  
                   l1927 0E50                     l1791 18AE                     l1783 0CD0  
                   l1775 0C58                     l1767 0BE0                     l1759 0B68  
                   l1871 16E6                     l1839 1826                     l1951 0EC4  
                   l1849 162E                     l1865 1656                     l1945 0EBA  
                   l1937 0E8C                     l1929 0E52                     l1785 0CEC  
                   l1777 0C74                     l1769 0BFC                     l1873 16E6  
                   l1961 0F2E                     l1953 0ED8                     l1859 164C  
                   l1939 0E92                     l1947 18EC                     l1787 0D06  
                   l1779 0C8E                     l1883 1722                     l1875 16FC  
                   l1867 16D2                     l1891 15CC                     l1971 0F78  
                   l1963 0F42                     l1955 0EEC                     l1893 0D46  
                   l1797 18B2                     l1789 0D26                     l1877 170C  
                   l1869 16D6                     l1885 1592                     l1981 0FCC  
                   l1973 0F8A                     l1965 0F4A                     l1957 0F00  
                   l1949 0EC0                     l1895 0D4A                     l1799 18B6  
                   l1879 1722                     l1887 159A                     l1975 0F9E  
                   l1967 0F5C                     l1959 0F1C                     l1897 0D4E  
                   l1889 15CA                     l1993 172C                     l1977 0FA6  
                   l1969 0F70                     l1995 173C                     l1979 0FB8  
                   l1987 0FD4                     l1997 1740                     l1999 1750  
                   STR_1 064A                     STR_2 0643                     STR_3 0622  
                   STR_4 0611                     STR_5 0611                     STR_6 0633  
                   u1200 0B84                     u2000 07FE                     u1201 0B80  
                   u2001 07FA                     u1210 0B9E                     u2010 080E  
                   u1211 0B9A                     u2011 080A                     u2020 081C  
                   u2100 102A                     u2021 0818                     u2101 1026  
                   u1150 18E0                     u2030 082E                     u2110 1038  
                   u1151 18DC                     u2031 082A                     u2111 1034  
                   u1400 1642                     u1320 0CEC                     u1304 0CA0  
                   u1240 0BFC                     u1224 0BB0                     u1160 0B14  
                   u2040 0840                     u2120 1072                     u1401 163E  
                   u1321 0CE8                     u1305 0C9C                     u1241 0BF8  
                   u1225 0BAC                     u1161 0B10                     u2041 083C  
                   u2121 106E                     u1410 166C                     u1330 0D06  
                   u1314 0CC0                     u1250 0C16                     u1234 0BD0  
                   u1170 0B26                     u2050 0850                     u2130 1082  
                   u1411 1668                     u1331 0D02                     u1315 0CBC  
                   u1251 0C12                     u1235 0BCC                     u1171 0B22  
                   u2051 084C                     u2131 107E                     u1420 16E6  
                   u2060 0876                     u2140 1098                     u1421 16E2  
                   u2061 0872                     u2141 1094                     u1510 0DBC  
                   u1430 16FC                     u2070 0886                     u2150 10A8  
                   u1511 0DB8                     u1431 16F8                     u2071 0882  
                   u2151 10A4                     u1504 0D88                     u1360 18C8  
                   u1344 0D18                     u1280 0C74                     u1264 0C28  
                   u1184 0B38                     u1440 170C                     u1600 173C  
                   u2080 0898                     u2160 10C4                     u1505 0D84  
                   u1361 18C4                     u1345 0D14                     u1281 0C70  
                   u1265 0C24                     u1185 0B34                     u1441 1708  
                   u1601 1738                     u2081 0894                     u2161 10C0  
                   u1530 0DEC                     u1354 0D38                     u1290 0C8E  
                   u1274 0C48                     u1194 0B58                     u1370 14FC  
                   u1450 1722                     u1610 1750                     u2170 10D6  
                   u2090 140E                     u1531 0DE8                     u1355 0D34  
                   u1291 0C8A                     u1275 0C44                     u1195 0B54  
                   u1371 14F8                     u1451 171E                     u1611 174C  
                   u2171 10D2                     u2091 140A                     u1700 1222  
                   u1524 0DD2                     u1380 150C                     u1460 15C6  
                   u1620 1766                     u2180 10F2                     u1701 121E  
                   u1525 0DCE                     u1381 1508                     u1621 1762  
                   u2181 10EE                     u1710 123C                     u1390 162A  
                   u1470 15F8                     u1630 177C                     u1711 1238  
                   u1391 1626                     u1631 1778                     u1640 115E  
                   u1720 1256                     u1560 0E62                     u1544 0E0A  
                   u1480 1608                     u1800 0936                     u1641 115A  
                   u1721 1252                     u1561 0E5E                     u1545 0E04  
                   u1481 1604                     u1801 0932                     u1650 1178  
                   u1730 1274                     u1570 0E74                     u1554 0E3A  
                   u1810 0948                     u1651 1174                     u1731 1270  
                   u1571 0E70                     u1555 0E34                     u1467 15BC  
                   u1811 0944                     u1660 119E                     u1740 128A  
                   u1580 0E8C                     u1661 119A                     u1741 1286  
                   u1581 0E88                     u1477 15EE                     u1670 11BC  
                   u1750 12AE                     u1590 0EAE                     u1494 0D68  
                   u1671 11B8                     u1751 12AA                     u1591 0EAA  
                   u1495 0D64                     u1680 11D8                     u1920 0A9E  
                   u1904 0A4E                     u1840 09AE                     u1824 095E  
                   u1760 08C6                     u1681 11D4                     u1921 0A9A  
                   u1905 0A4A                     u1841 09AA                     u1825 095A  
                   u1761 08C2                     u1690 11FE                     u1930 0AB0  
                   u1914 0A72                     u1850 09C0                     u1834 0982  
                   u1770 08D8                     u1691 11FA                     u1931 0AAC  
                   u1915 0A6E                     u1851 09BC                     u1835 097E  
                   u1771 08D4                     u1944 0AC6                     u1880 0A26  
                   u1864 09D6                     u1784 08EA                     u1960 1868  
                   u1945 0AC2                     u1881 0A22                     u1865 09D2  
                   u1785 08E6                     u1961 1864                     u1970 07B0  
                   u1954 0AEA                     u1890 0A38                     u1874 09FA  
                   u1794 090A                     u1971 07AC                     u1955 0AE6  
                   u1891 0A34                     u1875 09F6                     u1795 0906  
                   u1980 07BE                     u1981 07BA                     u1990 07CC  
                   u1991 07C8                     _flag 0049                     _cont 004A  
                   _main 1410                     fsr0h 000FEA                     fsr1h 000FE2  
                   indf0 000FEF                     fsr2h 000FDA                     fsr0l 000FE9  
                   indf1 000FE7                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     prodh 000FF4                     prodl 000FF3  
                   start 0000             ___param_bank 000000                    ?_main 001F  
        __end_of___awdiv 1210          __end_of___awmod 12C0                    _T0CON 000FD5  
        ___awdiv@divisor 0021          ___awdiv@counter 0023                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96          __end_of_lcdData 182C  
        __end_of_lcdInit 1592                    _pause 001D                    _tecla 001E  
                  _nomes 0200          __end_of_pinMode 0AF8                    _valor 0601  
                  _tempo 0048                    tablat 000FF5          __end_of_ssdInit 17D8  
                  status 000FD8         __end_of_Delay2ms 18CA     __end_of_digitalWrite 0D46  
        __initialization 166E             __end_of_main 149C       __size_of_Delay40us 0018  
                 ??_main 0036            __activetblptr 000002         ___awdiv@dividend 001F  
                 _INTCON 000FF2     __size_of_lcdPosition 005A        lcdPosition@coluna 0027  
                 ___wmul 186A                ??___awdiv 0023                ??___awmod 002B  
                 _lcdStr 1592                   _kpInit 18E2                   _kpRead 18EC  
                 _indice 004B                   clear_0 16B4                   clear_1 16C0  
       ___awdiv@quotient 0025                   _teclas 0015          ___awmod@divisor 0029  
              ??_lcdData 0025                ??_lcdInit 0027          ___awmod@counter 002B  
                 _strcpy 182C         __end_of_playSong 08AA         __end_of_ssdDigit 1782  
           __pdataCOMRAM 0001                ??_pinMode 0023             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_ssdInit 0025        __end_of_Delay40us 18E2               __accesstop 0080  
__end_of__initialization 16C6            ___rparam_used 000001              pinMode@type 0021  
         __pcstackCOMRAM 001F             __pidataBANK2 12C0            __end_of_valor 0611  
              ?_Delay2ms 001F       __size_of_atraso_ms 0064               __pbssBANK1 0100  
  __size_of_digitalWrite 024E               _lcdCommand 149C                  ?___wmul 001F  
                ?_lcdStr 0027                  ?_kpInit 001F                  ?_kpRead 001F  
             _kpDebounce 0D46               _chooseSong 1010                  ?_strcpy 0025  
     __size_of_ssdUpdate 0150               ??_Delay2ms 0020             _digitalWrite 0AF8  
     __size_of_songsInit 00A6                ?_playSong 001F                  __Hparam 0000  
                __Lparam 0000                ?_ssdDigit 001F          kpDebounce@old_D 0024  
     lcdPosition@comando 0029          kpDebounce@tempo 003C                  ___awdiv 114C  
                ___awmod 1210          __size_of___wmul 0026        __end_of_atraso_ms 166E  
           __psmallconst 0600          __size_of_lcdStr 0078          __size_of_kpInit 000A  
        __size_of_kpRead 000A              ssdDigit@val 0020              ssdDigit@pos 001F  
                __pcinit 166E                  _lcdData 17D8                  __ramtop 0600  
                _lcdInit 151A                  __ptext0 1410                  __ptext1 1782  
                __ptext2 136A                  __ptext3 182C                  __ptext4 186A  
                __ptext5 151A                  __ptext6 08AA                  __ptext7 18E2  
                __ptext8 1010                  __ptext9 0650                  _display 0042  
        __size_of_strcpy 003E                  _pinMode 08AA         ___awmod@dividend 0027  
                _minuto1 0047                  _minuto2 0046                  _ssdInit 1782  
                _musicas 0100                  lcdStr@i 002B                Delay2ms@i 0020  
    kpDebounce@valorNovo 0038     end_of_initialization 16C6            __Lmediumconst 0000  
             ??_playSong 002D        __end_of_ssdUpdate 1010               ??_ssdDigit 0020  
      __end_of_songsInit 1410                  postdec1 000FE5                  postdec2 000FDD  
            ?_lcdCommand 001F                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE                  strcpy@d 002B                  strcpy@s 0029  
            ?_kpDebounce 001F              ?_chooseSong 001F            ??_lcdPosition 0028  
              _Delay40us 18CA               atraso_ms@i 0021               atraso_ms@j 0023  
             atraso_ms@k 0024               atraso_ms@t 001F           __end_of___wmul 1890  
          __pidataCOMRAM 1890           __end_of_lcdStr 160A           __end_of_kpInit 18EC  
         __end_of_kpRead 18F6           __end_of_strcpy 186A      start_initialization 166E  
      __size_of_Delay2ms 001C      __size_of_lcdCommand 007E      __size_of_kpDebounce 017A  
             ?_Delay40us 001F      __size_of_chooseSong 013C      __end_of_lcdPosition 172A  
       lcdPosition@linha 0028                 ??___wmul 0023                 ??_lcdStr 0029  
               ??_kpInit 001F                 ??_kpRead 0021              __pdataBANK2 0200  
               ??_strcpy 0029              __pbssCOMRAM 0036               pinMode@pin 001F  
      __size_of_playSong 025A                 ?___awdiv 001F                 ?___awmod 0027  
      __size_of_ssdDigit 0058                 ?_lcdData 001F                 ?_lcdInit 001F  
          lcdCommand@cmd 0026                _atraso_ms 160A              __smallconst 0600  
               ?_pinMode 001F                 ?_ssdInit 001F              _lcdPosition 16D0  
            ??_Delay40us 001F           ___wmul@product 0023             ??_lcdCommand 0025  
              _ssdUpdate 0EC0                lcdStr@str 0027             ??_kpDebounce 001F  
           ??_chooseSong 0034                _songsInit 136A        ___wmul@multiplier 001F  
             ?_atraso_ms 001F          lcdCommand@old_D 0025    kpDebounce@valorAntigo 0036  
               _Delay2ms 18AE                copy_data0 1682                copy_data1 16A2  
           _playSong$950 002F             _playSong$951 0031       __end_of_lcdCommand 151A  
           lcdData@old_D 0026             lcdData@valor 0025               songsInit@i 002D  
     __end_of_kpDebounce 0EC0       __end_of_chooseSong 114C                 __Hrparam 0000  
               __Lrparam 0000               ?_ssdUpdate 001F         __size_of___awdiv 00C4  
       __size_of___awmod 00B0               ?_songsInit 001F         __size_of_lcdData 0054  
       __size_of_lcdInit 0078         __size_of_pinMode 024E                 __ptext10 0EC0  
               __ptext11 172A                 __ptext20 0D46                 __ptext12 1592  
               __ptext21 160A                 __ptext13 17D8                 __ptext22 1210  
               __ptext14 16D0                 __ptext23 114C                 __ptext15 149C  
               __ptext16 0AF8                 __ptext17 18AE                 __ptext18 18CA  
               __ptext19 18EC                playSong@j 0033         __size_of_ssdInit 0056  
             strcpy@dest 0025                 _duracoes 0001            __size_of_main 008C  
               _playSong 0650                 _segundo1 0045                 _segundo2 0044  
             Delay40us@i 001F                 _ssdDigit 172A              ??_atraso_ms 0021  
          ?_digitalWrite 001F        digitalWrite@value 0021                strcpy@src 0027  
            ??_ssdUpdate 0025              ??_songsInit 002D              kpDebounce@i 0028  
            kpDebounce@j 0027              kpDebounce@k 0025           ??_digitalWrite 0023  
           ?_lcdPosition 0027          digitalWrite@pin 001F        _valor@keypad$F284 003A  
