

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Dec 08 14:10:59 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4520 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	idataCOMRAM
    73  0012A2                     __pidataCOMRAM:
    74                           	callstack 0
    75                           
    76                           ;initializer for _duracoes
    77  0012A2  00B4               	dw	180
    78  0012A4  00B4               	dw	180
    79  0012A6  00B4               	dw	180
    80  0012A8  00B4               	dw	180
    81  0012AA  00B4               	dw	180
    82  0012AC  00B4               	dw	180
    83  0012AE  00B4               	dw	180
    84  0012B0  00B4               	dw	180
    85  0012B2  00B4               	dw	180
    86  0012B4  00B4               	dw	180
    87                           
    88                           ;initializer for _tecla
    89  0012B6  10                 	db	16
    90                           
    91                           	psect	idataBANK2
    92  000D54                     __pidataBANK2:
    93                           	callstack 0
    94                           
    95                           ;initializer for _nomes
    96  000D54  45                 	db	69
    97  000D55  73                 	db	115
    98  000D56  74                 	db	116
    99  000D57  61                 	db	97
   100  000D58  6D                 	db	109
   101  000D59  6F                 	db	111
   102  000D5A  73                 	db	115
   103  000D5B  20                 	db	32
   104  000D5C  56                 	db	86
   105  000D5D  69                 	db	105
   106  000D5E  76                 	db	118
   107  000D5F  6F                 	db	111
   108  000D60  73                 	db	115
   109  000D61  00                 	db	0
   110  000D62  00                 	db	0
   111  000D63  00                 	db	0
   112  000D64  00                 	db	0
   113  000D65  43                 	db	67
   114  000D66  68                 	db	104
   115  000D67  65                 	db	101
   116  000D68  69                 	db	105
   117  000D69  61                 	db	97
   118  000D6A  20                 	db	32
   119  000D6B  64                 	db	100
   120  000D6C  65                 	db	101
   121  000D6D  20                 	db	32
   122  000D6E  4D                 	db	77
   123  000D6F  61                 	db	97
   124  000D70  6E                 	db	110
   125  000D71  69                 	db	105
   126  000D72  61                 	db	97
   127  000D73  73                 	db	115
   128  000D74  00                 	db	0
   129  000D75  00                 	db	0
   130  000D76  45                 	db	69
   131  000D77  20                 	db	32
   132  000D78  54                 	db	84
   133  000D79  61                 	db	97
   134  000D7A  72                 	db	114
   135  000D7B  64                 	db	100
   136  000D7C  65                 	db	101
   137  000D7D  20                 	db	32
   138  000D7E  44                 	db	68
   139  000D7F  65                 	db	101
   140  000D80  6D                 	db	109
   141  000D81  61                 	db	97
   142  000D82  69                 	db	105
   143  000D83  73                 	db	115
   144  000D84  00                 	db	0
   145  000D85  00                 	db	0
   146  000D86  00                 	db	0
   147  000D87  53                 	db	83
   148  000D88  6F                 	db	111
   149  000D89  7A                 	db	122
   150  000D8A  69                 	db	105
   151  000D8B  6E                 	db	110
   152  000D8C  68                 	db	104
   153  000D8D  6F                 	db	111
   154  000D8E  00                 	db	0
   155  000D8F  00                 	db	0
   156  000D90  00                 	db	0
   157  000D91  00                 	db	0
   158  000D92  00                 	db	0
   159  000D93  00                 	db	0
   160  000D94  00                 	db	0
   161  000D95  00                 	db	0
   162  000D96  00                 	db	0
   163  000D97  00                 	db	0
   164  000D98  43                 	db	67
   165  000D99  69                 	db	105
   166  000D9A  67                 	db	103
   167  000D9B  61                 	db	97
   168  000D9C  6E                 	db	110
   169  000D9D  61                 	db	97
   170  000D9E  00                 	db	0
   171  000D9F  00                 	db	0
   172  000DA0  00                 	db	0
   173  000DA1  00                 	db	0
   174  000DA2  00                 	db	0
   175  000DA3  00                 	db	0
   176  000DA4  00                 	db	0
   177  000DA5  00                 	db	0
   178  000DA6  00                 	db	0
   179  000DA7  00                 	db	0
   180  000DA8  00                 	db	0
   181  000DA9  43                 	db	67
   182  000DAA  69                 	db	105
   183  000DAB  75                 	db	117
   184  000DAC  6D                 	db	109
   185  000DAD  65                 	db	101
   186  000DAE  73                 	db	115
   187  000DAF  20                 	db	32
   188  000DB0  64                 	db	100
   189  000DB1  65                 	db	101
   190  000DB2  20                 	db	32
   191  000DB3  56                 	db	86
   192  000DB4  6F                 	db	111
   193  000DB5  63                 	db	99
   194  000DB6  65                 	db	101
   195  000DB7  00                 	db	0
   196  000DB8  00                 	db	0
   197  000DB9  00                 	db	0
   198  000DBA  45                 	db	69
   199  000DBB  78                 	db	120
   200  000DBC  74                 	db	116
   201  000DBD  72                 	db	114
   202  000DBE  61                 	db	97
   203  000DBF  70                 	db	112
   204  000DC0  6F                 	db	111
   205  000DC1  6C                 	db	108
   206  000DC2  65                 	db	101
   207  000DC3  69                 	db	105
   208  000DC4  00                 	db	0
   209  000DC5  00                 	db	0
   210  000DC6  00                 	db	0
   211  000DC7  00                 	db	0
   212  000DC8  00                 	db	0
   213  000DC9  00                 	db	0
   214  000DCA  00                 	db	0
   215  000DCB  44                 	db	68
   216  000DCC  65                 	db	101
   217  000DCD  75                 	db	117
   218  000DCE  73                 	db	115
   219  000DCF  20                 	db	32
   220  000DD0  6D                 	db	109
   221  000DD1  65                 	db	101
   222  000DD2  20                 	db	32
   223  000DD3  4C                 	db	76
   224  000DD4  69                 	db	105
   225  000DD5  76                 	db	118
   226  000DD6  72                 	db	114
   227  000DD7  65                 	db	101
   228  000DD8  00                 	db	0
   229  000DD9  00                 	db	0
   230  000DDA  00                 	db	0
   231  000DDB  00                 	db	0
   232  000DDC  4D                 	db	77
   233  000DDD  61                 	db	97
   234  000DDE  72                 	db	114
   235  000DDF  61                 	db	97
   236  000DE0  76                 	db	118
   237  000DE1  69                 	db	105
   238  000DE2  6C                 	db	108
   239  000DE3  68                 	db	104
   240  000DE4  61                 	db	97
   241  000DE5  00                 	db	0
   242  000DE6  00                 	db	0
   243  000DE7  00                 	db	0
   244  000DE8  00                 	db	0
   245  000DE9  00                 	db	0
   246  000DEA  00                 	db	0
   247  000DEB  00                 	db	0
   248  000DEC  00                 	db	0
   249  000DED  4D                 	db	77
   250  000DEE  65                 	db	101
   251  000DEF  64                 	db	100
   252  000DF0  69                 	db	105
   253  000DF1  64                 	db	100
   254  000DF2  61                 	db	97
   255  000DF3  20                 	db	32
   256  000DF4  45                 	db	69
   257  000DF5  78                 	db	120
   258  000DF6  61                 	db	97
   259  000DF7  74                 	db	116
   260  000DF8  61                 	db	97
   261  000DF9  00                 	db	0
   262  000DFA  00                 	db	0
   263  000DFB  00                 	db	0
   264  000DFC  00                 	db	0
   265  000DFD  00                 	db	0
   266                           
   267                           	psect	smallconst
   268  000600                     __psmallconst:
   269                           	callstack 0
   270  000600  00                 	db	0
   271  000601                     _valor@ssd$F102:
   272                           	callstack 0
   273  000601  3F                 	db	63
   274  000602  06                 	db	6
   275  000603  5B                 	db	91
   276  000604  4F                 	db	79
   277  000605  66                 	db	102
   278  000606  6D                 	db	109
   279  000607  7D                 	db	125
   280  000608  07                 	db	7
   281  000609  7F                 	db	127
   282  00060A  6F                 	db	111
   283  00060B  77                 	db	119
   284  00060C  7C                 	db	124
   285  00060D  39                 	db	57
   286  00060E  5E                 	db	94
   287  00060F  79                 	db	121
   288  000610  71                 	db	113
   289  000611                     __end_of_valor@ssd$F102:
   290                           	callstack 0
   291  0000                     _TRISE	set	3990
   292  0000                     _TRISD	set	3989
   293  0000                     _TRISC	set	3988
   294  0000                     _TRISB	set	3987
   295  0000                     _TRISA	set	3986
   296  0000                     _PORTE	set	3972
   297  0000                     _PORTD	set	3971
   298  0000                     _PORTC	set	3970
   299  0000                     _PORTB	set	3969
   300  0000                     _PORTA	set	3968
   301  000611                     STR_4:
   302  000611  3C                 	db	60	;'<'
   303  000612  2D                 	db	45
   304  000613  28                 	db	40
   305  000614  31                 	db	49	;'1'
   306  000615  29                 	db	41
   307  000616  20                 	db	32
   308  000617  28                 	db	40
   309  000618  2A                 	db	42
   310  000619  29                 	db	41
   311  00061A  20                 	db	32
   312  00061B  20                 	db	32
   313  00061C  28                 	db	40
   314  00061D  32                 	db	50	;'2'
   315  00061E  29                 	db	41
   316  00061F  2D                 	db	45
   317  000620  3E                 	db	62	;'>'
   318  000621  00                 	db	0
   319  000622                     STR_3:
   320  000622  45                 	db	69	;'E'
   321  000623  73                 	db	115	;'s'
   322  000624  63                 	db	99	;'c'
   323  000625  6F                 	db	111	;'o'
   324  000626  6C                 	db	108	;'l'
   325  000627  68                 	db	104	;'h'
   326  000628  61                 	db	97	;'a'
   327  000629  20                 	db	32
   328  00062A  61                 	db	97	;'a'
   329  00062B  20                 	db	32
   330  00062C  6D                 	db	109	;'m'
   331  00062D  75                 	db	117	;'u'
   332  00062E  73                 	db	115	;'s'
   333  00062F  69                 	db	105	;'i'
   334  000630  63                 	db	99	;'c'
   335  000631  61                 	db	97	;'a'
   336  000632  00                 	db	0
   337  000633                     STR_2:
   338  000633  50                 	db	80	;'P'
   339  000634  6C                 	db	108	;'l'
   340  000635  61                 	db	97	;'a'
   341  000636  79                 	db	121	;'y'
   342  000637  65                 	db	101	;'e'
   343  000638  72                 	db	114	;'r'
   344  000639  00                 	db	0
   345  00063A                     STR_1:
   346  00063A  4D                 	db	77	;'M'
   347  00063B  50                 	db	80	;'P'
   348  00063C  33                 	db	51	;'3'
   349  00063D  00                 	db	0
   350  00063E  00                 	db	0	; dummy byte at the end
   351  0000                     
   352                           ; #config settings
   353                           
   354                           	psect	cinit
   355  0010FA                     __pcinit:
   356                           	callstack 0
   357  0010FA                     start_initialization:
   358                           	callstack 0
   359  0010FA                     __initialization:
   360                           	callstack 0
   361                           
   362                           ; Initialize objects allocated to BANK2 (170 bytes)
   363                           ; load TBLPTR registers with __pidataBANK2
   364  0010FA  0E54               	movlw	low __pidataBANK2
   365  0010FC  6EF6               	movwf	tblptrl,c
   366  0010FE  0E0D               	movlw	high __pidataBANK2
   367  001100  6EF7               	movwf	tblptrh,c
   368  001102  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   369  001104  6EF8               	movwf	tblptru,c
   370  001106  EE02  F000         	lfsr	0,__pdataBANK2
   371  00110A  EE10 F0AA          	lfsr	1,170
   372  00110E                     copy_data0:
   373  00110E  0009               	tblrd		*+
   374  001110  CFF5 FFEE          	movff	tablat,postinc0
   375  001114  50E5               	movf	postdec1,w,c
   376  001116  50E1               	movf	fsr1l,w,c
   377  001118  E1FA               	bnz	copy_data0
   378                           
   379                           ; Initialize objects allocated to COMRAM (21 bytes)
   380                           ; load TBLPTR registers with __pidataCOMRAM
   381  00111A  0EA2               	movlw	low __pidataCOMRAM
   382  00111C  6EF6               	movwf	tblptrl,c
   383  00111E  0E12               	movlw	high __pidataCOMRAM
   384  001120  6EF7               	movwf	tblptrh,c
   385  001122  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   386  001124  6EF8               	movwf	tblptru,c
   387  001126  EE00  F001         	lfsr	0,__pdataCOMRAM
   388  00112A  EE10 F015          	lfsr	1,21
   389  00112E                     copy_data1:
   390  00112E  0009               	tblrd		*+
   391  001130  CFF5 FFEE          	movff	tablat,postinc0
   392  001134  50E5               	movf	postdec1,w,c
   393  001136  50E1               	movf	fsr1l,w,c
   394  001138  E1FA               	bnz	copy_data1
   395                           
   396                           ; Clear objects allocated to BANK1 (190 bytes)
   397  00113A  EE01  F000         	lfsr	0,__pbssBANK1
   398  00113E  0EBE               	movlw	190
   399  001140                     clear_0:
   400  001140  6AEE               	clrf	postinc0,c
   401  001142  06E8               	decf	wreg,f,c
   402  001144  E1FD               	bnz	clear_0
   403                           
   404                           ; Clear objects allocated to COMRAM (13 bytes)
   405  001146  EE00  F026         	lfsr	0,__pbssCOMRAM
   406  00114A  0E0D               	movlw	13
   407  00114C                     clear_1:
   408  00114C  6AEE               	clrf	postinc0,c
   409  00114E  06E8               	decf	wreg,f,c
   410  001150  E1FD               	bnz	clear_1
   411  001152                     end_of_initialization:
   412                           	callstack 0
   413  001152                     __end_of__initialization:
   414                           	callstack 0
   415  001152  0E00               	movlw	low (__Lmediumconst shr (0+16))
   416  001154  6EF8               	movwf	tblptru,c
   417  001156  0100               	movlb	0
   418  001158  EF50  F007         	goto	_main	;jump to C main() function
   419                           
   420                           	psect	bssCOMRAM
   421  000026                     __pbssCOMRAM:
   422                           	callstack 0
   423  000026                     kpDebounce@valorAntigo:
   424                           	callstack 0
   425  000026                     	ds	2
   426  000028                     kpDebounce@valorNovo:
   427                           	callstack 0
   428  000028                     	ds	2
   429  00002A                     _valor:
   430                           	callstack 0
   431  00002A                     	ds	2
   432  00002C                     _indice:
   433                           	callstack 0
   434  00002C                     	ds	1
   435  00002D                     _v3:
   436                           	callstack 0
   437  00002D                     	ds	1
   438  00002E                     _v2:
   439                           	callstack 0
   440  00002E                     	ds	1
   441  00002F                     _v1:
   442                           	callstack 0
   443  00002F                     	ds	1
   444  000030                     _v0:
   445                           	callstack 0
   446  000030                     	ds	1
   447  000031                     _display:
   448                           	callstack 0
   449  000031                     	ds	1
   450  000032                     kpDebounce@tempo:
   451                           	callstack 0
   452  000032                     	ds	1
   453                           
   454                           	psect	dataCOMRAM
   455  000001                     __pdataCOMRAM:
   456                           	callstack 0
   457  000001                     _duracoes:
   458                           	callstack 0
   459  000001                     	ds	20
   460  000015                     _tecla:
   461                           	callstack 0
   462  000015                     	ds	1
   463                           
   464                           	psect	bssBANK1
   465  000100                     __pbssBANK1:
   466                           	callstack 0
   467  000100                     _musicas:
   468                           	callstack 0
   469  000100                     	ds	190
   470                           
   471                           	psect	dataBANK2
   472  000200                     __pdataBANK2:
   473                           	callstack 0
   474  000200                     _nomes:
   475                           	callstack 0
   476  000200                     	ds	170
   477                           
   478                           	psect	cstackCOMRAM
   479  000016                     __pcstackCOMRAM:
   480                           	callstack 0
   481  000016                     ??_kpDebounce:
   482  000016                     ?_kpRead:
   483                           	callstack 0
   484  000016                     ?___wmul:
   485                           	callstack 0
   486  000016                     Delay40us@i:
   487                           	callstack 0
   488  000016                     digitalWrite@pin:
   489                           	callstack 0
   490  000016                     pinMode@pin:
   491                           	callstack 0
   492  000016                     atraso_ms@t:
   493                           	callstack 0
   494  000016                     ___wmul@multiplier:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x0
   498  000016                     	ds	1
   499  000017                     Delay2ms@i:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0x1
   503  000017                     	ds	1
   504  000018                     digitalWrite@value:
   505                           	callstack 0
   506  000018                     pinMode@type:
   507                           	callstack 0
   508  000018                     atraso_ms@i:
   509                           	callstack 0
   510  000018                     ___wmul@multiplicand:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x2
   514  000018                     	ds	2
   515  00001A                     ??_digitalWrite:
   516  00001A                     ??_pinMode:
   517  00001A                     atraso_ms@j:
   518                           	callstack 0
   519  00001A                     ___wmul@product:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x4
   523  00001A                     	ds	1
   524  00001B                     kpDebounce@old_D:
   525                           	callstack 0
   526  00001B                     atraso_ms@k:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x5
   530  00001B                     	ds	1
   531  00001C                     lcdCommand@old_D:
   532                           	callstack 0
   533  00001C                     lcdData@valor:
   534                           	callstack 0
   535  00001C                     kpDebounce@k:
   536                           	callstack 0
   537  00001C                     strcpy@dest:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x6
   541  00001C                     	ds	1
   542  00001D                     lcdCommand@cmd:
   543                           	callstack 0
   544  00001D                     lcdData@old_D:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0x7
   548  00001D                     	ds	1
   549  00001E                     kpDebounce@j:
   550                           	callstack 0
   551  00001E                     lcdPosition@coluna:
   552                           	callstack 0
   553  00001E                     lcdStr@str:
   554                           	callstack 0
   555  00001E                     strcpy@src:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x8
   559  00001E                     	ds	1
   560  00001F                     kpDebounce@i:
   561                           	callstack 0
   562  00001F                     lcdPosition@linha:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x9
   566  00001F                     	ds	1
   567  000020                     ??_lcdStr:
   568  000020                     lcdPosition@comando:
   569                           	callstack 0
   570  000020                     strcpy@s:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0xA
   574  000020                     	ds	2
   575  000022                     lcdStr@i:
   576                           	callstack 0
   577  000022                     strcpy@d:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0xC
   581  000022                     	ds	1
   582  000023                     ??_chooseSong:
   583                           
   584                           ; 1 bytes @ 0xD
   585  000023                     	ds	1
   586  000024                     songsInit@i:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0xE
   590  000024                     	ds	2
   591  000026                     
   592                           ; 1 bytes @ 0x10
   593 ;;
   594 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   595 ;;
   596 ;; *************** function _main *****************
   597 ;; Defined at:
   598 ;;		line 8 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;		None
   601 ;; Auto vars:     Size  Location     Type
   602 ;;		None
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   612 ;;      Params:         0       0       0       0       0       0       0
   613 ;;      Locals:         0       0       0       0       0       0       0
   614 ;;      Temps:          0       0       0       0       0       0       0
   615 ;;      Totals:         0       0       0       0       0       0       0
   616 ;;Total ram usage:        0 bytes
   617 ;; Hardware stack levels required when called:    5
   618 ;; This function calls:
   619 ;;		_atraso_ms
   620 ;;		_chooseSong
   621 ;;		_kpInit
   622 ;;		_lcdCommand
   623 ;;		_lcdInit
   624 ;;		_lcdPosition
   625 ;;		_lcdStr
   626 ;;		_songsInit
   627 ;; This function is called by:
   628 ;;		Startup code after reset
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           	psect	text0
   633  000EA0                     __ptext0:
   634                           	callstack 0
   635  000EA0                     _main:
   636                           	callstack 26
   637  000EA0                     
   638                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 10:     songsInit();
   639  000EA0  ECFF  F006         	call	_songsInit	;wreg free
   640  000EA4                     
   641                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 11:     lcdInit();
   642  000EA4  ECD3  F007         	call	_lcdInit	;wreg free
   643  000EA8                     
   644                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 12:     kpInit();
   645  000EA8  EC5C  F009         	call	_kpInit	;wreg free
   646  000EAC                     
   647                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 13:     lcdCommand(0x0F);
   648  000EAC  0E0F               	movlw	15
   649  000EAE  EC94  F007         	call	_lcdCommand
   650  000EB2                     
   651                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 15:     lcdPosition(0, 6);
   652  000EB2  0E06               	movlw	6
   653  000EB4  6E1E               	movwf	lcdPosition@coluna^0,c
   654  000EB6  0E00               	movlw	0
   655  000EB8  ECAE  F008         	call	_lcdPosition
   656  000EBC                     
   657                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 16:     lcdStr("MP3");
   658  000EBC  0E3A               	movlw	low STR_1
   659  000EBE  6E1E               	movwf	lcdStr@str^0,c
   660  000EC0  0E06               	movlw	high STR_1
   661  000EC2  6E1F               	movwf	(lcdStr@str+1)^0,c
   662  000EC4  EC0F  F008         	call	_lcdStr	;wreg free
   663  000EC8                     
   664                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 17:     lcdPosition(1, 6);
   665  000EC8  0E06               	movlw	6
   666  000ECA  6E1E               	movwf	lcdPosition@coluna^0,c
   667  000ECC  0E01               	movlw	1
   668  000ECE  ECAE  F008         	call	_lcdPosition
   669  000ED2                     
   670                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 18:     lcdStr("Player");
   671  000ED2  0E33               	movlw	low STR_2
   672  000ED4  6E1E               	movwf	lcdStr@str^0,c
   673  000ED6  0E06               	movlw	high STR_2
   674  000ED8  6E1F               	movwf	(lcdStr@str+1)^0,c
   675  000EDA  EC0F  F008         	call	_lcdStr	;wreg free
   676  000EDE                     
   677                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 19:     atraso_ms(2000);
   678  000EDE  0E07               	movlw	7
   679  000EE0  6E17               	movwf	(atraso_ms@t+1)^0,c
   680  000EE2  0ED0               	movlw	208
   681  000EE4  6E16               	movwf	atraso_ms@t^0,c
   682  000EE6  EC4B  F008         	call	_atraso_ms	;wreg free
   683  000EEA                     
   684                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 21:     lcdCommand(0x01);
   685  000EEA  0E01               	movlw	1
   686  000EEC  EC94  F007         	call	_lcdCommand
   687  000EF0                     
   688                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 22:     lcdPosition(0, 0);
   689  000EF0  0E00               	movlw	0
   690  000EF2  6E1E               	movwf	lcdPosition@coluna^0,c
   691  000EF4  0E00               	movlw	0
   692  000EF6  ECAE  F008         	call	_lcdPosition
   693  000EFA                     
   694                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 23:     lcdStr("Escolha a musica"
      +                          );
   695  000EFA  0E22               	movlw	low STR_3
   696  000EFC  6E1E               	movwf	lcdStr@str^0,c
   697  000EFE  0E06               	movlw	high STR_3
   698  000F00  6E1F               	movwf	(lcdStr@str+1)^0,c
   699  000F02  EC0F  F008         	call	_lcdStr	;wreg free
   700  000F06                     l1800:
   701                           
   702                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 26:         lcdPosition(1, 0);
   703  000F06  0E00               	movlw	0
   704  000F08  6E1E               	movwf	lcdPosition@coluna^0,c
   705  000F0A  0E01               	movlw	1
   706  000F0C  ECAE  F008         	call	_lcdPosition
   707  000F10                     
   708                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 27:         lcdStr("<-(1) (*)  (2
      +                          )->");
   709  000F10  0E11               	movlw	low STR_4
   710  000F12  6E1E               	movwf	lcdStr@str^0,c
   711  000F14  0E06               	movlw	high STR_4
   712  000F16  6E1F               	movwf	(lcdStr@str+1)^0,c
   713  000F18  EC0F  F008         	call	_lcdStr	;wreg free
   714  000F1C                     
   715                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 28:         chooseSong();
   716  000F1C  EC2B  F006         	call	_chooseSong	;wreg free
   717                           
   718                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 29:     }
   719  000F20  EF83  F007         	goto	l1800
   720  000F24  EF00  F000         	goto	start
   721  000F28                     __end_of_main:
   722                           	callstack 0
   723                           
   724 ;; *************** function _songsInit *****************
   725 ;; Defined at:
   726 ;;		line 21 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;		None
   729 ;; Auto vars:     Size  Location     Type
   730 ;;  i               2   14[COMRAM] unsigned int 
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   740 ;;      Params:         0       0       0       0       0       0       0
   741 ;;      Locals:         2       0       0       0       0       0       0
   742 ;;      Temps:          0       0       0       0       0       0       0
   743 ;;      Totals:         2       0       0       0       0       0       0
   744 ;;Total ram usage:        2 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; Hardware stack levels required when called:    1
   747 ;; This function calls:
   748 ;;		___wmul
   749 ;;		_strcpy
   750 ;; This function is called by:
   751 ;;		_main
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           	psect	text1
   756  000DFE                     __ptext1:
   757                           	callstack 0
   758  000DFE                     _songsInit:
   759                           	callstack 29
   760  000DFE                     
   761                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 23:     for (unsigned int i = 0;
      +                           i < 10; i++) {
   762  000DFE  0E00               	movlw	0
   763  000E00  6E25               	movwf	(songsInit@i+1)^0,c
   764  000E02  0E00               	movlw	0
   765  000E04  6E24               	movwf	songsInit@i^0,c
   766  000E06                     l1650:
   767                           
   768                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 24:         musicas[i].duracao =
      +                           duracoes[i];
   769  000E06  90D8               	bcf	status,0,c
   770  000E08  3424               	rlcf	songsInit@i^0,w,c
   771  000E0A  6ED9               	movwf	fsr2l,c
   772  000E0C  3425               	rlcf	(songsInit@i+1)^0,w,c
   773  000E0E  6EDA               	movwf	fsr2h,c
   774  000E10  0E01               	movlw	low _duracoes
   775  000E12  26D9               	addwf	fsr2l,f,c
   776  000E14  0E00               	movlw	high _duracoes
   777  000E16  22DA               	addwfc	fsr2h,f,c
   778  000E18  C024  F016         	movff	songsInit@i,___wmul@multiplier
   779  000E1C  C025  F017         	movff	songsInit@i+1,___wmul@multiplier+1
   780  000E20  0E00               	movlw	0
   781  000E22  6E19               	movwf	(___wmul@multiplicand+1)^0,c
   782  000E24  0E13               	movlw	19
   783  000E26  6E18               	movwf	___wmul@multiplicand^0,c
   784  000E28  EC24  F009         	call	___wmul	;wreg free
   785  000E2C  0E00               	movlw	low _musicas
   786  000E2E  2416               	addwf	?___wmul^0,w,c
   787  000E30  6EE1               	movwf	fsr1l,c
   788  000E32  0E01               	movlw	high _musicas
   789  000E34  2017               	addwfc	(?___wmul+1)^0,w,c
   790  000E36  6EE2               	movwf	fsr1h,c
   791  000E38  CFDE FFE6          	movff	postinc2,postinc1
   792  000E3C  CFDD FFE5          	movff	postdec2,postdec1
   793                           
   794                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 25:         strcpy(musicas[i].no
      +                          me, (char*) nomes[i]);
   795  000E40  C024  F016         	movff	songsInit@i,___wmul@multiplier
   796  000E44  C025  F017         	movff	songsInit@i+1,___wmul@multiplier+1
   797  000E48  0E00               	movlw	0
   798  000E4A  6E19               	movwf	(___wmul@multiplicand+1)^0,c
   799  000E4C  0E13               	movlw	19
   800  000E4E  6E18               	movwf	___wmul@multiplicand^0,c
   801  000E50  EC24  F009         	call	___wmul	;wreg free
   802  000E54  0E02               	movlw	low (_musicas+2)
   803  000E56  2416               	addwf	?___wmul^0,w,c
   804  000E58  6E1C               	movwf	strcpy@dest^0,c
   805  000E5A  0E01               	movlw	high (_musicas+2)
   806  000E5C  2017               	addwfc	(?___wmul+1)^0,w,c
   807  000E5E  6E1D               	movwf	(strcpy@dest+1)^0,c
   808  000E60  C024  F016         	movff	songsInit@i,___wmul@multiplier
   809  000E64  C025  F017         	movff	songsInit@i+1,___wmul@multiplier+1
   810  000E68  0E00               	movlw	0
   811  000E6A  6E19               	movwf	(___wmul@multiplicand+1)^0,c
   812  000E6C  0E11               	movlw	17
   813  000E6E  6E18               	movwf	___wmul@multiplicand^0,c
   814  000E70  EC24  F009         	call	___wmul	;wreg free
   815  000E74  0E00               	movlw	low _nomes
   816  000E76  2416               	addwf	?___wmul^0,w,c
   817  000E78  6E1E               	movwf	strcpy@src^0,c
   818  000E7A  0E02               	movlw	high _nomes
   819  000E7C  2017               	addwfc	(?___wmul+1)^0,w,c
   820  000E7E  6E1F               	movwf	(strcpy@src+1)^0,c
   821  000E80  EC05  F009         	call	_strcpy	;wreg free
   822  000E84                     
   823                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 26:     }
   824  000E84  4A24               	infsnz	songsInit@i^0,f,c
   825  000E86  2A25               	incf	(songsInit@i+1)^0,f,c
   826  000E88  5025               	movf	(songsInit@i+1)^0,w,c
   827  000E8A  E109               	bnz	u1410
   828  000E8C  0E0A               	movlw	10
   829  000E8E  5C24               	subwf	songsInit@i^0,w,c
   830  000E90  A0D8               	btfss	status,0,c
   831  000E92  EF4D  F007         	goto	u1411
   832  000E96  EF4F  F007         	goto	u1410
   833  000E9A                     u1411:
   834  000E9A  EF03  F007         	goto	l1650
   835  000E9E                     u1410:
   836  000E9E  0012               	return		;funcret
   837  000EA0                     __end_of_songsInit:
   838                           	callstack 0
   839                           
   840 ;; *************** function _strcpy *****************
   841 ;; Defined at:
   842 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strcpy.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;  dest            2    6[COMRAM] PTR unsigned char 
   845 ;;		 -> musicas(190), 
   846 ;;  src             2    8[COMRAM] PTR const unsigned char 
   847 ;;		 -> nomes(170), 
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  d               2   12[COMRAM] PTR unsigned char 
   850 ;;		 -> musicas(190), 
   851 ;;  s               2   10[COMRAM] PTR const unsigned char 
   852 ;;		 -> nomes(170), 
   853 ;; Return value:  Size  Location     Type
   854 ;;                  2    6[COMRAM] PTR unsigned char 
   855 ;; Registers used:
   856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   862 ;;      Params:         4       0       0       0       0       0       0
   863 ;;      Locals:         4       0       0       0       0       0       0
   864 ;;      Temps:          0       0       0       0       0       0       0
   865 ;;      Totals:         8       0       0       0       0       0       0
   866 ;;Total ram usage:        8 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; This function calls:
   869 ;;		Nothing
   870 ;; This function is called by:
   871 ;;		_songsInit
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           	psect	text2
   876  00120A                     __ptext2:
   877                           	callstack 0
   878  00120A                     _strcpy:
   879                           	callstack 29
   880  00120A  C01E  F020         	movff	strcpy@src,strcpy@s
   881  00120E  C01F  F021         	movff	strcpy@src+1,strcpy@s+1
   882  001212  C01C  F022         	movff	strcpy@dest,strcpy@d
   883  001216  C01D  F023         	movff	strcpy@dest+1,strcpy@d+1
   884  00121A                     l1610:
   885  00121A  C020  FFD9         	movff	strcpy@s,fsr2l
   886  00121E  C021  FFDA         	movff	strcpy@s+1,fsr2h
   887  001222  4A20               	infsnz	strcpy@s^0,f,c
   888  001224  2A21               	incf	(strcpy@s+1)^0,f,c
   889  001226  C022  FFE1         	movff	strcpy@d,fsr1l
   890  00122A  C023  FFE2         	movff	strcpy@d+1,fsr1h
   891  00122E  4A22               	infsnz	strcpy@d^0,f,c
   892  001230  2A23               	incf	(strcpy@d+1)^0,f,c
   893  001232  CFDF FFE7          	movff	indf2,indf1
   894  001236  50E7               	movf	indf1,w,c
   895  001238  A4D8               	btfss	status,2,c
   896  00123A  EF21  F009         	goto	u1371
   897  00123E  EF23  F009         	goto	u1370
   898  001242                     u1371:
   899  001242  EF0D  F009         	goto	l1610
   900  001246                     u1370:
   901  001246  0012               	return		;funcret
   902  001248                     __end_of_strcpy:
   903                           	callstack 0
   904                           
   905 ;; *************** function ___wmul *****************
   906 ;; Defined at:
   907 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\Umul16.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;  multiplier      2    0[COMRAM] unsigned int 
   910 ;;  multiplicand    2    2[COMRAM] unsigned int 
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  product         2    4[COMRAM] unsigned int 
   913 ;; Return value:  Size  Location     Type
   914 ;;                  2    0[COMRAM] unsigned int 
   915 ;; Registers used:
   916 ;;		wreg, status,2, status,0, prodl, prodh
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   922 ;;      Params:         4       0       0       0       0       0       0
   923 ;;      Locals:         2       0       0       0       0       0       0
   924 ;;      Temps:          0       0       0       0       0       0       0
   925 ;;      Totals:         6       0       0       0       0       0       0
   926 ;;Total ram usage:        6 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; This function calls:
   929 ;;		Nothing
   930 ;; This function is called by:
   931 ;;		_songsInit
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text3
   936  001248                     __ptext3:
   937                           	callstack 0
   938  001248                     ___wmul:
   939                           	callstack 29
   940  001248  5016               	movf	___wmul@multiplier^0,w,c
   941  00124A  0218               	mulwf	___wmul@multiplicand^0,c
   942  00124C  CFF3 F01A          	movff	prodl,___wmul@product
   943  001250  CFF4 F01B          	movff	prodh,___wmul@product+1
   944  001254  5016               	movf	___wmul@multiplier^0,w,c
   945  001256  0219               	mulwf	(___wmul@multiplicand+1)^0,c
   946  001258  50F3               	movf	243,w,c
   947  00125A  261B               	addwf	(___wmul@product+1)^0,f,c
   948  00125C  5017               	movf	(___wmul@multiplier+1)^0,w,c
   949  00125E  0218               	mulwf	___wmul@multiplicand^0,c
   950  001260  50F3               	movf	243,w,c
   951  001262  261B               	addwf	(___wmul@product+1)^0,f,c
   952  001264  C01A  F016         	movff	___wmul@product,?___wmul
   953  001268  C01B  F017         	movff	___wmul@product+1,?___wmul+1
   954  00126C  0012               	return		;funcret
   955  00126E                     __end_of___wmul:
   956                           	callstack 0
   957                           
   958 ;; *************** function _lcdInit *****************
   959 ;; Defined at:
   960 ;;		line 87 in file "lcd.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;		None
   963 ;; Auto vars:     Size  Location     Type
   964 ;;		None
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      void 
   967 ;; Registers used:
   968 ;;		wreg, status,2, status,0, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   974 ;;      Params:         0       0       0       0       0       0       0
   975 ;;      Locals:         0       0       0       0       0       0       0
   976 ;;      Temps:          0       0       0       0       0       0       0
   977 ;;      Totals:         0       0       0       0       0       0       0
   978 ;;Total ram usage:        0 bytes
   979 ;; Hardware stack levels used:    1
   980 ;; Hardware stack levels required when called:    3
   981 ;; This function calls:
   982 ;;		_Delay2ms
   983 ;;		_lcdCommand
   984 ;;		_pinMode
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text4
   991  000FA6                     __ptext4:
   992                           	callstack 0
   993  000FA6                     _lcdInit:
   994                           	callstack 27
   995  000FA6                     
   996                           ;lcd.c: 89:     pinMode(PIN_E2, 0);
   997  000FA6  0E00               	movlw	0
   998  000FA8  6E17               	movwf	(pinMode@pin+1)^0,c
   999  000FAA  0E22               	movlw	34
  1000  000FAC  6E16               	movwf	pinMode@pin^0,c
  1001  000FAE  0E00               	movlw	0
  1002  000FB0  6E19               	movwf	(pinMode@type+1)^0,c
  1003  000FB2  0E00               	movlw	0
  1004  000FB4  6E18               	movwf	pinMode@type^0,c
  1005  000FB6  EC20  F003         	call	_pinMode	;wreg free
  1006                           
  1007                           ;lcd.c: 90:     pinMode(PIN_E1, 0);
  1008  000FBA  0E00               	movlw	0
  1009  000FBC  6E17               	movwf	(pinMode@pin+1)^0,c
  1010  000FBE  0E21               	movlw	33
  1011  000FC0  6E16               	movwf	pinMode@pin^0,c
  1012  000FC2  0E00               	movlw	0
  1013  000FC4  6E19               	movwf	(pinMode@type+1)^0,c
  1014  000FC6  0E00               	movlw	0
  1015  000FC8  6E18               	movwf	pinMode@type^0,c
  1016  000FCA  EC20  F003         	call	_pinMode	;wreg free
  1017  000FCE                     
  1018                           ;lcd.c: 91:     TRISD = 0x00;
  1019  000FCE  0E00               	movlw	0
  1020  000FD0  6E95               	movwf	149,c	;volatile
  1021  000FD2                     
  1022                           ;lcd.c: 94:     Delay2ms();
  1023  000FD2  EC37  F009         	call	_Delay2ms	;wreg free
  1024  000FD6                     
  1025                           ;lcd.c: 95:     Delay2ms();
  1026  000FD6  EC37  F009         	call	_Delay2ms	;wreg free
  1027  000FDA                     
  1028                           ;lcd.c: 96:     Delay2ms();
  1029  000FDA  EC37  F009         	call	_Delay2ms	;wreg free
  1030  000FDE                     
  1031                           ;lcd.c: 97:     Delay2ms();
  1032  000FDE  EC37  F009         	call	_Delay2ms	;wreg free
  1033  000FE2                     
  1034                           ;lcd.c: 98:     Delay2ms();
  1035  000FE2  EC37  F009         	call	_Delay2ms	;wreg free
  1036  000FE6                     
  1037                           ;lcd.c: 100:     lcdCommand(0x38);
  1038  000FE6  0E38               	movlw	56
  1039  000FE8  EC94  F007         	call	_lcdCommand
  1040  000FEC                     
  1041                           ;lcd.c: 101:     Delay2ms();
  1042  000FEC  EC37  F009         	call	_Delay2ms	;wreg free
  1043  000FF0                     
  1044                           ;lcd.c: 102:     Delay2ms();
  1045  000FF0  EC37  F009         	call	_Delay2ms	;wreg free
  1046  000FF4                     
  1047                           ;lcd.c: 103:     lcdCommand(0x38);
  1048  000FF4  0E38               	movlw	56
  1049  000FF6  EC94  F007         	call	_lcdCommand
  1050  000FFA                     
  1051                           ;lcd.c: 104:     Delay2ms();
  1052  000FFA  EC37  F009         	call	_Delay2ms	;wreg free
  1053  000FFE                     
  1054                           ;lcd.c: 105:     lcdCommand(0x38);
  1055  000FFE  0E38               	movlw	56
  1056  001000  EC94  F007         	call	_lcdCommand
  1057  001004                     
  1058                           ;lcd.c: 107:     lcdCommand(0x38);
  1059  001004  0E38               	movlw	56
  1060  001006  EC94  F007         	call	_lcdCommand
  1061  00100A                     
  1062                           ;lcd.c: 108:     lcdCommand(0x06);
  1063  00100A  0E06               	movlw	6
  1064  00100C  EC94  F007         	call	_lcdCommand
  1065  001010                     
  1066                           ;lcd.c: 111:     lcdCommand(0x0C);
  1067  001010  0E0C               	movlw	12
  1068  001012  EC94  F007         	call	_lcdCommand
  1069  001016                     
  1070                           ;lcd.c: 112:     lcdCommand(0x01);
  1071  001016  0E01               	movlw	1
  1072  001018  EC94  F007         	call	_lcdCommand
  1073  00101C  0012               	return		;funcret
  1074  00101E                     __end_of_lcdInit:
  1075                           	callstack 0
  1076                           
  1077 ;; *************** function _pinMode *****************
  1078 ;; Defined at:
  1079 ;;		line 54 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  pin             2    0[COMRAM] int 
  1082 ;;  type            2    2[COMRAM] int 
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;		None
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  1    wreg      void 
  1087 ;; Registers used:
  1088 ;;		wreg, status,2, status,0
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1094 ;;      Params:         4       0       0       0       0       0       0
  1095 ;;      Locals:         0       0       0       0       0       0       0
  1096 ;;      Temps:          2       0       0       0       0       0       0
  1097 ;;      Totals:         6       0       0       0       0       0       0
  1098 ;;Total ram usage:        6 bytes
  1099 ;; Hardware stack levels used:    1
  1100 ;; This function calls:
  1101 ;;		Nothing
  1102 ;; This function is called by:
  1103 ;;		_lcdInit
  1104 ;;		_ssdInit
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           	psect	text5
  1109  000640                     __ptext5:
  1110                           	callstack 0
  1111  000640                     _pinMode:
  1112                           	callstack 29
  1113  000640                     
  1114                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 56:     if(pin <8){
  1115  000640  BE17               	btfsc	(pinMode@pin+1)^0,7,c
  1116  000642  EF2E  F003         	goto	u1100
  1117  000646  5017               	movf	(pinMode@pin+1)^0,w,c
  1118  000648  E107               	bnz	u1101
  1119  00064A  0E08               	movlw	8
  1120  00064C  5C16               	subwf	pinMode@pin^0,w,c
  1121  00064E  B0D8               	btfsc	status,0,c
  1122  000650  EF2C  F003         	goto	u1101
  1123  000654  EF2E  F003         	goto	u1100
  1124  000658                     u1101:
  1125  000658  EF58  F003         	goto	l1548
  1126  00065C                     u1100:
  1127  00065C                     
  1128                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 57:         if (type){ ((TRISA) |= 
      +                          (1<<(pin)));}
  1129  00065C  5018               	movf	pinMode@type^0,w,c
  1130  00065E  1019               	iorwf	(pinMode@type+1)^0,w,c
  1131  000660  B4D8               	btfsc	status,2,c
  1132  000662  EF35  F003         	goto	u1111
  1133  000666  EF37  F003         	goto	u1110
  1134  00066A                     u1111:
  1135  00066A  EF47  F003         	goto	l1546
  1136  00066E                     u1110:
  1137  00066E  C016  F01A         	movff	pinMode@pin,??_pinMode
  1138  000672  0E01               	movlw	1
  1139  000674  6E1B               	movwf	(??_pinMode+1)^0,c
  1140  000676  2A1A               	incf	??_pinMode^0,f,c
  1141  000678  EF40  F003         	goto	u1124
  1142  00067C                     u1125:
  1143  00067C  90D8               	bcf	status,0,c
  1144  00067E  361B               	rlcf	(??_pinMode+1)^0,f,c
  1145  000680                     u1124:
  1146  000680  2E1A               	decfsz	??_pinMode^0,f,c
  1147  000682  EF3E  F003         	goto	u1125
  1148  000686  501B               	movf	(??_pinMode+1)^0,w,c
  1149  000688  1292               	iorwf	146,f,c	;volatile
  1150  00068A  EF46  F004         	goto	l76
  1151  00068E                     l1546:
  1152  00068E  C016  F01A         	movff	pinMode@pin,??_pinMode
  1153  000692  0E01               	movlw	1
  1154  000694  6E1B               	movwf	(??_pinMode+1)^0,c
  1155  000696  2A1A               	incf	??_pinMode^0,f,c
  1156  000698  EF50  F003         	goto	u1134
  1157  00069C                     u1135:
  1158  00069C  90D8               	bcf	status,0,c
  1159  00069E  361B               	rlcf	(??_pinMode+1)^0,f,c
  1160  0006A0                     u1134:
  1161  0006A0  2E1A               	decfsz	??_pinMode^0,f,c
  1162  0006A2  EF4E  F003         	goto	u1135
  1163  0006A6  501B               	movf	(??_pinMode+1)^0,w,c
  1164  0006A8  0AFF               	xorlw	255
  1165  0006AA  1692               	andwf	146,f,c	;volatile
  1166  0006AC  EF46  F004         	goto	l76
  1167  0006B0                     l1548:
  1168  0006B0  BE17               	btfsc	(pinMode@pin+1)^0,7,c
  1169  0006B2  EF66  F003         	goto	u1140
  1170  0006B6  5017               	movf	(pinMode@pin+1)^0,w,c
  1171  0006B8  E107               	bnz	u1141
  1172  0006BA  0E10               	movlw	16
  1173  0006BC  5C16               	subwf	pinMode@pin^0,w,c
  1174  0006BE  B0D8               	btfsc	status,0,c
  1175  0006C0  EF64  F003         	goto	u1141
  1176  0006C4  EF66  F003         	goto	u1140
  1177  0006C8                     u1141:
  1178  0006C8  EF94  F003         	goto	l1556
  1179  0006CC                     u1140:
  1180  0006CC                     
  1181                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 60:         if (type){ ((TRISB) |= 
      +                          (1<<(pin-8)));}
  1182  0006CC  5018               	movf	pinMode@type^0,w,c
  1183  0006CE  1019               	iorwf	(pinMode@type+1)^0,w,c
  1184  0006D0  B4D8               	btfsc	status,2,c
  1185  0006D2  EF6D  F003         	goto	u1151
  1186  0006D6  EF6F  F003         	goto	u1150
  1187  0006DA                     u1151:
  1188  0006DA  EF81  F003         	goto	l1554
  1189  0006DE                     u1150:
  1190  0006DE  C016  F01A         	movff	pinMode@pin,??_pinMode
  1191  0006E2  0EF8               	movlw	-8
  1192  0006E4  261A               	addwf	??_pinMode^0,f,c
  1193  0006E6  0E01               	movlw	1
  1194  0006E8  6E1B               	movwf	(??_pinMode+1)^0,c
  1195  0006EA  2A1A               	incf	??_pinMode^0,f,c
  1196  0006EC  EF7A  F003         	goto	u1164
  1197  0006F0                     u1165:
  1198  0006F0  90D8               	bcf	status,0,c
  1199  0006F2  361B               	rlcf	(??_pinMode+1)^0,f,c
  1200  0006F4                     u1164:
  1201  0006F4  2E1A               	decfsz	??_pinMode^0,f,c
  1202  0006F6  EF78  F003         	goto	u1165
  1203  0006FA  501B               	movf	(??_pinMode+1)^0,w,c
  1204  0006FC  1293               	iorwf	147,f,c	;volatile
  1205  0006FE  EF46  F004         	goto	l76
  1206  000702                     l1554:
  1207  000702  C016  F01A         	movff	pinMode@pin,??_pinMode
  1208  000706  0EF8               	movlw	-8
  1209  000708  261A               	addwf	??_pinMode^0,f,c
  1210  00070A  0E01               	movlw	1
  1211  00070C  6E1B               	movwf	(??_pinMode+1)^0,c
  1212  00070E  2A1A               	incf	??_pinMode^0,f,c
  1213  000710  EF8C  F003         	goto	u1174
  1214  000714                     u1175:
  1215  000714  90D8               	bcf	status,0,c
  1216  000716  361B               	rlcf	(??_pinMode+1)^0,f,c
  1217  000718                     u1174:
  1218  000718  2E1A               	decfsz	??_pinMode^0,f,c
  1219  00071A  EF8A  F003         	goto	u1175
  1220  00071E  501B               	movf	(??_pinMode+1)^0,w,c
  1221  000720  0AFF               	xorlw	255
  1222  000722  1693               	andwf	147,f,c	;volatile
  1223  000724  EF46  F004         	goto	l76
  1224  000728                     l1556:
  1225  000728  BE17               	btfsc	(pinMode@pin+1)^0,7,c
  1226  00072A  EFA2  F003         	goto	u1180
  1227  00072E  5017               	movf	(pinMode@pin+1)^0,w,c
  1228  000730  E107               	bnz	u1181
  1229  000732  0E18               	movlw	24
  1230  000734  5C16               	subwf	pinMode@pin^0,w,c
  1231  000736  B0D8               	btfsc	status,0,c
  1232  000738  EFA0  F003         	goto	u1181
  1233  00073C  EFA2  F003         	goto	u1180
  1234  000740                     u1181:
  1235  000740  EFD0  F003         	goto	l1564
  1236  000744                     u1180:
  1237  000744                     
  1238                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 63:         if (type){ ((TRISC) |= 
      +                          (1<<(pin-16)));}
  1239  000744  5018               	movf	pinMode@type^0,w,c
  1240  000746  1019               	iorwf	(pinMode@type+1)^0,w,c
  1241  000748  B4D8               	btfsc	status,2,c
  1242  00074A  EFA9  F003         	goto	u1191
  1243  00074E  EFAB  F003         	goto	u1190
  1244  000752                     u1191:
  1245  000752  EFBD  F003         	goto	l1562
  1246  000756                     u1190:
  1247  000756  C016  F01A         	movff	pinMode@pin,??_pinMode
  1248  00075A  0EF0               	movlw	-16
  1249  00075C  261A               	addwf	??_pinMode^0,f,c
  1250  00075E  0E01               	movlw	1
  1251  000760  6E1B               	movwf	(??_pinMode+1)^0,c
  1252  000762  2A1A               	incf	??_pinMode^0,f,c
  1253  000764  EFB6  F003         	goto	u1204
  1254  000768                     u1205:
  1255  000768  90D8               	bcf	status,0,c
  1256  00076A  361B               	rlcf	(??_pinMode+1)^0,f,c
  1257  00076C                     u1204:
  1258  00076C  2E1A               	decfsz	??_pinMode^0,f,c
  1259  00076E  EFB4  F003         	goto	u1205
  1260  000772  501B               	movf	(??_pinMode+1)^0,w,c
  1261  000774  1294               	iorwf	148,f,c	;volatile
  1262  000776  EF46  F004         	goto	l76
  1263  00077A                     l1562:
  1264  00077A  C016  F01A         	movff	pinMode@pin,??_pinMode
  1265  00077E  0EF0               	movlw	-16
  1266  000780  261A               	addwf	??_pinMode^0,f,c
  1267  000782  0E01               	movlw	1
  1268  000784  6E1B               	movwf	(??_pinMode+1)^0,c
  1269  000786  2A1A               	incf	??_pinMode^0,f,c
  1270  000788  EFC8  F003         	goto	u1214
  1271  00078C                     u1215:
  1272  00078C  90D8               	bcf	status,0,c
  1273  00078E  361B               	rlcf	(??_pinMode+1)^0,f,c
  1274  000790                     u1214:
  1275  000790  2E1A               	decfsz	??_pinMode^0,f,c
  1276  000792  EFC6  F003         	goto	u1215
  1277  000796  501B               	movf	(??_pinMode+1)^0,w,c
  1278  000798  0AFF               	xorlw	255
  1279  00079A  1694               	andwf	148,f,c	;volatile
  1280  00079C  EF46  F004         	goto	l76
  1281  0007A0                     l1564:
  1282  0007A0  BE17               	btfsc	(pinMode@pin+1)^0,7,c
  1283  0007A2  EFDE  F003         	goto	u1220
  1284  0007A6  5017               	movf	(pinMode@pin+1)^0,w,c
  1285  0007A8  E107               	bnz	u1221
  1286  0007AA  0E20               	movlw	32
  1287  0007AC  5C16               	subwf	pinMode@pin^0,w,c
  1288  0007AE  B0D8               	btfsc	status,0,c
  1289  0007B0  EFDC  F003         	goto	u1221
  1290  0007B4  EFDE  F003         	goto	u1220
  1291  0007B8                     u1221:
  1292  0007B8  EF0C  F004         	goto	l1572
  1293  0007BC                     u1220:
  1294  0007BC                     
  1295                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 66:         if (type){ ((TRISD) |= 
      +                          (1<<(pin-24)));}
  1296  0007BC  5018               	movf	pinMode@type^0,w,c
  1297  0007BE  1019               	iorwf	(pinMode@type+1)^0,w,c
  1298  0007C0  B4D8               	btfsc	status,2,c
  1299  0007C2  EFE5  F003         	goto	u1231
  1300  0007C6  EFE7  F003         	goto	u1230
  1301  0007CA                     u1231:
  1302  0007CA  EFF9  F003         	goto	l1570
  1303  0007CE                     u1230:
  1304  0007CE  C016  F01A         	movff	pinMode@pin,??_pinMode
  1305  0007D2  0EE8               	movlw	-24
  1306  0007D4  261A               	addwf	??_pinMode^0,f,c
  1307  0007D6  0E01               	movlw	1
  1308  0007D8  6E1B               	movwf	(??_pinMode+1)^0,c
  1309  0007DA  2A1A               	incf	??_pinMode^0,f,c
  1310  0007DC  EFF2  F003         	goto	u1244
  1311  0007E0                     u1245:
  1312  0007E0  90D8               	bcf	status,0,c
  1313  0007E2  361B               	rlcf	(??_pinMode+1)^0,f,c
  1314  0007E4                     u1244:
  1315  0007E4  2E1A               	decfsz	??_pinMode^0,f,c
  1316  0007E6  EFF0  F003         	goto	u1245
  1317  0007EA  501B               	movf	(??_pinMode+1)^0,w,c
  1318  0007EC  1295               	iorwf	149,f,c	;volatile
  1319  0007EE  EF46  F004         	goto	l76
  1320  0007F2                     l1570:
  1321  0007F2  C016  F01A         	movff	pinMode@pin,??_pinMode
  1322  0007F6  0EE8               	movlw	-24
  1323  0007F8  261A               	addwf	??_pinMode^0,f,c
  1324  0007FA  0E01               	movlw	1
  1325  0007FC  6E1B               	movwf	(??_pinMode+1)^0,c
  1326  0007FE  2A1A               	incf	??_pinMode^0,f,c
  1327  000800  EF04  F004         	goto	u1254
  1328  000804                     u1255:
  1329  000804  90D8               	bcf	status,0,c
  1330  000806  361B               	rlcf	(??_pinMode+1)^0,f,c
  1331  000808                     u1254:
  1332  000808  2E1A               	decfsz	??_pinMode^0,f,c
  1333  00080A  EF02  F004         	goto	u1255
  1334  00080E  501B               	movf	(??_pinMode+1)^0,w,c
  1335  000810  0AFF               	xorlw	255
  1336  000812  1695               	andwf	149,f,c	;volatile
  1337  000814  EF46  F004         	goto	l76
  1338  000818                     l1572:
  1339  000818  BE17               	btfsc	(pinMode@pin+1)^0,7,c
  1340  00081A  EF1A  F004         	goto	u1260
  1341  00081E  5017               	movf	(pinMode@pin+1)^0,w,c
  1342  000820  E107               	bnz	u1261
  1343  000822  0E28               	movlw	40
  1344  000824  5C16               	subwf	pinMode@pin^0,w,c
  1345  000826  B0D8               	btfsc	status,0,c
  1346  000828  EF18  F004         	goto	u1261
  1347  00082C  EF1A  F004         	goto	u1260
  1348  000830                     u1261:
  1349  000830  EF46  F004         	goto	l76
  1350  000834                     u1260:
  1351  000834                     
  1352                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 69:         if (type){ ((TRISE) |= 
      +                          (1<<(pin-32)));}
  1353  000834  5018               	movf	pinMode@type^0,w,c
  1354  000836  1019               	iorwf	(pinMode@type+1)^0,w,c
  1355  000838  B4D8               	btfsc	status,2,c
  1356  00083A  EF21  F004         	goto	u1271
  1357  00083E  EF23  F004         	goto	u1270
  1358  000842                     u1271:
  1359  000842  EF35  F004         	goto	l1578
  1360  000846                     u1270:
  1361  000846  C016  F01A         	movff	pinMode@pin,??_pinMode
  1362  00084A  0EE0               	movlw	-32
  1363  00084C  261A               	addwf	??_pinMode^0,f,c
  1364  00084E  0E01               	movlw	1
  1365  000850  6E1B               	movwf	(??_pinMode+1)^0,c
  1366  000852  2A1A               	incf	??_pinMode^0,f,c
  1367  000854  EF2E  F004         	goto	u1284
  1368  000858                     u1285:
  1369  000858  90D8               	bcf	status,0,c
  1370  00085A  361B               	rlcf	(??_pinMode+1)^0,f,c
  1371  00085C                     u1284:
  1372  00085C  2E1A               	decfsz	??_pinMode^0,f,c
  1373  00085E  EF2C  F004         	goto	u1285
  1374  000862  501B               	movf	(??_pinMode+1)^0,w,c
  1375  000864  1296               	iorwf	150,f,c	;volatile
  1376  000866  EF46  F004         	goto	l76
  1377  00086A                     l1578:
  1378  00086A  C016  F01A         	movff	pinMode@pin,??_pinMode
  1379  00086E  0EE0               	movlw	-32
  1380  000870  261A               	addwf	??_pinMode^0,f,c
  1381  000872  0E01               	movlw	1
  1382  000874  6E1B               	movwf	(??_pinMode+1)^0,c
  1383  000876  2A1A               	incf	??_pinMode^0,f,c
  1384  000878  EF40  F004         	goto	u1294
  1385  00087C                     u1295:
  1386  00087C  90D8               	bcf	status,0,c
  1387  00087E  361B               	rlcf	(??_pinMode+1)^0,f,c
  1388  000880                     u1294:
  1389  000880  2E1A               	decfsz	??_pinMode^0,f,c
  1390  000882  EF3E  F004         	goto	u1295
  1391  000886  501B               	movf	(??_pinMode+1)^0,w,c
  1392  000888  0AFF               	xorlw	255
  1393  00088A  1696               	andwf	150,f,c	;volatile
  1394  00088C                     l76:
  1395  00088C  0012               	return		;funcret
  1396  00088E                     __end_of_pinMode:
  1397                           	callstack 0
  1398                           
  1399 ;; *************** function _kpInit *****************
  1400 ;; Defined at:
  1401 ;;		line 87 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;		None
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;		None
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      void 
  1408 ;; Registers used:
  1409 ;;		wreg, status,2, status,0
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1415 ;;      Params:         0       0       0       0       0       0       0
  1416 ;;      Locals:         0       0       0       0       0       0       0
  1417 ;;      Temps:          0       0       0       0       0       0       0
  1418 ;;      Totals:         0       0       0       0       0       0       0
  1419 ;;Total ram usage:        0 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; This function calls:
  1422 ;;		Nothing
  1423 ;; This function is called by:
  1424 ;;		_main
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           	psect	text6
  1429  0012B8                     __ptext6:
  1430                           	callstack 0
  1431  0012B8                     _kpInit:
  1432                           	callstack 30
  1433  0012B8                     
  1434                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 89:     TRISB &= 0x07;
  1435  0012B8  0E07               	movlw	7
  1436  0012BA  1693               	andwf	147,f,c	;volatile
  1437                           
  1438                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 91:     TRISD |= 0x0f;
  1439  0012BC  0E0F               	movlw	15
  1440  0012BE  1295               	iorwf	149,f,c	;volatile
  1441  0012C0  0012               	return		;funcret
  1442  0012C2                     __end_of_kpInit:
  1443                           	callstack 0
  1444                           
  1445 ;; *************** function _chooseSong *****************
  1446 ;; Defined at:
  1447 ;;		line 30 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;		None
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1461 ;;      Params:         0       0       0       0       0       0       0
  1462 ;;      Locals:         0       0       0       0       0       0       0
  1463 ;;      Temps:          2       0       0       0       0       0       0
  1464 ;;      Totals:         2       0       0       0       0       0       0
  1465 ;;Total ram usage:        2 bytes
  1466 ;; Hardware stack levels used:    1
  1467 ;; Hardware stack levels required when called:    4
  1468 ;; This function calls:
  1469 ;;		_kpDebounce
  1470 ;;		_kpRead
  1471 ;;		_lcdCommand
  1472 ;;		_lcdPosition
  1473 ;;		_lcdStr
  1474 ;; This function is called by:
  1475 ;;		_main
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text7
  1480  000C56                     __ptext7:
  1481                           	callstack 0
  1482  000C56                     _chooseSong:
  1483                           	callstack 26
  1484  000C56                     
  1485                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 31:     kpDebounce();
  1486  000C56  EC6E  F005         	call	_kpDebounce	;wreg free
  1487  000C5A                     
  1488                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 32:     tecla = kpRead();
  1489  000C5A  EC61  F009         	call	_kpRead	;wreg free
  1490  000C5E  5016               	movf	?_kpRead^0,w,c
  1491  000C60  6E15               	movwf	_tecla^0,c
  1492  000C62                     
  1493                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 33:     if (((tecla) & (1<<(0)))
      +                          ) {
  1494  000C62  A015               	btfss	_tecla^0,0,c
  1495  000C64  EF36  F006         	goto	u1421
  1496  000C68  EF38  F006         	goto	u1420
  1497  000C6C                     u1421:
  1498  000C6C  EFA9  F006         	goto	l294
  1499  000C70                     u1420:
  1500  000C70                     l1696:
  1501                           
  1502                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 35:             kpDebounce();
  1503  000C70  EC6E  F005         	call	_kpDebounce	;wreg free
  1504  000C74                     
  1505                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 36:             if (kpRead() != 
      +                          tecla) {
  1506  000C74  5015               	movf	_tecla^0,w,c
  1507  000C76  6E23               	movwf	??_chooseSong^0,c
  1508  000C78  6A24               	clrf	(??_chooseSong+1)^0,c
  1509  000C7A  EC61  F009         	call	_kpRead	;wreg free
  1510  000C7E  5023               	movf	??_chooseSong^0,w,c
  1511  000C80  1816               	xorwf	?_kpRead^0,w,c
  1512  000C82  E109               	bnz	u1430
  1513  000C84  5024               	movf	(??_chooseSong+1)^0,w,c
  1514  000C86  1817               	xorwf	(?_kpRead+1)^0,w,c
  1515  000C88  B4D8               	btfsc	status,2,c
  1516  000C8A  EF49  F006         	goto	u1431
  1517  000C8E  EF4B  F006         	goto	u1430
  1518  000C92                     u1431:
  1519  000C92  EF38  F006         	goto	l1696
  1520  000C96                     u1430:
  1521  000C96                     
  1522                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 37:                 tecla = kpRe
      +                          ad();
  1523  000C96  EC61  F009         	call	_kpRead	;wreg free
  1524  000C9A  5016               	movf	?_kpRead^0,w,c
  1525  000C9C  6E15               	movwf	_tecla^0,c
  1526  000C9E                     
  1527                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 38:                 if (((tecla)
      +                           & (1<<(3)))) {
  1528  000C9E  A615               	btfss	_tecla^0,3,c
  1529  000CA0  EF54  F006         	goto	u1441
  1530  000CA4  EF56  F006         	goto	u1440
  1531  000CA8                     u1441:
  1532  000CA8  EF65  F006         	goto	l284
  1533  000CAC                     u1440:
  1534  000CAC                     
  1535                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 39:                     if (indi
      +                          ce == 0) {indice = 9;}
  1536  000CAC  502C               	movf	_indice^0,w,c
  1537  000CAE  A4D8               	btfss	status,2,c
  1538  000CB0  EF5C  F006         	goto	u1451
  1539  000CB4  EF5E  F006         	goto	u1450
  1540  000CB8                     u1451:
  1541  000CB8  EF62  F006         	goto	l1708
  1542  000CBC                     u1450:
  1543  000CBC  0E09               	movlw	9
  1544  000CBE  6E2C               	movwf	_indice^0,c
  1545  000CC0  EF85  F006         	goto	l1718
  1546  000CC4                     l1708:
  1547  000CC4  062C               	decf	_indice^0,f,c
  1548  000CC6  EF85  F006         	goto	l1718
  1549  000CCA                     l284:
  1550  000CCA  AE15               	btfss	_tecla^0,7,c
  1551  000CCC  EF6A  F006         	goto	u1461
  1552  000CD0  EF6C  F006         	goto	u1460
  1553  000CD4                     u1461:
  1554  000CD4  EF7C  F006         	goto	l288
  1555  000CD8                     u1460:
  1556  000CD8                     
  1557                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 42:                     if (indi
      +                          ce == 9) {indice = 0;}
  1558  000CD8  0E09               	movlw	9
  1559  000CDA  182C               	xorwf	_indice^0,w,c
  1560  000CDC  A4D8               	btfss	status,2,c
  1561  000CDE  EF73  F006         	goto	u1471
  1562  000CE2  EF75  F006         	goto	u1470
  1563  000CE6                     u1471:
  1564  000CE6  EF79  F006         	goto	l1714
  1565  000CEA                     u1470:
  1566  000CEA  0E00               	movlw	0
  1567  000CEC  6E2C               	movwf	_indice^0,c
  1568  000CEE  EF85  F006         	goto	l1718
  1569  000CF2                     l1714:
  1570  000CF2  2A2C               	incf	_indice^0,f,c
  1571  000CF4  EF85  F006         	goto	l1718
  1572  000CF8                     l288:
  1573  000CF8  A215               	btfss	_tecla^0,1,c
  1574  000CFA  EF81  F006         	goto	u1481
  1575  000CFE  EF83  F006         	goto	u1480
  1576  000D02                     u1481:
  1577  000D02  EF85  F006         	goto	l1718
  1578  000D06                     u1480:
  1579  000D06  EFA4  F006         	goto	l1726
  1580  000D0A                     l1718:
  1581                           
  1582                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 56:                 lcdCommand(0
      +                          x01);
  1583  000D0A  0E01               	movlw	1
  1584  000D0C  EC94  F007         	call	_lcdCommand
  1585                           
  1586                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 57:                 lcdPosition(
      +                          1, 0);
  1587  000D10  0E00               	movlw	0
  1588  000D12  6E1E               	movwf	lcdPosition@coluna^0,c
  1589  000D14  0E01               	movlw	1
  1590  000D16  ECAE  F008         	call	_lcdPosition
  1591  000D1A                     
  1592                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 58:                 lcdStr("<-(1
      +                          ) (*)  (2)->");
  1593  000D1A  0E11               	movlw	low STR_4
  1594  000D1C  6E1E               	movwf	lcdStr@str^0,c
  1595  000D1E  0E06               	movlw	high STR_4
  1596  000D20  6E1F               	movwf	(lcdStr@str+1)^0,c
  1597  000D22  EC0F  F008         	call	_lcdStr	;wreg free
  1598  000D26                     
  1599                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 59:                 lcdPosition(
      +                          0, 0);
  1600  000D26  0E00               	movlw	0
  1601  000D28  6E1E               	movwf	lcdPosition@coluna^0,c
  1602  000D2A  0E00               	movlw	0
  1603  000D2C  ECAE  F008         	call	_lcdPosition
  1604  000D30                     
  1605                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 62:                 lcdStr(music
      +                          as[indice].nome);
  1606  000D30  502C               	movf	_indice^0,w,c
  1607  000D32  0D13               	mullw	19
  1608  000D34  0E02               	movlw	low (_musicas+2)
  1609  000D36  24F3               	addwf	243,w,c
  1610  000D38  6E1E               	movwf	lcdStr@str^0,c
  1611  000D3A  0E01               	movlw	high (_musicas+2)
  1612  000D3C  20F4               	addwfc	prodh,w,c
  1613  000D3E  6E1F               	movwf	(lcdStr@str+1)^0,c
  1614  000D40  EC0F  F008         	call	_lcdStr	;wreg free
  1615  000D44  EF38  F006         	goto	l1696
  1616  000D48                     l1726:
  1617                           
  1618                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 65:         lcdPosition(0, 0);
  1619  000D48  0E00               	movlw	0
  1620  000D4A  6E1E               	movwf	lcdPosition@coluna^0,c
  1621  000D4C  0E00               	movlw	0
  1622  000D4E  ECAE  F008         	call	_lcdPosition
  1623  000D52                     l294:
  1624  000D52  0012               	return		;funcret
  1625  000D54                     __end_of_chooseSong:
  1626                           	callstack 0
  1627                           
  1628 ;; *************** function _lcdStr *****************
  1629 ;; Defined at:
  1630 ;;		line 128 in file "lcd.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  str             2    8[COMRAM] PTR const unsigned char 
  1633 ;;		 -> STR_5(17), musicas.nome(17), musicas(190), STR_4(17), 
  1634 ;;		 -> STR_3(17), STR_2(7), STR_1(4), 
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;  i               1   12[COMRAM] unsigned char 
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      void 
  1639 ;; Registers used:
  1640 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1646 ;;      Params:         2       0       0       0       0       0       0
  1647 ;;      Locals:         1       0       0       0       0       0       0
  1648 ;;      Temps:          2       0       0       0       0       0       0
  1649 ;;      Totals:         5       0       0       0       0       0       0
  1650 ;;Total ram usage:        5 bytes
  1651 ;; Hardware stack levels used:    1
  1652 ;; Hardware stack levels required when called:    2
  1653 ;; This function calls:
  1654 ;;		_lcdData
  1655 ;; This function is called by:
  1656 ;;		_main
  1657 ;;		_chooseSong
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text8
  1662  00101E                     __ptext8:
  1663                           	callstack 0
  1664  00101E                     _lcdStr:
  1665                           	callstack 28
  1666  00101E                     
  1667                           ;lcd.c: 129:     unsigned char i = 0;
  1668  00101E  0E00               	movlw	0
  1669  001020  6E22               	movwf	lcdStr@i^0,c
  1670                           
  1671                           ;lcd.c: 131:     while (str[i] != 0) {
  1672  001022  EF2C  F008         	goto	l1606
  1673  001026                     l1602:
  1674                           
  1675                           ;lcd.c: 132:         lcdData(str[i]);
  1676  001026  5022               	movf	lcdStr@i^0,w,c
  1677  001028  241E               	addwf	lcdStr@str^0,w,c
  1678  00102A  6E20               	movwf	??_lcdStr^0,c
  1679  00102C  0E00               	movlw	0
  1680  00102E  201F               	addwfc	(lcdStr@str+1)^0,w,c
  1681  001030  6E21               	movwf	(??_lcdStr+1)^0,c
  1682  001032  C020  FFF6         	movff	??_lcdStr,tblptrl
  1683  001036  C021  FFF7         	movff	??_lcdStr+1,tblptrh
  1684  00103A  6AF8               	clrf	tblptru,c
  1685  00103C  0E05               	movlw	(high __ramtop+-1)
  1686  00103E  64F7               	cpfsgt	tblptrh,c
  1687  001040  D003               	bra	u1347
  1688  001042  0008               	tblrd		*
  1689  001044  50F5               	movf	tablat,w,c
  1690  001046  D005               	bra	u1340
  1691  001048                     u1347:
  1692  001048  CFF6 FFE9          	movff	tblptrl,fsr0l
  1693  00104C  CFF7 FFEA          	movff	tblptrh,fsr0h
  1694  001050  50EF               	movf	indf0,w,c
  1695  001052                     u1340:
  1696  001052  ECDB  F008         	call	_lcdData
  1697  001056                     
  1698                           ;lcd.c: 133:         i++;
  1699  001056  2A22               	incf	lcdStr@i^0,f,c
  1700  001058                     l1606:
  1701                           
  1702                           ;lcd.c: 131:     while (str[i] != 0) {
  1703  001058  5022               	movf	lcdStr@i^0,w,c
  1704  00105A  241E               	addwf	lcdStr@str^0,w,c
  1705  00105C  6E20               	movwf	??_lcdStr^0,c
  1706  00105E  0E00               	movlw	0
  1707  001060  201F               	addwfc	(lcdStr@str+1)^0,w,c
  1708  001062  6E21               	movwf	(??_lcdStr+1)^0,c
  1709  001064  C020  FFF6         	movff	??_lcdStr,tblptrl
  1710  001068  C021  FFF7         	movff	??_lcdStr+1,tblptrh
  1711  00106C  6AF8               	clrf	tblptru,c
  1712  00106E  0E05               	movlw	(high __ramtop+-1)
  1713  001070  64F7               	cpfsgt	tblptrh,c
  1714  001072  D003               	bra	u1357
  1715  001074  0008               	tblrd		*
  1716  001076  50F5               	movf	tablat,w,c
  1717  001078  D005               	bra	u1350
  1718  00107A                     u1357:
  1719  00107A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1720  00107E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1721  001082  50EF               	movf	indf0,w,c
  1722  001084                     u1350:
  1723  001084  0900               	iorlw	0
  1724  001086  A4D8               	btfss	status,2,c
  1725  001088  EF48  F008         	goto	u1361
  1726  00108C  EF4A  F008         	goto	u1360
  1727  001090                     u1361:
  1728  001090  EF13  F008         	goto	l1602
  1729  001094                     u1360:
  1730  001094  0012               	return		;funcret
  1731  001096                     __end_of_lcdStr:
  1732                           	callstack 0
  1733                           
  1734 ;; *************** function _lcdData *****************
  1735 ;; Defined at:
  1736 ;;		line 68 in file "lcd.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  valor           1    wreg     unsigned char 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  valor           1    6[COMRAM] unsigned char 
  1741 ;;  old_D           1    7[COMRAM] unsigned char 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2, status,0, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1751 ;;      Params:         0       0       0       0       0       0       0
  1752 ;;      Locals:         2       0       0       0       0       0       0
  1753 ;;      Temps:          0       0       0       0       0       0       0
  1754 ;;      Totals:         2       0       0       0       0       0       0
  1755 ;;Total ram usage:        2 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    1
  1758 ;; This function calls:
  1759 ;;		_Delay40us
  1760 ;;		_digitalWrite
  1761 ;; This function is called by:
  1762 ;;		_lcdStr
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text9
  1767  0011B6                     __ptext9:
  1768                           	callstack 0
  1769  0011B6                     _lcdData:
  1770                           	callstack 28
  1771                           
  1772                           ;incstack = 0
  1773                           ;lcdData@valor stored from wreg
  1774  0011B6  6E1C               	movwf	lcdData@valor^0,c
  1775  0011B8                     
  1776                           ;lcd.c: 70:     unsigned char old_D;;lcd.c: 71:     old_D = PORTD;
  1777  0011B8  CF83 F01D          	movff	3971,lcdData@old_D	;volatile
  1778  0011BC                     
  1779                           ;lcd.c: 73:     TRISD = 0x00;
  1780  0011BC  0E00               	movlw	0
  1781  0011BE  6E95               	movwf	149,c	;volatile
  1782  0011C0                     
  1783                           ;lcd.c: 74:     digitalWrite(PIN_E2, 1);
  1784  0011C0  0E00               	movlw	0
  1785  0011C2  6E17               	movwf	(digitalWrite@pin+1)^0,c
  1786  0011C4  0E22               	movlw	34
  1787  0011C6  6E16               	movwf	digitalWrite@pin^0,c
  1788  0011C8  0E00               	movlw	0
  1789  0011CA  6E19               	movwf	(digitalWrite@value+1)^0,c
  1790  0011CC  0E01               	movlw	1
  1791  0011CE  6E18               	movwf	digitalWrite@value^0,c
  1792  0011D0  EC47  F004         	call	_digitalWrite	;wreg free
  1793  0011D4                     
  1794                           ;lcd.c: 76:     PORTD = valor;
  1795  0011D4  C01C  FF83         	movff	lcdData@valor,3971	;volatile
  1796  0011D8                     
  1797                           ;lcd.c: 78:     digitalWrite(PIN_E1, 1);
  1798  0011D8  0E00               	movlw	0
  1799  0011DA  6E17               	movwf	(digitalWrite@pin+1)^0,c
  1800  0011DC  0E21               	movlw	33
  1801  0011DE  6E16               	movwf	digitalWrite@pin^0,c
  1802  0011E0  0E00               	movlw	0
  1803  0011E2  6E19               	movwf	(digitalWrite@value+1)^0,c
  1804  0011E4  0E01               	movlw	1
  1805  0011E6  6E18               	movwf	digitalWrite@value^0,c
  1806  0011E8  EC47  F004         	call	_digitalWrite	;wreg free
  1807  0011EC                     
  1808                           ;lcd.c: 79:     digitalWrite(PIN_E1, 0);
  1809  0011EC  0E00               	movlw	0
  1810  0011EE  6E17               	movwf	(digitalWrite@pin+1)^0,c
  1811  0011F0  0E21               	movlw	33
  1812  0011F2  6E16               	movwf	digitalWrite@pin^0,c
  1813  0011F4  0E00               	movlw	0
  1814  0011F6  6E19               	movwf	(digitalWrite@value+1)^0,c
  1815  0011F8  0E00               	movlw	0
  1816  0011FA  6E18               	movwf	digitalWrite@value^0,c
  1817  0011FC  EC47  F004         	call	_digitalWrite	;wreg free
  1818  001200                     
  1819                           ;lcd.c: 81:     PORTD = old_D;
  1820  001200  C01D  FF83         	movff	lcdData@old_D,3971	;volatile
  1821  001204                     
  1822                           ;lcd.c: 83:     Delay40us();
  1823  001204  EC45  F009         	call	_Delay40us	;wreg free
  1824  001208  0012               	return		;funcret
  1825  00120A                     __end_of_lcdData:
  1826                           	callstack 0
  1827                           
  1828 ;; *************** function _lcdPosition *****************
  1829 ;; Defined at:
  1830 ;;		line 115 in file "lcd.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  linha           1    wreg     unsigned char 
  1833 ;;  coluna          1    8[COMRAM] unsigned char 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;  linha           1    9[COMRAM] unsigned char 
  1836 ;;  comando         1   10[COMRAM] unsigned char 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		wreg, status,2, status,0, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1846 ;;      Params:         1       0       0       0       0       0       0
  1847 ;;      Locals:         2       0       0       0       0       0       0
  1848 ;;      Temps:          0       0       0       0       0       0       0
  1849 ;;      Totals:         3       0       0       0       0       0       0
  1850 ;;Total ram usage:        3 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; Hardware stack levels required when called:    3
  1853 ;; This function calls:
  1854 ;;		_lcdCommand
  1855 ;; This function is called by:
  1856 ;;		_main
  1857 ;;		_chooseSong
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           	psect	text10
  1862  00115C                     __ptext10:
  1863                           	callstack 0
  1864  00115C                     _lcdPosition:
  1865                           	callstack 27
  1866                           
  1867                           ;incstack = 0
  1868                           ;lcdPosition@linha stored from wreg
  1869  00115C  6E1F               	movwf	lcdPosition@linha^0,c
  1870  00115E                     
  1871                           ;lcd.c: 116:     char comando = 0;
  1872  00115E  0E00               	movlw	0
  1873  001160  6E20               	movwf	lcdPosition@comando^0,c
  1874  001162                     
  1875                           ;lcd.c: 117:     if (linha == 0 && comando != 0x01) comando = 0x80 + coluna;
  1876  001162  501F               	movf	lcdPosition@linha^0,w,c
  1877  001164  A4D8               	btfss	status,2,c
  1878  001166  EFB7  F008         	goto	u1301
  1879  00116A  EFB9  F008         	goto	u1300
  1880  00116E                     u1301:
  1881  00116E  EFBC  F008         	goto	l241
  1882  001172                     u1300:
  1883  001172  501E               	movf	lcdPosition@coluna^0,w,c
  1884  001174  0F80               	addlw	128
  1885  001176  6E20               	movwf	lcdPosition@comando^0,c
  1886  001178                     l241:
  1887                           
  1888                           ;lcd.c: 118:     if (linha == 1 && comando != 0x01) comando = 0xC0 + coluna;
  1889  001178  041F               	decf	lcdPosition@linha^0,w,c
  1890  00117A  A4D8               	btfss	status,2,c
  1891  00117C  EFC2  F008         	goto	u1311
  1892  001180  EFC4  F008         	goto	u1310
  1893  001184                     u1311:
  1894  001184  EFCF  F008         	goto	l242
  1895  001188                     u1310:
  1896  001188  0420               	decf	lcdPosition@comando^0,w,c
  1897  00118A  B4D8               	btfsc	status,2,c
  1898  00118C  EFCA  F008         	goto	u1321
  1899  001190  EFCC  F008         	goto	u1320
  1900  001194                     u1321:
  1901  001194  EFCF  F008         	goto	l242
  1902  001198                     u1320:
  1903  001198  501E               	movf	lcdPosition@coluna^0,w,c
  1904  00119A  0FC0               	addlw	192
  1905  00119C  6E20               	movwf	lcdPosition@comando^0,c
  1906  00119E                     l242:
  1907                           
  1908                           ;lcd.c: 119:     if (coluna > 15) {
  1909  00119E  0E0F               	movlw	15
  1910  0011A0  641E               	cpfsgt	lcdPosition@coluna^0,c
  1911  0011A2  EFD5  F008         	goto	u1331
  1912  0011A6  EFD7  F008         	goto	u1330
  1913  0011AA                     u1331:
  1914  0011AA  EFD7  F008         	goto	l1598
  1915  0011AE                     u1330:
  1916  0011AE                     l1598:
  1917                           
  1918                           ;lcd.c: 125:     lcdCommand(comando);
  1919  0011AE  5020               	movf	lcdPosition@comando^0,w,c
  1920  0011B0  EC94  F007         	call	_lcdCommand
  1921  0011B4  0012               	return		;funcret
  1922  0011B6                     __end_of_lcdPosition:
  1923                           	callstack 0
  1924                           
  1925 ;; *************** function _lcdCommand *****************
  1926 ;; Defined at:
  1927 ;;		line 43 in file "lcd.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  cmd             1    wreg     unsigned char 
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;  cmd             1    7[COMRAM] unsigned char 
  1932 ;;  old_D           1    6[COMRAM] unsigned char 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      void 
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1942 ;;      Params:         0       0       0       0       0       0       0
  1943 ;;      Locals:         2       0       0       0       0       0       0
  1944 ;;      Temps:          0       0       0       0       0       0       0
  1945 ;;      Totals:         2       0       0       0       0       0       0
  1946 ;;Total ram usage:        2 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    2
  1949 ;; This function calls:
  1950 ;;		_Delay2ms
  1951 ;;		_Delay40us
  1952 ;;		_digitalWrite
  1953 ;; This function is called by:
  1954 ;;		_main
  1955 ;;		_lcdInit
  1956 ;;		_lcdPosition
  1957 ;;		_chooseSong
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text11
  1962  000F28                     __ptext11:
  1963                           	callstack 0
  1964  000F28                     _lcdCommand:
  1965                           	callstack 27
  1966                           
  1967                           ;incstack = 0
  1968                           ;lcdCommand@cmd stored from wreg
  1969  000F28  6E1D               	movwf	lcdCommand@cmd^0,c
  1970  000F2A                     
  1971                           ;lcd.c: 44:     unsigned char old_D;;lcd.c: 45:     old_D = PORTD;
  1972  000F2A  CF83 F01C          	movff	3971,lcdCommand@old_D	;volatile
  1973  000F2E                     
  1974                           ;lcd.c: 48:     TRISD = 0x00;
  1975  000F2E  0E00               	movlw	0
  1976  000F30  6E95               	movwf	149,c	;volatile
  1977  000F32                     
  1978                           ;lcd.c: 50:     digitalWrite(PIN_E2, 0);
  1979  000F32  0E00               	movlw	0
  1980  000F34  6E17               	movwf	(digitalWrite@pin+1)^0,c
  1981  000F36  0E22               	movlw	34
  1982  000F38  6E16               	movwf	digitalWrite@pin^0,c
  1983  000F3A  0E00               	movlw	0
  1984  000F3C  6E19               	movwf	(digitalWrite@value+1)^0,c
  1985  000F3E  0E00               	movlw	0
  1986  000F40  6E18               	movwf	digitalWrite@value^0,c
  1987  000F42  EC47  F004         	call	_digitalWrite	;wreg free
  1988  000F46                     
  1989                           ;lcd.c: 51:     PORTD = cmd;
  1990  000F46  C01D  FF83         	movff	lcdCommand@cmd,3971	;volatile
  1991  000F4A                     
  1992                           ;lcd.c: 53:     digitalWrite(PIN_E1, 1);
  1993  000F4A  0E00               	movlw	0
  1994  000F4C  6E17               	movwf	(digitalWrite@pin+1)^0,c
  1995  000F4E  0E21               	movlw	33
  1996  000F50  6E16               	movwf	digitalWrite@pin^0,c
  1997  000F52  0E00               	movlw	0
  1998  000F54  6E19               	movwf	(digitalWrite@value+1)^0,c
  1999  000F56  0E01               	movlw	1
  2000  000F58  6E18               	movwf	digitalWrite@value^0,c
  2001  000F5A  EC47  F004         	call	_digitalWrite	;wreg free
  2002  000F5E                     
  2003                           ;lcd.c: 54:     digitalWrite(PIN_E1, 0);
  2004  000F5E  0E00               	movlw	0
  2005  000F60  6E17               	movwf	(digitalWrite@pin+1)^0,c
  2006  000F62  0E21               	movlw	33
  2007  000F64  6E16               	movwf	digitalWrite@pin^0,c
  2008  000F66  0E00               	movlw	0
  2009  000F68  6E19               	movwf	(digitalWrite@value+1)^0,c
  2010  000F6A  0E00               	movlw	0
  2011  000F6C  6E18               	movwf	digitalWrite@value^0,c
  2012  000F6E  EC47  F004         	call	_digitalWrite	;wreg free
  2013  000F72                     
  2014                           ;lcd.c: 57:     PORTD = old_D;
  2015  000F72  C01C  FF83         	movff	lcdCommand@old_D,3971	;volatile
  2016  000F76                     
  2017                           ;lcd.c: 59:     if ((cmd == 0x02) || (cmd == 0x01)) {
  2018  000F76  0E02               	movlw	2
  2019  000F78  181D               	xorwf	lcdCommand@cmd^0,w,c
  2020  000F7A  B4D8               	btfsc	status,2,c
  2021  000F7C  EFC2  F007         	goto	u1081
  2022  000F80  EFC4  F007         	goto	u1080
  2023  000F84                     u1081:
  2024  000F84  EFCC  F007         	goto	l1520
  2025  000F88                     u1080:
  2026  000F88  041D               	decf	lcdCommand@cmd^0,w,c
  2027  000F8A  A4D8               	btfss	status,2,c
  2028  000F8C  EFCA  F007         	goto	u1091
  2029  000F90  EFCC  F007         	goto	u1090
  2030  000F94                     u1091:
  2031  000F94  EFD0  F007         	goto	l1522
  2032  000F98                     u1090:
  2033  000F98                     l1520:
  2034                           
  2035                           ;lcd.c: 60:         Delay2ms();
  2036  000F98  EC37  F009         	call	_Delay2ms	;wreg free
  2037                           
  2038                           ;lcd.c: 61:     } else {
  2039  000F9C  EFD2  F007         	goto	l232
  2040  000FA0                     l1522:
  2041                           
  2042                           ;lcd.c: 62:         Delay40us();
  2043  000FA0  EC45  F009         	call	_Delay40us	;wreg free
  2044  000FA4                     l232:
  2045  000FA4  0012               	return		;funcret
  2046  000FA6                     __end_of_lcdCommand:
  2047                           	callstack 0
  2048                           
  2049 ;; *************** function _digitalWrite *****************
  2050 ;; Defined at:
  2051 ;;		line 14 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  pin             2    0[COMRAM] int 
  2054 ;;  value           2    2[COMRAM] int 
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;		None
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  1    wreg      void 
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2066 ;;      Params:         4       0       0       0       0       0       0
  2067 ;;      Locals:         0       0       0       0       0       0       0
  2068 ;;      Temps:          2       0       0       0       0       0       0
  2069 ;;      Totals:         6       0       0       0       0       0       0
  2070 ;;Total ram usage:        6 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		_lcdCommand
  2076 ;;		_lcdData
  2077 ;;		_ssdUpdate
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           	psect	text12
  2082  00088E                     __ptext12:
  2083                           	callstack 0
  2084  00088E                     _digitalWrite:
  2085                           	callstack 28
  2086  00088E                     
  2087                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 16:     if(pin <8){
  2088  00088E  BE17               	btfsc	(digitalWrite@pin+1)^0,7,c
  2089  000890  EF55  F004         	goto	u880
  2090  000894  5017               	movf	(digitalWrite@pin+1)^0,w,c
  2091  000896  E107               	bnz	u881
  2092  000898  0E08               	movlw	8
  2093  00089A  5C16               	subwf	digitalWrite@pin^0,w,c
  2094  00089C  B0D8               	btfsc	status,0,c
  2095  00089E  EF53  F004         	goto	u881
  2096  0008A2  EF55  F004         	goto	u880
  2097  0008A6                     u881:
  2098  0008A6  EF7F  F004         	goto	l1470
  2099  0008AA                     u880:
  2100  0008AA                     
  2101                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 17:         if (value){ ((PORTA) |=
      +                           (1<<(pin)));}
  2102  0008AA  5018               	movf	digitalWrite@value^0,w,c
  2103  0008AC  1019               	iorwf	(digitalWrite@value+1)^0,w,c
  2104  0008AE  B4D8               	btfsc	status,2,c
  2105  0008B0  EF5C  F004         	goto	u891
  2106  0008B4  EF5E  F004         	goto	u890
  2107  0008B8                     u891:
  2108  0008B8  EF6E  F004         	goto	l1468
  2109  0008BC                     u890:
  2110  0008BC  C016  F01A         	movff	digitalWrite@pin,??_digitalWrite
  2111  0008C0  0E01               	movlw	1
  2112  0008C2  6E1B               	movwf	(??_digitalWrite+1)^0,c
  2113  0008C4  2A1A               	incf	??_digitalWrite^0,f,c
  2114  0008C6  EF67  F004         	goto	u904
  2115  0008CA                     u905:
  2116  0008CA  90D8               	bcf	status,0,c
  2117  0008CC  361B               	rlcf	(??_digitalWrite+1)^0,f,c
  2118  0008CE                     u904:
  2119  0008CE  2E1A               	decfsz	??_digitalWrite^0,f,c
  2120  0008D0  EF65  F004         	goto	u905
  2121  0008D4  501B               	movf	(??_digitalWrite+1)^0,w,c
  2122  0008D6  1280               	iorwf	128,f,c	;volatile
  2123  0008D8  EF6D  F005         	goto	l42
  2124  0008DC                     l1468:
  2125  0008DC  C016  F01A         	movff	digitalWrite@pin,??_digitalWrite
  2126  0008E0  0E01               	movlw	1
  2127  0008E2  6E1B               	movwf	(??_digitalWrite+1)^0,c
  2128  0008E4  2A1A               	incf	??_digitalWrite^0,f,c
  2129  0008E6  EF77  F004         	goto	u914
  2130  0008EA                     u915:
  2131  0008EA  90D8               	bcf	status,0,c
  2132  0008EC  361B               	rlcf	(??_digitalWrite+1)^0,f,c
  2133  0008EE                     u914:
  2134  0008EE  2E1A               	decfsz	??_digitalWrite^0,f,c
  2135  0008F0  EF75  F004         	goto	u915
  2136  0008F4  501B               	movf	(??_digitalWrite+1)^0,w,c
  2137  0008F6  0AFF               	xorlw	255
  2138  0008F8  1680               	andwf	128,f,c	;volatile
  2139  0008FA  EF6D  F005         	goto	l42
  2140  0008FE                     l1470:
  2141  0008FE  BE17               	btfsc	(digitalWrite@pin+1)^0,7,c
  2142  000900  EF8D  F004         	goto	u920
  2143  000904  5017               	movf	(digitalWrite@pin+1)^0,w,c
  2144  000906  E107               	bnz	u921
  2145  000908  0E10               	movlw	16
  2146  00090A  5C16               	subwf	digitalWrite@pin^0,w,c
  2147  00090C  B0D8               	btfsc	status,0,c
  2148  00090E  EF8B  F004         	goto	u921
  2149  000912  EF8D  F004         	goto	u920
  2150  000916                     u921:
  2151  000916  EFBB  F004         	goto	l1478
  2152  00091A                     u920:
  2153  00091A                     
  2154                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 20:         pin -=8;
  2155  00091A  0EF8               	movlw	248
  2156  00091C  2616               	addwf	digitalWrite@pin^0,f,c
  2157  00091E  0EFF               	movlw	255
  2158  000920  2217               	addwfc	(digitalWrite@pin+1)^0,f,c
  2159                           
  2160                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 21:         if (value){ ((PORTB) |=
      +                           (1<<(pin)));}
  2161  000922  5018               	movf	digitalWrite@value^0,w,c
  2162  000924  1019               	iorwf	(digitalWrite@value+1)^0,w,c
  2163  000926  B4D8               	btfsc	status,2,c
  2164  000928  EF98  F004         	goto	u931
  2165  00092C  EF9A  F004         	goto	u930
  2166  000930                     u931:
  2167  000930  EFAA  F004         	goto	l1476
  2168  000934                     u930:
  2169  000934  C016  F01A         	movff	digitalWrite@pin,??_digitalWrite
  2170  000938  0E01               	movlw	1
  2171  00093A  6E1B               	movwf	(??_digitalWrite+1)^0,c
  2172  00093C  2A1A               	incf	??_digitalWrite^0,f,c
  2173  00093E  EFA3  F004         	goto	u944
  2174  000942                     u945:
  2175  000942  90D8               	bcf	status,0,c
  2176  000944  361B               	rlcf	(??_digitalWrite+1)^0,f,c
  2177  000946                     u944:
  2178  000946  2E1A               	decfsz	??_digitalWrite^0,f,c
  2179  000948  EFA1  F004         	goto	u945
  2180  00094C  501B               	movf	(??_digitalWrite+1)^0,w,c
  2181  00094E  1281               	iorwf	129,f,c	;volatile
  2182  000950  EF6D  F005         	goto	l42
  2183  000954                     l1476:
  2184  000954  C016  F01A         	movff	digitalWrite@pin,??_digitalWrite
  2185  000958  0E01               	movlw	1
  2186  00095A  6E1B               	movwf	(??_digitalWrite+1)^0,c
  2187  00095C  2A1A               	incf	??_digitalWrite^0,f,c
  2188  00095E  EFB3  F004         	goto	u954
  2189  000962                     u955:
  2190  000962  90D8               	bcf	status,0,c
  2191  000964  361B               	rlcf	(??_digitalWrite+1)^0,f,c
  2192  000966                     u954:
  2193  000966  2E1A               	decfsz	??_digitalWrite^0,f,c
  2194  000968  EFB1  F004         	goto	u955
  2195  00096C  501B               	movf	(??_digitalWrite+1)^0,w,c
  2196  00096E  0AFF               	xorlw	255
  2197  000970  1681               	andwf	129,f,c	;volatile
  2198  000972  EF6D  F005         	goto	l42
  2199  000976                     l1478:
  2200  000976  BE17               	btfsc	(digitalWrite@pin+1)^0,7,c
  2201  000978  EFC9  F004         	goto	u960
  2202  00097C  5017               	movf	(digitalWrite@pin+1)^0,w,c
  2203  00097E  E107               	bnz	u961
  2204  000980  0E18               	movlw	24
  2205  000982  5C16               	subwf	digitalWrite@pin^0,w,c
  2206  000984  B0D8               	btfsc	status,0,c
  2207  000986  EFC7  F004         	goto	u961
  2208  00098A  EFC9  F004         	goto	u960
  2209  00098E                     u961:
  2210  00098E  EFF7  F004         	goto	l1486
  2211  000992                     u960:
  2212  000992                     
  2213                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 24:         pin -=16;
  2214  000992  0EF0               	movlw	240
  2215  000994  2616               	addwf	digitalWrite@pin^0,f,c
  2216  000996  0EFF               	movlw	255
  2217  000998  2217               	addwfc	(digitalWrite@pin+1)^0,f,c
  2218                           
  2219                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 25:         if (value){ ((PORTC) |=
      +                           (1<<(pin)));}
  2220  00099A  5018               	movf	digitalWrite@value^0,w,c
  2221  00099C  1019               	iorwf	(digitalWrite@value+1)^0,w,c
  2222  00099E  B4D8               	btfsc	status,2,c
  2223  0009A0  EFD4  F004         	goto	u971
  2224  0009A4  EFD6  F004         	goto	u970
  2225  0009A8                     u971:
  2226  0009A8  EFE6  F004         	goto	l1484
  2227  0009AC                     u970:
  2228  0009AC  C016  F01A         	movff	digitalWrite@pin,??_digitalWrite
  2229  0009B0  0E01               	movlw	1
  2230  0009B2  6E1B               	movwf	(??_digitalWrite+1)^0,c
  2231  0009B4  2A1A               	incf	??_digitalWrite^0,f,c
  2232  0009B6  EFDF  F004         	goto	u984
  2233  0009BA                     u985:
  2234  0009BA  90D8               	bcf	status,0,c
  2235  0009BC  361B               	rlcf	(??_digitalWrite+1)^0,f,c
  2236  0009BE                     u984:
  2237  0009BE  2E1A               	decfsz	??_digitalWrite^0,f,c
  2238  0009C0  EFDD  F004         	goto	u985
  2239  0009C4  501B               	movf	(??_digitalWrite+1)^0,w,c
  2240  0009C6  1282               	iorwf	130,f,c	;volatile
  2241  0009C8  EF6D  F005         	goto	l42
  2242  0009CC                     l1484:
  2243  0009CC  C016  F01A         	movff	digitalWrite@pin,??_digitalWrite
  2244  0009D0  0E01               	movlw	1
  2245  0009D2  6E1B               	movwf	(??_digitalWrite+1)^0,c
  2246  0009D4  2A1A               	incf	??_digitalWrite^0,f,c
  2247  0009D6  EFEF  F004         	goto	u994
  2248  0009DA                     u995:
  2249  0009DA  90D8               	bcf	status,0,c
  2250  0009DC  361B               	rlcf	(??_digitalWrite+1)^0,f,c
  2251  0009DE                     u994:
  2252  0009DE  2E1A               	decfsz	??_digitalWrite^0,f,c
  2253  0009E0  EFED  F004         	goto	u995
  2254  0009E4  501B               	movf	(??_digitalWrite+1)^0,w,c
  2255  0009E6  0AFF               	xorlw	255
  2256  0009E8  1682               	andwf	130,f,c	;volatile
  2257  0009EA  EF6D  F005         	goto	l42
  2258  0009EE                     l1486:
  2259  0009EE  BE17               	btfsc	(digitalWrite@pin+1)^0,7,c
  2260  0009F0  EF05  F005         	goto	u1000
  2261  0009F4  5017               	movf	(digitalWrite@pin+1)^0,w,c
  2262  0009F6  E107               	bnz	u1001
  2263  0009F8  0E20               	movlw	32
  2264  0009FA  5C16               	subwf	digitalWrite@pin^0,w,c
  2265  0009FC  B0D8               	btfsc	status,0,c
  2266  0009FE  EF03  F005         	goto	u1001
  2267  000A02  EF05  F005         	goto	u1000
  2268  000A06                     u1001:
  2269  000A06  EF33  F005         	goto	l1494
  2270  000A0A                     u1000:
  2271  000A0A                     
  2272                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 28:         pin -=24;
  2273  000A0A  0EE8               	movlw	232
  2274  000A0C  2616               	addwf	digitalWrite@pin^0,f,c
  2275  000A0E  0EFF               	movlw	255
  2276  000A10  2217               	addwfc	(digitalWrite@pin+1)^0,f,c
  2277                           
  2278                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 29:         if (value){ ((PORTD) |=
      +                           (1<<(pin)));}
  2279  000A12  5018               	movf	digitalWrite@value^0,w,c
  2280  000A14  1019               	iorwf	(digitalWrite@value+1)^0,w,c
  2281  000A16  B4D8               	btfsc	status,2,c
  2282  000A18  EF10  F005         	goto	u1011
  2283  000A1C  EF12  F005         	goto	u1010
  2284  000A20                     u1011:
  2285  000A20  EF22  F005         	goto	l1492
  2286  000A24                     u1010:
  2287  000A24  C016  F01A         	movff	digitalWrite@pin,??_digitalWrite
  2288  000A28  0E01               	movlw	1
  2289  000A2A  6E1B               	movwf	(??_digitalWrite+1)^0,c
  2290  000A2C  2A1A               	incf	??_digitalWrite^0,f,c
  2291  000A2E  EF1B  F005         	goto	u1024
  2292  000A32                     u1025:
  2293  000A32  90D8               	bcf	status,0,c
  2294  000A34  361B               	rlcf	(??_digitalWrite+1)^0,f,c
  2295  000A36                     u1024:
  2296  000A36  2E1A               	decfsz	??_digitalWrite^0,f,c
  2297  000A38  EF19  F005         	goto	u1025
  2298  000A3C  501B               	movf	(??_digitalWrite+1)^0,w,c
  2299  000A3E  1283               	iorwf	131,f,c	;volatile
  2300  000A40  EF6D  F005         	goto	l42
  2301  000A44                     l1492:
  2302  000A44  C016  F01A         	movff	digitalWrite@pin,??_digitalWrite
  2303  000A48  0E01               	movlw	1
  2304  000A4A  6E1B               	movwf	(??_digitalWrite+1)^0,c
  2305  000A4C  2A1A               	incf	??_digitalWrite^0,f,c
  2306  000A4E  EF2B  F005         	goto	u1034
  2307  000A52                     u1035:
  2308  000A52  90D8               	bcf	status,0,c
  2309  000A54  361B               	rlcf	(??_digitalWrite+1)^0,f,c
  2310  000A56                     u1034:
  2311  000A56  2E1A               	decfsz	??_digitalWrite^0,f,c
  2312  000A58  EF29  F005         	goto	u1035
  2313  000A5C  501B               	movf	(??_digitalWrite+1)^0,w,c
  2314  000A5E  0AFF               	xorlw	255
  2315  000A60  1683               	andwf	131,f,c	;volatile
  2316  000A62  EF6D  F005         	goto	l42
  2317  000A66                     l1494:
  2318  000A66  BE17               	btfsc	(digitalWrite@pin+1)^0,7,c
  2319  000A68  EF41  F005         	goto	u1040
  2320  000A6C  5017               	movf	(digitalWrite@pin+1)^0,w,c
  2321  000A6E  E107               	bnz	u1041
  2322  000A70  0E28               	movlw	40
  2323  000A72  5C16               	subwf	digitalWrite@pin^0,w,c
  2324  000A74  B0D8               	btfsc	status,0,c
  2325  000A76  EF3F  F005         	goto	u1041
  2326  000A7A  EF41  F005         	goto	u1040
  2327  000A7E                     u1041:
  2328  000A7E  EF6D  F005         	goto	l42
  2329  000A82                     u1040:
  2330  000A82                     
  2331                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 32:         pin -=32;
  2332  000A82  0EE0               	movlw	224
  2333  000A84  2616               	addwf	digitalWrite@pin^0,f,c
  2334  000A86  0EFF               	movlw	255
  2335  000A88  2217               	addwfc	(digitalWrite@pin+1)^0,f,c
  2336                           
  2337                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 33:         if (value){ ((PORTE) |=
      +                           (1<<(pin)));}
  2338  000A8A  5018               	movf	digitalWrite@value^0,w,c
  2339  000A8C  1019               	iorwf	(digitalWrite@value+1)^0,w,c
  2340  000A8E  B4D8               	btfsc	status,2,c
  2341  000A90  EF4C  F005         	goto	u1051
  2342  000A94  EF4E  F005         	goto	u1050
  2343  000A98                     u1051:
  2344  000A98  EF5E  F005         	goto	l1500
  2345  000A9C                     u1050:
  2346  000A9C  C016  F01A         	movff	digitalWrite@pin,??_digitalWrite
  2347  000AA0  0E01               	movlw	1
  2348  000AA2  6E1B               	movwf	(??_digitalWrite+1)^0,c
  2349  000AA4  2A1A               	incf	??_digitalWrite^0,f,c
  2350  000AA6  EF57  F005         	goto	u1064
  2351  000AAA                     u1065:
  2352  000AAA  90D8               	bcf	status,0,c
  2353  000AAC  361B               	rlcf	(??_digitalWrite+1)^0,f,c
  2354  000AAE                     u1064:
  2355  000AAE  2E1A               	decfsz	??_digitalWrite^0,f,c
  2356  000AB0  EF55  F005         	goto	u1065
  2357  000AB4  501B               	movf	(??_digitalWrite+1)^0,w,c
  2358  000AB6  1284               	iorwf	132,f,c	;volatile
  2359  000AB8  EF6D  F005         	goto	l42
  2360  000ABC                     l1500:
  2361  000ABC  C016  F01A         	movff	digitalWrite@pin,??_digitalWrite
  2362  000AC0  0E01               	movlw	1
  2363  000AC2  6E1B               	movwf	(??_digitalWrite+1)^0,c
  2364  000AC4  2A1A               	incf	??_digitalWrite^0,f,c
  2365  000AC6  EF67  F005         	goto	u1074
  2366  000ACA                     u1075:
  2367  000ACA  90D8               	bcf	status,0,c
  2368  000ACC  361B               	rlcf	(??_digitalWrite+1)^0,f,c
  2369  000ACE                     u1074:
  2370  000ACE  2E1A               	decfsz	??_digitalWrite^0,f,c
  2371  000AD0  EF65  F005         	goto	u1075
  2372  000AD4  501B               	movf	(??_digitalWrite+1)^0,w,c
  2373  000AD6  0AFF               	xorlw	255
  2374  000AD8  1684               	andwf	132,f,c	;volatile
  2375  000ADA                     l42:
  2376  000ADA  0012               	return		;funcret
  2377  000ADC                     __end_of_digitalWrite:
  2378                           	callstack 0
  2379                           
  2380 ;; *************** function _Delay2ms *****************
  2381 ;; Defined at:
  2382 ;;		line 36 in file "lcd.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;		None
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  i               1    1[COMRAM] unsigned char 
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg, status,2, status,0, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2396 ;;      Params:         0       0       0       0       0       0       0
  2397 ;;      Locals:         1       0       0       0       0       0       0
  2398 ;;      Temps:          0       0       0       0       0       0       0
  2399 ;;      Totals:         1       0       0       0       0       0       0
  2400 ;;Total ram usage:        1 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:    1
  2403 ;; This function calls:
  2404 ;;		_Delay40us
  2405 ;; This function is called by:
  2406 ;;		_lcdCommand
  2407 ;;		_lcdInit
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text13
  2412  00126E                     __ptext13:
  2413                           	callstack 0
  2414  00126E                     _Delay2ms:
  2415                           	callstack 27
  2416  00126E                     
  2417                           ;lcd.c: 37:     unsigned char i;;lcd.c: 38:     for (i = 0; i < 50; i++) {
  2418  00126E  0E00               	movlw	0
  2419  001270  6E17               	movwf	Delay2ms@i^0,c
  2420  001272                     l1032:
  2421                           
  2422                           ;lcd.c: 39:         Delay40us();
  2423  001272  EC45  F009         	call	_Delay40us	;wreg free
  2424  001276                     
  2425                           ;lcd.c: 40:     }
  2426  001276  2A17               	incf	Delay2ms@i^0,f,c
  2427  001278  0E31               	movlw	49
  2428  00127A  6417               	cpfsgt	Delay2ms@i^0,c
  2429  00127C  EF42  F009         	goto	u221
  2430  001280  EF44  F009         	goto	u220
  2431  001284                     u221:
  2432  001284  EF39  F009         	goto	l1032
  2433  001288                     u220:
  2434  001288  0012               	return		;funcret
  2435  00128A                     __end_of_Delay2ms:
  2436                           	callstack 0
  2437                           
  2438 ;; *************** function _Delay40us *****************
  2439 ;; Defined at:
  2440 ;;		line 31 in file "lcd.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;		None
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  i               1    0[COMRAM] unsigned char 
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		wreg, status,2, status,0
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2454 ;;      Params:         0       0       0       0       0       0       0
  2455 ;;      Locals:         1       0       0       0       0       0       0
  2456 ;;      Temps:          0       0       0       0       0       0       0
  2457 ;;      Totals:         1       0       0       0       0       0       0
  2458 ;;Total ram usage:        1 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_Delay2ms
  2464 ;;		_lcdCommand
  2465 ;;		_lcdData
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text14
  2470  00128A                     __ptext14:
  2471                           	callstack 0
  2472  00128A                     _Delay40us:
  2473                           	callstack 28
  2474  00128A                     
  2475                           ;lcd.c: 32:     unsigned char i;;lcd.c: 33:     for (i = 0; i < 25; i++);
  2476  00128A  0E00               	movlw	0
  2477  00128C  6E16               	movwf	Delay40us@i^0,c
  2478  00128E                     l982:
  2479  00128E  2A16               	incf	Delay40us@i^0,f,c
  2480  001290  0E18               	movlw	24
  2481  001292  6416               	cpfsgt	Delay40us@i^0,c
  2482  001294  EF4E  F009         	goto	u11
  2483  001298  EF50  F009         	goto	u10
  2484  00129C                     u11:
  2485  00129C  EF47  F009         	goto	l982
  2486  0012A0                     u10:
  2487  0012A0  0012               	return		;funcret
  2488  0012A2                     __end_of_Delay40us:
  2489                           	callstack 0
  2490                           
  2491 ;; *************** function _kpRead *****************
  2492 ;; Defined at:
  2493 ;;		line 35 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  2    0[COMRAM] unsigned int 
  2500 ;; Registers used:
  2501 ;;		None
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2507 ;;      Params:         2       0       0       0       0       0       0
  2508 ;;      Locals:         0       0       0       0       0       0       0
  2509 ;;      Temps:          0       0       0       0       0       0       0
  2510 ;;      Totals:         2       0       0       0       0       0       0
  2511 ;;Total ram usage:        2 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		_chooseSong
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text15
  2521  0012C2                     __ptext15:
  2522                           	callstack 0
  2523  0012C2                     _kpRead:
  2524                           	callstack 29
  2525  0012C2                     
  2526                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 36:     return valor;
  2527  0012C2  C02A  F016         	movff	_valor,?_kpRead
  2528  0012C6  C02B  F017         	movff	_valor+1,?_kpRead+1
  2529  0012CA  0012               	return		;funcret
  2530  0012CC                     __end_of_kpRead:
  2531                           	callstack 0
  2532                           
  2533 ;; *************** function _kpDebounce *****************
  2534 ;; Defined at:
  2535 ;;		line 39 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;		None
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;  k               2    6[COMRAM] int 
  2540 ;;  i               1    9[COMRAM] unsigned char 
  2541 ;;  j               1    8[COMRAM] unsigned char 
  2542 ;;  old_D           1    5[COMRAM] unsigned char 
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      void 
  2545 ;; Registers used:
  2546 ;;		wreg, status,2, status,0, prodl, prodh
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2552 ;;      Params:         0       0       0       0       0       0       0
  2553 ;;      Locals:         5       0       0       0       0       0       0
  2554 ;;      Temps:          5       0       0       0       0       0       0
  2555 ;;      Totals:        10       0       0       0       0       0       0
  2556 ;;Total ram usage:       10 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; This function calls:
  2559 ;;		Nothing
  2560 ;; This function is called by:
  2561 ;;		_chooseSong
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565                           	psect	text16
  2566  000ADC                     __ptext16:
  2567                           	callstack 0
  2568  000ADC                     _kpDebounce:
  2569                           	callstack 29
  2570  000ADC                     
  2571                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 40:     unsigned char i, j;;D:/
      +                          Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 41:     static unsigned char tempo;
      +                          ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 42:     static unsigned int val
      +                          orNovo = 0x0000;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 43:     static 
      +                          unsigned int valorAntigo = 0x0000;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.
      +                          c: 46:     unsigned char old_D;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 
      +                          47:     old_D = PORTD;
  2572  000ADC  CF83 F01B          	movff	3971,kpDebounce@old_D	;volatile
  2573  000AE0                     
  2574                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 51:     TRISD |= 0x0f;
  2575  000AE0  0E0F               	movlw	15
  2576  000AE2  1295               	iorwf	149,f,c	;volatile
  2577  000AE4                     
  2578                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 53:     for (i = 0; i < 3; i++)
      +                           {
  2579  000AE4  0E00               	movlw	0
  2580  000AE6  6E1F               	movwf	kpDebounce@i^0,c
  2581  000AE8                     l1128:
  2582                           
  2583                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 55:         TRISB &= 0xF8;
  2584  000AE8  0EF8               	movlw	248
  2585  000AEA  1693               	andwf	147,f,c	;volatile
  2586                           
  2587                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 57:         ((TRISB) |= (1<<(i)
      +                          ));
  2588  000AEC  C01F  F016         	movff	kpDebounce@i,??_kpDebounce
  2589  000AF0  0E01               	movlw	1
  2590  000AF2  6E17               	movwf	(??_kpDebounce+1)^0,c
  2591  000AF4  2A16               	incf	??_kpDebounce^0,f,c
  2592  000AF6  EF7F  F005         	goto	u454
  2593  000AFA                     u455:
  2594  000AFA  90D8               	bcf	status,0,c
  2595  000AFC  3617               	rlcf	(??_kpDebounce+1)^0,f,c
  2596  000AFE                     u454:
  2597  000AFE  2E16               	decfsz	??_kpDebounce^0,f,c
  2598  000B00  EF7D  F005         	goto	u455
  2599  000B04  5017               	movf	(??_kpDebounce+1)^0,w,c
  2600  000B06  1293               	iorwf	147,f,c	;volatile
  2601                           
  2602                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 59:         PORTB |= 0x07;
  2603  000B08  0E07               	movlw	7
  2604  000B0A  1281               	iorwf	129,f,c	;volatile
  2605                           
  2606                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 60:         ((PORTB) &= ~(1<<(i
      +                          )));
  2607  000B0C  C01F  F016         	movff	kpDebounce@i,??_kpDebounce
  2608  000B10  0E01               	movlw	1
  2609  000B12  6E17               	movwf	(??_kpDebounce+1)^0,c
  2610  000B14  2A16               	incf	??_kpDebounce^0,f,c
  2611  000B16  EF8F  F005         	goto	u464
  2612  000B1A                     u465:
  2613  000B1A  90D8               	bcf	status,0,c
  2614  000B1C  3617               	rlcf	(??_kpDebounce+1)^0,f,c
  2615  000B1E                     u464:
  2616  000B1E  2E16               	decfsz	??_kpDebounce^0,f,c
  2617  000B20  EF8D  F005         	goto	u465
  2618  000B24  5017               	movf	(??_kpDebounce+1)^0,w,c
  2619  000B26  0AFF               	xorlw	255
  2620  000B28  1681               	andwf	129,f,c	;volatile
  2621  000B2A                     
  2622                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 63:         for (int k = 0; k <
      +                           10; k++);
  2623  000B2A  0E00               	movlw	0
  2624  000B2C  6E1D               	movwf	(kpDebounce@k+1)^0,c
  2625  000B2E  0E00               	movlw	0
  2626  000B30  6E1C               	movwf	kpDebounce@k^0,c
  2627  000B32                     l1136:
  2628  000B32  4A1C               	infsnz	kpDebounce@k^0,f,c
  2629  000B34  2A1D               	incf	(kpDebounce@k+1)^0,f,c
  2630  000B36  BE1D               	btfsc	(kpDebounce@k+1)^0,7,c
  2631  000B38  EFA7  F005         	goto	u471
  2632  000B3C  501D               	movf	(kpDebounce@k+1)^0,w,c
  2633  000B3E  E109               	bnz	u470
  2634  000B40  0E0A               	movlw	10
  2635  000B42  5C1C               	subwf	kpDebounce@k^0,w,c
  2636  000B44  A0D8               	btfss	status,0,c
  2637  000B46  EFA7  F005         	goto	u471
  2638  000B4A  EFA9  F005         	goto	u470
  2639  000B4E                     u471:
  2640  000B4E  EF99  F005         	goto	l1136
  2641  000B52                     u470:
  2642  000B52                     
  2643                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 66:         for (j = 0; j < 4; 
      +                          j++) {
  2644  000B52  0E00               	movlw	0
  2645  000B54  6E1E               	movwf	kpDebounce@j^0,c
  2646  000B56                     l1146:
  2647                           
  2648                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 67:             if (!((PORTD) &
      +                           (1<<(j)))) {
  2649  000B56  C01E  F016         	movff	kpDebounce@j,??_kpDebounce
  2650  000B5A  0E01               	movlw	1
  2651  000B5C  6E17               	movwf	(??_kpDebounce+1)^0,c
  2652  000B5E  2A16               	incf	??_kpDebounce^0,f,c
  2653  000B60  EFB4  F005         	goto	u484
  2654  000B64                     u485:
  2655  000B64  90D8               	bcf	status,0,c
  2656  000B66  3617               	rlcf	(??_kpDebounce+1)^0,f,c
  2657  000B68                     u484:
  2658  000B68  2E16               	decfsz	??_kpDebounce^0,f,c
  2659  000B6A  EFB2  F005         	goto	u485
  2660  000B6E  5017               	movf	(??_kpDebounce+1)^0,w,c
  2661  000B70  1483               	andwf	131,w,c	;volatile
  2662  000B72  0900               	iorlw	0
  2663  000B74  A4D8               	btfss	status,2,c
  2664  000B76  EFBF  F005         	goto	u491
  2665  000B7A  EFC1  F005         	goto	u490
  2666  000B7E                     u491:
  2667  000B7E  EFD9  F005         	goto	l1150
  2668  000B82                     u490:
  2669  000B82                     
  2670                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 68:                 ((valorNovo
      +                          ) |= (1<<((i * 4) + j)));
  2671  000B82  501F               	movf	kpDebounce@i^0,w,c
  2672  000B84  0D04               	mullw	4
  2673  000B86  50F3               	movf	243,w,c
  2674  000B88  241E               	addwf	kpDebounce@j^0,w,c
  2675  000B8A  6E16               	movwf	??_kpDebounce^0,c
  2676  000B8C  0E01               	movlw	1
  2677  000B8E  6E17               	movwf	(??_kpDebounce+1)^0,c
  2678  000B90  0E00               	movlw	0
  2679  000B92  6E18               	movwf	(??_kpDebounce+2)^0,c
  2680  000B94  2A16               	incf	??_kpDebounce^0,f,c
  2681  000B96  EFD0  F005         	goto	u504
  2682  000B9A                     u505:
  2683  000B9A  90D8               	bcf	status,0,c
  2684  000B9C  3617               	rlcf	(??_kpDebounce+1)^0,f,c
  2685  000B9E  3618               	rlcf	(??_kpDebounce+2)^0,f,c
  2686  000BA0                     u504:
  2687  000BA0  2E16               	decfsz	??_kpDebounce^0,f,c
  2688  000BA2  EFCD  F005         	goto	u505
  2689  000BA6  5017               	movf	(??_kpDebounce+1)^0,w,c
  2690  000BA8  1228               	iorwf	kpDebounce@valorNovo^0,f,c
  2691  000BAA  5018               	movf	(??_kpDebounce+2)^0,w,c
  2692  000BAC  1229               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  2693                           
  2694                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 69:             } else {
  2695  000BAE  EFF3  F005         	goto	l1152
  2696  000BB2                     l1150:
  2697                           
  2698                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 70:                 ((valorNovo
      +                          ) &= ~(1<<((i * 4) + j)));
  2699  000BB2  501F               	movf	kpDebounce@i^0,w,c
  2700  000BB4  0D04               	mullw	4
  2701  000BB6  50F3               	movf	243,w,c
  2702  000BB8  241E               	addwf	kpDebounce@j^0,w,c
  2703  000BBA  6E16               	movwf	??_kpDebounce^0,c
  2704  000BBC  0E01               	movlw	1
  2705  000BBE  6E17               	movwf	(??_kpDebounce+1)^0,c
  2706  000BC0  0E00               	movlw	0
  2707  000BC2  6E18               	movwf	(??_kpDebounce+2)^0,c
  2708  000BC4  2A16               	incf	??_kpDebounce^0,f,c
  2709  000BC6  EFE8  F005         	goto	u514
  2710  000BCA                     u515:
  2711  000BCA  90D8               	bcf	status,0,c
  2712  000BCC  3617               	rlcf	(??_kpDebounce+1)^0,f,c
  2713  000BCE  3618               	rlcf	(??_kpDebounce+2)^0,f,c
  2714  000BD0                     u514:
  2715  000BD0  2E16               	decfsz	??_kpDebounce^0,f,c
  2716  000BD2  EFE5  F005         	goto	u515
  2717  000BD6  1C17               	comf	(??_kpDebounce+1)^0,w,c
  2718  000BD8  6E19               	movwf	(??_kpDebounce+3)^0,c
  2719  000BDA  1C18               	comf	(??_kpDebounce+2)^0,w,c
  2720  000BDC  6E1A               	movwf	(??_kpDebounce+4)^0,c
  2721  000BDE  5019               	movf	(??_kpDebounce+3)^0,w,c
  2722  000BE0  1628               	andwf	kpDebounce@valorNovo^0,f,c
  2723  000BE2  501A               	movf	(??_kpDebounce+4)^0,w,c
  2724  000BE4  1629               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  2725  000BE6                     l1152:
  2726                           
  2727                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 72:         }
  2728  000BE6  2A1E               	incf	kpDebounce@j^0,f,c
  2729  000BE8  0E03               	movlw	3
  2730  000BEA  641E               	cpfsgt	kpDebounce@j^0,c
  2731  000BEC  EFFA  F005         	goto	u521
  2732  000BF0  EFFC  F005         	goto	u520
  2733  000BF4                     u521:
  2734  000BF4  EFAB  F005         	goto	l1146
  2735  000BF8                     u520:
  2736  000BF8                     
  2737                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 73:     }
  2738  000BF8  2A1F               	incf	kpDebounce@i^0,f,c
  2739  000BFA  0E02               	movlw	2
  2740  000BFC  641F               	cpfsgt	kpDebounce@i^0,c
  2741  000BFE  EF03  F006         	goto	u531
  2742  000C02  EF05  F006         	goto	u530
  2743  000C06                     u531:
  2744  000C06  EF74  F005         	goto	l1128
  2745  000C0A                     u530:
  2746  000C0A                     
  2747                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 74:     if (valorAntigo == valo
      +                          rNovo) {
  2748  000C0A  5028               	movf	kpDebounce@valorNovo^0,w,c
  2749  000C0C  1826               	xorwf	kpDebounce@valorAntigo^0,w,c
  2750  000C0E  E107               	bnz	u541
  2751  000C10  5029               	movf	(kpDebounce@valorNovo+1)^0,w,c
  2752  000C12  1827               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  2753  000C14  A4D8               	btfss	status,2,c
  2754  000C16  EF0F  F006         	goto	u541
  2755  000C1A  EF11  F006         	goto	u540
  2756  000C1E                     u541:
  2757  000C1E  EF14  F006         	goto	l1164
  2758  000C22                     u540:
  2759  000C22                     
  2760                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 75:         tempo--;
  2761  000C22  0632               	decf	kpDebounce@tempo^0,f,c
  2762                           
  2763                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 76:     } else {
  2764  000C24  EF1A  F006         	goto	l107
  2765  000C28                     l1164:
  2766                           
  2767                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 77:         tempo = 10;
  2768  000C28  0E0A               	movlw	10
  2769  000C2A  6E32               	movwf	kpDebounce@tempo^0,c
  2770  000C2C                     
  2771                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 78:         valorAntigo = valor
      +                          Novo;
  2772  000C2C  C028  F026         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  2773  000C30  C029  F027         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  2774  000C34                     l107:
  2775                           
  2776                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 80:     if (tempo == 0) {
  2777  000C34  5032               	movf	kpDebounce@tempo^0,w,c
  2778  000C36  A4D8               	btfss	status,2,c
  2779  000C38  EF20  F006         	goto	u551
  2780  000C3C  EF22  F006         	goto	u550
  2781  000C40                     u551:
  2782  000C40  EF26  F006         	goto	l108
  2783  000C44                     u550:
  2784  000C44                     
  2785                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 81:         valor = valorAntigo
      +                          ;
  2786  000C44  C026  F02A         	movff	kpDebounce@valorAntigo,_valor
  2787  000C48  C027  F02B         	movff	kpDebounce@valorAntigo+1,_valor+1
  2788  000C4C                     l108:
  2789                           
  2790                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 83:     PORTD = old_D;
  2791  000C4C  C01B  FF83         	movff	kpDebounce@old_D,3971	;volatile
  2792  000C50                     
  2793                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/keypad.c: 84:     TRISD = 0x00;
  2794  000C50  0E00               	movlw	0
  2795  000C52  6E95               	movwf	149,c	;volatile
  2796  000C54  0012               	return		;funcret
  2797  000C56                     __end_of_kpDebounce:
  2798                           	callstack 0
  2799                           
  2800 ;; *************** function _atraso_ms *****************
  2801 ;; Defined at:
  2802 ;;		line 3 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  t               2    0[COMRAM] int 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;  i               2    2[COMRAM] volatile unsigned int 
  2807 ;;  k               1    5[COMRAM] volatile unsigned char 
  2808 ;;  j               1    4[COMRAM] volatile unsigned char 
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2818 ;;      Params:         2       0       0       0       0       0       0
  2819 ;;      Locals:         4       0       0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0
  2821 ;;      Totals:         6       0       0       0       0       0       0
  2822 ;;Total ram usage:        6 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		_main
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text17
  2832  001096                     __ptext17:
  2833                           	callstack 0
  2834  001096                     _atraso_ms:
  2835                           	callstack 30
  2836  001096                     
  2837                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 4:     volatile unsigned char j,
      +                           k;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 5:     volatile unsigned int 
      +                          i;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 7:     for (i = 0; i < (t); i+
      +                          +) {
  2838  001096  0E00               	movlw	0
  2839  001098  6E19               	movwf	(atraso_ms@i+1)^0,c	;volatile
  2840  00109A  0E00               	movlw	0
  2841  00109C  6E18               	movwf	atraso_ms@i^0,c	;volatile
  2842  00109E  EF71  F008         	goto	l1642
  2843  0010A2                     l1620:
  2844                           
  2845                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 8:         for (j = 0; j < 41; j
      +                          ++) {
  2846  0010A2  0E00               	movlw	0
  2847  0010A4  6E1A               	movwf	atraso_ms@j^0,c	;volatile
  2848  0010A6                     l1622:
  2849  0010A6  0E28               	movlw	40
  2850  0010A8  641A               	cpfsgt	atraso_ms@j^0,c	;volatile
  2851  0010AA  EF59  F008         	goto	u1381
  2852  0010AE  EF5B  F008         	goto	u1380
  2853  0010B2                     u1381:
  2854  0010B2  EF5D  F008         	goto	l1626
  2855  0010B6                     u1380:
  2856  0010B6  EF6F  F008         	goto	l1640
  2857  0010BA                     l1626:
  2858                           
  2859                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 9:             for (k = 0; k < 3
      +                          ; k++);
  2860  0010BA  0E00               	movlw	0
  2861  0010BC  6E1B               	movwf	atraso_ms@k^0,c	;volatile
  2862  0010BE                     l1628:
  2863  0010BE  0E02               	movlw	2
  2864  0010C0  641B               	cpfsgt	atraso_ms@k^0,c	;volatile
  2865  0010C2  EF65  F008         	goto	u1391
  2866  0010C6  EF67  F008         	goto	u1390
  2867  0010CA                     u1391:
  2868  0010CA  EF69  F008         	goto	l1632
  2869  0010CE                     u1390:
  2870  0010CE  EF6C  F008         	goto	l1636
  2871  0010D2                     l1632:
  2872  0010D2  2A1B               	incf	atraso_ms@k^0,f,c	;volatile
  2873  0010D4  EF5F  F008         	goto	l1628
  2874  0010D8                     l1636:
  2875                           
  2876                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 10:         }
  2877  0010D8  2A1A               	incf	atraso_ms@j^0,f,c	;volatile
  2878  0010DA  EF53  F008         	goto	l1622
  2879  0010DE                     l1640:
  2880                           
  2881                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 11:     }
  2882  0010DE  4A18               	infsnz	atraso_ms@i^0,f,c	;volatile
  2883  0010E0  2A19               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  2884  0010E2                     l1642:
  2885  0010E2  5016               	movf	atraso_ms@t^0,w,c
  2886  0010E4  5C18               	subwf	atraso_ms@i^0,w,c	;volatile
  2887  0010E6  5017               	movf	(atraso_ms@t+1)^0,w,c
  2888  0010E8  5819               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  2889  0010EA  A0D8               	btfss	status,0,c
  2890  0010EC  EF7A  F008         	goto	u1401
  2891  0010F0  EF7C  F008         	goto	u1400
  2892  0010F4                     u1401:
  2893  0010F4  EF51  F008         	goto	l1620
  2894  0010F8                     u1400:
  2895  0010F8  0012               	return		;funcret
  2896  0010FA                     __end_of_atraso_ms:
  2897                           	callstack 0
  2898                           
  2899                           	psect	rparam
  2900  0000                     
  2901                           	psect	idloc
  2902                           
  2903                           ;Config register IDLOC0 @ 0x200000
  2904                           ;	unspecified, using default values
  2905  200000                     	org	2097152
  2906  200000  FF                 	db	255
  2907                           
  2908                           ;Config register IDLOC1 @ 0x200001
  2909                           ;	unspecified, using default values
  2910  200001                     	org	2097153
  2911  200001  FF                 	db	255
  2912                           
  2913                           ;Config register IDLOC2 @ 0x200002
  2914                           ;	unspecified, using default values
  2915  200002                     	org	2097154
  2916  200002  FF                 	db	255
  2917                           
  2918                           ;Config register IDLOC3 @ 0x200003
  2919                           ;	unspecified, using default values
  2920  200003                     	org	2097155
  2921  200003  FF                 	db	255
  2922                           
  2923                           ;Config register IDLOC4 @ 0x200004
  2924                           ;	unspecified, using default values
  2925  200004                     	org	2097156
  2926  200004  FF                 	db	255
  2927                           
  2928                           ;Config register IDLOC5 @ 0x200005
  2929                           ;	unspecified, using default values
  2930  200005                     	org	2097157
  2931  200005  FF                 	db	255
  2932                           
  2933                           ;Config register IDLOC6 @ 0x200006
  2934                           ;	unspecified, using default values
  2935  200006                     	org	2097158
  2936  200006  FF                 	db	255
  2937                           
  2938                           ;Config register IDLOC7 @ 0x200007
  2939                           ;	unspecified, using default values
  2940  200007                     	org	2097159
  2941  200007  FF                 	db	255
  2942                           
  2943                           	psect	config
  2944                           
  2945                           ; Padding undefined space
  2946  300000                     	org	3145728
  2947  300000  FF                 	db	255
  2948                           
  2949                           ;Config register CONFIG1H @ 0x300001
  2950                           ;	Oscillator Selection bits
  2951                           ;	OSC = HS, HS oscillator
  2952                           ;	Fail-Safe Clock Monitor Enable bit
  2953                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2954                           ;	Internal/External Oscillator Switchover bit
  2955                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2956  300001                     	org	3145729
  2957  300001  02                 	db	2
  2958                           
  2959                           ;Config register CONFIG2L @ 0x300002
  2960                           ;	Power-up Timer Enable bit
  2961                           ;	PWRT = OFF, PWRT disabled
  2962                           ;	Brown-out Reset Enable bits
  2963                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2964                           ;	Brown Out Reset Voltage bits
  2965                           ;	BORV = 0x2E, user specified literal
  2966  300002                     	org	3145730
  2967  300002  71                 	db	369
  2968                           
  2969                           ;Config register CONFIG2H @ 0x300003
  2970                           ;	Watchdog Timer Enable bit
  2971                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2972                           ;	Watchdog Timer Postscale Select bits
  2973                           ;	WDTPS = 1, 1:1
  2974  300003                     	org	3145731
  2975  300003  00                 	db	0
  2976                           
  2977                           ; Padding undefined space
  2978  300004                     	org	3145732
  2979  300004  FF                 	db	255
  2980                           
  2981                           ;Config register CONFIG3H @ 0x300005
  2982                           ;	CCP2 MUX bit
  2983                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2984                           ;	PORTB A/D Enable bit
  2985                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2986                           ;	Low-Power Timer1 Oscillator Enable bit
  2987                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2988                           ;	MCLR Pin Enable bit
  2989                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2990  300005                     	org	3145733
  2991  300005  83                 	db	131
  2992                           
  2993                           ;Config register CONFIG4L @ 0x300006
  2994                           ;	Stack Full/Underflow Reset Enable bit
  2995                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  2996                           ;	Single-Supply ICSP Enable bit
  2997                           ;	LVP = OFF, Single-Supply ICSP disabled
  2998                           ;	Extended Instruction Set Enable bit
  2999                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3000                           ;	Background Debugger Enable bit
  3001                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3002  300006                     	org	3145734
  3003  300006  80                 	db	128
  3004                           
  3005                           ; Padding undefined space
  3006  300007                     	org	3145735
  3007  300007  FF                 	db	255
  3008                           
  3009                           ;Config register CONFIG5L @ 0x300008
  3010                           ;	Code Protection bit
  3011                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3012                           ;	Code Protection bit
  3013                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3014                           ;	Code Protection bit
  3015                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3016                           ;	Code Protection bit
  3017                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3018  300008                     	org	3145736
  3019  300008  0F                 	db	15
  3020                           
  3021                           ;Config register CONFIG5H @ 0x300009
  3022                           ;	Boot Block Code Protection bit
  3023                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3024                           ;	Data EEPROM Code Protection bit
  3025                           ;	CPD = OFF, Data EEPROM not code-protected
  3026  300009                     	org	3145737
  3027  300009  C0                 	db	192
  3028                           
  3029                           ;Config register CONFIG6L @ 0x30000A
  3030                           ;	Write Protection bit
  3031                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3032                           ;	Write Protection bit
  3033                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3034                           ;	Write Protection bit
  3035                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3036                           ;	Write Protection bit
  3037                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3038  30000A                     	org	3145738
  3039  30000A  0F                 	db	15
  3040                           
  3041                           ;Config register CONFIG6H @ 0x30000B
  3042                           ;	Configuration Register Write Protection bit
  3043                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3044                           ;	Boot Block Write Protection bit
  3045                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3046                           ;	Data EEPROM Write Protection bit
  3047                           ;	WRTD = OFF, Data EEPROM not write-protected
  3048  30000B                     	org	3145739
  3049  30000B  E0                 	db	224
  3050                           
  3051                           ;Config register CONFIG7L @ 0x30000C
  3052                           ;	Table Read Protection bit
  3053                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3054                           ;	Table Read Protection bit
  3055                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3056                           ;	Table Read Protection bit
  3057                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3058                           ;	Table Read Protection bit
  3059                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3060  30000C                     	org	3145740
  3061  30000C  0F                 	db	15
  3062                           
  3063                           ;Config register CONFIG7H @ 0x30000D
  3064                           ;	Boot Block Table Read Protection bit
  3065                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3066  30000D                     	org	3145741
  3067  30000D  40                 	db	64
  3068                           tosu	equ	0xFFF
  3069                           tosh	equ	0xFFE
  3070                           tosl	equ	0xFFD
  3071                           stkptr	equ	0xFFC
  3072                           pclatu	equ	0xFFB
  3073                           pclath	equ	0xFFA
  3074                           pcl	equ	0xFF9
  3075                           tblptru	equ	0xFF8
  3076                           tblptrh	equ	0xFF7
  3077                           tblptrl	equ	0xFF6
  3078                           tablat	equ	0xFF5
  3079                           prodh	equ	0xFF4
  3080                           prodl	equ	0xFF3
  3081                           indf0	equ	0xFEF
  3082                           postinc0	equ	0xFEE
  3083                           postdec0	equ	0xFED
  3084                           preinc0	equ	0xFEC
  3085                           plusw0	equ	0xFEB
  3086                           fsr0h	equ	0xFEA
  3087                           fsr0l	equ	0xFE9
  3088                           wreg	equ	0xFE8
  3089                           indf1	equ	0xFE7
  3090                           postinc1	equ	0xFE6
  3091                           postdec1	equ	0xFE5
  3092                           preinc1	equ	0xFE4
  3093                           plusw1	equ	0xFE3
  3094                           fsr1h	equ	0xFE2
  3095                           fsr1l	equ	0xFE1
  3096                           bsr	equ	0xFE0
  3097                           indf2	equ	0xFDF
  3098                           postinc2	equ	0xFDE
  3099                           postdec2	equ	0xFDD
  3100                           preinc2	equ	0xFDC
  3101                           plusw2	equ	0xFDB
  3102                           fsr2h	equ	0xFDA
  3103                           fsr2l	equ	0xFD9
  3104                           status	equ	0xFD8

Data Sizes:
    Strings     45
    Constant    16
    Data        191
    BSS         203
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     16      50
    BANK0           128      0       0
    BANK1           256      0     190
    BANK2           256      0     170
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 170
		 -> nomes(BANK2[170]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 170
		 -> nomes(BANK2[170]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    lcdStr@str	PTR const unsigned char  size(2) Largest target is 190
		 -> STR_5(CODE[17]), musicas.nome(BANK1[17]), musicas(BANK1[190]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[7]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_songsInit
    _songsInit->_strcpy
    _strcpy->___wmul
    _lcdInit->_lcdCommand
    _chooseSong->_lcdStr
    _lcdStr->_lcdData
    _lcdData->_digitalWrite
    _lcdPosition->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   24400
                          _atraso_ms
                         _chooseSong
                             _kpInit
                         _lcdCommand
                            _lcdInit
                        _lcdPosition
                             _lcdStr
                          _songsInit
 ---------------------------------------------------------------------------------
 (1) _songsInit                                            2     2      0     997
                                             14 COMRAM     2     2      0
                             ___wmul
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     4      4     248
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    4163
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _chooseSong                                           2     2      0    9618
                                             13 COMRAM     2     2      0
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                        _lcdPosition
                             _lcdStr
 ---------------------------------------------------------------------------------
 (1) _lcdStr                                               5     3      2    3193
                                              8 COMRAM     5     3      2
                            _lcdData
 ---------------------------------------------------------------------------------
 (2) _lcdData                                              2     2      0    2647
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _lcdPosition                                          3     2      1    3464
                                              8 COMRAM     3     2      1
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    2751
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    2572
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      60
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _kpDebounce                                          10    10      0     210
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _atraso_ms                                            6     4      2     214
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _chooseSong
     _kpDebounce
     _kpRead
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _lcdPosition
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
     _lcdStr
       _lcdData
         _Delay40us
         _digitalWrite
   _kpInit
   _lcdCommand
     _Delay2ms
       _Delay40us
     _Delay40us
     _digitalWrite
   _lcdInit
     _Delay2ms
       _Delay40us
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _pinMode
   _lcdPosition
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
   _lcdStr
     _lcdData
       _Delay40us
       _digitalWrite
   _songsInit
     ___wmul
     _strcpy
       ___wmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      AA       9       66.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      BE       7       74.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     10      32       1       39.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19A      15        0.0%
DATA                 0      0     19A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Dec 08 14:10:59 2020

                     l42 0ADA                       l76 088C                       l89 12CA  
                     u10 12A0                       u11 129C                       _v0 0030  
                     _v1 002F                       _v2 002E                       _v3 002D  
    ___wmul@multiplicand 0018                      l112 12C0                      l107 0C34  
                    l108 0C4C                      l220 12A0                      l109 0C54  
                    l232 0FA4                      l225 1288                      l241 1178  
                    l242 119E                      l235 1208                      l251 1094  
                    l245 11B4                      l238 101C                      l184 10F8  
                    l284 0CCA                      l294 0D52                      l278 0E9E  
                    l288 0CF8                      l297 126C                      l982 128E  
                    l974 1246                      l984 1290                      l976 128A  
                    u220 1288                      u221 1284                      u520 0BF8  
                    u504 0BA0                      u521 0BF4                      u505 0B9A  
                    u530 0C0A                      u514 0BD0                      u531 0C06  
                    u515 0BCA                      u540 0C22                      u541 0C1E  
                    u550 0C44                      u470 0B52                      u454 0AFE  
                    u551 0C40                      u471 0B4E                      u455 0AFA  
                    u464 0B1E                      u465 0B1A                      u490 0B82  
                    u491 0B7E                      u484 0B68                      u485 0B64  
                    u920 091A                      u904 08CE                      u921 0916  
                    u905 08CA                      u930 0934                      u914 08EE  
                    u931 0930                      u915 08EA                      u960 0992  
                    u944 0946                      u880 08AA                      u961 098E  
                    u945 0942                      u881 08A6                      u970 09AC  
                    u954 0966                      u890 08BC                      u971 09A8  
                    u955 0962                      u891 08B8                      u984 09BE  
                    u985 09BA                      u994 09DE                      u995 09DA  
                    prod 000FF3                      wreg 000FE8                     l1120 0AE0  
                   l1032 1272                     l1130 0B2A                     l1122 0AE4  
                   l1034 1276                     l1026 126E                     l1140 0B52  
                   l1036 1278                     l1150 0BB2                     l1118 0ADC  
                   l1160 0C0A                     l1152 0BE6                     l1136 0B32  
                   l1128 0AE8                     l1208 12B8                     l1170 0C50  
                   l1162 0C22                     l1154 0BE8                     l1146 0B56  
                   l1138 0B36                     l1164 0C28                     l1156 0BF8  
                   l1148 0B82                     l1500 0ABC                     l1166 0C2C  
                   l1158 0BFA                     l1510 0F4A                     l1502 0F2A  
                   l1168 0C44                     l1520 0F98                     l1512 0F5E  
                   l1504 0F2E                     l1600 101E                     l1522 0FA0  
                   l1514 0F72                     l1506 0F32                     l1530 11D4  
                   l1602 1026                     l1610 121A                     l1620 10A2  
                   l1516 0F76                     l1508 0F46                     l1532 11D8  
                   l1524 11B8                     l1604 1056                     l1700 0C96  
                   l1540 0640                     l1612 1248                     l1622 10A6  
                   l1470 08FE                     l1462 088E                     l1518 0F88  
                   l1534 11EC                     l1526 11BC                     l1606 1058  
                   l1710 0CD8                     l1702 0C9E                     l1550 06CC  
                   l1542 065C                     l1614 1264                     l1632 10D2  
                   l1640 10DE                     l1480 0992                     l1472 091A  
                   l1464 08AA                     l1536 1200                     l1528 11C0  
                   l1720 0D1A                     l1712 0CEA                     l1704 0CAC  
                   l1560 0756                     l1552 06DE                     l1544 066E  
                   l1608 120A                     l1800 0F06                     l1626 10BA  
                   l1642 10E2                     l1618 1096                     l1490 0A24  
                   l1482 09AC                     l1474 0934                     l1466 08BC  
                   l1538 1204                     l1722 0D26                     l1714 0CF2  
                   l1706 0CBC                     l1570 07F2                     l1562 077A  
                   l1554 0702                     l1546 068E                     l1650 0E06  
                   l1802 0F10                     l1636 10D8                     l1628 10BE  
                   l1580 12C2                     l1492 0A44                     l1484 09CC  
                   l1476 0954                     l1468 08DC                     l1724 0D30  
                   l1708 0CC4                     l1572 0818                     l1564 07A0  
                   l1556 0728                     l1548 06B0                     l1660 0FD2  
                   l1652 0E84                     l1644 0DFE                     l1804 0F1C  
                   l1494 0A66                     l1486 09EE                     l1478 0976  
                   l1590 1188                     l1582 115E                     l1726 0D48  
                   l1718 0D0A                     l1574 0834                     l1566 07BC  
                   l1558 0744                     l1670 0FE6                     l1662 0FD6  
                   l1654 0E88                     l1496 0A82                     l1488 0A0A  
                   l1592 1198                     l1584 1162                     l1576 0846  
                   l1568 07CE                     l1680 0FFE                     l1672 0FEC  
                   l1664 0FDA                     l1656 0FA6                     l1498 0A9C  
                   l1594 11AE                     l1586 1172                     l1690 0C56  
                   l1578 086A                     l1682 1004                     l1674 0FF0  
                   l1666 0FDE                     l1658 0FCE                     l1588 1172  
                   l1692 0C5A                     l1684 100A                     l1676 0FF4  
                   l1668 0FE2                     l1780 0EA8                     l1598 11AE  
                   l1694 0C62                     l1686 1010                     l1678 0FFA  
                   l1790 0ED2                     l1782 0EAC                     l1696 0C70  
                   l1688 1016                     l1792 0EDE                     l1784 0EB2  
                   l1776 0EA0                     l1698 0C74                     l1794 0EEA  
                   l1786 0EBC                     l1778 0EA4                     l1796 0EF0  
                   l1788 0EC8                     l1798 0EFA                     STR_1 063A  
                   STR_2 0633                     STR_3 0622                     STR_4 0611  
                   STR_5 0611                     u1000 0A0A                     u1001 0A06  
                   u1010 0A24                     u1011 0A20                     u1100 065C  
                   u1101 0658                     u1110 066E                     u1111 066A  
                   u1040 0A82                     u1024 0A36                     u1041 0A7E  
                   u1025 0A32                     u1050 0A9C                     u1034 0A56  
                   u1051 0A98                     u1035 0A52                     u1300 1172  
                   u1220 07BC                     u1204 076C                     u1140 06CC  
                   u1124 0680                     u1301 116E                     u1221 07B8  
                   u1205 0768                     u1141 06C8                     u1125 067C  
                   u1310 1188                     u1230 07CE                     u1214 0790  
                   u1150 06DE                     u1134 06A0                     u1311 1184  
                   u1231 07CA                     u1215 078C                     u1151 06DA  
                   u1135 069C                     u1400 10F8                     u1064 0AAE  
                   u1080 0F88                     u1320 1198                     u1401 10F4  
                   u1065 0AAA                     u1081 0F84                     u1321 1194  
                   u1074 0ACE                     u1090 0F98                     u1330 11AE  
                   u1410 0E9E                     u1075 0ACA                     u1091 0F94  
                   u1331 11AA                     u1411 0E9A                     u1340 1052  
                   u1420 0C70                     u1260 0834                     u1244 07E4  
                   u1180 0744                     u1164 06F4                     u1421 0C6C  
                   u1261 0830                     u1245 07E0                     u1181 0740  
                   u1165 06F0                     u1350 1084                     u1430 0C96  
                   u1270 0846                     u1254 0808                     u1190 0756  
                   u1174 0718                     u1431 0C92                     u1271 0842  
                   u1255 0804                     u1191 0752                     u1175 0714  
                   u1360 1094                     u1440 0CAC                     u1361 1090  
                   u1441 0CA8                     u1450 0CBC                     u1370 1246  
                   u1347 1048                     u1451 0CB8                     u1371 1242  
                   u1380 10B6                     u1460 0CD8                     u1284 085C  
                   u1381 10B2                     u1357 107A                     u1461 0CD4  
                   u1285 0858                     u1390 10CE                     u1470 0CEA  
                   u1294 0880                     u1391 10CA                     u1471 0CE6  
                   u1295 087C                     u1480 0D06                     u1481 0D02  
                   _main 0EA0                     fsr0h 000FEA                     fsr1h 000FE2  
                   indf0 000FEF                     fsr2h 000FDA                     fsr0l 000FE9  
                   indf1 000FE7                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     prodh 000FF4                     prodl 000FF3  
                   start 0000             ___param_bank 000000                    ?_main 0016  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _PORTE 000F84                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96          __end_of_lcdData 120A          __end_of_lcdInit 101E  
                  _tecla 0015                    _nomes 0200          __end_of_pinMode 088E  
                  _valor 002A                    tablat 000FF5                    status 000FD8  
       __end_of_Delay2ms 128A     __end_of_digitalWrite 0ADC          __initialization 10FA  
           __end_of_main 0F28       __size_of_Delay40us 0018                   ??_main 0026  
          __activetblptr 000002     __size_of_lcdPosition 005A        lcdPosition@coluna 001E  
                 ___wmul 1248                   _lcdStr 101E                   _kpInit 12B8  
                 _kpRead 12C2                   _indice 002C                   clear_0 1140  
                 clear_1 114C                ??_lcdData 001C                ??_lcdInit 001E  
                 _strcpy 120A             __pdataCOMRAM 0001                ??_pinMode 001A  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8        __end_of_Delay40us 12A2               __accesstop 0080  
__end_of__initialization 1152            ___rparam_used 000001              pinMode@type 0018  
         __pcstackCOMRAM 0016             __pidataBANK2 0D54                ?_Delay2ms 0016  
     __size_of_atraso_ms 0064               __pbssBANK1 0100    __size_of_digitalWrite 024E  
             _lcdCommand 0F28                  ?___wmul 0016                  ?_lcdStr 001E  
                ?_kpInit 0016                  ?_kpRead 0016               _kpDebounce 0ADC  
             _chooseSong 0C56                  ?_strcpy 001C               ??_Delay2ms 0017  
           _digitalWrite 088E       __size_of_songsInit 00A2                  __Hparam 0000  
                __Lparam 0000          kpDebounce@old_D 001B       lcdPosition@comando 0020  
        kpDebounce@tempo 0032          __size_of___wmul 0026        __end_of_atraso_ms 10FA  
           __psmallconst 0600          __size_of_lcdStr 0078          __size_of_kpInit 000A  
        __size_of_kpRead 000A                  __pcinit 10FA                  _lcdData 11B6  
                __ramtop 0600                  _lcdInit 0FA6                  __ptext0 0EA0  
                __ptext1 0DFE                  __ptext2 120A                  __ptext3 1248  
                __ptext4 0FA6                  __ptext5 0640                  __ptext6 12B8  
                __ptext7 0C56                  __ptext8 101E                  __ptext9 11B6  
                _display 0031          __size_of_strcpy 003E                  _pinMode 0640  
                _musicas 0100                  lcdStr@i 0022                Delay2ms@i 0017  
    kpDebounce@valorNovo 0028     end_of_initialization 1152            __Lmediumconst 0000  
      __end_of_songsInit 0EA0                  postdec1 000FE5                  postdec2 000FDD  
            ?_lcdCommand 0016                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE                  strcpy@d 0022                  strcpy@s 0020  
            ?_kpDebounce 0016              ?_chooseSong 0016           _valor@ssd$F102 0601  
          ??_lcdPosition 001F                _Delay40us 128A               atraso_ms@i 0018  
             atraso_ms@j 001A               atraso_ms@k 001B               atraso_ms@t 0016  
         __end_of___wmul 126E            __pidataCOMRAM 12A2           __end_of_lcdStr 1096  
         __end_of_kpInit 12C2           __end_of_kpRead 12CC   __end_of_valor@ssd$F102 0611  
         __end_of_strcpy 1248      start_initialization 10FA        __size_of_Delay2ms 001C  
    __size_of_lcdCommand 007E      __size_of_kpDebounce 017A               ?_Delay40us 0016  
    __size_of_chooseSong 00FE      __end_of_lcdPosition 11B6         lcdPosition@linha 001F  
               ??___wmul 001A                 ??_lcdStr 0020                 ??_kpInit 0016  
               ??_kpRead 0018              __pdataBANK2 0200                 ??_strcpy 0020  
            __pbssCOMRAM 0026               pinMode@pin 0016                 ?_lcdData 0016  
               ?_lcdInit 0016            lcdCommand@cmd 001D                _atraso_ms 1096  
            __smallconst 0600                 ?_pinMode 0016              _lcdPosition 115C  
            ??_Delay40us 0016           ___wmul@product 001A             ??_lcdCommand 001C  
              lcdStr@str 001E             ??_kpDebounce 0016             ??_chooseSong 0023  
              _songsInit 0DFE        ___wmul@multiplier 0016               ?_atraso_ms 0016  
        lcdCommand@old_D 001C    kpDebounce@valorAntigo 0026                 _Delay2ms 126E  
              copy_data0 110E                copy_data1 112E       __end_of_lcdCommand 0FA6  
           lcdData@old_D 001D             lcdData@valor 001C               songsInit@i 0024  
     __end_of_kpDebounce 0C56       __end_of_chooseSong 0D54                 __Hrparam 0000  
               __Lrparam 0000               ?_songsInit 0016         __size_of_lcdData 0054  
       __size_of_lcdInit 0078         __size_of_pinMode 024E                 __ptext10 115C  
               __ptext11 0F28                 __ptext12 088E                 __ptext13 126E  
               __ptext14 128A                 __ptext15 12C2                 __ptext16 0ADC  
               __ptext17 1096               strcpy@dest 001C                 _duracoes 0001  
          __size_of_main 0088               Delay40us@i 0016              ??_atraso_ms 0018  
          ?_digitalWrite 0016        digitalWrite@value 0018                strcpy@src 001E  
            ??_songsInit 0024              kpDebounce@i 001F              kpDebounce@j 001E  
            kpDebounce@k 001C           ??_digitalWrite 001A             ?_lcdPosition 001E  
        digitalWrite@pin 0016  
