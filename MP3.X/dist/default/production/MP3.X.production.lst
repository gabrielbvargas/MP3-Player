

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Dec 08 21:01:31 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F4520 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	idataCOMRAM
    85  001C66                     __pidataCOMRAM:
    86                           	callstack 0
    87                           
    88                           ;initializer for _duracoes
    89  001C66  0046               	dw	70
    90  001C68  000F               	dw	15
    91  001C6A  0078               	dw	120
    92  001C6C  003C               	dw	60
    93  001C6E  000A               	dw	10
    94  001C70  0028               	dw	40
    95  001C72  0014               	dw	20
    96  001C74  001E               	dw	30
    97  001C76  008C               	dw	140
    98  001C78  000A               	dw	10
    99                           
   100                           ;initializer for _teclas
   101  001C7A  0A                 	db	10
   102  001C7B  07                 	db	7
   103  001C7C  04                 	db	4
   104  001C7D  01                 	db	1
   105  001C7E  00                 	db	0
   106  001C7F  08                 	db	8
   107  001C80  05                 	db	5
   108  001C81  02                 	db	2
   109                           
   110                           ;initializer for _volume
   111  001C82  03                 	db	3
   112                           
   113                           ;initializer for _pause
   114  001C83  01                 	db	1
   115                           
   116                           ;initializer for _tecla
   117  001C84  10                 	db	16
   118                           
   119                           	psect	idataBANK2
   120  001590                     __pidataBANK2:
   121                           	callstack 0
   122                           
   123                           ;initializer for _nomes
   124  001590  54                 	db	84
   125  001591  65                 	db	101
   126  001592  6D                 	db	109
   127  001593  70                 	db	112
   128  001594  6F                 	db	111
   129  001595  72                 	db	114
   130  001596  61                 	db	97
   131  001597  6C                 	db	108
   132  001598  00                 	db	0
   133  001599  00                 	db	0
   134  00159A  00                 	db	0
   135  00159B  00                 	db	0
   136  00159C  00                 	db	0
   137  00159D  00                 	db	0
   138  00159E  00                 	db	0
   139  00159F  00                 	db	0
   140  0015A0  00                 	db	0
   141  0015A1  43                 	db	67
   142  0015A2  68                 	db	104
   143  0015A3  65                 	db	101
   144  0015A4  69                 	db	105
   145  0015A5  61                 	db	97
   146  0015A6  20                 	db	32
   147  0015A7  64                 	db	100
   148  0015A8  65                 	db	101
   149  0015A9  20                 	db	32
   150  0015AA  4D                 	db	77
   151  0015AB  61                 	db	97
   152  0015AC  6E                 	db	110
   153  0015AD  69                 	db	105
   154  0015AE  61                 	db	97
   155  0015AF  73                 	db	115
   156  0015B0  00                 	db	0
   157  0015B1  00                 	db	0
   158  0015B2  45                 	db	69
   159  0015B3  20                 	db	32
   160  0015B4  54                 	db	84
   161  0015B5  61                 	db	97
   162  0015B6  72                 	db	114
   163  0015B7  64                 	db	100
   164  0015B8  65                 	db	101
   165  0015B9  20                 	db	32
   166  0015BA  44                 	db	68
   167  0015BB  65                 	db	101
   168  0015BC  6D                 	db	109
   169  0015BD  61                 	db	97
   170  0015BE  69                 	db	105
   171  0015BF  73                 	db	115
   172  0015C0  00                 	db	0
   173  0015C1  00                 	db	0
   174  0015C2  00                 	db	0
   175  0015C3  53                 	db	83
   176  0015C4  6F                 	db	111
   177  0015C5  7A                 	db	122
   178  0015C6  69                 	db	105
   179  0015C7  6E                 	db	110
   180  0015C8  68                 	db	104
   181  0015C9  6F                 	db	111
   182  0015CA  00                 	db	0
   183  0015CB  00                 	db	0
   184  0015CC  00                 	db	0
   185  0015CD  00                 	db	0
   186  0015CE  00                 	db	0
   187  0015CF  00                 	db	0
   188  0015D0  00                 	db	0
   189  0015D1  00                 	db	0
   190  0015D2  00                 	db	0
   191  0015D3  00                 	db	0
   192  0015D4  43                 	db	67
   193  0015D5  69                 	db	105
   194  0015D6  67                 	db	103
   195  0015D7  61                 	db	97
   196  0015D8  6E                 	db	110
   197  0015D9  61                 	db	97
   198  0015DA  00                 	db	0
   199  0015DB  00                 	db	0
   200  0015DC  00                 	db	0
   201  0015DD  00                 	db	0
   202  0015DE  00                 	db	0
   203  0015DF  00                 	db	0
   204  0015E0  00                 	db	0
   205  0015E1  00                 	db	0
   206  0015E2  00                 	db	0
   207  0015E3  00                 	db	0
   208  0015E4  00                 	db	0
   209  0015E5  43                 	db	67
   210  0015E6  69                 	db	105
   211  0015E7  75                 	db	117
   212  0015E8  6D                 	db	109
   213  0015E9  65                 	db	101
   214  0015EA  73                 	db	115
   215  0015EB  20                 	db	32
   216  0015EC  64                 	db	100
   217  0015ED  65                 	db	101
   218  0015EE  20                 	db	32
   219  0015EF  56                 	db	86
   220  0015F0  6F                 	db	111
   221  0015F1  63                 	db	99
   222  0015F2  65                 	db	101
   223  0015F3  00                 	db	0
   224  0015F4  00                 	db	0
   225  0015F5  00                 	db	0
   226  0015F6  45                 	db	69
   227  0015F7  78                 	db	120
   228  0015F8  74                 	db	116
   229  0015F9  72                 	db	114
   230  0015FA  61                 	db	97
   231  0015FB  70                 	db	112
   232  0015FC  6F                 	db	111
   233  0015FD  6C                 	db	108
   234  0015FE  65                 	db	101
   235  0015FF  69                 	db	105
   236  001600  00                 	db	0
   237  001601  00                 	db	0
   238  001602  00                 	db	0
   239  001603  00                 	db	0
   240  001604  00                 	db	0
   241  001605  00                 	db	0
   242  001606  00                 	db	0
   243  001607  44                 	db	68
   244  001608  65                 	db	101
   245  001609  75                 	db	117
   246  00160A  73                 	db	115
   247  00160B  20                 	db	32
   248  00160C  6D                 	db	109
   249  00160D  65                 	db	101
   250  00160E  20                 	db	32
   251  00160F  4C                 	db	76
   252  001610  69                 	db	105
   253  001611  76                 	db	118
   254  001612  72                 	db	114
   255  001613  65                 	db	101
   256  001614  00                 	db	0
   257  001615  00                 	db	0
   258  001616  00                 	db	0
   259  001617  00                 	db	0
   260  001618  4D                 	db	77
   261  001619  61                 	db	97
   262  00161A  72                 	db	114
   263  00161B  61                 	db	97
   264  00161C  76                 	db	118
   265  00161D  69                 	db	105
   266  00161E  6C                 	db	108
   267  00161F  68                 	db	104
   268  001620  61                 	db	97
   269  001621  00                 	db	0
   270  001622  00                 	db	0
   271  001623  00                 	db	0
   272  001624  00                 	db	0
   273  001625  00                 	db	0
   274  001626  00                 	db	0
   275  001627  00                 	db	0
   276  001628  00                 	db	0
   277  001629  4D                 	db	77
   278  00162A  65                 	db	101
   279  00162B  64                 	db	100
   280  00162C  69                 	db	105
   281  00162D  64                 	db	100
   282  00162E  61                 	db	97
   283  00162F  20                 	db	32
   284  001630  45                 	db	69
   285  001631  78                 	db	120
   286  001632  61                 	db	97
   287  001633  74                 	db	116
   288  001634  61                 	db	97
   289  001635  00                 	db	0
   290  001636  00                 	db	0
   291  001637  00                 	db	0
   292  001638  00                 	db	0
   293  001639  00                 	db	0
   294                           
   295                           	psect	smallconst
   296  000600                     __psmallconst:
   297                           	callstack 0
   298  000600  00                 	db	0
   299  000601                     _valor:
   300                           	callstack 0
   301  000601  3F                 	db	63
   302  000602  06                 	db	6
   303  000603  5B                 	db	91
   304  000604  4F                 	db	79
   305  000605  66                 	db	102
   306  000606  6D                 	db	109
   307  000607  7D                 	db	125
   308  000608  07                 	db	7
   309  000609  7F                 	db	127
   310  00060A  6F                 	db	111
   311  00060B  77                 	db	119
   312  00060C  7C                 	db	124
   313  00060D  39                 	db	57
   314  00060E  5E                 	db	94
   315  00060F  79                 	db	121
   316  000610  71                 	db	113
   317  000611                     __end_of_valor:
   318                           	callstack 0
   319  0000                     _T2CON	set	4042
   320  0000                     _CCP1CON	set	4029
   321  0000                     _CCPR1L	set	4030
   322  0000                     _PR2	set	4043
   323  0000                     _T0CON	set	4053
   324  0000                     _TMR0L	set	4054
   325  0000                     _TMR0H	set	4055
   326  0000                     _INTCON	set	4082
   327  0000                     _TRISE	set	3990
   328  0000                     _TRISD	set	3989
   329  0000                     _TRISC	set	3988
   330  0000                     _TRISB	set	3987
   331  0000                     _TRISA	set	3986
   332  0000                     _PORTE	set	3972
   333  0000                     _PORTD	set	3971
   334  0000                     _PORTC	set	3970
   335  0000                     _PORTB	set	3969
   336  0000                     _PORTA	set	3968
   337  000611                     STR_5:
   338  000611  45                 	db	69	;'E'
   339  000612  73                 	db	115	;'s'
   340  000613  63                 	db	99	;'c'
   341  000614  6F                 	db	111	;'o'
   342  000615  6C                 	db	108	;'l'
   343  000616  68                 	db	104	;'h'
   344  000617  61                 	db	97	;'a'
   345  000618  20                 	db	32
   346  000619  61                 	db	97	;'a'
   347  00061A  20                 	db	32
   348  00061B  6D                 	db	109	;'m'
   349  00061C  75                 	db	117	;'u'
   350  00061D  73                 	db	115	;'s'
   351  00061E  69                 	db	105	;'i'
   352  00061F  63                 	db	99	;'c'
   353  000620  61                 	db	97	;'a'
   354  000621  00                 	db	0
   355  000622                     STR_1:
   356  000622  3C                 	db	60	;'<'
   357  000623  2D                 	db	45
   358  000624  28                 	db	40
   359  000625  31                 	db	49	;'1'
   360  000626  29                 	db	41
   361  000627  20                 	db	32
   362  000628  28                 	db	40
   363  000629  2A                 	db	42
   364  00062A  29                 	db	41
   365  00062B  20                 	db	32
   366  00062C  20                 	db	32
   367  00062D  28                 	db	40
   368  00062E  32                 	db	50	;'2'
   369  00062F  29                 	db	41
   370  000630  2D                 	db	45
   371  000631  3E                 	db	62	;'>'
   372  000632  00                 	db	0
   373  000633                     STR_2:
   374  000633  2D                 	db	45
   375  000634  28                 	db	40
   376  000635  31                 	db	49	;'1'
   377  000636  29                 	db	41
   378  000637  20                 	db	32
   379  000638  20                 	db	32
   380  000639  28                 	db	40
   381  00063A  2A                 	db	42
   382  00063B  29                 	db	41
   383  00063C  20                 	db	32
   384  00063D  20                 	db	32
   385  00063E  28                 	db	40
   386  00063F  32                 	db	50	;'2'
   387  000640  29                 	db	41
   388  000641  2B                 	db	43
   389  000642  00                 	db	0
   390  000643                     STR_4:
   391  000643  50                 	db	80	;'P'
   392  000644  6C                 	db	108	;'l'
   393  000645  61                 	db	97	;'a'
   394  000646  79                 	db	121	;'y'
   395  000647  65                 	db	101	;'e'
   396  000648  72                 	db	114	;'r'
   397  000649  00                 	db	0
   398  00064A                     STR_3:
   399  00064A  4D                 	db	77	;'M'
   400  00064B  50                 	db	80	;'P'
   401  00064C  33                 	db	51	;'3'
   402  00064D  00                 	db	0
   403  00064E  00                 	db	0	; dummy byte at the end
   404  0000                     
   405                           ; #config settings
   406                           
   407                           	psect	cinit
   408  001A1E                     __pcinit:
   409                           	callstack 0
   410  001A1E                     start_initialization:
   411                           	callstack 0
   412  001A1E                     __initialization:
   413                           	callstack 0
   414                           
   415                           ; Initialize objects allocated to BANK2 (170 bytes)
   416                           ; load TBLPTR registers with __pidataBANK2
   417  001A1E  0E90               	movlw	low __pidataBANK2
   418  001A20  6EF6               	movwf	tblptrl,c
   419  001A22  0E15               	movlw	high __pidataBANK2
   420  001A24  6EF7               	movwf	tblptrh,c
   421  001A26  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   422  001A28  6EF8               	movwf	tblptru,c
   423  001A2A  EE02  F000         	lfsr	0,__pdataBANK2
   424  001A2E  EE10 F0AA          	lfsr	1,170
   425  001A32                     copy_data0:
   426  001A32  0009               	tblrd		*+
   427  001A34  CFF5 FFEE          	movff	tablat,postinc0
   428  001A38  50E5               	movf	postdec1,w,c
   429  001A3A  50E1               	movf	fsr1l,w,c
   430  001A3C  E1FA               	bnz	copy_data0
   431                           
   432                           ; Initialize objects allocated to COMRAM (31 bytes)
   433                           ; load TBLPTR registers with __pidataCOMRAM
   434  001A3E  0E66               	movlw	low __pidataCOMRAM
   435  001A40  6EF6               	movwf	tblptrl,c
   436  001A42  0E1C               	movlw	high __pidataCOMRAM
   437  001A44  6EF7               	movwf	tblptrh,c
   438  001A46  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   439  001A48  6EF8               	movwf	tblptru,c
   440  001A4A  EE00  F001         	lfsr	0,__pdataCOMRAM
   441  001A4E  EE10 F01F          	lfsr	1,31
   442  001A52                     copy_data1:
   443  001A52  0009               	tblrd		*+
   444  001A54  CFF5 FFEE          	movff	tablat,postinc0
   445  001A58  50E5               	movf	postdec1,w,c
   446  001A5A  50E1               	movf	fsr1l,w,c
   447  001A5C  E1FA               	bnz	copy_data1
   448                           
   449                           ; Clear objects allocated to BANK1 (190 bytes)
   450  001A5E  EE01  F000         	lfsr	0,__pbssBANK1
   451  001A62  0EBE               	movlw	190
   452  001A64                     clear_0:
   453  001A64  6AEE               	clrf	postinc0,c
   454  001A66  06E8               	decf	wreg,f,c
   455  001A68  E1FD               	bnz	clear_0
   456                           
   457                           ; Clear objects allocated to COMRAM (21 bytes)
   458  001A6A  EE00  F037         	lfsr	0,__pbssCOMRAM
   459  001A6E  0E15               	movlw	21
   460  001A70                     clear_1:
   461  001A70  6AEE               	clrf	postinc0,c
   462  001A72  06E8               	decf	wreg,f,c
   463  001A74  E1FD               	bnz	clear_1
   464  001A76                     end_of_initialization:
   465                           	callstack 0
   466  001A76                     __end_of__initialization:
   467                           	callstack 0
   468  001A76  0E00               	movlw	low (__Lmediumconst shr (0+16))
   469  001A78  6EF8               	movwf	tblptru,c
   470  001A7A  0100               	movlb	0
   471  001A7C  EF70  F00B         	goto	_main	;jump to C main() function
   472                           
   473                           	psect	bssCOMRAM
   474  000037                     __pbssCOMRAM:
   475                           	callstack 0
   476  000037                     kpDebounce@valorAntigo:
   477                           	callstack 0
   478  000037                     	ds	2
   479  000039                     kpDebounce@valorNovo:
   480                           	callstack 0
   481  000039                     	ds	2
   482  00003B                     _valor@keypad$F261:
   483                           	callstack 0
   484  00003B                     	ds	2
   485  00003D                     kpDebounce@tempo:
   486                           	callstack 0
   487  00003D                     	ds	1
   488  00003E                     _i:
   489                           	callstack 0
   490  00003E                     	ds	1
   491  00003F                     _v3:
   492                           	callstack 0
   493  00003F                     	ds	1
   494  000040                     _v2:
   495                           	callstack 0
   496  000040                     	ds	1
   497  000041                     _v1:
   498                           	callstack 0
   499  000041                     	ds	1
   500  000042                     _v0:
   501                           	callstack 0
   502  000042                     	ds	1
   503  000043                     _display:
   504                           	callstack 0
   505  000043                     	ds	1
   506  000044                     _cnt:
   507                           	callstack 0
   508  000044                     	ds	1
   509  000045                     _segundo2:
   510                           	callstack 0
   511  000045                     	ds	1
   512  000046                     _segundo1:
   513                           	callstack 0
   514  000046                     	ds	1
   515  000047                     _minuto2:
   516                           	callstack 0
   517  000047                     	ds	1
   518  000048                     _minuto1:
   519                           	callstack 0
   520  000048                     	ds	1
   521  000049                     _tempo:
   522                           	callstack 0
   523  000049                     	ds	1
   524  00004A                     _flag:
   525                           	callstack 0
   526  00004A                     	ds	1
   527  00004B                     _indice:
   528                           	callstack 0
   529  00004B                     	ds	1
   530                           
   531                           	psect	dataCOMRAM
   532  000001                     __pdataCOMRAM:
   533                           	callstack 0
   534  000001                     _duracoes:
   535                           	callstack 0
   536  000001                     	ds	20
   537  000015                     _teclas:
   538                           	callstack 0
   539  000015                     	ds	8
   540  00001D                     _volume:
   541                           	callstack 0
   542  00001D                     	ds	1
   543  00001E                     _pause:
   544                           	callstack 0
   545  00001E                     	ds	1
   546  00001F                     _tecla:
   547                           	callstack 0
   548  00001F                     	ds	1
   549                           
   550                           	psect	bssBANK1
   551  000100                     __pbssBANK1:
   552                           	callstack 0
   553  000100                     _musicas:
   554                           	callstack 0
   555  000100                     	ds	190
   556                           
   557                           	psect	dataBANK2
   558  000200                     __pdataBANK2:
   559                           	callstack 0
   560  000200                     _nomes:
   561                           	callstack 0
   562  000200                     	ds	170
   563                           
   564                           	psect	cstackCOMRAM
   565  000020                     __pcstackCOMRAM:
   566                           	callstack 0
   567  000020                     ??_kpDebounce:
   568  000020                     ?_kpRead:
   569                           	callstack 0
   570  000020                     ?___wmul:
   571                           	callstack 0
   572  000020                     ?___awdiv:
   573                           	callstack 0
   574  000020                     ?___lwdiv:
   575                           	callstack 0
   576  000020                     ?___aldiv:
   577                           	callstack 0
   578  000020                     Delay40us@i:
   579                           	callstack 0
   580  000020                     ssdDigit@pos:
   581                           	callstack 0
   582  000020                     digitalWrite@pin:
   583                           	callstack 0
   584  000020                     pinMode@pin:
   585                           	callstack 0
   586  000020                     atraso_ms@t:
   587                           	callstack 0
   588  000020                     ___wmul@multiplier:
   589                           	callstack 0
   590  000020                     ___awdiv@dividend:
   591                           	callstack 0
   592  000020                     ___lwdiv@dividend:
   593                           	callstack 0
   594  000020                     ___aldiv@dividend:
   595                           	callstack 0
   596                           
   597                           ; 4 bytes @ 0x0
   598  000020                     	ds	1
   599  000021                     Delay2ms@i:
   600                           	callstack 0
   601  000021                     ssdDigit@val:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x1
   605  000021                     	ds	1
   606  000022                     digitalWrite@value:
   607                           	callstack 0
   608  000022                     pinMode@type:
   609                           	callstack 0
   610  000022                     atraso_ms@i:
   611                           	callstack 0
   612  000022                     ___wmul@multiplicand:
   613                           	callstack 0
   614  000022                     ___awdiv@divisor:
   615                           	callstack 0
   616  000022                     ___lwdiv@divisor:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x2
   620  000022                     	ds	2
   621  000024                     ??_digitalWrite:
   622  000024                     ??_pinMode:
   623  000024                     atraso_ms@j:
   624                           	callstack 0
   625  000024                     ___awdiv@counter:
   626                           	callstack 0
   627  000024                     ___wmul@product:
   628                           	callstack 0
   629  000024                     ___lwdiv@quotient:
   630                           	callstack 0
   631  000024                     ___aldiv@divisor:
   632                           	callstack 0
   633                           
   634                           ; 4 bytes @ 0x4
   635  000024                     	ds	1
   636  000025                     atraso_ms@k:
   637                           	callstack 0
   638  000025                     kpDebounce@old_D:
   639                           	callstack 0
   640  000025                     ___awdiv@sign:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x5
   644  000025                     	ds	1
   645  000026                     ??_ssdUpdate:
   646  000026                     lcdCommand@old_D:
   647                           	callstack 0
   648  000026                     lcdData@valor:
   649                           	callstack 0
   650  000026                     alterarVolume@opt:
   651                           	callstack 0
   652  000026                     ___lwdiv@counter:
   653                           	callstack 0
   654  000026                     kpDebounce@k:
   655                           	callstack 0
   656  000026                     ___awdiv@quotient:
   657                           	callstack 0
   658  000026                     strcpy@dest:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x6
   662  000026                     	ds	1
   663  000027                     ??_pwmSet:
   664  000027                     lcdCommand@cmd:
   665                           	callstack 0
   666  000027                     lcdData@old_D:
   667                           	callstack 0
   668  000027                     alterarVolume@old_D:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0x7
   672  000027                     	ds	1
   673  000028                     ?___awmod:
   674                           	callstack 0
   675  000028                     lcdPosition@coluna:
   676                           	callstack 0
   677  000028                     kpDebounce@j:
   678                           	callstack 0
   679  000028                     ___aldiv@counter:
   680                           	callstack 0
   681  000028                     lcdStr@str:
   682                           	callstack 0
   683  000028                     ___awmod@dividend:
   684                           	callstack 0
   685  000028                     strcpy@src:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x8
   689  000028                     	ds	1
   690  000029                     lcdPosition@linha:
   691                           	callstack 0
   692  000029                     kpDebounce@i:
   693                           	callstack 0
   694  000029                     pwmSet@porcento:
   695                           	callstack 0
   696  000029                     ___aldiv@sign:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x9
   700  000029                     	ds	1
   701  00002A                     ??_lcdStr:
   702  00002A                     lcdPosition@comando:
   703                           	callstack 0
   704  00002A                     pwmSet@val:
   705                           	callstack 0
   706  00002A                     ___awmod@divisor:
   707                           	callstack 0
   708  00002A                     strcpy@s:
   709                           	callstack 0
   710  00002A                     ___aldiv@quotient:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0xA
   714  00002A                     	ds	2
   715  00002C                     lcdStr@i:
   716                           	callstack 0
   717  00002C                     ___awmod@counter:
   718                           	callstack 0
   719  00002C                     strcpy@d:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0xC
   723  00002C                     	ds	1
   724  00002D                     ___awmod@sign:
   725                           	callstack 0
   726                           
   727                           ; 1 bytes @ 0xD
   728  00002D                     	ds	1
   729  00002E                     songsInit@i:
   730                           	callstack 0
   731  00002E                     pwmFrequency@freq:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0xE
   735  00002E                     	ds	2
   736  000030                     _playSong$977:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x10
   740  000030                     	ds	2
   741  000032                     _playSong$978:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x12
   745  000032                     	ds	2
   746  000034                     playSong@j:
   747                           	callstack 0
   748                           
   749                           ; 1 bytes @ 0x14
   750  000034                     	ds	1
   751  000035                     ??_chooseSong:
   752                           
   753                           ; 1 bytes @ 0x15
   754  000035                     	ds	2
   755  000037                     
   756                           ; 1 bytes @ 0x17
   757 ;;
   758 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   759 ;;
   760 ;; *************** function _main *****************
   761 ;; Defined at:
   762 ;;		line 9 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;		None
   767 ;; Return value:  Size  Location     Type
   768 ;;                  1    wreg      void 
   769 ;; Registers used:
   770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   776 ;;      Params:         0       0       0       0       0       0       0
   777 ;;      Locals:         0       0       0       0       0       0       0
   778 ;;      Temps:          0       0       0       0       0       0       0
   779 ;;      Totals:         0       0       0       0       0       0       0
   780 ;;Total ram usage:        0 bytes
   781 ;; Hardware stack levels required when called:    6
   782 ;; This function calls:
   783 ;;		_atraso_ms
   784 ;;		_chooseSong
   785 ;;		_kpInit
   786 ;;		_lcdCommand
   787 ;;		_lcdInit
   788 ;;		_lcdPosition
   789 ;;		_lcdStr
   790 ;;		_songsInit
   791 ;;		_ssdInit
   792 ;; This function is called by:
   793 ;;		Startup code after reset
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text0
   798  0016E0                     __ptext0:
   799                           	callstack 0
   800  0016E0                     _main:
   801                           	callstack 25
   802  0016E0                     
   803                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 11:     songsInit();
   804  0016E0  EC1D  F00B         	call	_songsInit	;wreg free
   805  0016E4                     
   806                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 12:     lcdInit();
   807  0016E4  ECF5  F00B         	call	_lcdInit	;wreg free
   808  0016E8                     
   809                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 13:     ssdInit();
   810  0016E8  EC99  F00D         	call	_ssdInit	;wreg free
   811  0016EC                     
   812                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 14:     kpInit();
   813  0016EC  EC6A  F00E         	call	_kpInit	;wreg free
   814  0016F0                     
   815                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 15:     lcdCommand(0x0F);
   816  0016F0  0E0F               	movlw	15
   817  0016F2  ECB6  F00B         	call	_lcdCommand
   818  0016F6                     
   819                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 17:     lcdPosition(0, 6);
   820  0016F6  0E06               	movlw	6
   821  0016F8  6E28               	movwf	lcdPosition@coluna^0,c
   822  0016FA  0E00               	movlw	0
   823  0016FC  EC40  F00D         	call	_lcdPosition
   824  001700                     
   825                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 18:     lcdStr("MP3");
   826  001700  0E4A               	movlw	low STR_3
   827  001702  6E28               	movwf	lcdStr@str^0,c
   828  001704  0E06               	movlw	high STR_3
   829  001706  6E29               	movwf	(lcdStr@str+1)^0,c
   830  001708  EC31  F00C         	call	_lcdStr	;wreg free
   831  00170C                     
   832                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 19:     lcdPosition(1, 4);
   833  00170C  0E04               	movlw	4
   834  00170E  6E28               	movwf	lcdPosition@coluna^0,c
   835  001710  0E01               	movlw	1
   836  001712  EC40  F00D         	call	_lcdPosition
   837  001716                     
   838                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 20:     lcdStr("Player");
   839  001716  0E43               	movlw	low STR_4
   840  001718  6E28               	movwf	lcdStr@str^0,c
   841  00171A  0E06               	movlw	high STR_4
   842  00171C  6E29               	movwf	(lcdStr@str+1)^0,c
   843  00171E  EC31  F00C         	call	_lcdStr	;wreg free
   844  001722                     
   845                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 21:     atraso_ms(5000);
   846  001722  0E13               	movlw	19
   847  001724  6E21               	movwf	(atraso_ms@t+1)^0,c
   848  001726  0E88               	movlw	136
   849  001728  6E20               	movwf	atraso_ms@t^0,c
   850  00172A  ECDD  F00C         	call	_atraso_ms	;wreg free
   851  00172E                     
   852                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 23:     lcdCommand(0x01);
   853  00172E  0E01               	movlw	1
   854  001730  ECB6  F00B         	call	_lcdCommand
   855  001734                     
   856                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 24:     lcdPosition(0, 0);
   857  001734  0E00               	movlw	0
   858  001736  6E28               	movwf	lcdPosition@coluna^0,c
   859  001738  0E00               	movlw	0
   860  00173A  EC40  F00D         	call	_lcdPosition
   861  00173E                     
   862                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 25:     lcdStr("Escolha a musica"
      +                          );
   863  00173E  0E11               	movlw	low STR_5
   864  001740  6E28               	movwf	lcdStr@str^0,c
   865  001742  0E06               	movlw	high STR_5
   866  001744  6E29               	movwf	(lcdStr@str+1)^0,c
   867  001746  EC31  F00C         	call	_lcdStr	;wreg free
   868  00174A                     l2739:
   869                           
   870                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 27:         lcdPosition(1, 0);
   871  00174A  0E00               	movlw	0
   872  00174C  6E28               	movwf	lcdPosition@coluna^0,c
   873  00174E  0E01               	movlw	1
   874  001750  EC40  F00D         	call	_lcdPosition
   875  001754                     
   876                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 28:         lcdStr("<-(1) (*)  (2
      +                          )->");
   877  001754  0E22               	movlw	low STR_1
   878  001756  6E28               	movwf	lcdStr@str^0,c
   879  001758  0E06               	movlw	high STR_1
   880  00175A  6E29               	movwf	(lcdStr@str+1)^0,c
   881  00175C  EC31  F00C         	call	_lcdStr	;wreg free
   882  001760                     
   883                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 29:         chooseSong();
   884  001760  EC49  F008         	call	_chooseSong	;wreg free
   885                           
   886                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/main.c: 30:     }
   887  001764  EFA5  F00B         	goto	l2739
   888  001768  EF00  F000         	goto	start
   889  00176C                     __end_of_main:
   890                           	callstack 0
   891                           
   892 ;; *************** function _ssdInit *****************
   893 ;; Defined at:
   894 ;;		line 101 in file "ssd.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, status,2, status,0, cstack
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   908 ;;      Params:         0       0       0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0       0       0
   910 ;;      Temps:          0       0       0       0       0       0       0
   911 ;;      Totals:         0       0       0       0       0       0       0
   912 ;;Total ram usage:        0 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; Hardware stack levels required when called:    1
   915 ;; This function calls:
   916 ;;		_pinMode
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text1
   923  001B32                     __ptext1:
   924                           	callstack 0
   925  001B32                     _ssdInit:
   926                           	callstack 29
   927  001B32                     
   928                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
   929  001B32  0E00               	movlw	0
   930  001B34  6E21               	movwf	(pinMode@pin+1)^0,c
   931  001B36  0E02               	movlw	2
   932  001B38  6E20               	movwf	pinMode@pin^0,c
   933  001B3A  0E00               	movlw	0
   934  001B3C  6E23               	movwf	(pinMode@type+1)^0,c
   935  001B3E  0E00               	movlw	0
   936  001B40  6E22               	movwf	pinMode@type^0,c
   937  001B42  EC96  F004         	call	_pinMode	;wreg free
   938                           
   939                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
   940  001B46  0E00               	movlw	0
   941  001B48  6E21               	movwf	(pinMode@pin+1)^0,c
   942  001B4A  0E03               	movlw	3
   943  001B4C  6E20               	movwf	pinMode@pin^0,c
   944  001B4E  0E00               	movlw	0
   945  001B50  6E23               	movwf	(pinMode@type+1)^0,c
   946  001B52  0E00               	movlw	0
   947  001B54  6E22               	movwf	pinMode@type^0,c
   948  001B56  EC96  F004         	call	_pinMode	;wreg free
   949                           
   950                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
   951  001B5A  0E00               	movlw	0
   952  001B5C  6E21               	movwf	(pinMode@pin+1)^0,c
   953  001B5E  0E04               	movlw	4
   954  001B60  6E20               	movwf	pinMode@pin^0,c
   955  001B62  0E00               	movlw	0
   956  001B64  6E23               	movwf	(pinMode@type+1)^0,c
   957  001B66  0E00               	movlw	0
   958  001B68  6E22               	movwf	pinMode@type^0,c
   959  001B6A  EC96  F004         	call	_pinMode	;wreg free
   960                           
   961                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
   962  001B6E  0E00               	movlw	0
   963  001B70  6E21               	movwf	(pinMode@pin+1)^0,c
   964  001B72  0E05               	movlw	5
   965  001B74  6E20               	movwf	pinMode@pin^0,c
   966  001B76  0E00               	movlw	0
   967  001B78  6E23               	movwf	(pinMode@type+1)^0,c
   968  001B7A  0E00               	movlw	0
   969  001B7C  6E22               	movwf	pinMode@type^0,c
   970  001B7E  EC96  F004         	call	_pinMode	;wreg free
   971  001B82                     
   972                           ;ssd.c: 109:     TRISD = 0x00;
   973  001B82  0E00               	movlw	0
   974  001B84  6E95               	movwf	149,c	;volatile
   975  001B86  0012               	return		;funcret
   976  001B88                     __end_of_ssdInit:
   977                           	callstack 0
   978                           
   979 ;; *************** function _songsInit *****************
   980 ;; Defined at:
   981 ;;		line 23 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;		None
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  i               2   14[COMRAM] unsigned int 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   995 ;;      Params:         0       0       0       0       0       0       0
   996 ;;      Locals:         2       0       0       0       0       0       0
   997 ;;      Temps:          0       0       0       0       0       0       0
   998 ;;      Totals:         2       0       0       0       0       0       0
   999 ;;Total ram usage:        2 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; Hardware stack levels required when called:    1
  1002 ;; This function calls:
  1003 ;;		___wmul
  1004 ;;		_strcpy
  1005 ;; This function is called by:
  1006 ;;		_main
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text2
  1011  00163A                     __ptext2:
  1012                           	callstack 0
  1013  00163A                     _songsInit:
  1014                           	callstack 29
  1015  00163A                     
  1016                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 24:     TRISC = 0x00;
  1017  00163A  0E00               	movlw	0
  1018  00163C  6E94               	movwf	148,c	;volatile
  1019                           
  1020                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 25:     for (unsigned int i = 0;
      +                           i < 10; i++) {
  1021  00163E  0E00               	movlw	0
  1022  001640  6E2F               	movwf	(songsInit@i+1)^0,c
  1023  001642  0E00               	movlw	0
  1024  001644  6E2E               	movwf	songsInit@i^0,c
  1025  001646                     l2649:
  1026                           
  1027                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 26:         musicas[i].duracao =
      +                           duracoes[i];
  1028  001646  90D8               	bcf	status,0,c
  1029  001648  342E               	rlcf	songsInit@i^0,w,c
  1030  00164A  6ED9               	movwf	fsr2l,c
  1031  00164C  342F               	rlcf	(songsInit@i+1)^0,w,c
  1032  00164E  6EDA               	movwf	fsr2h,c
  1033  001650  0E01               	movlw	low _duracoes
  1034  001652  26D9               	addwf	fsr2l,f,c
  1035  001654  0E00               	movlw	high _duracoes
  1036  001656  22DA               	addwfc	fsr2h,f,c
  1037  001658  C02E  F020         	movff	songsInit@i,___wmul@multiplier
  1038  00165C  C02F  F021         	movff	songsInit@i+1,___wmul@multiplier+1
  1039  001660  0E00               	movlw	0
  1040  001662  6E23               	movwf	(___wmul@multiplicand+1)^0,c
  1041  001664  0E13               	movlw	19
  1042  001666  6E22               	movwf	___wmul@multiplicand^0,c
  1043  001668  EC0D  F00E         	call	___wmul	;wreg free
  1044  00166C  0E00               	movlw	low _musicas
  1045  00166E  2420               	addwf	?___wmul^0,w,c
  1046  001670  6EE1               	movwf	fsr1l,c
  1047  001672  0E01               	movlw	high _musicas
  1048  001674  2021               	addwfc	(?___wmul+1)^0,w,c
  1049  001676  6EE2               	movwf	fsr1h,c
  1050  001678  CFDE FFE6          	movff	postinc2,postinc1
  1051  00167C  CFDD FFE5          	movff	postdec2,postdec1
  1052                           
  1053                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 27:         strcpy(musicas[i].no
      +                          me, (char*) nomes[i]);
  1054  001680  C02E  F020         	movff	songsInit@i,___wmul@multiplier
  1055  001684  C02F  F021         	movff	songsInit@i+1,___wmul@multiplier+1
  1056  001688  0E00               	movlw	0
  1057  00168A  6E23               	movwf	(___wmul@multiplicand+1)^0,c
  1058  00168C  0E13               	movlw	19
  1059  00168E  6E22               	movwf	___wmul@multiplicand^0,c
  1060  001690  EC0D  F00E         	call	___wmul	;wreg free
  1061  001694  0E02               	movlw	low (_musicas+2)
  1062  001696  2420               	addwf	?___wmul^0,w,c
  1063  001698  6E26               	movwf	strcpy@dest^0,c
  1064  00169A  0E01               	movlw	high (_musicas+2)
  1065  00169C  2021               	addwfc	(?___wmul+1)^0,w,c
  1066  00169E  6E27               	movwf	(strcpy@dest+1)^0,c
  1067  0016A0  C02E  F020         	movff	songsInit@i,___wmul@multiplier
  1068  0016A4  C02F  F021         	movff	songsInit@i+1,___wmul@multiplier+1
  1069  0016A8  0E00               	movlw	0
  1070  0016AA  6E23               	movwf	(___wmul@multiplicand+1)^0,c
  1071  0016AC  0E11               	movlw	17
  1072  0016AE  6E22               	movwf	___wmul@multiplicand^0,c
  1073  0016B0  EC0D  F00E         	call	___wmul	;wreg free
  1074  0016B4  0E00               	movlw	low _nomes
  1075  0016B6  2420               	addwf	?___wmul^0,w,c
  1076  0016B8  6E28               	movwf	strcpy@src^0,c
  1077  0016BA  0E02               	movlw	high _nomes
  1078  0016BC  2021               	addwfc	(?___wmul+1)^0,w,c
  1079  0016BE  6E29               	movwf	(strcpy@src+1)^0,c
  1080  0016C0  ECEE  F00D         	call	_strcpy	;wreg free
  1081  0016C4                     
  1082                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 28:     }
  1083  0016C4  4A2E               	infsnz	songsInit@i^0,f,c
  1084  0016C6  2A2F               	incf	(songsInit@i+1)^0,f,c
  1085  0016C8  502F               	movf	(songsInit@i+1)^0,w,c
  1086  0016CA  E109               	bnz	u2510
  1087  0016CC  0E0A               	movlw	10
  1088  0016CE  5C2E               	subwf	songsInit@i^0,w,c
  1089  0016D0  A0D8               	btfss	status,0,c
  1090  0016D2  EF6D  F00B         	goto	u2511
  1091  0016D6  EF6F  F00B         	goto	u2510
  1092  0016DA                     u2511:
  1093  0016DA  EF23  F00B         	goto	l2649
  1094  0016DE                     u2510:
  1095  0016DE  0012               	return		;funcret
  1096  0016E0                     __end_of_songsInit:
  1097                           	callstack 0
  1098                           
  1099 ;; *************** function _strcpy *****************
  1100 ;; Defined at:
  1101 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;  dest            2    6[COMRAM] PTR unsigned char 
  1104 ;;		 -> musicas(190), 
  1105 ;;  src             2    8[COMRAM] PTR const unsigned char 
  1106 ;;		 -> nomes(170), 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  d               2   12[COMRAM] PTR unsigned char 
  1109 ;;		 -> musicas(190), 
  1110 ;;  s               2   10[COMRAM] PTR const unsigned char 
  1111 ;;		 -> nomes(170), 
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  2    6[COMRAM] PTR unsigned char 
  1114 ;; Registers used:
  1115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1121 ;;      Params:         4       0       0       0       0       0       0
  1122 ;;      Locals:         4       0       0       0       0       0       0
  1123 ;;      Temps:          0       0       0       0       0       0       0
  1124 ;;      Totals:         8       0       0       0       0       0       0
  1125 ;;Total ram usage:        8 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; This function calls:
  1128 ;;		Nothing
  1129 ;; This function is called by:
  1130 ;;		_songsInit
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text3
  1135  001BDC                     __ptext3:
  1136                           	callstack 0
  1137  001BDC                     _strcpy:
  1138                           	callstack 29
  1139  001BDC  C028  F02A         	movff	strcpy@src,strcpy@s
  1140  001BE0  C029  F02B         	movff	strcpy@src+1,strcpy@s+1
  1141  001BE4  C026  F02C         	movff	strcpy@dest,strcpy@d
  1142  001BE8  C027  F02D         	movff	strcpy@dest+1,strcpy@d+1
  1143  001BEC                     l2497:
  1144  001BEC  C02A  FFD9         	movff	strcpy@s,fsr2l
  1145  001BF0  C02B  FFDA         	movff	strcpy@s+1,fsr2h
  1146  001BF4  4A2A               	infsnz	strcpy@s^0,f,c
  1147  001BF6  2A2B               	incf	(strcpy@s+1)^0,f,c
  1148  001BF8  C02C  FFE1         	movff	strcpy@d,fsr1l
  1149  001BFC  C02D  FFE2         	movff	strcpy@d+1,fsr1h
  1150  001C00  4A2C               	infsnz	strcpy@d^0,f,c
  1151  001C02  2A2D               	incf	(strcpy@d+1)^0,f,c
  1152  001C04  CFDF FFE7          	movff	indf2,indf1
  1153  001C08  50E7               	movf	indf1,w,c
  1154  001C0A  A4D8               	btfss	status,2,c
  1155  001C0C  EF0A  F00E         	goto	u2381
  1156  001C10  EF0C  F00E         	goto	u2380
  1157  001C14                     u2381:
  1158  001C14  EFF6  F00D         	goto	l2497
  1159  001C18                     u2380:
  1160  001C18  0012               	return		;funcret
  1161  001C1A                     __end_of_strcpy:
  1162                           	callstack 0
  1163                           
  1164 ;; *************** function _lcdInit *****************
  1165 ;; Defined at:
  1166 ;;		line 87 in file "lcd.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;		None
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;		None
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg, status,2, status,0, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1180 ;;      Params:         0       0       0       0       0       0       0
  1181 ;;      Locals:         0       0       0       0       0       0       0
  1182 ;;      Temps:          0       0       0       0       0       0       0
  1183 ;;      Totals:         0       0       0       0       0       0       0
  1184 ;;Total ram usage:        0 bytes
  1185 ;; Hardware stack levels used:    1
  1186 ;; Hardware stack levels required when called:    3
  1187 ;; This function calls:
  1188 ;;		_Delay2ms
  1189 ;;		_lcdCommand
  1190 ;;		_pinMode
  1191 ;; This function is called by:
  1192 ;;		_main
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text4
  1197  0017EA                     __ptext4:
  1198                           	callstack 0
  1199  0017EA                     _lcdInit:
  1200                           	callstack 27
  1201  0017EA                     
  1202                           ;lcd.c: 89:     pinMode(PIN_E2, 0);
  1203  0017EA  0E00               	movlw	0
  1204  0017EC  6E21               	movwf	(pinMode@pin+1)^0,c
  1205  0017EE  0E22               	movlw	34
  1206  0017F0  6E20               	movwf	pinMode@pin^0,c
  1207  0017F2  0E00               	movlw	0
  1208  0017F4  6E23               	movwf	(pinMode@type+1)^0,c
  1209  0017F6  0E00               	movlw	0
  1210  0017F8  6E22               	movwf	pinMode@type^0,c
  1211  0017FA  EC96  F004         	call	_pinMode	;wreg free
  1212                           
  1213                           ;lcd.c: 90:     pinMode(PIN_E1, 0);
  1214  0017FE  0E00               	movlw	0
  1215  001800  6E21               	movwf	(pinMode@pin+1)^0,c
  1216  001802  0E21               	movlw	33
  1217  001804  6E20               	movwf	pinMode@pin^0,c
  1218  001806  0E00               	movlw	0
  1219  001808  6E23               	movwf	(pinMode@type+1)^0,c
  1220  00180A  0E00               	movlw	0
  1221  00180C  6E22               	movwf	pinMode@type^0,c
  1222  00180E  EC96  F004         	call	_pinMode	;wreg free
  1223  001812                     
  1224                           ;lcd.c: 91:     TRISD = 0x00;
  1225  001812  0E00               	movlw	0
  1226  001814  6E95               	movwf	149,c	;volatile
  1227  001816                     
  1228                           ;lcd.c: 94:     Delay2ms();
  1229  001816  EC43  F00E         	call	_Delay2ms	;wreg free
  1230  00181A                     
  1231                           ;lcd.c: 95:     Delay2ms();
  1232  00181A  EC43  F00E         	call	_Delay2ms	;wreg free
  1233  00181E                     
  1234                           ;lcd.c: 96:     Delay2ms();
  1235  00181E  EC43  F00E         	call	_Delay2ms	;wreg free
  1236  001822                     
  1237                           ;lcd.c: 97:     Delay2ms();
  1238  001822  EC43  F00E         	call	_Delay2ms	;wreg free
  1239  001826                     
  1240                           ;lcd.c: 98:     Delay2ms();
  1241  001826  EC43  F00E         	call	_Delay2ms	;wreg free
  1242  00182A                     
  1243                           ;lcd.c: 100:     lcdCommand(0x38);
  1244  00182A  0E38               	movlw	56
  1245  00182C  ECB6  F00B         	call	_lcdCommand
  1246  001830                     
  1247                           ;lcd.c: 101:     Delay2ms();
  1248  001830  EC43  F00E         	call	_Delay2ms	;wreg free
  1249  001834                     
  1250                           ;lcd.c: 102:     Delay2ms();
  1251  001834  EC43  F00E         	call	_Delay2ms	;wreg free
  1252  001838                     
  1253                           ;lcd.c: 103:     lcdCommand(0x38);
  1254  001838  0E38               	movlw	56
  1255  00183A  ECB6  F00B         	call	_lcdCommand
  1256  00183E                     
  1257                           ;lcd.c: 104:     Delay2ms();
  1258  00183E  EC43  F00E         	call	_Delay2ms	;wreg free
  1259  001842                     
  1260                           ;lcd.c: 105:     lcdCommand(0x38);
  1261  001842  0E38               	movlw	56
  1262  001844  ECB6  F00B         	call	_lcdCommand
  1263  001848                     
  1264                           ;lcd.c: 107:     lcdCommand(0x38);
  1265  001848  0E38               	movlw	56
  1266  00184A  ECB6  F00B         	call	_lcdCommand
  1267  00184E                     
  1268                           ;lcd.c: 108:     lcdCommand(0x06);
  1269  00184E  0E06               	movlw	6
  1270  001850  ECB6  F00B         	call	_lcdCommand
  1271  001854                     
  1272                           ;lcd.c: 111:     lcdCommand(0x0C);
  1273  001854  0E0C               	movlw	12
  1274  001856  ECB6  F00B         	call	_lcdCommand
  1275  00185A                     
  1276                           ;lcd.c: 112:     lcdCommand(0x01);
  1277  00185A  0E01               	movlw	1
  1278  00185C  ECB6  F00B         	call	_lcdCommand
  1279  001860  0012               	return		;funcret
  1280  001862                     __end_of_lcdInit:
  1281                           	callstack 0
  1282                           
  1283 ;; *************** function _pinMode *****************
  1284 ;; Defined at:
  1285 ;;		line 54 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  pin             2    0[COMRAM] int 
  1288 ;;  type            2    2[COMRAM] int 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1300 ;;      Params:         4       0       0       0       0       0       0
  1301 ;;      Locals:         0       0       0       0       0       0       0
  1302 ;;      Temps:          2       0       0       0       0       0       0
  1303 ;;      Totals:         6       0       0       0       0       0       0
  1304 ;;Total ram usage:        6 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; This function calls:
  1307 ;;		Nothing
  1308 ;; This function is called by:
  1309 ;;		_lcdInit
  1310 ;;		_ssdInit
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text5
  1315  00092C                     __ptext5:
  1316                           	callstack 0
  1317  00092C                     _pinMode:
  1318                           	callstack 29
  1319  00092C                     
  1320                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 56:     if(pin <8){
  1321  00092C  BE21               	btfsc	(pinMode@pin+1)^0,7,c
  1322  00092E  EFA4  F004         	goto	u2180
  1323  000932  5021               	movf	(pinMode@pin+1)^0,w,c
  1324  000934  E107               	bnz	u2181
  1325  000936  0E08               	movlw	8
  1326  000938  5C20               	subwf	pinMode@pin^0,w,c
  1327  00093A  B0D8               	btfsc	status,0,c
  1328  00093C  EFA2  F004         	goto	u2181
  1329  000940  EFA4  F004         	goto	u2180
  1330  000944                     u2181:
  1331  000944  EFCE  F004         	goto	l2463
  1332  000948                     u2180:
  1333  000948                     
  1334                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 57:         if (type){ ((TRISA) |= 
      +                          (1<<(pin)));}
  1335  000948  5022               	movf	pinMode@type^0,w,c
  1336  00094A  1023               	iorwf	(pinMode@type+1)^0,w,c
  1337  00094C  B4D8               	btfsc	status,2,c
  1338  00094E  EFAB  F004         	goto	u2191
  1339  000952  EFAD  F004         	goto	u2190
  1340  000956                     u2191:
  1341  000956  EFBD  F004         	goto	l2461
  1342  00095A                     u2190:
  1343  00095A  C020  F024         	movff	pinMode@pin,??_pinMode
  1344  00095E  0E01               	movlw	1
  1345  000960  6E25               	movwf	(??_pinMode+1)^0,c
  1346  000962  2A24               	incf	??_pinMode^0,f,c
  1347  000964  EFB6  F004         	goto	u2204
  1348  000968                     u2205:
  1349  000968  90D8               	bcf	status,0,c
  1350  00096A  3625               	rlcf	(??_pinMode+1)^0,f,c
  1351  00096C                     u2204:
  1352  00096C  2E24               	decfsz	??_pinMode^0,f,c
  1353  00096E  EFB4  F004         	goto	u2205
  1354  000972  5025               	movf	(??_pinMode+1)^0,w,c
  1355  000974  1292               	iorwf	146,f,c	;volatile
  1356  000976  EFBC  F005         	goto	l76
  1357  00097A                     l2461:
  1358  00097A  C020  F024         	movff	pinMode@pin,??_pinMode
  1359  00097E  0E01               	movlw	1
  1360  000980  6E25               	movwf	(??_pinMode+1)^0,c
  1361  000982  2A24               	incf	??_pinMode^0,f,c
  1362  000984  EFC6  F004         	goto	u2214
  1363  000988                     u2215:
  1364  000988  90D8               	bcf	status,0,c
  1365  00098A  3625               	rlcf	(??_pinMode+1)^0,f,c
  1366  00098C                     u2214:
  1367  00098C  2E24               	decfsz	??_pinMode^0,f,c
  1368  00098E  EFC4  F004         	goto	u2215
  1369  000992  5025               	movf	(??_pinMode+1)^0,w,c
  1370  000994  0AFF               	xorlw	255
  1371  000996  1692               	andwf	146,f,c	;volatile
  1372  000998  EFBC  F005         	goto	l76
  1373  00099C                     l2463:
  1374  00099C  BE21               	btfsc	(pinMode@pin+1)^0,7,c
  1375  00099E  EFDC  F004         	goto	u2220
  1376  0009A2  5021               	movf	(pinMode@pin+1)^0,w,c
  1377  0009A4  E107               	bnz	u2221
  1378  0009A6  0E10               	movlw	16
  1379  0009A8  5C20               	subwf	pinMode@pin^0,w,c
  1380  0009AA  B0D8               	btfsc	status,0,c
  1381  0009AC  EFDA  F004         	goto	u2221
  1382  0009B0  EFDC  F004         	goto	u2220
  1383  0009B4                     u2221:
  1384  0009B4  EF0A  F005         	goto	l2471
  1385  0009B8                     u2220:
  1386  0009B8                     
  1387                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 60:         if (type){ ((TRISB) |= 
      +                          (1<<(pin-8)));}
  1388  0009B8  5022               	movf	pinMode@type^0,w,c
  1389  0009BA  1023               	iorwf	(pinMode@type+1)^0,w,c
  1390  0009BC  B4D8               	btfsc	status,2,c
  1391  0009BE  EFE3  F004         	goto	u2231
  1392  0009C2  EFE5  F004         	goto	u2230
  1393  0009C6                     u2231:
  1394  0009C6  EFF7  F004         	goto	l2469
  1395  0009CA                     u2230:
  1396  0009CA  C020  F024         	movff	pinMode@pin,??_pinMode
  1397  0009CE  0EF8               	movlw	-8
  1398  0009D0  2624               	addwf	??_pinMode^0,f,c
  1399  0009D2  0E01               	movlw	1
  1400  0009D4  6E25               	movwf	(??_pinMode+1)^0,c
  1401  0009D6  2A24               	incf	??_pinMode^0,f,c
  1402  0009D8  EFF0  F004         	goto	u2244
  1403  0009DC                     u2245:
  1404  0009DC  90D8               	bcf	status,0,c
  1405  0009DE  3625               	rlcf	(??_pinMode+1)^0,f,c
  1406  0009E0                     u2244:
  1407  0009E0  2E24               	decfsz	??_pinMode^0,f,c
  1408  0009E2  EFEE  F004         	goto	u2245
  1409  0009E6  5025               	movf	(??_pinMode+1)^0,w,c
  1410  0009E8  1293               	iorwf	147,f,c	;volatile
  1411  0009EA  EFBC  F005         	goto	l76
  1412  0009EE                     l2469:
  1413  0009EE  C020  F024         	movff	pinMode@pin,??_pinMode
  1414  0009F2  0EF8               	movlw	-8
  1415  0009F4  2624               	addwf	??_pinMode^0,f,c
  1416  0009F6  0E01               	movlw	1
  1417  0009F8  6E25               	movwf	(??_pinMode+1)^0,c
  1418  0009FA  2A24               	incf	??_pinMode^0,f,c
  1419  0009FC  EF02  F005         	goto	u2254
  1420  000A00                     u2255:
  1421  000A00  90D8               	bcf	status,0,c
  1422  000A02  3625               	rlcf	(??_pinMode+1)^0,f,c
  1423  000A04                     u2254:
  1424  000A04  2E24               	decfsz	??_pinMode^0,f,c
  1425  000A06  EF00  F005         	goto	u2255
  1426  000A0A  5025               	movf	(??_pinMode+1)^0,w,c
  1427  000A0C  0AFF               	xorlw	255
  1428  000A0E  1693               	andwf	147,f,c	;volatile
  1429  000A10  EFBC  F005         	goto	l76
  1430  000A14                     l2471:
  1431  000A14  BE21               	btfsc	(pinMode@pin+1)^0,7,c
  1432  000A16  EF18  F005         	goto	u2260
  1433  000A1A  5021               	movf	(pinMode@pin+1)^0,w,c
  1434  000A1C  E107               	bnz	u2261
  1435  000A1E  0E18               	movlw	24
  1436  000A20  5C20               	subwf	pinMode@pin^0,w,c
  1437  000A22  B0D8               	btfsc	status,0,c
  1438  000A24  EF16  F005         	goto	u2261
  1439  000A28  EF18  F005         	goto	u2260
  1440  000A2C                     u2261:
  1441  000A2C  EF46  F005         	goto	l2479
  1442  000A30                     u2260:
  1443  000A30                     
  1444                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 63:         if (type){ ((TRISC) |= 
      +                          (1<<(pin-16)));}
  1445  000A30  5022               	movf	pinMode@type^0,w,c
  1446  000A32  1023               	iorwf	(pinMode@type+1)^0,w,c
  1447  000A34  B4D8               	btfsc	status,2,c
  1448  000A36  EF1F  F005         	goto	u2271
  1449  000A3A  EF21  F005         	goto	u2270
  1450  000A3E                     u2271:
  1451  000A3E  EF33  F005         	goto	l2477
  1452  000A42                     u2270:
  1453  000A42  C020  F024         	movff	pinMode@pin,??_pinMode
  1454  000A46  0EF0               	movlw	-16
  1455  000A48  2624               	addwf	??_pinMode^0,f,c
  1456  000A4A  0E01               	movlw	1
  1457  000A4C  6E25               	movwf	(??_pinMode+1)^0,c
  1458  000A4E  2A24               	incf	??_pinMode^0,f,c
  1459  000A50  EF2C  F005         	goto	u2284
  1460  000A54                     u2285:
  1461  000A54  90D8               	bcf	status,0,c
  1462  000A56  3625               	rlcf	(??_pinMode+1)^0,f,c
  1463  000A58                     u2284:
  1464  000A58  2E24               	decfsz	??_pinMode^0,f,c
  1465  000A5A  EF2A  F005         	goto	u2285
  1466  000A5E  5025               	movf	(??_pinMode+1)^0,w,c
  1467  000A60  1294               	iorwf	148,f,c	;volatile
  1468  000A62  EFBC  F005         	goto	l76
  1469  000A66                     l2477:
  1470  000A66  C020  F024         	movff	pinMode@pin,??_pinMode
  1471  000A6A  0EF0               	movlw	-16
  1472  000A6C  2624               	addwf	??_pinMode^0,f,c
  1473  000A6E  0E01               	movlw	1
  1474  000A70  6E25               	movwf	(??_pinMode+1)^0,c
  1475  000A72  2A24               	incf	??_pinMode^0,f,c
  1476  000A74  EF3E  F005         	goto	u2294
  1477  000A78                     u2295:
  1478  000A78  90D8               	bcf	status,0,c
  1479  000A7A  3625               	rlcf	(??_pinMode+1)^0,f,c
  1480  000A7C                     u2294:
  1481  000A7C  2E24               	decfsz	??_pinMode^0,f,c
  1482  000A7E  EF3C  F005         	goto	u2295
  1483  000A82  5025               	movf	(??_pinMode+1)^0,w,c
  1484  000A84  0AFF               	xorlw	255
  1485  000A86  1694               	andwf	148,f,c	;volatile
  1486  000A88  EFBC  F005         	goto	l76
  1487  000A8C                     l2479:
  1488  000A8C  BE21               	btfsc	(pinMode@pin+1)^0,7,c
  1489  000A8E  EF54  F005         	goto	u2300
  1490  000A92  5021               	movf	(pinMode@pin+1)^0,w,c
  1491  000A94  E107               	bnz	u2301
  1492  000A96  0E20               	movlw	32
  1493  000A98  5C20               	subwf	pinMode@pin^0,w,c
  1494  000A9A  B0D8               	btfsc	status,0,c
  1495  000A9C  EF52  F005         	goto	u2301
  1496  000AA0  EF54  F005         	goto	u2300
  1497  000AA4                     u2301:
  1498  000AA4  EF82  F005         	goto	l2487
  1499  000AA8                     u2300:
  1500  000AA8                     
  1501                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 66:         if (type){ ((TRISD) |= 
      +                          (1<<(pin-24)));}
  1502  000AA8  5022               	movf	pinMode@type^0,w,c
  1503  000AAA  1023               	iorwf	(pinMode@type+1)^0,w,c
  1504  000AAC  B4D8               	btfsc	status,2,c
  1505  000AAE  EF5B  F005         	goto	u2311
  1506  000AB2  EF5D  F005         	goto	u2310
  1507  000AB6                     u2311:
  1508  000AB6  EF6F  F005         	goto	l2485
  1509  000ABA                     u2310:
  1510  000ABA  C020  F024         	movff	pinMode@pin,??_pinMode
  1511  000ABE  0EE8               	movlw	-24
  1512  000AC0  2624               	addwf	??_pinMode^0,f,c
  1513  000AC2  0E01               	movlw	1
  1514  000AC4  6E25               	movwf	(??_pinMode+1)^0,c
  1515  000AC6  2A24               	incf	??_pinMode^0,f,c
  1516  000AC8  EF68  F005         	goto	u2324
  1517  000ACC                     u2325:
  1518  000ACC  90D8               	bcf	status,0,c
  1519  000ACE  3625               	rlcf	(??_pinMode+1)^0,f,c
  1520  000AD0                     u2324:
  1521  000AD0  2E24               	decfsz	??_pinMode^0,f,c
  1522  000AD2  EF66  F005         	goto	u2325
  1523  000AD6  5025               	movf	(??_pinMode+1)^0,w,c
  1524  000AD8  1295               	iorwf	149,f,c	;volatile
  1525  000ADA  EFBC  F005         	goto	l76
  1526  000ADE                     l2485:
  1527  000ADE  C020  F024         	movff	pinMode@pin,??_pinMode
  1528  000AE2  0EE8               	movlw	-24
  1529  000AE4  2624               	addwf	??_pinMode^0,f,c
  1530  000AE6  0E01               	movlw	1
  1531  000AE8  6E25               	movwf	(??_pinMode+1)^0,c
  1532  000AEA  2A24               	incf	??_pinMode^0,f,c
  1533  000AEC  EF7A  F005         	goto	u2334
  1534  000AF0                     u2335:
  1535  000AF0  90D8               	bcf	status,0,c
  1536  000AF2  3625               	rlcf	(??_pinMode+1)^0,f,c
  1537  000AF4                     u2334:
  1538  000AF4  2E24               	decfsz	??_pinMode^0,f,c
  1539  000AF6  EF78  F005         	goto	u2335
  1540  000AFA  5025               	movf	(??_pinMode+1)^0,w,c
  1541  000AFC  0AFF               	xorlw	255
  1542  000AFE  1695               	andwf	149,f,c	;volatile
  1543  000B00  EFBC  F005         	goto	l76
  1544  000B04                     l2487:
  1545  000B04  BE21               	btfsc	(pinMode@pin+1)^0,7,c
  1546  000B06  EF90  F005         	goto	u2340
  1547  000B0A  5021               	movf	(pinMode@pin+1)^0,w,c
  1548  000B0C  E107               	bnz	u2341
  1549  000B0E  0E28               	movlw	40
  1550  000B10  5C20               	subwf	pinMode@pin^0,w,c
  1551  000B12  B0D8               	btfsc	status,0,c
  1552  000B14  EF8E  F005         	goto	u2341
  1553  000B18  EF90  F005         	goto	u2340
  1554  000B1C                     u2341:
  1555  000B1C  EFBC  F005         	goto	l76
  1556  000B20                     u2340:
  1557  000B20                     
  1558                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 69:         if (type){ ((TRISE) |= 
      +                          (1<<(pin-32)));}
  1559  000B20  5022               	movf	pinMode@type^0,w,c
  1560  000B22  1023               	iorwf	(pinMode@type+1)^0,w,c
  1561  000B24  B4D8               	btfsc	status,2,c
  1562  000B26  EF97  F005         	goto	u2351
  1563  000B2A  EF99  F005         	goto	u2350
  1564  000B2E                     u2351:
  1565  000B2E  EFAB  F005         	goto	l2493
  1566  000B32                     u2350:
  1567  000B32  C020  F024         	movff	pinMode@pin,??_pinMode
  1568  000B36  0EE0               	movlw	-32
  1569  000B38  2624               	addwf	??_pinMode^0,f,c
  1570  000B3A  0E01               	movlw	1
  1571  000B3C  6E25               	movwf	(??_pinMode+1)^0,c
  1572  000B3E  2A24               	incf	??_pinMode^0,f,c
  1573  000B40  EFA4  F005         	goto	u2364
  1574  000B44                     u2365:
  1575  000B44  90D8               	bcf	status,0,c
  1576  000B46  3625               	rlcf	(??_pinMode+1)^0,f,c
  1577  000B48                     u2364:
  1578  000B48  2E24               	decfsz	??_pinMode^0,f,c
  1579  000B4A  EFA2  F005         	goto	u2365
  1580  000B4E  5025               	movf	(??_pinMode+1)^0,w,c
  1581  000B50  1296               	iorwf	150,f,c	;volatile
  1582  000B52  EFBC  F005         	goto	l76
  1583  000B56                     l2493:
  1584  000B56  C020  F024         	movff	pinMode@pin,??_pinMode
  1585  000B5A  0EE0               	movlw	-32
  1586  000B5C  2624               	addwf	??_pinMode^0,f,c
  1587  000B5E  0E01               	movlw	1
  1588  000B60  6E25               	movwf	(??_pinMode+1)^0,c
  1589  000B62  2A24               	incf	??_pinMode^0,f,c
  1590  000B64  EFB6  F005         	goto	u2374
  1591  000B68                     u2375:
  1592  000B68  90D8               	bcf	status,0,c
  1593  000B6A  3625               	rlcf	(??_pinMode+1)^0,f,c
  1594  000B6C                     u2374:
  1595  000B6C  2E24               	decfsz	??_pinMode^0,f,c
  1596  000B6E  EFB4  F005         	goto	u2375
  1597  000B72  5025               	movf	(??_pinMode+1)^0,w,c
  1598  000B74  0AFF               	xorlw	255
  1599  000B76  1696               	andwf	150,f,c	;volatile
  1600  000B78                     l76:
  1601  000B78  0012               	return		;funcret
  1602  000B7A                     __end_of_pinMode:
  1603                           	callstack 0
  1604                           
  1605 ;; *************** function _kpInit *****************
  1606 ;; Defined at:
  1607 ;;		line 89 in file "keypad.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;		None
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;		None
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, status,0
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1621 ;;      Params:         0       0       0       0       0       0       0
  1622 ;;      Locals:         0       0       0       0       0       0       0
  1623 ;;      Temps:          0       0       0       0       0       0       0
  1624 ;;      Totals:         0       0       0       0       0       0       0
  1625 ;;Total ram usage:        0 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; This function calls:
  1628 ;;		Nothing
  1629 ;; This function is called by:
  1630 ;;		_main
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text6
  1635  001CD4                     __ptext6:
  1636                           	callstack 0
  1637  001CD4                     _kpInit:
  1638                           	callstack 30
  1639  001CD4                     
  1640                           ;keypad.c: 91:     TRISB &= 0x07;
  1641  001CD4  0E07               	movlw	7
  1642  001CD6  1693               	andwf	147,f,c	;volatile
  1643                           
  1644                           ;keypad.c: 93:     TRISD |= 0x0f;
  1645  001CD8  0E0F               	movlw	15
  1646  001CDA  1295               	iorwf	149,f,c	;volatile
  1647  001CDC  0012               	return		;funcret
  1648  001CDE                     __end_of_kpInit:
  1649                           	callstack 0
  1650                           
  1651 ;; *************** function _chooseSong *****************
  1652 ;; Defined at:
  1653 ;;		line 32 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;		None
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;		None
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      void 
  1660 ;; Registers used:
  1661 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1667 ;;      Params:         0       0       0       0       0       0       0
  1668 ;;      Locals:         0       0       0       0       0       0       0
  1669 ;;      Temps:          2       0       0       0       0       0       0
  1670 ;;      Totals:         2       0       0       0       0       0       0
  1671 ;;Total ram usage:        2 bytes
  1672 ;; Hardware stack levels used:    1
  1673 ;; Hardware stack levels required when called:    5
  1674 ;; This function calls:
  1675 ;;		_atraso_ms
  1676 ;;		_kpDebounce
  1677 ;;		_kpRead
  1678 ;;		_lcdCommand
  1679 ;;		_lcdPosition
  1680 ;;		_lcdStr
  1681 ;;		_playSong
  1682 ;;		_ssdDigit
  1683 ;;		_ssdUpdate
  1684 ;; This function is called by:
  1685 ;;		_main
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text7
  1690  001092                     __ptext7:
  1691                           	callstack 0
  1692  001092                     _chooseSong:
  1693                           	callstack 25
  1694  001092                     
  1695                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 33:     kpDebounce();
  1696  001092  ECE4  F006         	call	_kpDebounce	;wreg free
  1697  001096                     
  1698                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 34:     tecla = kpRead();
  1699  001096  EC6F  F00E         	call	_kpRead	;wreg free
  1700  00109A  5020               	movf	?_kpRead^0,w,c
  1701  00109C  6E1F               	movwf	_tecla^0,c
  1702  00109E                     
  1703                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 35:     ssdUpdate();
  1704  00109E  ECA1  F007         	call	_ssdUpdate	;wreg free
  1705  0010A2                     
  1706                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 36:     if (((tecla) & (1<<(3)))
      +                           || ((tecla) & (1<<(7)))) {
  1707  0010A2  B61F               	btfsc	_tecla^0,3,c
  1708  0010A4  EF56  F008         	goto	u2521
  1709  0010A8  EF58  F008         	goto	u2520
  1710  0010AC                     u2521:
  1711  0010AC  EF5F  F008         	goto	l2665
  1712  0010B0                     u2520:
  1713  0010B0  AE1F               	btfss	_tecla^0,7,c
  1714  0010B2  EF5D  F008         	goto	u2531
  1715  0010B6  EF5F  F008         	goto	u2530
  1716  0010BA                     u2531:
  1717  0010BA  EFE8  F008         	goto	l219
  1718  0010BE                     u2530:
  1719  0010BE                     l2665:
  1720                           
  1721                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 37:         flag = 1;
  1722  0010BE  0E01               	movlw	1
  1723  0010C0  6E4A               	movwf	_flag^0,c
  1724  0010C2                     l2667:
  1725                           
  1726                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 39:             ssdUpdate();
  1727  0010C2  ECA1  F007         	call	_ssdUpdate	;wreg free
  1728  0010C6                     
  1729                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 40:             kpDebounce();
  1730  0010C6  ECE4  F006         	call	_kpDebounce	;wreg free
  1731  0010CA                     
  1732                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 41:             atraso_ms(10);
  1733  0010CA  0E00               	movlw	0
  1734  0010CC  6E21               	movwf	(atraso_ms@t+1)^0,c
  1735  0010CE  0E0A               	movlw	10
  1736  0010D0  6E20               	movwf	atraso_ms@t^0,c
  1737  0010D2  ECDD  F00C         	call	_atraso_ms	;wreg free
  1738  0010D6                     
  1739                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 42:             if ((kpRead() !=
      +                           tecla) || flag == 1) {
  1740  0010D6  501F               	movf	_tecla^0,w,c
  1741  0010D8  6E35               	movwf	??_chooseSong^0,c
  1742  0010DA  6A36               	clrf	(??_chooseSong+1)^0,c
  1743  0010DC  EC6F  F00E         	call	_kpRead	;wreg free
  1744  0010E0  5035               	movf	??_chooseSong^0,w,c
  1745  0010E2  1820               	xorwf	?_kpRead^0,w,c
  1746  0010E4  E107               	bnz	u2541
  1747  0010E6  5036               	movf	(??_chooseSong+1)^0,w,c
  1748  0010E8  1821               	xorwf	(?_kpRead+1)^0,w,c
  1749  0010EA  A4D8               	btfss	status,2,c
  1750  0010EC  EF7A  F008         	goto	u2541
  1751  0010F0  EF7C  F008         	goto	u2540
  1752  0010F4                     u2541:
  1753  0010F4  EF84  F008         	goto	l2677
  1754  0010F8                     u2540:
  1755  0010F8  044A               	decf	_flag^0,w,c
  1756  0010FA  A4D8               	btfss	status,2,c
  1757  0010FC  EF82  F008         	goto	u2551
  1758  001100  EF84  F008         	goto	u2550
  1759  001104                     u2551:
  1760  001104  EF61  F008         	goto	l2667
  1761  001108                     u2550:
  1762  001108                     l2677:
  1763                           
  1764                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 43:                 tecla = kpRe
      +                          ad();
  1765  001108  EC6F  F00E         	call	_kpRead	;wreg free
  1766  00110C  5020               	movf	?_kpRead^0,w,c
  1767  00110E  6E1F               	movwf	_tecla^0,c
  1768  001110                     
  1769                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 44:                 if (((tecla)
      +                           & (1<<(3)))) {
  1770  001110  A61F               	btfss	_tecla^0,3,c
  1771  001112  EF8D  F008         	goto	u2561
  1772  001116  EF8F  F008         	goto	u2560
  1773  00111A                     u2561:
  1774  00111A  EF9E  F008         	goto	l209
  1775  00111E                     u2560:
  1776  00111E                     
  1777                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 45:                     if (indi
      +                          ce == 0) {
  1778  00111E  504B               	movf	_indice^0,w,c
  1779  001120  A4D8               	btfss	status,2,c
  1780  001122  EF95  F008         	goto	u2571
  1781  001126  EF97  F008         	goto	u2570
  1782  00112A                     u2571:
  1783  00112A  EF9B  F008         	goto	l2685
  1784  00112E                     u2570:
  1785  00112E                     
  1786                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 46:                         indi
      +                          ce = 9;
  1787  00112E  0E09               	movlw	9
  1788  001130  6E4B               	movwf	_indice^0,c
  1789                           
  1790                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 47:                     } else {
  1791  001132  EFC0  F008         	goto	l2695
  1792  001136                     l2685:
  1793                           
  1794                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 48:                         indi
      +                          ce -= 1;
  1795  001136  064B               	decf	_indice^0,f,c
  1796  001138  EFC0  F008         	goto	l2695
  1797  00113C                     l209:
  1798  00113C  AE1F               	btfss	_tecla^0,7,c
  1799  00113E  EFA3  F008         	goto	u2581
  1800  001142  EFA5  F008         	goto	u2580
  1801  001146                     u2581:
  1802  001146  EFB5  F008         	goto	l213
  1803  00114A                     u2580:
  1804  00114A                     
  1805                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 51:                     if (indi
      +                          ce == 9) {
  1806  00114A  0E09               	movlw	9
  1807  00114C  184B               	xorwf	_indice^0,w,c
  1808  00114E  A4D8               	btfss	status,2,c
  1809  001150  EFAC  F008         	goto	u2591
  1810  001154  EFAE  F008         	goto	u2590
  1811  001158                     u2591:
  1812  001158  EFB2  F008         	goto	l2691
  1813  00115C                     u2590:
  1814  00115C                     
  1815                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 52:                         indi
      +                          ce = 0;
  1816  00115C  0E00               	movlw	0
  1817  00115E  6E4B               	movwf	_indice^0,c
  1818                           
  1819                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 53:                     } else {
  1820  001160  EFC0  F008         	goto	l2695
  1821  001164                     l2691:
  1822                           
  1823                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 54:                         indi
      +                          ce += 1;
  1824  001164  2A4B               	incf	_indice^0,f,c
  1825  001166  EFC0  F008         	goto	l2695
  1826  00116A                     l213:
  1827  00116A  A01F               	btfss	_tecla^0,0,c
  1828  00116C  EFBA  F008         	goto	u2601
  1829  001170  EFBC  F008         	goto	u2600
  1830  001174                     u2601:
  1831  001174  EFC0  F008         	goto	l2695
  1832  001178                     u2600:
  1833  001178                     
  1834                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 57:                     flag = 0
      +                          ;
  1835  001178  0E00               	movlw	0
  1836  00117A  6E4A               	movwf	_flag^0,c
  1837                           
  1838                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 58:                     break;
  1839  00117C  EFE6  F008         	goto	l2707
  1840  001180                     l2695:
  1841                           
  1842                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 60:                 lcdCommand(0
      +                          x01);
  1843  001180  0E01               	movlw	1
  1844  001182  ECB6  F00B         	call	_lcdCommand
  1845                           
  1846                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 61:                 lcdPosition(
      +                          1, 0);
  1847  001186  0E00               	movlw	0
  1848  001188  6E28               	movwf	lcdPosition@coluna^0,c
  1849  00118A  0E01               	movlw	1
  1850  00118C  EC40  F00D         	call	_lcdPosition
  1851  001190                     
  1852                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 62:                 lcdStr("<-(1
      +                          ) (*)  (2)->");
  1853  001190  0E22               	movlw	low STR_1
  1854  001192  6E28               	movwf	lcdStr@str^0,c
  1855  001194  0E06               	movlw	high STR_1
  1856  001196  6E29               	movwf	(lcdStr@str+1)^0,c
  1857  001198  EC31  F00C         	call	_lcdStr	;wreg free
  1858  00119C                     
  1859                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 63:                 lcdPosition(
      +                          0, 0);
  1860  00119C  0E00               	movlw	0
  1861  00119E  6E28               	movwf	lcdPosition@coluna^0,c
  1862  0011A0  0E00               	movlw	0
  1863  0011A2  EC40  F00D         	call	_lcdPosition
  1864  0011A6                     
  1865                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 64:                 lcdStr(music
      +                          as[indice].nome);
  1866  0011A6  504B               	movf	_indice^0,w,c
  1867  0011A8  0D13               	mullw	19
  1868  0011AA  0E02               	movlw	low (_musicas+2)
  1869  0011AC  24F3               	addwf	243,w,c
  1870  0011AE  6E28               	movwf	lcdStr@str^0,c
  1871  0011B0  0E01               	movlw	high (_musicas+2)
  1872  0011B2  20F4               	addwfc	prodh,w,c
  1873  0011B4  6E29               	movwf	(lcdStr@str+1)^0,c
  1874  0011B6  EC31  F00C         	call	_lcdStr	;wreg free
  1875  0011BA                     
  1876                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 65:                 ssdDigit(ind
      +                          ice, 3);
  1877  0011BA  0E03               	movlw	3
  1878  0011BC  6E20               	movwf	ssdDigit@pos^0,c
  1879  0011BE  504B               	movf	_indice^0,w,c
  1880  0011C0  EC6D  F00D         	call	_ssdDigit
  1881  0011C4                     
  1882                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 66:                 flag = 0;
  1883  0011C4  0E00               	movlw	0
  1884  0011C6  6E4A               	movwf	_flag^0,c
  1885  0011C8  EF61  F008         	goto	l2667
  1886  0011CC                     l2707:
  1887                           
  1888                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 69:         playSong();
  1889  0011CC  EC28  F003         	call	_playSong	;wreg free
  1890  0011D0                     l219:
  1891  0011D0  0012               	return		;funcret
  1892  0011D2                     __end_of_chooseSong:
  1893                           	callstack 0
  1894                           
  1895 ;; *************** function _playSong *****************
  1896 ;; Defined at:
  1897 ;;		line 73 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  j               1   20[COMRAM] unsigned char 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  1    wreg      void 
  1904 ;; Registers used:
  1905 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1911 ;;      Params:         0       0       0       0       0       0       0
  1912 ;;      Locals:         5       0       0       0       0       0       0
  1913 ;;      Temps:          0       0       0       0       0       0       0
  1914 ;;      Totals:         5       0       0       0       0       0       0
  1915 ;;Total ram usage:        5 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:    4
  1918 ;; This function calls:
  1919 ;;		___awdiv
  1920 ;;		___awmod
  1921 ;;		_alterarVolume
  1922 ;;		_atraso_ms
  1923 ;;		_kpDebounce
  1924 ;;		_kpRead
  1925 ;;		_lcdCommand
  1926 ;;		_lcdPosition
  1927 ;;		_lcdStr
  1928 ;;		_pwmInit
  1929 ;;		_pwmSet
  1930 ;;		_ssdDigit
  1931 ;;		_ssdUpdate
  1932 ;; This function is called by:
  1933 ;;		_chooseSong
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text8
  1938  000650                     __ptext8:
  1939                           	callstack 0
  1940  000650                     _playSong:
  1941                           	callstack 25
  1942  000650                     
  1943                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 74:     pwmInit();
  1944  000650  EC51  F00E         	call	_pwmInit	;wreg free
  1945                           
  1946                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 75:     lcdCommand(0x01);
  1947  000654  0E01               	movlw	1
  1948  000656  ECB6  F00B         	call	_lcdCommand
  1949                           
  1950                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 76:     lcdPosition(0, 0);
  1951  00065A  0E00               	movlw	0
  1952  00065C  6E28               	movwf	lcdPosition@coluna^0,c
  1953  00065E  0E00               	movlw	0
  1954  000660  EC40  F00D         	call	_lcdPosition
  1955  000664                     
  1956                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 77:     lcdStr(musicas[indice].n
      +                          ome);
  1957  000664  504B               	movf	_indice^0,w,c
  1958  000666  0D13               	mullw	19
  1959  000668  0E02               	movlw	low (_musicas+2)
  1960  00066A  24F3               	addwf	243,w,c
  1961  00066C  6E28               	movwf	lcdStr@str^0,c
  1962  00066E  0E01               	movlw	high (_musicas+2)
  1963  000670  20F4               	addwfc	prodh,w,c
  1964  000672  6E29               	movwf	(lcdStr@str+1)^0,c
  1965  000674  EC31  F00C         	call	_lcdStr	;wreg free
  1966  000678                     
  1967                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 78:     lcdPosition(1, 0);
  1968  000678  0E00               	movlw	0
  1969  00067A  6E28               	movwf	lcdPosition@coluna^0,c
  1970  00067C  0E01               	movlw	1
  1971  00067E  EC40  F00D         	call	_lcdPosition
  1972  000682                     
  1973                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 79:     lcdStr("-(1)  (*)  (2)+"
      +                          );
  1974  000682  0E33               	movlw	low STR_2
  1975  000684  6E28               	movwf	lcdStr@str^0,c
  1976  000686  0E06               	movlw	high STR_2
  1977  000688  6E29               	movwf	(lcdStr@str+1)^0,c
  1978  00068A  EC31  F00C         	call	_lcdStr	;wreg free
  1979  00068E                     
  1980                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 81:     tempo = musicas[indice].
      +                          duracao;
  1981  00068E  504B               	movf	_indice^0,w,c
  1982  000690  0D13               	mullw	19
  1983  000692  0E00               	movlw	low _musicas
  1984  000694  24F3               	addwf	243,w,c
  1985  000696  6ED9               	movwf	fsr2l,c
  1986  000698  0E01               	movlw	high _musicas
  1987  00069A  20F4               	addwfc	prodh,w,c
  1988  00069C  6EDA               	movwf	fsr2h,c
  1989  00069E  50DF               	movf	indf2,w,c
  1990  0006A0  6E49               	movwf	_tempo^0,c
  1991  0006A2                     
  1992                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 82:     pwmSet(100);
  1993  0006A2  0E64               	movlw	100
  1994  0006A4  ECA7  F00C         	call	_pwmSet
  1995                           
  1996                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 83:     while (tempo != 0) {
  1997  0006A8  EF80  F004         	goto	l2595
  1998  0006AC                     l2511:
  1999                           
  2000                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 85:         minuto1 = (tempo / 6
      +                          0) % 10;
  2001  0006AC  0E00               	movlw	0
  2002  0006AE  6E23               	movwf	(___awdiv@divisor+1)^0,c
  2003  0006B0  0E3C               	movlw	60
  2004  0006B2  6E22               	movwf	___awdiv@divisor^0,c
  2005  0006B4  C049  F020         	movff	_tempo,___awdiv@dividend
  2006  0006B8  6A21               	clrf	(___awdiv@dividend+1)^0,c
  2007  0006BA  EC0E  F00A         	call	___awdiv	;wreg free
  2008  0006BE  C020  F028         	movff	?___awdiv,___awmod@dividend
  2009  0006C2  C021  F029         	movff	?___awdiv+1,___awmod@dividend+1
  2010  0006C6  0E00               	movlw	0
  2011  0006C8  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2012  0006CA  0E0A               	movlw	10
  2013  0006CC  6E2A               	movwf	___awmod@divisor^0,c
  2014  0006CE  EC70  F00A         	call	___awmod	;wreg free
  2015  0006D2  5028               	movf	?___awmod^0,w,c
  2016  0006D4  6E48               	movwf	_minuto1^0,c
  2017                           
  2018                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 86:         minuto2 = (tempo / 6
      +                          0) / 10;
  2019  0006D6  0E00               	movlw	0
  2020  0006D8  6E23               	movwf	(___awdiv@divisor+1)^0,c
  2021  0006DA  0E3C               	movlw	60
  2022  0006DC  6E22               	movwf	___awdiv@divisor^0,c
  2023  0006DE  C049  F020         	movff	_tempo,___awdiv@dividend
  2024  0006E2  6A21               	clrf	(___awdiv@dividend+1)^0,c
  2025  0006E4  EC0E  F00A         	call	___awdiv	;wreg free
  2026  0006E8  C020  F030         	movff	?___awdiv,_playSong$977
  2027  0006EC  C021  F031         	movff	?___awdiv+1,_playSong$977+1
  2028                           
  2029                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 86:         minuto2 = (tempo / 6
      +                          0) / 10;
  2030  0006F0  C030  F020         	movff	_playSong$977,___awdiv@dividend
  2031  0006F4  C031  F021         	movff	_playSong$977+1,___awdiv@dividend+1
  2032  0006F8  0E00               	movlw	0
  2033  0006FA  6E23               	movwf	(___awdiv@divisor+1)^0,c
  2034  0006FC  0E0A               	movlw	10
  2035  0006FE  6E22               	movwf	___awdiv@divisor^0,c
  2036  000700  EC0E  F00A         	call	___awdiv	;wreg free
  2037  000704  5020               	movf	?___awdiv^0,w,c
  2038  000706  6E47               	movwf	_minuto2^0,c
  2039                           
  2040                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 87:         segundo1 = (tempo % 
      +                          60) % 10;
  2041  000708  0E00               	movlw	0
  2042  00070A  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2043  00070C  0E3C               	movlw	60
  2044  00070E  6E2A               	movwf	___awmod@divisor^0,c
  2045  000710  C049  F028         	movff	_tempo,___awmod@dividend
  2046  000714  6A29               	clrf	(___awmod@dividend+1)^0,c
  2047  000716  EC70  F00A         	call	___awmod	;wreg free
  2048  00071A  C028  F032         	movff	?___awmod,_playSong$978
  2049  00071E  C029  F033         	movff	?___awmod+1,_playSong$978+1
  2050                           
  2051                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 87:         segundo1 = (tempo % 
      +                          60) % 10;
  2052  000722  C032  F028         	movff	_playSong$978,___awmod@dividend
  2053  000726  C033  F029         	movff	_playSong$978+1,___awmod@dividend+1
  2054  00072A  0E00               	movlw	0
  2055  00072C  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2056  00072E  0E0A               	movlw	10
  2057  000730  6E2A               	movwf	___awmod@divisor^0,c
  2058  000732  EC70  F00A         	call	___awmod	;wreg free
  2059  000736  5028               	movf	?___awmod^0,w,c
  2060  000738  6E46               	movwf	_segundo1^0,c
  2061                           
  2062                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 88:         segundo2 = (tempo % 
      +                          60) / 10;
  2063  00073A  0E00               	movlw	0
  2064  00073C  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2065  00073E  0E3C               	movlw	60
  2066  000740  6E2A               	movwf	___awmod@divisor^0,c
  2067  000742  C049  F028         	movff	_tempo,___awmod@dividend
  2068  000746  6A29               	clrf	(___awmod@dividend+1)^0,c
  2069  000748  EC70  F00A         	call	___awmod	;wreg free
  2070  00074C  C028  F020         	movff	?___awmod,___awdiv@dividend
  2071  000750  C029  F021         	movff	?___awmod+1,___awdiv@dividend+1
  2072  000754  0E00               	movlw	0
  2073  000756  6E23               	movwf	(___awdiv@divisor+1)^0,c
  2074  000758  0E0A               	movlw	10
  2075  00075A  6E22               	movwf	___awdiv@divisor^0,c
  2076  00075C  EC0E  F00A         	call	___awdiv	;wreg free
  2077  000760  5020               	movf	?___awdiv^0,w,c
  2078  000762  6E45               	movwf	_segundo2^0,c
  2079                           
  2080                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 90:         ssdDigit(minuto2, 0)
      +                          ;
  2081  000764  0E00               	movlw	0
  2082  000766  6E20               	movwf	ssdDigit@pos^0,c
  2083  000768  5047               	movf	_minuto2^0,w,c
  2084  00076A  EC6D  F00D         	call	_ssdDigit
  2085                           
  2086                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 91:         ssdDigit(minuto1, 1)
      +                          ;
  2087  00076E  0E01               	movlw	1
  2088  000770  6E20               	movwf	ssdDigit@pos^0,c
  2089  000772  5048               	movf	_minuto1^0,w,c
  2090  000774  EC6D  F00D         	call	_ssdDigit
  2091                           
  2092                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 92:         ssdDigit(segundo2, 2
      +                          );
  2093  000778  0E02               	movlw	2
  2094  00077A  6E20               	movwf	ssdDigit@pos^0,c
  2095  00077C  5045               	movf	_segundo2^0,w,c
  2096  00077E  EC6D  F00D         	call	_ssdDigit
  2097                           
  2098                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 93:         ssdDigit(segundo1, 3
      +                          );
  2099  000782  0E03               	movlw	3
  2100  000784  6E20               	movwf	ssdDigit@pos^0,c
  2101  000786  5046               	movf	_segundo1^0,w,c
  2102  000788  EC6D  F00D         	call	_ssdDigit
  2103  00078C                     
  2104                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 95:         for (unsigned char j
      +                           = 0; j < 100; j++) {
  2105  00078C  0E00               	movlw	0
  2106  00078E  6E34               	movwf	playSong@j^0,c
  2107  000790                     l2519:
  2108                           
  2109                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 96:             ssdUpdate();
  2110  000790  ECA1  F007         	call	_ssdUpdate	;wreg free
  2111  000794                     
  2112                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 97:             atraso_ms(10);
  2113  000794  0E00               	movlw	0
  2114  000796  6E21               	movwf	(atraso_ms@t+1)^0,c
  2115  000798  0E0A               	movlw	10
  2116  00079A  6E20               	movwf	atraso_ms@t^0,c
  2117  00079C  ECDD  F00C         	call	_atraso_ms	;wreg free
  2118  0007A0                     
  2119                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 98:             kpDebounce();
  2120  0007A0  ECE4  F006         	call	_kpDebounce	;wreg free
  2121  0007A4                     
  2122                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 99:             tecla = kpRead()
      +                          ;
  2123  0007A4  EC6F  F00E         	call	_kpRead	;wreg free
  2124  0007A8  5020               	movf	?_kpRead^0,w,c
  2125  0007AA  6E1F               	movwf	_tecla^0,c
  2126  0007AC                     
  2127                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 100:             if (((tecla) & 
      +                          (1<<(3)))) {
  2128  0007AC  A61F               	btfss	_tecla^0,3,c
  2129  0007AE  EFDB  F003         	goto	u2391
  2130  0007B2  EFDD  F003         	goto	u2390
  2131  0007B6                     u2391:
  2132  0007B6  EFF3  F003         	goto	l226
  2133  0007BA                     u2390:
  2134  0007BA  EFE7  F003         	goto	l2537
  2135  0007BE                     l2531:
  2136                           
  2137                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 102:                     ssdUpda
      +                          te();
  2138  0007BE  ECA1  F007         	call	_ssdUpdate	;wreg free
  2139  0007C2                     
  2140                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 103:                     kpDebou
      +                          nce();
  2141  0007C2  ECE4  F006         	call	_kpDebounce	;wreg free
  2142  0007C6                     
  2143                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 104:                     tecla =
      +                           kpRead();
  2144  0007C6  EC6F  F00E         	call	_kpRead	;wreg free
  2145  0007CA  5020               	movf	?_kpRead^0,w,c
  2146  0007CC  6E1F               	movwf	_tecla^0,c
  2147  0007CE                     l2537:
  2148                           
  2149                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 101:                 while(((tec
      +                          la) & (1<<(3)))) {
  2150  0007CE  B61F               	btfsc	_tecla^0,3,c
  2151  0007D0  EFEC  F003         	goto	u2401
  2152  0007D4  EFEE  F003         	goto	u2400
  2153  0007D8                     u2401:
  2154  0007D8  EFDF  F003         	goto	l2531
  2155  0007DC                     u2400:
  2156  0007DC                     
  2157                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 106:                 alterarVolu
      +                          me(0);
  2158  0007DC  0E00               	movlw	0
  2159  0007DE  ECE9  F008         	call	_alterarVolume
  2160                           
  2161                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 107:             }
  2162  0007E2  EF66  F004         	goto	l2583
  2163  0007E6                     l226:
  2164  0007E6  AE1F               	btfss	_tecla^0,7,c
  2165  0007E8  EFF8  F003         	goto	u2411
  2166  0007EC  EFFA  F003         	goto	u2410
  2167  0007F0                     u2411:
  2168  0007F0  EF10  F004         	goto	l231
  2169  0007F4                     u2410:
  2170  0007F4  EF04  F004         	goto	l2549
  2171  0007F8                     l2543:
  2172                           
  2173                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 110:                     ssdUpda
      +                          te();
  2174  0007F8  ECA1  F007         	call	_ssdUpdate	;wreg free
  2175  0007FC                     
  2176                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 111:                     kpDebou
      +                          nce();
  2177  0007FC  ECE4  F006         	call	_kpDebounce	;wreg free
  2178  000800                     
  2179                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 112:                     tecla =
      +                           kpRead();
  2180  000800  EC6F  F00E         	call	_kpRead	;wreg free
  2181  000804  5020               	movf	?_kpRead^0,w,c
  2182  000806  6E1F               	movwf	_tecla^0,c
  2183  000808                     l2549:
  2184                           
  2185                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 109:                 while(((tec
      +                          la) & (1<<(7)))) {
  2186  000808  BE1F               	btfsc	_tecla^0,7,c
  2187  00080A  EF09  F004         	goto	u2421
  2188  00080E  EF0B  F004         	goto	u2420
  2189  000812                     u2421:
  2190  000812  EFFC  F003         	goto	l2543
  2191  000816                     u2420:
  2192  000816                     
  2193                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 114:                 alterarVolu
      +                          me(1);
  2194  000816  0E01               	movlw	1
  2195  000818  ECE9  F008         	call	_alterarVolume
  2196                           
  2197                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 115:             }
  2198  00081C  EF66  F004         	goto	l2583
  2199  000820                     l231:
  2200  000820  A01F               	btfss	_tecla^0,0,c
  2201  000822  EF15  F004         	goto	u2431
  2202  000826  EF17  F004         	goto	u2430
  2203  00082A                     u2431:
  2204  00082A  EF38  F004         	goto	l236
  2205  00082E                     u2430:
  2206  00082E  EF21  F004         	goto	l2561
  2207  000832                     l2555:
  2208                           
  2209                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 118:                     ssdUpda
      +                          te();
  2210  000832  ECA1  F007         	call	_ssdUpdate	;wreg free
  2211  000836                     
  2212                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 119:                     kpDebou
      +                          nce();
  2213  000836  ECE4  F006         	call	_kpDebounce	;wreg free
  2214  00083A                     
  2215                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 120:                     tecla =
      +                           kpRead();
  2216  00083A  EC6F  F00E         	call	_kpRead	;wreg free
  2217  00083E  5020               	movf	?_kpRead^0,w,c
  2218  000840  6E1F               	movwf	_tecla^0,c
  2219  000842                     l2561:
  2220                           
  2221                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 117:                 while(((tec
      +                          la) & (1<<(0)))) {
  2222  000842  B01F               	btfsc	_tecla^0,0,c
  2223  000844  EF26  F004         	goto	u2441
  2224  000848  EF28  F004         	goto	u2440
  2225  00084C                     u2441:
  2226  00084C  EF19  F004         	goto	l2555
  2227  000850                     u2440:
  2228  000850                     
  2229                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 122:                 if (pause =
      +                          = 0) {pause = 1;} else {pause = 0;}
  2230  000850  501E               	movf	_pause^0,w,c
  2231  000852  A4D8               	btfss	status,2,c
  2232  000854  EF2E  F004         	goto	u2451
  2233  000858  EF30  F004         	goto	u2450
  2234  00085C                     u2451:
  2235  00085C  EF34  F004         	goto	l2567
  2236  000860                     u2450:
  2237  000860  0E01               	movlw	1
  2238  000862  6E1E               	movwf	_pause^0,c
  2239  000864  EF66  F004         	goto	l2583
  2240  000868                     l2567:
  2241  000868  0E00               	movlw	0
  2242  00086A  6E1E               	movwf	_pause^0,c
  2243  00086C  EF66  F004         	goto	l2583
  2244  000870                     l236:
  2245  000870  A81F               	btfss	_tecla^0,4,c
  2246  000872  EF3D  F004         	goto	u2461
  2247  000876  EF3F  F004         	goto	u2460
  2248  00087A                     u2461:
  2249  00087A  EF66  F004         	goto	l235
  2250  00087E                     u2460:
  2251  00087E  EF49  F004         	goto	l2577
  2252  000882                     l2571:
  2253                           
  2254                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 126:                     ssdUpda
      +                          te();
  2255  000882  ECA1  F007         	call	_ssdUpdate	;wreg free
  2256  000886                     
  2257                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 127:                     kpDebou
      +                          nce();
  2258  000886  ECE4  F006         	call	_kpDebounce	;wreg free
  2259  00088A                     
  2260                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 128:                     tecla =
      +                           kpRead();
  2261  00088A  EC6F  F00E         	call	_kpRead	;wreg free
  2262  00088E  5020               	movf	?_kpRead^0,w,c
  2263  000890  6E1F               	movwf	_tecla^0,c
  2264  000892                     l2577:
  2265                           
  2266                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 125:                 while(((tec
      +                          la) & (1<<(4)))) {
  2267  000892  B81F               	btfsc	_tecla^0,4,c
  2268  000894  EF4E  F004         	goto	u2471
  2269  000898  EF50  F004         	goto	u2470
  2270  00089C                     u2471:
  2271  00089C  EF41  F004         	goto	l2571
  2272  0008A0                     u2470:
  2273  0008A0                     
  2274                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 130:                 ssdDigit(0,
      +                           0);
  2275  0008A0  0E00               	movlw	0
  2276  0008A2  6E20               	movwf	ssdDigit@pos^0,c
  2277  0008A4  0E00               	movlw	0
  2278  0008A6  EC6D  F00D         	call	_ssdDigit
  2279                           
  2280                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 131:                 ssdDigit(0,
      +                           1);
  2281  0008AA  0E01               	movlw	1
  2282  0008AC  6E20               	movwf	ssdDigit@pos^0,c
  2283  0008AE  0E00               	movlw	0
  2284  0008B0  EC6D  F00D         	call	_ssdDigit
  2285                           
  2286                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 132:                 ssdDigit(0,
      +                           2);
  2287  0008B4  0E02               	movlw	2
  2288  0008B6  6E20               	movwf	ssdDigit@pos^0,c
  2289  0008B8  0E00               	movlw	0
  2290  0008BA  EC6D  F00D         	call	_ssdDigit
  2291                           
  2292                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 133:                 ssdDigit(0,
      +                           3);
  2293  0008BE  0E03               	movlw	3
  2294  0008C0  6E20               	movwf	ssdDigit@pos^0,c
  2295  0008C2  0E00               	movlw	0
  2296  0008C4  EC6D  F00D         	call	_ssdDigit
  2297  0008C8  EF95  F004         	goto	l247
  2298  0008CC                     l235:
  2299  0008CC                     l2583:
  2300                           
  2301                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 136:         }
  2302  0008CC  2A34               	incf	playSong@j^0,f,c
  2303  0008CE  0E63               	movlw	99
  2304  0008D0  6434               	cpfsgt	playSong@j^0,c
  2305  0008D2  EF6D  F004         	goto	u2481
  2306  0008D6  EF6F  F004         	goto	u2480
  2307  0008DA                     u2481:
  2308  0008DA  EFC8  F003         	goto	l2519
  2309  0008DE                     u2480:
  2310  0008DE                     
  2311                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 137:         if (pause == 0) {
  2312  0008DE  501E               	movf	_pause^0,w,c
  2313  0008E0  A4D8               	btfss	status,2,c
  2314  0008E2  EF75  F004         	goto	u2491
  2315  0008E6  EF77  F004         	goto	u2490
  2316  0008EA                     u2491:
  2317  0008EA  EF7D  F004         	goto	l2593
  2318  0008EE                     u2490:
  2319  0008EE                     
  2320                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 138:             tempo -= 1;
  2321  0008EE  0649               	decf	_tempo^0,f,c
  2322  0008F0                     
  2323                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 139:             pwmSet(100);
  2324  0008F0  0E64               	movlw	100
  2325  0008F2  ECA7  F00C         	call	_pwmSet
  2326                           
  2327                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 140:         } else {
  2328  0008F6  EF80  F004         	goto	l2595
  2329  0008FA                     l2593:
  2330                           
  2331                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 141:             pwmSet(0);
  2332  0008FA  0E00               	movlw	0
  2333  0008FC  ECA7  F00C         	call	_pwmSet
  2334  000900                     l2595:
  2335                           
  2336                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 83:     while (tempo != 0) {
  2337  000900  5049               	movf	_tempo^0,w,c
  2338  000902  A4D8               	btfss	status,2,c
  2339  000904  EF86  F004         	goto	u2501
  2340  000908  EF88  F004         	goto	u2500
  2341  00090C                     u2501:
  2342  00090C  EF56  F003         	goto	l2511
  2343  000910                     u2500:
  2344  000910                     
  2345                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 144:     TRISA=0x00;
  2346  000910  0E00               	movlw	0
  2347  000912  6E92               	movwf	146,c	;volatile
  2348  000914                     
  2349                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 145:     pwmSet(0);
  2350  000914  0E00               	movlw	0
  2351  000916  ECA7  F00C         	call	_pwmSet
  2352  00091A                     
  2353                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 146:     ((TRISC) |= (1<<(1)));
  2354  00091A  8294               	bsf	148,1,c	;volatile
  2355  00091C                     
  2356                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 147:     atraso_ms(500);
  2357  00091C  0E01               	movlw	1
  2358  00091E  6E21               	movwf	(atraso_ms@t+1)^0,c
  2359  000920  0EF4               	movlw	244
  2360  000922  6E20               	movwf	atraso_ms@t^0,c
  2361  000924  ECDD  F00C         	call	_atraso_ms	;wreg free
  2362  000928                     
  2363                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 148:     ((TRISC) &= ~(1<<(1)));
  2364  000928  9294               	bcf	148,1,c	;volatile
  2365  00092A                     l247:
  2366  00092A  0012               	return		;funcret
  2367  00092C                     __end_of_playSong:
  2368                           	callstack 0
  2369                           
  2370 ;; *************** function _ssdUpdate *****************
  2371 ;; Defined at:
  2372 ;;		line 54 in file "ssd.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;		None
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;		None
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      void 
  2379 ;; Registers used:
  2380 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2386 ;;      Params:         0       0       0       0       0       0       0
  2387 ;;      Locals:         0       0       0       0       0       0       0
  2388 ;;      Temps:          2       0       0       0       0       0       0
  2389 ;;      Totals:         2       0       0       0       0       0       0
  2390 ;;Total ram usage:        2 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    1
  2393 ;; This function calls:
  2394 ;;		_digitalWrite
  2395 ;; This function is called by:
  2396 ;;		_chooseSong
  2397 ;;		_playSong
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           	psect	text9
  2402  000F42                     __ptext9:
  2403                           	callstack 0
  2404  000F42                     _ssdUpdate:
  2405                           	callstack 28
  2406  000F42                     
  2407                           ;ssd.c: 58:     TRISD= 0x00;
  2408  000F42  0E00               	movlw	0
  2409  000F44  6E95               	movwf	149,c	;volatile
  2410  000F46                     
  2411                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  2412  000F46  0E00               	movlw	0
  2413  000F48  6E21               	movwf	(digitalWrite@pin+1)^0,c
  2414  000F4A  0E02               	movlw	2
  2415  000F4C  6E20               	movwf	digitalWrite@pin^0,c
  2416  000F4E  0E00               	movlw	0
  2417  000F50  6E23               	movwf	(digitalWrite@value+1)^0,c
  2418  000F52  0E00               	movlw	0
  2419  000F54  6E22               	movwf	digitalWrite@value^0,c
  2420  000F56  ECBD  F005         	call	_digitalWrite	;wreg free
  2421  000F5A                     
  2422                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  2423  000F5A  0E00               	movlw	0
  2424  000F5C  6E21               	movwf	(digitalWrite@pin+1)^0,c
  2425  000F5E  0E03               	movlw	3
  2426  000F60  6E20               	movwf	digitalWrite@pin^0,c
  2427  000F62  0E00               	movlw	0
  2428  000F64  6E23               	movwf	(digitalWrite@value+1)^0,c
  2429  000F66  0E00               	movlw	0
  2430  000F68  6E22               	movwf	digitalWrite@value^0,c
  2431  000F6A  ECBD  F005         	call	_digitalWrite	;wreg free
  2432  000F6E                     
  2433                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  2434  000F6E  0E00               	movlw	0
  2435  000F70  6E21               	movwf	(digitalWrite@pin+1)^0,c
  2436  000F72  0E04               	movlw	4
  2437  000F74  6E20               	movwf	digitalWrite@pin^0,c
  2438  000F76  0E00               	movlw	0
  2439  000F78  6E23               	movwf	(digitalWrite@value+1)^0,c
  2440  000F7A  0E00               	movlw	0
  2441  000F7C  6E22               	movwf	digitalWrite@value^0,c
  2442  000F7E  ECBD  F005         	call	_digitalWrite	;wreg free
  2443  000F82                     
  2444                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  2445  000F82  0E00               	movlw	0
  2446  000F84  6E21               	movwf	(digitalWrite@pin+1)^0,c
  2447  000F86  0E05               	movlw	5
  2448  000F88  6E20               	movwf	digitalWrite@pin^0,c
  2449  000F8A  0E00               	movlw	0
  2450  000F8C  6E23               	movwf	(digitalWrite@value+1)^0,c
  2451  000F8E  0E00               	movlw	0
  2452  000F90  6E22               	movwf	digitalWrite@value^0,c
  2453  000F92  ECBD  F005         	call	_digitalWrite	;wreg free
  2454                           
  2455                           ;ssd.c: 66:     PORTD = 0x00;
  2456  000F96  0E00               	movlw	0
  2457  000F98  6E83               	movwf	131,c	;volatile
  2458                           
  2459                           ;ssd.c: 69:     switch (display)
  2460  000F9A  EF2B  F008         	goto	l2277
  2461  000F9E                     l2249:
  2462                           
  2463                           ;ssd.c: 72:             PORTD = valor[v0];
  2464  000F9E  0E01               	movlw	low _valor
  2465  000FA0  2442               	addwf	_v0^0,w,c
  2466  000FA2  6EF6               	movwf	tblptrl,c
  2467  000FA4  6AF7               	clrf	tblptrh,c
  2468  000FA6  0E06               	movlw	high _valor
  2469  000FA8  22F7               	addwfc	tblptrh,f,c
  2470  000FAA                     	if	0	;There are less than 3 active tblptr bytes
  2471  000FAA                     	endif
  2472  000FAA  0008               	tblrd		*
  2473  000FAC  CFF5 FF83          	movff	tablat,3971	;volatile
  2474  000FB0                     
  2475                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  2476  000FB0  0E00               	movlw	0
  2477  000FB2  6E21               	movwf	(digitalWrite@pin+1)^0,c
  2478  000FB4  0E02               	movlw	2
  2479  000FB6  6E20               	movwf	digitalWrite@pin^0,c
  2480  000FB8  0E00               	movlw	0
  2481  000FBA  6E23               	movwf	(digitalWrite@value+1)^0,c
  2482  000FBC  0E01               	movlw	1
  2483  000FBE  6E22               	movwf	digitalWrite@value^0,c
  2484  000FC0  ECBD  F005         	call	_digitalWrite	;wreg free
  2485  000FC4                     
  2486                           ;ssd.c: 74:             display = 1;
  2487  000FC4  0E01               	movlw	1
  2488  000FC6  6E43               	movwf	_display^0,c
  2489                           
  2490                           ;ssd.c: 75:             break;
  2491  000FC8  EF48  F008         	goto	l311
  2492  000FCC                     l2255:
  2493                           
  2494                           ;ssd.c: 78:             PORTD = valor[v1];
  2495  000FCC  0E01               	movlw	low _valor
  2496  000FCE  2441               	addwf	_v1^0,w,c
  2497  000FD0  6EF6               	movwf	tblptrl,c
  2498  000FD2  6AF7               	clrf	tblptrh,c
  2499  000FD4  0E06               	movlw	high _valor
  2500  000FD6  22F7               	addwfc	tblptrh,f,c
  2501  000FD8                     	if	0	;There are less than 3 active tblptr bytes
  2502  000FD8                     	endif
  2503  000FD8  0008               	tblrd		*
  2504  000FDA  CFF5 FF83          	movff	tablat,3971	;volatile
  2505  000FDE                     
  2506                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  2507  000FDE  0E00               	movlw	0
  2508  000FE0  6E21               	movwf	(digitalWrite@pin+1)^0,c
  2509  000FE2  0E03               	movlw	3
  2510  000FE4  6E20               	movwf	digitalWrite@pin^0,c
  2511  000FE6  0E00               	movlw	0
  2512  000FE8  6E23               	movwf	(digitalWrite@value+1)^0,c
  2513  000FEA  0E01               	movlw	1
  2514  000FEC  6E22               	movwf	digitalWrite@value^0,c
  2515  000FEE  ECBD  F005         	call	_digitalWrite	;wreg free
  2516  000FF2                     
  2517                           ;ssd.c: 80:             display = 2;
  2518  000FF2  0E02               	movlw	2
  2519  000FF4  6E43               	movwf	_display^0,c
  2520                           
  2521                           ;ssd.c: 81:             break;
  2522  000FF6  EF48  F008         	goto	l311
  2523  000FFA                     l2261:
  2524                           
  2525                           ;ssd.c: 84:             PORTD = valor[v2];
  2526  000FFA  0E01               	movlw	low _valor
  2527  000FFC  2440               	addwf	_v2^0,w,c
  2528  000FFE  6EF6               	movwf	tblptrl,c
  2529  001000  6AF7               	clrf	tblptrh,c
  2530  001002  0E06               	movlw	high _valor
  2531  001004  22F7               	addwfc	tblptrh,f,c
  2532  001006                     	if	0	;There are less than 3 active tblptr bytes
  2533  001006                     	endif
  2534  001006  0008               	tblrd		*
  2535  001008  CFF5 FF83          	movff	tablat,3971	;volatile
  2536  00100C                     
  2537                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  2538  00100C  0E00               	movlw	0
  2539  00100E  6E21               	movwf	(digitalWrite@pin+1)^0,c
  2540  001010  0E04               	movlw	4
  2541  001012  6E20               	movwf	digitalWrite@pin^0,c
  2542  001014  0E00               	movlw	0
  2543  001016  6E23               	movwf	(digitalWrite@value+1)^0,c
  2544  001018  0E01               	movlw	1
  2545  00101A  6E22               	movwf	digitalWrite@value^0,c
  2546  00101C  ECBD  F005         	call	_digitalWrite	;wreg free
  2547  001020                     
  2548                           ;ssd.c: 86:             display = 3;
  2549  001020  0E03               	movlw	3
  2550  001022  6E43               	movwf	_display^0,c
  2551                           
  2552                           ;ssd.c: 87:             break;
  2553  001024  EF48  F008         	goto	l311
  2554  001028                     l2267:
  2555                           
  2556                           ;ssd.c: 90:             PORTD = valor[v3];
  2557  001028  0E01               	movlw	low _valor
  2558  00102A  243F               	addwf	_v3^0,w,c
  2559  00102C  6EF6               	movwf	tblptrl,c
  2560  00102E  6AF7               	clrf	tblptrh,c
  2561  001030  0E06               	movlw	high _valor
  2562  001032  22F7               	addwfc	tblptrh,f,c
  2563  001034                     	if	0	;There are less than 3 active tblptr bytes
  2564  001034                     	endif
  2565  001034  0008               	tblrd		*
  2566  001036  CFF5 FF83          	movff	tablat,3971	;volatile
  2567  00103A                     
  2568                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  2569  00103A  0E00               	movlw	0
  2570  00103C  6E21               	movwf	(digitalWrite@pin+1)^0,c
  2571  00103E  0E05               	movlw	5
  2572  001040  6E20               	movwf	digitalWrite@pin^0,c
  2573  001042  0E00               	movlw	0
  2574  001044  6E23               	movwf	(digitalWrite@value+1)^0,c
  2575  001046  0E01               	movlw	1
  2576  001048  6E22               	movwf	digitalWrite@value^0,c
  2577  00104A  ECBD  F005         	call	_digitalWrite	;wreg free
  2578  00104E                     l2271:
  2579                           
  2580                           ;ssd.c: 92:             display = 0;
  2581  00104E  0E00               	movlw	0
  2582  001050  6E43               	movwf	_display^0,c
  2583                           
  2584                           ;ssd.c: 93:             break;
  2585  001052  EF48  F008         	goto	l311
  2586  001056                     l2277:
  2587  001056  5043               	movf	_display^0,w,c
  2588  001058  6E26               	movwf	??_ssdUpdate^0,c
  2589  00105A  6A27               	clrf	(??_ssdUpdate+1)^0,c
  2590                           
  2591                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2592                           ; Switch size 1, requested type "simple"
  2593                           ; Number of cases is 1, Range of values is 0 to 0
  2594                           ; switch strategies available:
  2595                           ; Name         Instructions Cycles
  2596                           ; simple_byte            4     3 (average)
  2597                           ;	Chosen strategy is simple_byte
  2598  00105C  5027               	movf	(??_ssdUpdate+1)^0,w,c
  2599  00105E  0A00               	xorlw	0	; case 0
  2600  001060  B4D8               	btfsc	status,2,c
  2601  001062  EF35  F008         	goto	l2749
  2602  001066  EF27  F008         	goto	l2271
  2603  00106A                     l2749:
  2604                           
  2605                           ; Switch size 1, requested type "simple"
  2606                           ; Number of cases is 4, Range of values is 0 to 3
  2607                           ; switch strategies available:
  2608                           ; Name         Instructions Cycles
  2609                           ; simple_byte           13     7 (average)
  2610                           ;	Chosen strategy is simple_byte
  2611  00106A  5026               	movf	??_ssdUpdate^0,w,c
  2612  00106C  0A00               	xorlw	0	; case 0
  2613  00106E  B4D8               	btfsc	status,2,c
  2614  001070  EFCF  F007         	goto	l2249
  2615  001074  0A01               	xorlw	1	; case 1
  2616  001076  B4D8               	btfsc	status,2,c
  2617  001078  EFE6  F007         	goto	l2255
  2618  00107C  0A03               	xorlw	3	; case 2
  2619  00107E  B4D8               	btfsc	status,2,c
  2620  001080  EFFD  F007         	goto	l2261
  2621  001084  0A01               	xorlw	1	; case 3
  2622  001086  B4D8               	btfsc	status,2,c
  2623  001088  EF14  F008         	goto	l2267
  2624  00108C  EF27  F008         	goto	l2271
  2625  001090                     l311:
  2626  001090  0012               	return		;funcret
  2627  001092                     __end_of_ssdUpdate:
  2628                           	callstack 0
  2629                           
  2630 ;; *************** function _ssdDigit *****************
  2631 ;; Defined at:
  2632 ;;		line 38 in file "ssd.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;  val             1    wreg     unsigned char 
  2635 ;;  pos             1    0[COMRAM] unsigned char 
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  val             1    1[COMRAM] unsigned char 
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  1    wreg      void 
  2640 ;; Registers used:
  2641 ;;		wreg, status,2, status,0
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2647 ;;      Params:         1       0       0       0       0       0       0
  2648 ;;      Locals:         1       0       0       0       0       0       0
  2649 ;;      Temps:          0       0       0       0       0       0       0
  2650 ;;      Totals:         2       0       0       0       0       0       0
  2651 ;;Total ram usage:        2 bytes
  2652 ;; Hardware stack levels used:    1
  2653 ;; This function calls:
  2654 ;;		Nothing
  2655 ;; This function is called by:
  2656 ;;		_chooseSong
  2657 ;;		_playSong
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           	psect	text10
  2662  001ADA                     __ptext10:
  2663                           	callstack 0
  2664  001ADA                     _ssdDigit:
  2665                           	callstack 29
  2666                           
  2667                           ;incstack = 0
  2668                           ;ssdDigit@val stored from wreg
  2669  001ADA  6E21               	movwf	ssdDigit@val^0,c
  2670  001ADC                     
  2671                           ;ssd.c: 39:     if (pos == 0) {
  2672  001ADC  5020               	movf	ssdDigit@pos^0,w,c
  2673  001ADE  A4D8               	btfss	status,2,c
  2674  001AE0  EF74  F00D         	goto	u1901
  2675  001AE4  EF76  F00D         	goto	u1900
  2676  001AE8                     u1901:
  2677  001AE8  EF78  F00D         	goto	l2287
  2678  001AEC                     u1900:
  2679  001AEC                     
  2680                           ;ssd.c: 40:         v0 = val;
  2681  001AEC  C021  F042         	movff	ssdDigit@val,_v0
  2682  001AF0                     l2287:
  2683                           
  2684                           ;ssd.c: 42:     if (pos == 1) {
  2685  001AF0  0420               	decf	ssdDigit@pos^0,w,c
  2686  001AF2  A4D8               	btfss	status,2,c
  2687  001AF4  EF7E  F00D         	goto	u1911
  2688  001AF8  EF80  F00D         	goto	u1910
  2689  001AFC                     u1911:
  2690  001AFC  EF82  F00D         	goto	l2291
  2691  001B00                     u1910:
  2692  001B00                     
  2693                           ;ssd.c: 43:         v1 = val;
  2694  001B00  C021  F041         	movff	ssdDigit@val,_v1
  2695  001B04                     l2291:
  2696                           
  2697                           ;ssd.c: 45:     if (pos == 2) {
  2698  001B04  0E02               	movlw	2
  2699  001B06  1820               	xorwf	ssdDigit@pos^0,w,c
  2700  001B08  A4D8               	btfss	status,2,c
  2701  001B0A  EF89  F00D         	goto	u1921
  2702  001B0E  EF8B  F00D         	goto	u1920
  2703  001B12                     u1921:
  2704  001B12  EF8D  F00D         	goto	l2295
  2705  001B16                     u1920:
  2706  001B16                     
  2707                           ;ssd.c: 46:         v2 = val;
  2708  001B16  C021  F040         	movff	ssdDigit@val,_v2
  2709  001B1A                     l2295:
  2710                           
  2711                           ;ssd.c: 48:     if (pos == 3) {
  2712  001B1A  0E03               	movlw	3
  2713  001B1C  1820               	xorwf	ssdDigit@pos^0,w,c
  2714  001B1E  A4D8               	btfss	status,2,c
  2715  001B20  EF94  F00D         	goto	u1931
  2716  001B24  EF96  F00D         	goto	u1930
  2717  001B28                     u1931:
  2718  001B28  EF98  F00D         	goto	l301
  2719  001B2C                     u1930:
  2720  001B2C                     
  2721                           ;ssd.c: 49:         v3 = val;
  2722  001B2C  C021  F03F         	movff	ssdDigit@val,_v3
  2723  001B30                     l301:
  2724  001B30  0012               	return		;funcret
  2725  001B32                     __end_of_ssdDigit:
  2726                           	callstack 0
  2727                           
  2728 ;; *************** function _pwmSet *****************
  2729 ;; Defined at:
  2730 ;;		line 24 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  porcento        1    wreg     unsigned char 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  porcento        1    9[COMRAM] unsigned char 
  2735 ;;  val             2   10[COMRAM] unsigned int 
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  1    wreg      void 
  2738 ;; Registers used:
  2739 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2745 ;;      Params:         0       0       0       0       0       0       0
  2746 ;;      Locals:         3       0       0       0       0       0       0
  2747 ;;      Temps:          2       0       0       0       0       0       0
  2748 ;;      Totals:         5       0       0       0       0       0       0
  2749 ;;Total ram usage:        5 bytes
  2750 ;; Hardware stack levels used:    1
  2751 ;; Hardware stack levels required when called:    1
  2752 ;; This function calls:
  2753 ;;		___lwdiv
  2754 ;;		___wmul
  2755 ;; This function is called by:
  2756 ;;		_playSong
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           	psect	text11
  2761  00194E                     __ptext11:
  2762                           	callstack 0
  2763  00194E                     _pwmSet:
  2764                           	callstack 27
  2765                           
  2766                           ;incstack = 0
  2767                           ;pwmSet@porcento stored from wreg
  2768  00194E  6E29               	movwf	pwmSet@porcento^0,c
  2769  001950                     
  2770                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 24: void pwmSet(unsigned char porc
      +                          ento);D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 25: {;D:/Documents/MPLABX Pro
      +                          jects/MP3-Player/MP3.X/pwm.c: 31:  unsigned int val = ((unsigned int)porcento) *(PR2+1);
  2771  001950  0E01               	movlw	1
  2772  001952  24CB               	addwf	203,w,c	;volatile
  2773  001954  6E20               	movwf	___wmul@multiplier^0,c
  2774  001956  6A21               	clrf	(___wmul@multiplier+1)^0,c
  2775  001958  0E00               	movlw	0
  2776  00195A  2221               	addwfc	(___wmul@multiplier+1)^0,f,c
  2777  00195C  C029  F022         	movff	pwmSet@porcento,___wmul@multiplicand
  2778  001960  6A23               	clrf	(___wmul@multiplicand+1)^0,c
  2779  001962  EC0D  F00E         	call	___wmul	;wreg free
  2780  001966  C020  F02A         	movff	?___wmul,pwmSet@val
  2781  00196A  C021  F02B         	movff	?___wmul+1,pwmSet@val+1
  2782  00196E                     
  2783                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 33:     val = val / 25;
  2784  00196E  C02A  F020         	movff	pwmSet@val,___lwdiv@dividend
  2785  001972  C02B  F021         	movff	pwmSet@val+1,___lwdiv@dividend+1
  2786  001976  0E00               	movlw	0
  2787  001978  6E23               	movwf	(___lwdiv@divisor+1)^0,c
  2788  00197A  0E19               	movlw	25
  2789  00197C  6E22               	movwf	___lwdiv@divisor^0,c
  2790  00197E  EC6D  F00C         	call	___lwdiv	;wreg free
  2791  001982  C020  F02A         	movff	?___lwdiv,pwmSet@val
  2792  001986  C021  F02B         	movff	?___lwdiv+1,pwmSet@val+1
  2793  00198A                     
  2794                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 35:  val &= 0x03ff;
  2795  00198A  0EFF               	movlw	255
  2796  00198C  162A               	andwf	pwmSet@val^0,f,c
  2797  00198E  0E03               	movlw	3
  2798  001990  162B               	andwf	(pwmSet@val+1)^0,f,c
  2799  001992                     
  2800                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 37:  CCPR1L = val >> 2;
  2801  001992  C02A  F027         	movff	pwmSet@val,??_pwmSet
  2802  001996  C02B  F028         	movff	pwmSet@val+1,??_pwmSet+1
  2803  00199A  90D8               	bcf	status,0,c
  2804  00199C  3228               	rrcf	(??_pwmSet+1)^0,f,c
  2805  00199E  3227               	rrcf	??_pwmSet^0,f,c
  2806  0019A0  90D8               	bcf	status,0,c
  2807  0019A2  3228               	rrcf	(??_pwmSet+1)^0,f,c
  2808  0019A4  3227               	rrcf	??_pwmSet^0,f,c
  2809  0019A6  5027               	movf	??_pwmSet^0,w,c
  2810  0019A8  6EBE               	movwf	190,c	;volatile
  2811  0019AA                     
  2812                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 39:  CCP1CON |= (val & 0x0003) << 
      +                          4;
  2813  0019AA  C02A  F027         	movff	pwmSet@val,??_pwmSet	;volatile
  2814  0019AE  0E03               	movlw	3
  2815  0019B0  1627               	andwf	??_pwmSet^0,f,c
  2816  0019B2  3827               	swapf	??_pwmSet^0,w,c
  2817  0019B4  0BF0               	andlw	240
  2818  0019B6  12BD               	iorwf	189,f,c	;volatile
  2819  0019B8  0012               	return		;funcret
  2820  0019BA                     __end_of_pwmSet:
  2821                           	callstack 0
  2822                           
  2823 ;; *************** function ___wmul *****************
  2824 ;; Defined at:
  2825 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  multiplier      2    0[COMRAM] unsigned int 
  2828 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  product         2    4[COMRAM] unsigned int 
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  2    0[COMRAM] unsigned int 
  2833 ;; Registers used:
  2834 ;;		wreg, status,2, status,0, prodl, prodh
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2840 ;;      Params:         4       0       0       0       0       0       0
  2841 ;;      Locals:         2       0       0       0       0       0       0
  2842 ;;      Temps:          0       0       0       0       0       0       0
  2843 ;;      Totals:         6       0       0       0       0       0       0
  2844 ;;Total ram usage:        6 bytes
  2845 ;; Hardware stack levels used:    1
  2846 ;; This function calls:
  2847 ;;		Nothing
  2848 ;; This function is called by:
  2849 ;;		_songsInit
  2850 ;;		_pwmSet
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           	psect	text12
  2855  001C1A                     __ptext12:
  2856                           	callstack 0
  2857  001C1A                     ___wmul:
  2858                           	callstack 29
  2859  001C1A  5020               	movf	___wmul@multiplier^0,w,c
  2860  001C1C  0222               	mulwf	___wmul@multiplicand^0,c
  2861  001C1E  CFF3 F024          	movff	prodl,___wmul@product
  2862  001C22  CFF4 F025          	movff	prodh,___wmul@product+1
  2863  001C26  5020               	movf	___wmul@multiplier^0,w,c
  2864  001C28  0223               	mulwf	(___wmul@multiplicand+1)^0,c
  2865  001C2A  50F3               	movf	243,w,c
  2866  001C2C  2625               	addwf	(___wmul@product+1)^0,f,c
  2867  001C2E  5021               	movf	(___wmul@multiplier+1)^0,w,c
  2868  001C30  0222               	mulwf	___wmul@multiplicand^0,c
  2869  001C32  50F3               	movf	243,w,c
  2870  001C34  2625               	addwf	(___wmul@product+1)^0,f,c
  2871  001C36  C024  F020         	movff	___wmul@product,?___wmul
  2872  001C3A  C025  F021         	movff	___wmul@product+1,?___wmul+1
  2873  001C3E  0012               	return		;funcret
  2874  001C40                     __end_of___wmul:
  2875                           	callstack 0
  2876                           
  2877 ;; *************** function ___lwdiv *****************
  2878 ;; Defined at:
  2879 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\lwdiv.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  dividend        2    0[COMRAM] unsigned int 
  2882 ;;  divisor         2    2[COMRAM] unsigned int 
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;  quotient        2    4[COMRAM] unsigned int 
  2885 ;;  counter         1    6[COMRAM] unsigned char 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  2    0[COMRAM] unsigned int 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2895 ;;      Params:         4       0       0       0       0       0       0
  2896 ;;      Locals:         3       0       0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0       0       0
  2898 ;;      Totals:         7       0       0       0       0       0       0
  2899 ;;Total ram usage:        7 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_pwmSet
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text13
  2909  0018DA                     __ptext13:
  2910                           	callstack 0
  2911  0018DA                     ___lwdiv:
  2912                           	callstack 27
  2913  0018DA  0E00               	movlw	0
  2914  0018DC  6E25               	movwf	(___lwdiv@quotient+1)^0,c
  2915  0018DE  0E00               	movlw	0
  2916  0018E0  6E24               	movwf	___lwdiv@quotient^0,c
  2917  0018E2  5022               	movf	___lwdiv@divisor^0,w,c
  2918  0018E4  1023               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2919  0018E6  B4D8               	btfsc	status,2,c
  2920  0018E8  EF78  F00C         	goto	u1691
  2921  0018EC  EF7A  F00C         	goto	u1690
  2922  0018F0                     u1691:
  2923  0018F0  EFA2  F00C         	goto	l915
  2924  0018F4                     u1690:
  2925  0018F4  0E01               	movlw	1
  2926  0018F6  6E26               	movwf	___lwdiv@counter^0,c
  2927  0018F8  EF82  F00C         	goto	l2143
  2928  0018FC                     l2141:
  2929  0018FC  90D8               	bcf	status,0,c
  2930  0018FE  3622               	rlcf	___lwdiv@divisor^0,f,c
  2931  001900  3623               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2932  001902  2A26               	incf	___lwdiv@counter^0,f,c
  2933  001904                     l2143:
  2934  001904  AE23               	btfss	(___lwdiv@divisor+1)^0,7,c
  2935  001906  EF87  F00C         	goto	u1701
  2936  00190A  EF89  F00C         	goto	u1700
  2937  00190E                     u1701:
  2938  00190E  EF7E  F00C         	goto	l2141
  2939  001912                     u1700:
  2940  001912                     l2145:
  2941  001912  90D8               	bcf	status,0,c
  2942  001914  3624               	rlcf	___lwdiv@quotient^0,f,c
  2943  001916  3625               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2944  001918  5022               	movf	___lwdiv@divisor^0,w,c
  2945  00191A  5C20               	subwf	___lwdiv@dividend^0,w,c
  2946  00191C  5023               	movf	(___lwdiv@divisor+1)^0,w,c
  2947  00191E  5821               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2948  001920  A0D8               	btfss	status,0,c
  2949  001922  EF95  F00C         	goto	u1711
  2950  001926  EF97  F00C         	goto	u1710
  2951  00192A                     u1711:
  2952  00192A  EF9C  F00C         	goto	l2153
  2953  00192E                     u1710:
  2954  00192E  5022               	movf	___lwdiv@divisor^0,w,c
  2955  001930  5E20               	subwf	___lwdiv@dividend^0,f,c
  2956  001932  5023               	movf	(___lwdiv@divisor+1)^0,w,c
  2957  001934  5A21               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2958  001936  8024               	bsf	___lwdiv@quotient^0,0,c
  2959  001938                     l2153:
  2960  001938  90D8               	bcf	status,0,c
  2961  00193A  3223               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2962  00193C  3222               	rrcf	___lwdiv@divisor^0,f,c
  2963  00193E  2E26               	decfsz	___lwdiv@counter^0,f,c
  2964  001940  EF89  F00C         	goto	l2145
  2965  001944                     l915:
  2966  001944  C024  F020         	movff	___lwdiv@quotient,?___lwdiv
  2967  001948  C025  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2968  00194C  0012               	return		;funcret
  2969  00194E                     __end_of___lwdiv:
  2970                           	callstack 0
  2971                           
  2972 ;; *************** function _pwmInit *****************
  2973 ;; Defined at:
  2974 ;;		line 51 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;		None
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;		None
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, status,2, status,0, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2988 ;;      Params:         0       0       0       0       0       0       0
  2989 ;;      Locals:         0       0       0       0       0       0       0
  2990 ;;      Temps:          0       0       0       0       0       0       0
  2991 ;;      Totals:         0       0       0       0       0       0       0
  2992 ;;Total ram usage:        0 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:    2
  2995 ;; This function calls:
  2996 ;;		_pwmFrequency
  2997 ;; This function is called by:
  2998 ;;		_playSong
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text14
  3003  001CA2                     __ptext14:
  3004                           	callstack 0
  3005  001CA2                     _pwmInit:
  3006                           	callstack 26
  3007  001CA2                     
  3008                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 53:  ((TRISC) &= ~(1<<(2)));
  3009  001CA2  9494               	bcf	148,2,c	;volatile
  3010  001CA4                     
  3011                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 55:  T2CON |= 0b00000011;
  3012  001CA4  0E03               	movlw	3
  3013  001CA6  12CA               	iorwf	202,f,c	;volatile
  3014  001CA8                     
  3015                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 56:  ((T2CON) |= (1<<(2)));
  3016  001CA8  84CA               	bsf	202,2,c	;volatile
  3017  001CAA                     
  3018                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 58:  CCP1CON = 0b00001100;
  3019  001CAA  0E0C               	movlw	12
  3020  001CAC  6EBD               	movwf	189,c	;volatile
  3021  001CAE                     
  3022                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 60:     pwmFrequency(100);
  3023  001CAE  0E00               	movlw	0
  3024  001CB0  6E2F               	movwf	(pwmFrequency@freq+1)^0,c
  3025  001CB2  0E64               	movlw	100
  3026  001CB4  6E2E               	movwf	pwmFrequency@freq^0,c
  3027  001CB6  EC20  F00E         	call	_pwmFrequency	;wreg free
  3028  001CBA  0012               	return		;funcret
  3029  001CBC                     __end_of_pwmInit:
  3030                           	callstack 0
  3031                           
  3032 ;; *************** function _pwmFrequency *****************
  3033 ;; Defined at:
  3034 ;;		line 44 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  freq            2   14[COMRAM] unsigned int 
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;		None
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, status,2, status,0, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3048 ;;      Params:         2       0       0       0       0       0       0
  3049 ;;      Locals:         0       0       0       0       0       0       0
  3050 ;;      Temps:          0       0       0       0       0       0       0
  3051 ;;      Totals:         2       0       0       0       0       0       0
  3052 ;;Total ram usage:        2 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:    1
  3055 ;; This function calls:
  3056 ;;		___aldiv
  3057 ;; This function is called by:
  3058 ;;		_pwmInit
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text15
  3063  001C40                     __ptext15:
  3064                           	callstack 0
  3065  001C40                     _pwmFrequency:
  3066                           	callstack 26
  3067  001C40                     
  3068                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 44: void pwmFrequency(unsigned int
      +                           freq);D:/Documents/MPLABX Projects/MP3-Player/MP3.X/pwm.c: 45: {;D:/Documents/MPLABX Pr
      +                          ojects/MP3-Player/MP3.X/pwm.c: 48:  PR2 = (125000l/(freq)) - 1;
  3069  001C40  0E48               	movlw	72
  3070  001C42  6E20               	movwf	___aldiv@dividend^0,c
  3071  001C44  0EE8               	movlw	232
  3072  001C46  6E21               	movwf	(___aldiv@dividend+1)^0,c
  3073  001C48  0E01               	movlw	1
  3074  001C4A  6E22               	movwf	(___aldiv@dividend+2)^0,c
  3075  001C4C  0E00               	movlw	0
  3076  001C4E  6E23               	movwf	(___aldiv@dividend+3)^0,c
  3077  001C50  C02E  F024         	movff	pwmFrequency@freq,___aldiv@divisor
  3078  001C54  C02F  F025         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  3079  001C58  6A26               	clrf	(___aldiv@divisor+2)^0,c
  3080  001C5A  6A27               	clrf	(___aldiv@divisor+3)^0,c
  3081  001C5C  EC88  F009         	call	___aldiv	;wreg free
  3082  001C60  0420               	decf	?___aldiv^0,w,c
  3083  001C62  6ECB               	movwf	203,c	;volatile
  3084  001C64  0012               	return		;funcret
  3085  001C66                     __end_of_pwmFrequency:
  3086                           	callstack 0
  3087                           
  3088 ;; *************** function ___aldiv *****************
  3089 ;; Defined at:
  3090 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\aldiv.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;  dividend        4    0[COMRAM] long 
  3093 ;;  divisor         4    4[COMRAM] long 
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;  quotient        4   10[COMRAM] long 
  3096 ;;  sign            1    9[COMRAM] unsigned char 
  3097 ;;  counter         1    8[COMRAM] unsigned char 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  4    0[COMRAM] long 
  3100 ;; Registers used:
  3101 ;;		wreg, status,2, status,0
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3107 ;;      Params:         8       0       0       0       0       0       0
  3108 ;;      Locals:         6       0       0       0       0       0       0
  3109 ;;      Temps:          0       0       0       0       0       0       0
  3110 ;;      Totals:        14       0       0       0       0       0       0
  3111 ;;Total ram usage:       14 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; This function calls:
  3114 ;;		Nothing
  3115 ;; This function is called by:
  3116 ;;		_pwmFrequency
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           	psect	text16
  3121  001310                     __ptext16:
  3122                           	callstack 0
  3123  001310                     ___aldiv:
  3124                           	callstack 26
  3125  001310  0E00               	movlw	0
  3126  001312  6E29               	movwf	___aldiv@sign^0,c
  3127  001314  BE27               	btfsc	(___aldiv@divisor+3)^0,7,c
  3128  001316  EF91  F009         	goto	u1580
  3129  00131A  EF8F  F009         	goto	u1581
  3130  00131E                     u1581:
  3131  00131E  EF9B  F009         	goto	l2027
  3132  001322                     u1580:
  3133  001322  1E27               	comf	(___aldiv@divisor+3)^0,f,c
  3134  001324  1E26               	comf	(___aldiv@divisor+2)^0,f,c
  3135  001326  1E25               	comf	(___aldiv@divisor+1)^0,f,c
  3136  001328  6C24               	negf	___aldiv@divisor^0,c
  3137  00132A  0E00               	movlw	0
  3138  00132C  2225               	addwfc	(___aldiv@divisor+1)^0,f,c
  3139  00132E  2226               	addwfc	(___aldiv@divisor+2)^0,f,c
  3140  001330  2227               	addwfc	(___aldiv@divisor+3)^0,f,c
  3141  001332  0E01               	movlw	1
  3142  001334  6E29               	movwf	___aldiv@sign^0,c
  3143  001336                     l2027:
  3144  001336  BE23               	btfsc	(___aldiv@dividend+3)^0,7,c
  3145  001338  EFA2  F009         	goto	u1590
  3146  00133C  EFA0  F009         	goto	u1591
  3147  001340                     u1591:
  3148  001340  EFAC  F009         	goto	l2033
  3149  001344                     u1590:
  3150  001344  1E23               	comf	(___aldiv@dividend+3)^0,f,c
  3151  001346  1E22               	comf	(___aldiv@dividend+2)^0,f,c
  3152  001348  1E21               	comf	(___aldiv@dividend+1)^0,f,c
  3153  00134A  6C20               	negf	___aldiv@dividend^0,c
  3154  00134C  0E00               	movlw	0
  3155  00134E  2221               	addwfc	(___aldiv@dividend+1)^0,f,c
  3156  001350  2222               	addwfc	(___aldiv@dividend+2)^0,f,c
  3157  001352  2223               	addwfc	(___aldiv@dividend+3)^0,f,c
  3158  001354  0E01               	movlw	1
  3159  001356  1A29               	xorwf	___aldiv@sign^0,f,c
  3160  001358                     l2033:
  3161  001358  0E00               	movlw	0
  3162  00135A  6E2A               	movwf	___aldiv@quotient^0,c
  3163  00135C  0E00               	movlw	0
  3164  00135E  6E2B               	movwf	(___aldiv@quotient+1)^0,c
  3165  001360  0E00               	movlw	0
  3166  001362  6E2C               	movwf	(___aldiv@quotient+2)^0,c
  3167  001364  0E00               	movlw	0
  3168  001366  6E2D               	movwf	(___aldiv@quotient+3)^0,c
  3169  001368  5024               	movf	___aldiv@divisor^0,w,c
  3170  00136A  1025               	iorwf	(___aldiv@divisor+1)^0,w,c
  3171  00136C  1026               	iorwf	(___aldiv@divisor+2)^0,w,c
  3172  00136E  1027               	iorwf	(___aldiv@divisor+3)^0,w,c
  3173  001370  B4D8               	btfsc	status,2,c
  3174  001372  EFBD  F009         	goto	u1601
  3175  001376  EFBF  F009         	goto	u1600
  3176  00137A                     u1601:
  3177  00137A  EFF5  F009         	goto	l2055
  3178  00137E                     u1600:
  3179  00137E  0E01               	movlw	1
  3180  001380  6E28               	movwf	___aldiv@counter^0,c
  3181  001382  EFC9  F009         	goto	l2041
  3182  001386                     l2039:
  3183  001386  90D8               	bcf	status,0,c
  3184  001388  3624               	rlcf	___aldiv@divisor^0,f,c
  3185  00138A  3625               	rlcf	(___aldiv@divisor+1)^0,f,c
  3186  00138C  3626               	rlcf	(___aldiv@divisor+2)^0,f,c
  3187  00138E  3627               	rlcf	(___aldiv@divisor+3)^0,f,c
  3188  001390  2A28               	incf	___aldiv@counter^0,f,c
  3189  001392                     l2041:
  3190  001392  AE27               	btfss	(___aldiv@divisor+3)^0,7,c
  3191  001394  EFCE  F009         	goto	u1611
  3192  001398  EFD0  F009         	goto	u1610
  3193  00139C                     u1611:
  3194  00139C  EFC3  F009         	goto	l2039
  3195  0013A0                     u1610:
  3196  0013A0                     l2043:
  3197  0013A0  90D8               	bcf	status,0,c
  3198  0013A2  362A               	rlcf	___aldiv@quotient^0,f,c
  3199  0013A4  362B               	rlcf	(___aldiv@quotient+1)^0,f,c
  3200  0013A6  362C               	rlcf	(___aldiv@quotient+2)^0,f,c
  3201  0013A8  362D               	rlcf	(___aldiv@quotient+3)^0,f,c
  3202  0013AA  5024               	movf	___aldiv@divisor^0,w,c
  3203  0013AC  5C20               	subwf	___aldiv@dividend^0,w,c
  3204  0013AE  5025               	movf	(___aldiv@divisor+1)^0,w,c
  3205  0013B0  5821               	subwfb	(___aldiv@dividend+1)^0,w,c
  3206  0013B2  5026               	movf	(___aldiv@divisor+2)^0,w,c
  3207  0013B4  5822               	subwfb	(___aldiv@dividend+2)^0,w,c
  3208  0013B6  5027               	movf	(___aldiv@divisor+3)^0,w,c
  3209  0013B8  5823               	subwfb	(___aldiv@dividend+3)^0,w,c
  3210  0013BA  A0D8               	btfss	status,0,c
  3211  0013BC  EFE2  F009         	goto	u1621
  3212  0013C0  EFE4  F009         	goto	u1620
  3213  0013C4                     u1621:
  3214  0013C4  EFED  F009         	goto	l2051
  3215  0013C8                     u1620:
  3216  0013C8  5024               	movf	___aldiv@divisor^0,w,c
  3217  0013CA  5E20               	subwf	___aldiv@dividend^0,f,c
  3218  0013CC  5025               	movf	(___aldiv@divisor+1)^0,w,c
  3219  0013CE  5A21               	subwfb	(___aldiv@dividend+1)^0,f,c
  3220  0013D0  5026               	movf	(___aldiv@divisor+2)^0,w,c
  3221  0013D2  5A22               	subwfb	(___aldiv@dividend+2)^0,f,c
  3222  0013D4  5027               	movf	(___aldiv@divisor+3)^0,w,c
  3223  0013D6  5A23               	subwfb	(___aldiv@dividend+3)^0,f,c
  3224  0013D8  802A               	bsf	___aldiv@quotient^0,0,c
  3225  0013DA                     l2051:
  3226  0013DA  90D8               	bcf	status,0,c
  3227  0013DC  3227               	rrcf	(___aldiv@divisor+3)^0,f,c
  3228  0013DE  3226               	rrcf	(___aldiv@divisor+2)^0,f,c
  3229  0013E0  3225               	rrcf	(___aldiv@divisor+1)^0,f,c
  3230  0013E2  3224               	rrcf	___aldiv@divisor^0,f,c
  3231  0013E4  2E28               	decfsz	___aldiv@counter^0,f,c
  3232  0013E6  EFD0  F009         	goto	l2043
  3233  0013EA                     l2055:
  3234  0013EA  5029               	movf	___aldiv@sign^0,w,c
  3235  0013EC  B4D8               	btfsc	status,2,c
  3236  0013EE  EFFB  F009         	goto	u1631
  3237  0013F2  EFFD  F009         	goto	u1630
  3238  0013F6                     u1631:
  3239  0013F6  EF05  F00A         	goto	l2059
  3240  0013FA                     u1630:
  3241  0013FA  1E2D               	comf	(___aldiv@quotient+3)^0,f,c
  3242  0013FC  1E2C               	comf	(___aldiv@quotient+2)^0,f,c
  3243  0013FE  1E2B               	comf	(___aldiv@quotient+1)^0,f,c
  3244  001400  6C2A               	negf	___aldiv@quotient^0,c
  3245  001402  0E00               	movlw	0
  3246  001404  222B               	addwfc	(___aldiv@quotient+1)^0,f,c
  3247  001406  222C               	addwfc	(___aldiv@quotient+2)^0,f,c
  3248  001408  222D               	addwfc	(___aldiv@quotient+3)^0,f,c
  3249  00140A                     l2059:
  3250  00140A  C02A  F020         	movff	___aldiv@quotient,?___aldiv
  3251  00140E  C02B  F021         	movff	___aldiv@quotient+1,?___aldiv+1
  3252  001412  C02C  F022         	movff	___aldiv@quotient+2,?___aldiv+2
  3253  001416  C02D  F023         	movff	___aldiv@quotient+3,?___aldiv+3
  3254  00141A  0012               	return		;funcret
  3255  00141C                     __end_of___aldiv:
  3256                           	callstack 0
  3257                           
  3258 ;; *************** function _lcdStr *****************
  3259 ;; Defined at:
  3260 ;;		line 128 in file "lcd.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  str             2    8[COMRAM] PTR const unsigned char 
  3263 ;;		 -> STR_6(17), STR_5(17), STR_4(7), STR_3(4), 
  3264 ;;		 -> STR_2(16), STR_1(17), musicas.nome(17), musicas(190), 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  i               1   12[COMRAM] unsigned char 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      void 
  3269 ;; Registers used:
  3270 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3276 ;;      Params:         2       0       0       0       0       0       0
  3277 ;;      Locals:         1       0       0       0       0       0       0
  3278 ;;      Temps:          2       0       0       0       0       0       0
  3279 ;;      Totals:         5       0       0       0       0       0       0
  3280 ;;Total ram usage:        5 bytes
  3281 ;; Hardware stack levels used:    1
  3282 ;; Hardware stack levels required when called:    2
  3283 ;; This function calls:
  3284 ;;		_lcdData
  3285 ;; This function is called by:
  3286 ;;		_chooseSong
  3287 ;;		_playSong
  3288 ;;		_main
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           	psect	text17
  3293  001862                     __ptext17:
  3294                           	callstack 0
  3295  001862                     _lcdStr:
  3296                           	callstack 28
  3297  001862                     
  3298                           ;lcd.c: 129:     unsigned char i = 0;
  3299  001862  0E00               	movlw	0
  3300  001864  6E2C               	movwf	lcdStr@i^0,c
  3301                           
  3302                           ;lcd.c: 131:     while (str[i] != 0) {
  3303  001866  EF4E  F00C         	goto	l2181
  3304  00186A                     l2177:
  3305                           
  3306                           ;lcd.c: 132:         lcdData(str[i]);
  3307  00186A  502C               	movf	lcdStr@i^0,w,c
  3308  00186C  2428               	addwf	lcdStr@str^0,w,c
  3309  00186E  6E2A               	movwf	??_lcdStr^0,c
  3310  001870  0E00               	movlw	0
  3311  001872  2029               	addwfc	(lcdStr@str+1)^0,w,c
  3312  001874  6E2B               	movwf	(??_lcdStr+1)^0,c
  3313  001876  C02A  FFF6         	movff	??_lcdStr,tblptrl
  3314  00187A  C02B  FFF7         	movff	??_lcdStr+1,tblptrh
  3315  00187E  6AF8               	clrf	tblptru,c
  3316  001880  0E05               	movlw	(high __ramtop+-1)
  3317  001882  64F7               	cpfsgt	tblptrh,c
  3318  001884  D003               	bra	u1767
  3319  001886  0008               	tblrd		*
  3320  001888  50F5               	movf	tablat,w,c
  3321  00188A  D005               	bra	u1760
  3322  00188C                     u1767:
  3323  00188C  CFF6 FFE9          	movff	tblptrl,fsr0l
  3324  001890  CFF7 FFEA          	movff	tblptrh,fsr0h
  3325  001894  50EF               	movf	indf0,w,c
  3326  001896                     u1760:
  3327  001896  ECC4  F00D         	call	_lcdData
  3328  00189A                     
  3329                           ;lcd.c: 133:         i++;
  3330  00189A  2A2C               	incf	lcdStr@i^0,f,c
  3331  00189C                     l2181:
  3332                           
  3333                           ;lcd.c: 131:     while (str[i] != 0) {
  3334  00189C  502C               	movf	lcdStr@i^0,w,c
  3335  00189E  2428               	addwf	lcdStr@str^0,w,c
  3336  0018A0  6E2A               	movwf	??_lcdStr^0,c
  3337  0018A2  0E00               	movlw	0
  3338  0018A4  2029               	addwfc	(lcdStr@str+1)^0,w,c
  3339  0018A6  6E2B               	movwf	(??_lcdStr+1)^0,c
  3340  0018A8  C02A  FFF6         	movff	??_lcdStr,tblptrl
  3341  0018AC  C02B  FFF7         	movff	??_lcdStr+1,tblptrh
  3342  0018B0  6AF8               	clrf	tblptru,c
  3343  0018B2  0E05               	movlw	(high __ramtop+-1)
  3344  0018B4  64F7               	cpfsgt	tblptrh,c
  3345  0018B6  D003               	bra	u1777
  3346  0018B8  0008               	tblrd		*
  3347  0018BA  50F5               	movf	tablat,w,c
  3348  0018BC  D005               	bra	u1770
  3349  0018BE                     u1777:
  3350  0018BE  CFF6 FFE9          	movff	tblptrl,fsr0l
  3351  0018C2  CFF7 FFEA          	movff	tblptrh,fsr0h
  3352  0018C6  50EF               	movf	indf0,w,c
  3353  0018C8                     u1770:
  3354  0018C8  0900               	iorlw	0
  3355  0018CA  A4D8               	btfss	status,2,c
  3356  0018CC  EF6A  F00C         	goto	u1781
  3357  0018D0  EF6C  F00C         	goto	u1780
  3358  0018D4                     u1781:
  3359  0018D4  EF35  F00C         	goto	l2177
  3360  0018D8                     u1780:
  3361  0018D8  0012               	return		;funcret
  3362  0018DA                     __end_of_lcdStr:
  3363                           	callstack 0
  3364                           
  3365 ;; *************** function _lcdData *****************
  3366 ;; Defined at:
  3367 ;;		line 68 in file "lcd.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;  valor           1    wreg     unsigned char 
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;  valor           1    6[COMRAM] unsigned char 
  3372 ;;  old_D           1    7[COMRAM] unsigned char 
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, status,2, status,0, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3382 ;;      Params:         0       0       0       0       0       0       0
  3383 ;;      Locals:         2       0       0       0       0       0       0
  3384 ;;      Temps:          0       0       0       0       0       0       0
  3385 ;;      Totals:         2       0       0       0       0       0       0
  3386 ;;Total ram usage:        2 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; Hardware stack levels required when called:    1
  3389 ;; This function calls:
  3390 ;;		_Delay40us
  3391 ;;		_digitalWrite
  3392 ;; This function is called by:
  3393 ;;		_lcdStr
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text18
  3398  001B88                     __ptext18:
  3399                           	callstack 0
  3400  001B88                     _lcdData:
  3401                           	callstack 28
  3402                           
  3403                           ;incstack = 0
  3404                           ;lcdData@valor stored from wreg
  3405  001B88  6E26               	movwf	lcdData@valor^0,c
  3406  001B8A                     
  3407                           ;lcd.c: 70:     unsigned char old_D;;lcd.c: 71:     old_D = PORTD;
  3408  001B8A  CF83 F027          	movff	3971,lcdData@old_D	;volatile
  3409  001B8E                     
  3410                           ;lcd.c: 73:     TRISD = 0x00;
  3411  001B8E  0E00               	movlw	0
  3412  001B90  6E95               	movwf	149,c	;volatile
  3413  001B92                     
  3414                           ;lcd.c: 74:     digitalWrite(PIN_E2, 1);
  3415  001B92  0E00               	movlw	0
  3416  001B94  6E21               	movwf	(digitalWrite@pin+1)^0,c
  3417  001B96  0E22               	movlw	34
  3418  001B98  6E20               	movwf	digitalWrite@pin^0,c
  3419  001B9A  0E00               	movlw	0
  3420  001B9C  6E23               	movwf	(digitalWrite@value+1)^0,c
  3421  001B9E  0E01               	movlw	1
  3422  001BA0  6E22               	movwf	digitalWrite@value^0,c
  3423  001BA2  ECBD  F005         	call	_digitalWrite	;wreg free
  3424  001BA6                     
  3425                           ;lcd.c: 76:     PORTD = valor;
  3426  001BA6  C026  FF83         	movff	lcdData@valor,3971	;volatile
  3427  001BAA                     
  3428                           ;lcd.c: 78:     digitalWrite(PIN_E1, 1);
  3429  001BAA  0E00               	movlw	0
  3430  001BAC  6E21               	movwf	(digitalWrite@pin+1)^0,c
  3431  001BAE  0E21               	movlw	33
  3432  001BB0  6E20               	movwf	digitalWrite@pin^0,c
  3433  001BB2  0E00               	movlw	0
  3434  001BB4  6E23               	movwf	(digitalWrite@value+1)^0,c
  3435  001BB6  0E01               	movlw	1
  3436  001BB8  6E22               	movwf	digitalWrite@value^0,c
  3437  001BBA  ECBD  F005         	call	_digitalWrite	;wreg free
  3438  001BBE                     
  3439                           ;lcd.c: 79:     digitalWrite(PIN_E1, 0);
  3440  001BBE  0E00               	movlw	0
  3441  001BC0  6E21               	movwf	(digitalWrite@pin+1)^0,c
  3442  001BC2  0E21               	movlw	33
  3443  001BC4  6E20               	movwf	digitalWrite@pin^0,c
  3444  001BC6  0E00               	movlw	0
  3445  001BC8  6E23               	movwf	(digitalWrite@value+1)^0,c
  3446  001BCA  0E00               	movlw	0
  3447  001BCC  6E22               	movwf	digitalWrite@value^0,c
  3448  001BCE  ECBD  F005         	call	_digitalWrite	;wreg free
  3449  001BD2                     
  3450                           ;lcd.c: 81:     PORTD = old_D;
  3451  001BD2  C027  FF83         	movff	lcdData@old_D,3971	;volatile
  3452  001BD6                     
  3453                           ;lcd.c: 83:     Delay40us();
  3454  001BD6  EC5E  F00E         	call	_Delay40us	;wreg free
  3455  001BDA  0012               	return		;funcret
  3456  001BDC                     __end_of_lcdData:
  3457                           	callstack 0
  3458                           
  3459 ;; *************** function _lcdPosition *****************
  3460 ;; Defined at:
  3461 ;;		line 115 in file "lcd.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  linha           1    wreg     unsigned char 
  3464 ;;  coluna          1    8[COMRAM] unsigned char 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  linha           1    9[COMRAM] unsigned char 
  3467 ;;  comando         1   10[COMRAM] unsigned char 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      void 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2, status,0, cstack
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3477 ;;      Params:         1       0       0       0       0       0       0
  3478 ;;      Locals:         2       0       0       0       0       0       0
  3479 ;;      Temps:          0       0       0       0       0       0       0
  3480 ;;      Totals:         3       0       0       0       0       0       0
  3481 ;;Total ram usage:        3 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:    3
  3484 ;; This function calls:
  3485 ;;		_lcdCommand
  3486 ;; This function is called by:
  3487 ;;		_chooseSong
  3488 ;;		_playSong
  3489 ;;		_main
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           	psect	text19
  3494  001A80                     __ptext19:
  3495                           	callstack 0
  3496  001A80                     _lcdPosition:
  3497                           	callstack 27
  3498                           
  3499                           ;incstack = 0
  3500                           ;lcdPosition@linha stored from wreg
  3501  001A80  6E29               	movwf	lcdPosition@linha^0,c
  3502  001A82                     
  3503                           ;lcd.c: 116:     char comando = 0;
  3504  001A82  0E00               	movlw	0
  3505  001A84  6E2A               	movwf	lcdPosition@comando^0,c
  3506  001A86                     
  3507                           ;lcd.c: 117:     if (linha == 0 && comando != 0x01) comando = 0x80 + coluna;
  3508  001A86  5029               	movf	lcdPosition@linha^0,w,c
  3509  001A88  A4D8               	btfss	status,2,c
  3510  001A8A  EF49  F00D         	goto	u1721
  3511  001A8E  EF4B  F00D         	goto	u1720
  3512  001A92                     u1721:
  3513  001A92  EF4E  F00D         	goto	l120
  3514  001A96                     u1720:
  3515  001A96  5028               	movf	lcdPosition@coluna^0,w,c
  3516  001A98  0F80               	addlw	128
  3517  001A9A  6E2A               	movwf	lcdPosition@comando^0,c
  3518  001A9C                     l120:
  3519                           
  3520                           ;lcd.c: 118:     if (linha == 1 && comando != 0x01) comando = 0xC0 + coluna;
  3521  001A9C  0429               	decf	lcdPosition@linha^0,w,c
  3522  001A9E  A4D8               	btfss	status,2,c
  3523  001AA0  EF54  F00D         	goto	u1731
  3524  001AA4  EF56  F00D         	goto	u1730
  3525  001AA8                     u1731:
  3526  001AA8  EF61  F00D         	goto	l121
  3527  001AAC                     u1730:
  3528  001AAC  042A               	decf	lcdPosition@comando^0,w,c
  3529  001AAE  B4D8               	btfsc	status,2,c
  3530  001AB0  EF5C  F00D         	goto	u1741
  3531  001AB4  EF5E  F00D         	goto	u1740
  3532  001AB8                     u1741:
  3533  001AB8  EF61  F00D         	goto	l121
  3534  001ABC                     u1740:
  3535  001ABC  5028               	movf	lcdPosition@coluna^0,w,c
  3536  001ABE  0FC0               	addlw	192
  3537  001AC0  6E2A               	movwf	lcdPosition@comando^0,c
  3538  001AC2                     l121:
  3539                           
  3540                           ;lcd.c: 119:     if (coluna > 15) {
  3541  001AC2  0E0F               	movlw	15
  3542  001AC4  6428               	cpfsgt	lcdPosition@coluna^0,c
  3543  001AC6  EF67  F00D         	goto	u1751
  3544  001ACA  EF69  F00D         	goto	u1750
  3545  001ACE                     u1751:
  3546  001ACE  EF69  F00D         	goto	l2173
  3547  001AD2                     u1750:
  3548  001AD2                     l2173:
  3549                           
  3550                           ;lcd.c: 125:     lcdCommand(comando);
  3551  001AD2  502A               	movf	lcdPosition@comando^0,w,c
  3552  001AD4  ECB6  F00B         	call	_lcdCommand
  3553  001AD8  0012               	return		;funcret
  3554  001ADA                     __end_of_lcdPosition:
  3555                           	callstack 0
  3556                           
  3557 ;; *************** function _lcdCommand *****************
  3558 ;; Defined at:
  3559 ;;		line 43 in file "lcd.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  cmd             1    wreg     unsigned char 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  cmd             1    7[COMRAM] unsigned char 
  3564 ;;  old_D           1    6[COMRAM] unsigned char 
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  1    wreg      void 
  3567 ;; Registers used:
  3568 ;;		wreg, status,2, status,0, cstack
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3574 ;;      Params:         0       0       0       0       0       0       0
  3575 ;;      Locals:         2       0       0       0       0       0       0
  3576 ;;      Temps:          0       0       0       0       0       0       0
  3577 ;;      Totals:         2       0       0       0       0       0       0
  3578 ;;Total ram usage:        2 bytes
  3579 ;; Hardware stack levels used:    1
  3580 ;; Hardware stack levels required when called:    2
  3581 ;; This function calls:
  3582 ;;		_Delay2ms
  3583 ;;		_Delay40us
  3584 ;;		_digitalWrite
  3585 ;; This function is called by:
  3586 ;;		_lcdInit
  3587 ;;		_lcdPosition
  3588 ;;		_chooseSong
  3589 ;;		_playSong
  3590 ;;		_main
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           	psect	text20
  3595  00176C                     __ptext20:
  3596                           	callstack 0
  3597  00176C                     _lcdCommand:
  3598                           	callstack 27
  3599                           
  3600                           ;incstack = 0
  3601                           ;lcdCommand@cmd stored from wreg
  3602  00176C  6E27               	movwf	lcdCommand@cmd^0,c
  3603  00176E                     
  3604                           ;lcd.c: 44:     unsigned char old_D;;lcd.c: 45:     old_D = PORTD;
  3605  00176E  CF83 F026          	movff	3971,lcdCommand@old_D	;volatile
  3606  001772                     
  3607                           ;lcd.c: 48:     TRISD = 0x00;
  3608  001772  0E00               	movlw	0
  3609  001774  6E95               	movwf	149,c	;volatile
  3610  001776                     
  3611                           ;lcd.c: 50:     digitalWrite(PIN_E2, 0);
  3612  001776  0E00               	movlw	0
  3613  001778  6E21               	movwf	(digitalWrite@pin+1)^0,c
  3614  00177A  0E22               	movlw	34
  3615  00177C  6E20               	movwf	digitalWrite@pin^0,c
  3616  00177E  0E00               	movlw	0
  3617  001780  6E23               	movwf	(digitalWrite@value+1)^0,c
  3618  001782  0E00               	movlw	0
  3619  001784  6E22               	movwf	digitalWrite@value^0,c
  3620  001786  ECBD  F005         	call	_digitalWrite	;wreg free
  3621  00178A                     
  3622                           ;lcd.c: 51:     PORTD = cmd;
  3623  00178A  C027  FF83         	movff	lcdCommand@cmd,3971	;volatile
  3624  00178E                     
  3625                           ;lcd.c: 53:     digitalWrite(PIN_E1, 1);
  3626  00178E  0E00               	movlw	0
  3627  001790  6E21               	movwf	(digitalWrite@pin+1)^0,c
  3628  001792  0E21               	movlw	33
  3629  001794  6E20               	movwf	digitalWrite@pin^0,c
  3630  001796  0E00               	movlw	0
  3631  001798  6E23               	movwf	(digitalWrite@value+1)^0,c
  3632  00179A  0E01               	movlw	1
  3633  00179C  6E22               	movwf	digitalWrite@value^0,c
  3634  00179E  ECBD  F005         	call	_digitalWrite	;wreg free
  3635  0017A2                     
  3636                           ;lcd.c: 54:     digitalWrite(PIN_E1, 0);
  3637  0017A2  0E00               	movlw	0
  3638  0017A4  6E21               	movwf	(digitalWrite@pin+1)^0,c
  3639  0017A6  0E21               	movlw	33
  3640  0017A8  6E20               	movwf	digitalWrite@pin^0,c
  3641  0017AA  0E00               	movlw	0
  3642  0017AC  6E23               	movwf	(digitalWrite@value+1)^0,c
  3643  0017AE  0E00               	movlw	0
  3644  0017B0  6E22               	movwf	digitalWrite@value^0,c
  3645  0017B2  ECBD  F005         	call	_digitalWrite	;wreg free
  3646  0017B6                     
  3647                           ;lcd.c: 57:     PORTD = old_D;
  3648  0017B6  C026  FF83         	movff	lcdCommand@old_D,3971	;volatile
  3649  0017BA                     
  3650                           ;lcd.c: 59:     if ((cmd == 0x02) || (cmd == 0x01)) {
  3651  0017BA  0E02               	movlw	2
  3652  0017BC  1827               	xorwf	lcdCommand@cmd^0,w,c
  3653  0017BE  B4D8               	btfsc	status,2,c
  3654  0017C0  EFE4  F00B         	goto	u1671
  3655  0017C4  EFE6  F00B         	goto	u1670
  3656  0017C8                     u1671:
  3657  0017C8  EFEE  F00B         	goto	l2107
  3658  0017CC                     u1670:
  3659  0017CC  0427               	decf	lcdCommand@cmd^0,w,c
  3660  0017CE  A4D8               	btfss	status,2,c
  3661  0017D0  EFEC  F00B         	goto	u1681
  3662  0017D4  EFEE  F00B         	goto	u1680
  3663  0017D8                     u1681:
  3664  0017D8  EFF2  F00B         	goto	l2109
  3665  0017DC                     u1680:
  3666  0017DC                     l2107:
  3667                           
  3668                           ;lcd.c: 60:         Delay2ms();
  3669  0017DC  EC43  F00E         	call	_Delay2ms	;wreg free
  3670                           
  3671                           ;lcd.c: 61:     } else {
  3672  0017E0  EFF4  F00B         	goto	l111
  3673  0017E4                     l2109:
  3674                           
  3675                           ;lcd.c: 62:         Delay40us();
  3676  0017E4  EC5E  F00E         	call	_Delay40us	;wreg free
  3677  0017E8                     l111:
  3678  0017E8  0012               	return		;funcret
  3679  0017EA                     __end_of_lcdCommand:
  3680                           	callstack 0
  3681                           
  3682 ;; *************** function _digitalWrite *****************
  3683 ;; Defined at:
  3684 ;;		line 14 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;  pin             2    0[COMRAM] int 
  3687 ;;  value           2    2[COMRAM] int 
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;		None
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      void 
  3692 ;; Registers used:
  3693 ;;		wreg, status,2, status,0
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3699 ;;      Params:         4       0       0       0       0       0       0
  3700 ;;      Locals:         0       0       0       0       0       0       0
  3701 ;;      Temps:          2       0       0       0       0       0       0
  3702 ;;      Totals:         6       0       0       0       0       0       0
  3703 ;;Total ram usage:        6 bytes
  3704 ;; Hardware stack levels used:    1
  3705 ;; This function calls:
  3706 ;;		Nothing
  3707 ;; This function is called by:
  3708 ;;		_lcdCommand
  3709 ;;		_lcdData
  3710 ;;		_ssdUpdate
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           	psect	text21
  3715  000B7A                     __ptext21:
  3716                           	callstack 0
  3717  000B7A                     _digitalWrite:
  3718                           	callstack 28
  3719  000B7A                     
  3720                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 16:     if(pin <8){
  3721  000B7A  BE21               	btfsc	(digitalWrite@pin+1)^0,7,c
  3722  000B7C  EFCB  F005         	goto	u1370
  3723  000B80  5021               	movf	(digitalWrite@pin+1)^0,w,c
  3724  000B82  E107               	bnz	u1371
  3725  000B84  0E08               	movlw	8
  3726  000B86  5C20               	subwf	digitalWrite@pin^0,w,c
  3727  000B88  B0D8               	btfsc	status,0,c
  3728  000B8A  EFC9  F005         	goto	u1371
  3729  000B8E  EFCB  F005         	goto	u1370
  3730  000B92                     u1371:
  3731  000B92  EFF5  F005         	goto	l1975
  3732  000B96                     u1370:
  3733  000B96                     
  3734                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 17:         if (value){ ((PORTA) |=
      +                           (1<<(pin)));}
  3735  000B96  5022               	movf	digitalWrite@value^0,w,c
  3736  000B98  1023               	iorwf	(digitalWrite@value+1)^0,w,c
  3737  000B9A  B4D8               	btfsc	status,2,c
  3738  000B9C  EFD2  F005         	goto	u1381
  3739  000BA0  EFD4  F005         	goto	u1380
  3740  000BA4                     u1381:
  3741  000BA4  EFE4  F005         	goto	l1973
  3742  000BA8                     u1380:
  3743  000BA8  C020  F024         	movff	digitalWrite@pin,??_digitalWrite
  3744  000BAC  0E01               	movlw	1
  3745  000BAE  6E25               	movwf	(??_digitalWrite+1)^0,c
  3746  000BB0  2A24               	incf	??_digitalWrite^0,f,c
  3747  000BB2  EFDD  F005         	goto	u1394
  3748  000BB6                     u1395:
  3749  000BB6  90D8               	bcf	status,0,c
  3750  000BB8  3625               	rlcf	(??_digitalWrite+1)^0,f,c
  3751  000BBA                     u1394:
  3752  000BBA  2E24               	decfsz	??_digitalWrite^0,f,c
  3753  000BBC  EFDB  F005         	goto	u1395
  3754  000BC0  5025               	movf	(??_digitalWrite+1)^0,w,c
  3755  000BC2  1280               	iorwf	128,f,c	;volatile
  3756  000BC4  EFE3  F006         	goto	l42
  3757  000BC8                     l1973:
  3758  000BC8  C020  F024         	movff	digitalWrite@pin,??_digitalWrite
  3759  000BCC  0E01               	movlw	1
  3760  000BCE  6E25               	movwf	(??_digitalWrite+1)^0,c
  3761  000BD0  2A24               	incf	??_digitalWrite^0,f,c
  3762  000BD2  EFED  F005         	goto	u1404
  3763  000BD6                     u1405:
  3764  000BD6  90D8               	bcf	status,0,c
  3765  000BD8  3625               	rlcf	(??_digitalWrite+1)^0,f,c
  3766  000BDA                     u1404:
  3767  000BDA  2E24               	decfsz	??_digitalWrite^0,f,c
  3768  000BDC  EFEB  F005         	goto	u1405
  3769  000BE0  5025               	movf	(??_digitalWrite+1)^0,w,c
  3770  000BE2  0AFF               	xorlw	255
  3771  000BE4  1680               	andwf	128,f,c	;volatile
  3772  000BE6  EFE3  F006         	goto	l42
  3773  000BEA                     l1975:
  3774  000BEA  BE21               	btfsc	(digitalWrite@pin+1)^0,7,c
  3775  000BEC  EF03  F006         	goto	u1410
  3776  000BF0  5021               	movf	(digitalWrite@pin+1)^0,w,c
  3777  000BF2  E107               	bnz	u1411
  3778  000BF4  0E10               	movlw	16
  3779  000BF6  5C20               	subwf	digitalWrite@pin^0,w,c
  3780  000BF8  B0D8               	btfsc	status,0,c
  3781  000BFA  EF01  F006         	goto	u1411
  3782  000BFE  EF03  F006         	goto	u1410
  3783  000C02                     u1411:
  3784  000C02  EF31  F006         	goto	l1983
  3785  000C06                     u1410:
  3786  000C06                     
  3787                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 20:         pin -=8;
  3788  000C06  0EF8               	movlw	248
  3789  000C08  2620               	addwf	digitalWrite@pin^0,f,c
  3790  000C0A  0EFF               	movlw	255
  3791  000C0C  2221               	addwfc	(digitalWrite@pin+1)^0,f,c
  3792                           
  3793                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 21:         if (value){ ((PORTB) |=
      +                           (1<<(pin)));}
  3794  000C0E  5022               	movf	digitalWrite@value^0,w,c
  3795  000C10  1023               	iorwf	(digitalWrite@value+1)^0,w,c
  3796  000C12  B4D8               	btfsc	status,2,c
  3797  000C14  EF0E  F006         	goto	u1421
  3798  000C18  EF10  F006         	goto	u1420
  3799  000C1C                     u1421:
  3800  000C1C  EF20  F006         	goto	l1981
  3801  000C20                     u1420:
  3802  000C20  C020  F024         	movff	digitalWrite@pin,??_digitalWrite
  3803  000C24  0E01               	movlw	1
  3804  000C26  6E25               	movwf	(??_digitalWrite+1)^0,c
  3805  000C28  2A24               	incf	??_digitalWrite^0,f,c
  3806  000C2A  EF19  F006         	goto	u1434
  3807  000C2E                     u1435:
  3808  000C2E  90D8               	bcf	status,0,c
  3809  000C30  3625               	rlcf	(??_digitalWrite+1)^0,f,c
  3810  000C32                     u1434:
  3811  000C32  2E24               	decfsz	??_digitalWrite^0,f,c
  3812  000C34  EF17  F006         	goto	u1435
  3813  000C38  5025               	movf	(??_digitalWrite+1)^0,w,c
  3814  000C3A  1281               	iorwf	129,f,c	;volatile
  3815  000C3C  EFE3  F006         	goto	l42
  3816  000C40                     l1981:
  3817  000C40  C020  F024         	movff	digitalWrite@pin,??_digitalWrite
  3818  000C44  0E01               	movlw	1
  3819  000C46  6E25               	movwf	(??_digitalWrite+1)^0,c
  3820  000C48  2A24               	incf	??_digitalWrite^0,f,c
  3821  000C4A  EF29  F006         	goto	u1444
  3822  000C4E                     u1445:
  3823  000C4E  90D8               	bcf	status,0,c
  3824  000C50  3625               	rlcf	(??_digitalWrite+1)^0,f,c
  3825  000C52                     u1444:
  3826  000C52  2E24               	decfsz	??_digitalWrite^0,f,c
  3827  000C54  EF27  F006         	goto	u1445
  3828  000C58  5025               	movf	(??_digitalWrite+1)^0,w,c
  3829  000C5A  0AFF               	xorlw	255
  3830  000C5C  1681               	andwf	129,f,c	;volatile
  3831  000C5E  EFE3  F006         	goto	l42
  3832  000C62                     l1983:
  3833  000C62  BE21               	btfsc	(digitalWrite@pin+1)^0,7,c
  3834  000C64  EF3F  F006         	goto	u1450
  3835  000C68  5021               	movf	(digitalWrite@pin+1)^0,w,c
  3836  000C6A  E107               	bnz	u1451
  3837  000C6C  0E18               	movlw	24
  3838  000C6E  5C20               	subwf	digitalWrite@pin^0,w,c
  3839  000C70  B0D8               	btfsc	status,0,c
  3840  000C72  EF3D  F006         	goto	u1451
  3841  000C76  EF3F  F006         	goto	u1450
  3842  000C7A                     u1451:
  3843  000C7A  EF6D  F006         	goto	l1991
  3844  000C7E                     u1450:
  3845  000C7E                     
  3846                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 24:         pin -=16;
  3847  000C7E  0EF0               	movlw	240
  3848  000C80  2620               	addwf	digitalWrite@pin^0,f,c
  3849  000C82  0EFF               	movlw	255
  3850  000C84  2221               	addwfc	(digitalWrite@pin+1)^0,f,c
  3851                           
  3852                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 25:         if (value){ ((PORTC) |=
      +                           (1<<(pin)));}
  3853  000C86  5022               	movf	digitalWrite@value^0,w,c
  3854  000C88  1023               	iorwf	(digitalWrite@value+1)^0,w,c
  3855  000C8A  B4D8               	btfsc	status,2,c
  3856  000C8C  EF4A  F006         	goto	u1461
  3857  000C90  EF4C  F006         	goto	u1460
  3858  000C94                     u1461:
  3859  000C94  EF5C  F006         	goto	l1989
  3860  000C98                     u1460:
  3861  000C98  C020  F024         	movff	digitalWrite@pin,??_digitalWrite
  3862  000C9C  0E01               	movlw	1
  3863  000C9E  6E25               	movwf	(??_digitalWrite+1)^0,c
  3864  000CA0  2A24               	incf	??_digitalWrite^0,f,c
  3865  000CA2  EF55  F006         	goto	u1474
  3866  000CA6                     u1475:
  3867  000CA6  90D8               	bcf	status,0,c
  3868  000CA8  3625               	rlcf	(??_digitalWrite+1)^0,f,c
  3869  000CAA                     u1474:
  3870  000CAA  2E24               	decfsz	??_digitalWrite^0,f,c
  3871  000CAC  EF53  F006         	goto	u1475
  3872  000CB0  5025               	movf	(??_digitalWrite+1)^0,w,c
  3873  000CB2  1282               	iorwf	130,f,c	;volatile
  3874  000CB4  EFE3  F006         	goto	l42
  3875  000CB8                     l1989:
  3876  000CB8  C020  F024         	movff	digitalWrite@pin,??_digitalWrite
  3877  000CBC  0E01               	movlw	1
  3878  000CBE  6E25               	movwf	(??_digitalWrite+1)^0,c
  3879  000CC0  2A24               	incf	??_digitalWrite^0,f,c
  3880  000CC2  EF65  F006         	goto	u1484
  3881  000CC6                     u1485:
  3882  000CC6  90D8               	bcf	status,0,c
  3883  000CC8  3625               	rlcf	(??_digitalWrite+1)^0,f,c
  3884  000CCA                     u1484:
  3885  000CCA  2E24               	decfsz	??_digitalWrite^0,f,c
  3886  000CCC  EF63  F006         	goto	u1485
  3887  000CD0  5025               	movf	(??_digitalWrite+1)^0,w,c
  3888  000CD2  0AFF               	xorlw	255
  3889  000CD4  1682               	andwf	130,f,c	;volatile
  3890  000CD6  EFE3  F006         	goto	l42
  3891  000CDA                     l1991:
  3892  000CDA  BE21               	btfsc	(digitalWrite@pin+1)^0,7,c
  3893  000CDC  EF7B  F006         	goto	u1490
  3894  000CE0  5021               	movf	(digitalWrite@pin+1)^0,w,c
  3895  000CE2  E107               	bnz	u1491
  3896  000CE4  0E20               	movlw	32
  3897  000CE6  5C20               	subwf	digitalWrite@pin^0,w,c
  3898  000CE8  B0D8               	btfsc	status,0,c
  3899  000CEA  EF79  F006         	goto	u1491
  3900  000CEE  EF7B  F006         	goto	u1490
  3901  000CF2                     u1491:
  3902  000CF2  EFA9  F006         	goto	l1999
  3903  000CF6                     u1490:
  3904  000CF6                     
  3905                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 28:         pin -=24;
  3906  000CF6  0EE8               	movlw	232
  3907  000CF8  2620               	addwf	digitalWrite@pin^0,f,c
  3908  000CFA  0EFF               	movlw	255
  3909  000CFC  2221               	addwfc	(digitalWrite@pin+1)^0,f,c
  3910                           
  3911                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 29:         if (value){ ((PORTD) |=
      +                           (1<<(pin)));}
  3912  000CFE  5022               	movf	digitalWrite@value^0,w,c
  3913  000D00  1023               	iorwf	(digitalWrite@value+1)^0,w,c
  3914  000D02  B4D8               	btfsc	status,2,c
  3915  000D04  EF86  F006         	goto	u1501
  3916  000D08  EF88  F006         	goto	u1500
  3917  000D0C                     u1501:
  3918  000D0C  EF98  F006         	goto	l1997
  3919  000D10                     u1500:
  3920  000D10  C020  F024         	movff	digitalWrite@pin,??_digitalWrite
  3921  000D14  0E01               	movlw	1
  3922  000D16  6E25               	movwf	(??_digitalWrite+1)^0,c
  3923  000D18  2A24               	incf	??_digitalWrite^0,f,c
  3924  000D1A  EF91  F006         	goto	u1514
  3925  000D1E                     u1515:
  3926  000D1E  90D8               	bcf	status,0,c
  3927  000D20  3625               	rlcf	(??_digitalWrite+1)^0,f,c
  3928  000D22                     u1514:
  3929  000D22  2E24               	decfsz	??_digitalWrite^0,f,c
  3930  000D24  EF8F  F006         	goto	u1515
  3931  000D28  5025               	movf	(??_digitalWrite+1)^0,w,c
  3932  000D2A  1283               	iorwf	131,f,c	;volatile
  3933  000D2C  EFE3  F006         	goto	l42
  3934  000D30                     l1997:
  3935  000D30  C020  F024         	movff	digitalWrite@pin,??_digitalWrite
  3936  000D34  0E01               	movlw	1
  3937  000D36  6E25               	movwf	(??_digitalWrite+1)^0,c
  3938  000D38  2A24               	incf	??_digitalWrite^0,f,c
  3939  000D3A  EFA1  F006         	goto	u1524
  3940  000D3E                     u1525:
  3941  000D3E  90D8               	bcf	status,0,c
  3942  000D40  3625               	rlcf	(??_digitalWrite+1)^0,f,c
  3943  000D42                     u1524:
  3944  000D42  2E24               	decfsz	??_digitalWrite^0,f,c
  3945  000D44  EF9F  F006         	goto	u1525
  3946  000D48  5025               	movf	(??_digitalWrite+1)^0,w,c
  3947  000D4A  0AFF               	xorlw	255
  3948  000D4C  1683               	andwf	131,f,c	;volatile
  3949  000D4E  EFE3  F006         	goto	l42
  3950  000D52                     l1999:
  3951  000D52  BE21               	btfsc	(digitalWrite@pin+1)^0,7,c
  3952  000D54  EFB7  F006         	goto	u1530
  3953  000D58  5021               	movf	(digitalWrite@pin+1)^0,w,c
  3954  000D5A  E107               	bnz	u1531
  3955  000D5C  0E28               	movlw	40
  3956  000D5E  5C20               	subwf	digitalWrite@pin^0,w,c
  3957  000D60  B0D8               	btfsc	status,0,c
  3958  000D62  EFB5  F006         	goto	u1531
  3959  000D66  EFB7  F006         	goto	u1530
  3960  000D6A                     u1531:
  3961  000D6A  EFE3  F006         	goto	l42
  3962  000D6E                     u1530:
  3963  000D6E                     
  3964                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 32:         pin -=32;
  3965  000D6E  0EE0               	movlw	224
  3966  000D70  2620               	addwf	digitalWrite@pin^0,f,c
  3967  000D72  0EFF               	movlw	255
  3968  000D74  2221               	addwfc	(digitalWrite@pin+1)^0,f,c
  3969                           
  3970                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/io.c: 33:         if (value){ ((PORTE) |=
      +                           (1<<(pin)));}
  3971  000D76  5022               	movf	digitalWrite@value^0,w,c
  3972  000D78  1023               	iorwf	(digitalWrite@value+1)^0,w,c
  3973  000D7A  B4D8               	btfsc	status,2,c
  3974  000D7C  EFC2  F006         	goto	u1541
  3975  000D80  EFC4  F006         	goto	u1540
  3976  000D84                     u1541:
  3977  000D84  EFD4  F006         	goto	l2005
  3978  000D88                     u1540:
  3979  000D88  C020  F024         	movff	digitalWrite@pin,??_digitalWrite
  3980  000D8C  0E01               	movlw	1
  3981  000D8E  6E25               	movwf	(??_digitalWrite+1)^0,c
  3982  000D90  2A24               	incf	??_digitalWrite^0,f,c
  3983  000D92  EFCD  F006         	goto	u1554
  3984  000D96                     u1555:
  3985  000D96  90D8               	bcf	status,0,c
  3986  000D98  3625               	rlcf	(??_digitalWrite+1)^0,f,c
  3987  000D9A                     u1554:
  3988  000D9A  2E24               	decfsz	??_digitalWrite^0,f,c
  3989  000D9C  EFCB  F006         	goto	u1555
  3990  000DA0  5025               	movf	(??_digitalWrite+1)^0,w,c
  3991  000DA2  1284               	iorwf	132,f,c	;volatile
  3992  000DA4  EFE3  F006         	goto	l42
  3993  000DA8                     l2005:
  3994  000DA8  C020  F024         	movff	digitalWrite@pin,??_digitalWrite
  3995  000DAC  0E01               	movlw	1
  3996  000DAE  6E25               	movwf	(??_digitalWrite+1)^0,c
  3997  000DB0  2A24               	incf	??_digitalWrite^0,f,c
  3998  000DB2  EFDD  F006         	goto	u1564
  3999  000DB6                     u1565:
  4000  000DB6  90D8               	bcf	status,0,c
  4001  000DB8  3625               	rlcf	(??_digitalWrite+1)^0,f,c
  4002  000DBA                     u1564:
  4003  000DBA  2E24               	decfsz	??_digitalWrite^0,f,c
  4004  000DBC  EFDB  F006         	goto	u1565
  4005  000DC0  5025               	movf	(??_digitalWrite+1)^0,w,c
  4006  000DC2  0AFF               	xorlw	255
  4007  000DC4  1684               	andwf	132,f,c	;volatile
  4008  000DC6                     l42:
  4009  000DC6  0012               	return		;funcret
  4010  000DC8                     __end_of_digitalWrite:
  4011                           	callstack 0
  4012                           
  4013 ;; *************** function _Delay2ms *****************
  4014 ;; Defined at:
  4015 ;;		line 36 in file "lcd.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;		None
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;  i               1    1[COMRAM] unsigned char 
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  1    wreg      void 
  4022 ;; Registers used:
  4023 ;;		wreg, status,2, status,0, cstack
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4029 ;;      Params:         0       0       0       0       0       0       0
  4030 ;;      Locals:         1       0       0       0       0       0       0
  4031 ;;      Temps:          0       0       0       0       0       0       0
  4032 ;;      Totals:         1       0       0       0       0       0       0
  4033 ;;Total ram usage:        1 bytes
  4034 ;; Hardware stack levels used:    1
  4035 ;; Hardware stack levels required when called:    1
  4036 ;; This function calls:
  4037 ;;		_Delay40us
  4038 ;; This function is called by:
  4039 ;;		_lcdCommand
  4040 ;;		_lcdInit
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           	psect	text22
  4045  001C86                     __ptext22:
  4046                           	callstack 0
  4047  001C86                     _Delay2ms:
  4048                           	callstack 27
  4049  001C86                     
  4050                           ;lcd.c: 37:     unsigned char i;;lcd.c: 38:     for (i = 0; i < 50; i++) {
  4051  001C86  0E00               	movlw	0
  4052  001C88  6E21               	movwf	Delay2ms@i^0,c
  4053  001C8A                     l2013:
  4054                           
  4055                           ;lcd.c: 39:         Delay40us();
  4056  001C8A  EC5E  F00E         	call	_Delay40us	;wreg free
  4057  001C8E                     
  4058                           ;lcd.c: 40:     }
  4059  001C8E  2A21               	incf	Delay2ms@i^0,f,c
  4060  001C90  0E31               	movlw	49
  4061  001C92  6421               	cpfsgt	Delay2ms@i^0,c
  4062  001C94  EF4E  F00E         	goto	u1571
  4063  001C98  EF50  F00E         	goto	u1570
  4064  001C9C                     u1571:
  4065  001C9C  EF45  F00E         	goto	l2013
  4066  001CA0                     u1570:
  4067  001CA0  0012               	return		;funcret
  4068  001CA2                     __end_of_Delay2ms:
  4069                           	callstack 0
  4070                           
  4071 ;; *************** function _Delay40us *****************
  4072 ;; Defined at:
  4073 ;;		line 31 in file "lcd.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;		None
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;  i               1    0[COMRAM] unsigned char 
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1    wreg      void 
  4080 ;; Registers used:
  4081 ;;		wreg, status,2, status,0
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4087 ;;      Params:         0       0       0       0       0       0       0
  4088 ;;      Locals:         1       0       0       0       0       0       0
  4089 ;;      Temps:          0       0       0       0       0       0       0
  4090 ;;      Totals:         1       0       0       0       0       0       0
  4091 ;;Total ram usage:        1 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; This function calls:
  4094 ;;		Nothing
  4095 ;; This function is called by:
  4096 ;;		_Delay2ms
  4097 ;;		_lcdCommand
  4098 ;;		_lcdData
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           	psect	text23
  4103  001CBC                     __ptext23:
  4104                           	callstack 0
  4105  001CBC                     _Delay40us:
  4106                           	callstack 28
  4107  001CBC                     
  4108                           ;lcd.c: 32:     unsigned char i;;lcd.c: 33:     for (i = 0; i < 25; i++);
  4109  001CBC  0E00               	movlw	0
  4110  001CBE  6E20               	movwf	Delay40us@i^0,c
  4111  001CC0                     l1963:
  4112  001CC0  2A20               	incf	Delay40us@i^0,f,c
  4113  001CC2  0E18               	movlw	24
  4114  001CC4  6420               	cpfsgt	Delay40us@i^0,c
  4115  001CC6  EF67  F00E         	goto	u1361
  4116  001CCA  EF69  F00E         	goto	u1360
  4117  001CCE                     u1361:
  4118  001CCE  EF60  F00E         	goto	l1963
  4119  001CD2                     u1360:
  4120  001CD2  0012               	return		;funcret
  4121  001CD4                     __end_of_Delay40us:
  4122                           	callstack 0
  4123                           
  4124 ;; *************** function _kpRead *****************
  4125 ;; Defined at:
  4126 ;;		line 37 in file "keypad.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;		None
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;		None
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  2    0[COMRAM] unsigned int 
  4133 ;; Registers used:
  4134 ;;		None
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4140 ;;      Params:         2       0       0       0       0       0       0
  4141 ;;      Locals:         0       0       0       0       0       0       0
  4142 ;;      Temps:          0       0       0       0       0       0       0
  4143 ;;      Totals:         2       0       0       0       0       0       0
  4144 ;;Total ram usage:        2 bytes
  4145 ;; Hardware stack levels used:    1
  4146 ;; This function calls:
  4147 ;;		Nothing
  4148 ;; This function is called by:
  4149 ;;		_chooseSong
  4150 ;;		_playSong
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           	psect	text24
  4155  001CDE                     __ptext24:
  4156                           	callstack 0
  4157  001CDE                     _kpRead:
  4158                           	callstack 28
  4159  001CDE                     
  4160                           ;keypad.c: 38:     return valor;
  4161  001CDE  C03B  F020         	movff	_valor@keypad$F261,?_kpRead
  4162  001CE2  C03C  F021         	movff	_valor@keypad$F261+1,?_kpRead+1
  4163  001CE6  0012               	return		;funcret
  4164  001CE8                     __end_of_kpRead:
  4165                           	callstack 0
  4166                           
  4167 ;; *************** function _kpDebounce *****************
  4168 ;; Defined at:
  4169 ;;		line 41 in file "keypad.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;		None
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;  k               2    6[COMRAM] int 
  4174 ;;  i               1    9[COMRAM] unsigned char 
  4175 ;;  j               1    8[COMRAM] unsigned char 
  4176 ;;  old_D           1    5[COMRAM] unsigned char 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      void 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0, prodl, prodh
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4186 ;;      Params:         0       0       0       0       0       0       0
  4187 ;;      Locals:         5       0       0       0       0       0       0
  4188 ;;      Temps:          5       0       0       0       0       0       0
  4189 ;;      Totals:        10       0       0       0       0       0       0
  4190 ;;Total ram usage:       10 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; This function calls:
  4193 ;;		Nothing
  4194 ;; This function is called by:
  4195 ;;		_chooseSong
  4196 ;;		_playSong
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           	psect	text25
  4201  000DC8                     __ptext25:
  4202                           	callstack 0
  4203  000DC8                     _kpDebounce:
  4204                           	callstack 28
  4205  000DC8                     
  4206                           ;keypad.c: 42:     unsigned char i, j;;keypad.c: 43:     static unsigned char tempo;;key
      +                          pad.c: 44:     static unsigned int valorNovo = 0x0000;;keypad.c: 45:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 48:     unsigned char old_D;;keypad.c: 49:     old_
      +                          D = PORTD;
  4207  000DC8  CF83 F025          	movff	3971,kpDebounce@old_D	;volatile
  4208  000DCC                     
  4209                           ;keypad.c: 53:     TRISD |= 0x0f;
  4210  000DCC  0E0F               	movlw	15
  4211  000DCE  1295               	iorwf	149,f,c	;volatile
  4212  000DD0                     
  4213                           ;keypad.c: 55:     for (i = 0; i < 3; i++) {
  4214  000DD0  0E00               	movlw	0
  4215  000DD2  6E29               	movwf	kpDebounce@i^0,c
  4216  000DD4                     l2193:
  4217                           
  4218                           ;keypad.c: 57:         TRISB &= 0xF8;
  4219  000DD4  0EF8               	movlw	248
  4220  000DD6  1693               	andwf	147,f,c	;volatile
  4221                           
  4222                           ;keypad.c: 59:         ((TRISB) |= (1<<(i)));
  4223  000DD8  C029  F020         	movff	kpDebounce@i,??_kpDebounce
  4224  000DDC  0E01               	movlw	1
  4225  000DDE  6E21               	movwf	(??_kpDebounce+1)^0,c
  4226  000DE0  2A20               	incf	??_kpDebounce^0,f,c
  4227  000DE2  EFF5  F006         	goto	u1794
  4228  000DE6                     u1795:
  4229  000DE6  90D8               	bcf	status,0,c
  4230  000DE8  3621               	rlcf	(??_kpDebounce+1)^0,f,c
  4231  000DEA                     u1794:
  4232  000DEA  2E20               	decfsz	??_kpDebounce^0,f,c
  4233  000DEC  EFF3  F006         	goto	u1795
  4234  000DF0  5021               	movf	(??_kpDebounce+1)^0,w,c
  4235  000DF2  1293               	iorwf	147,f,c	;volatile
  4236                           
  4237                           ;keypad.c: 61:         PORTB |= 0x07;
  4238  000DF4  0E07               	movlw	7
  4239  000DF6  1281               	iorwf	129,f,c	;volatile
  4240                           
  4241                           ;keypad.c: 62:         ((PORTB) &= ~(1<<(i)));
  4242  000DF8  C029  F020         	movff	kpDebounce@i,??_kpDebounce
  4243  000DFC  0E01               	movlw	1
  4244  000DFE  6E21               	movwf	(??_kpDebounce+1)^0,c
  4245  000E00  2A20               	incf	??_kpDebounce^0,f,c
  4246  000E02  EF05  F007         	goto	u1804
  4247  000E06                     u1805:
  4248  000E06  90D8               	bcf	status,0,c
  4249  000E08  3621               	rlcf	(??_kpDebounce+1)^0,f,c
  4250  000E0A                     u1804:
  4251  000E0A  2E20               	decfsz	??_kpDebounce^0,f,c
  4252  000E0C  EF03  F007         	goto	u1805
  4253  000E10  5021               	movf	(??_kpDebounce+1)^0,w,c
  4254  000E12  0AFF               	xorlw	255
  4255  000E14  1681               	andwf	129,f,c	;volatile
  4256  000E16                     
  4257                           ;keypad.c: 65:         for (int k = 0; k < 10; k++);
  4258  000E16  0E00               	movlw	0
  4259  000E18  6E27               	movwf	(kpDebounce@k+1)^0,c
  4260  000E1A  0E00               	movlw	0
  4261  000E1C  6E26               	movwf	kpDebounce@k^0,c
  4262  000E1E                     l2201:
  4263  000E1E  4A26               	infsnz	kpDebounce@k^0,f,c
  4264  000E20  2A27               	incf	(kpDebounce@k+1)^0,f,c
  4265  000E22  BE27               	btfsc	(kpDebounce@k+1)^0,7,c
  4266  000E24  EF1D  F007         	goto	u1811
  4267  000E28  5027               	movf	(kpDebounce@k+1)^0,w,c
  4268  000E2A  E109               	bnz	u1810
  4269  000E2C  0E0A               	movlw	10
  4270  000E2E  5C26               	subwf	kpDebounce@k^0,w,c
  4271  000E30  A0D8               	btfss	status,0,c
  4272  000E32  EF1D  F007         	goto	u1811
  4273  000E36  EF1F  F007         	goto	u1810
  4274  000E3A                     u1811:
  4275  000E3A  EF0F  F007         	goto	l2201
  4276  000E3E                     u1810:
  4277  000E3E                     
  4278                           ;keypad.c: 68:         for (j = 0; j < 4; j++) {
  4279  000E3E  0E00               	movlw	0
  4280  000E40  6E28               	movwf	kpDebounce@j^0,c
  4281  000E42                     l2211:
  4282                           
  4283                           ;keypad.c: 69:             if (!((PORTD) & (1<<(j)))) {
  4284  000E42  C028  F020         	movff	kpDebounce@j,??_kpDebounce
  4285  000E46  0E01               	movlw	1
  4286  000E48  6E21               	movwf	(??_kpDebounce+1)^0,c
  4287  000E4A  2A20               	incf	??_kpDebounce^0,f,c
  4288  000E4C  EF2A  F007         	goto	u1824
  4289  000E50                     u1825:
  4290  000E50  90D8               	bcf	status,0,c
  4291  000E52  3621               	rlcf	(??_kpDebounce+1)^0,f,c
  4292  000E54                     u1824:
  4293  000E54  2E20               	decfsz	??_kpDebounce^0,f,c
  4294  000E56  EF28  F007         	goto	u1825
  4295  000E5A  5021               	movf	(??_kpDebounce+1)^0,w,c
  4296  000E5C  1483               	andwf	131,w,c	;volatile
  4297  000E5E  0900               	iorlw	0
  4298  000E60  A4D8               	btfss	status,2,c
  4299  000E62  EF35  F007         	goto	u1831
  4300  000E66  EF37  F007         	goto	u1830
  4301  000E6A                     u1831:
  4302  000E6A  EF4F  F007         	goto	l2215
  4303  000E6E                     u1830:
  4304  000E6E                     
  4305                           ;keypad.c: 70:                 ((valorNovo) |= (1<<((i * 4) + j)));
  4306  000E6E  5029               	movf	kpDebounce@i^0,w,c
  4307  000E70  0D04               	mullw	4
  4308  000E72  50F3               	movf	243,w,c
  4309  000E74  2428               	addwf	kpDebounce@j^0,w,c
  4310  000E76  6E20               	movwf	??_kpDebounce^0,c
  4311  000E78  0E01               	movlw	1
  4312  000E7A  6E21               	movwf	(??_kpDebounce+1)^0,c
  4313  000E7C  0E00               	movlw	0
  4314  000E7E  6E22               	movwf	(??_kpDebounce+2)^0,c
  4315  000E80  2A20               	incf	??_kpDebounce^0,f,c
  4316  000E82  EF46  F007         	goto	u1844
  4317  000E86                     u1845:
  4318  000E86  90D8               	bcf	status,0,c
  4319  000E88  3621               	rlcf	(??_kpDebounce+1)^0,f,c
  4320  000E8A  3622               	rlcf	(??_kpDebounce+2)^0,f,c
  4321  000E8C                     u1844:
  4322  000E8C  2E20               	decfsz	??_kpDebounce^0,f,c
  4323  000E8E  EF43  F007         	goto	u1845
  4324  000E92  5021               	movf	(??_kpDebounce+1)^0,w,c
  4325  000E94  1239               	iorwf	kpDebounce@valorNovo^0,f,c
  4326  000E96  5022               	movf	(??_kpDebounce+2)^0,w,c
  4327  000E98  123A               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  4328                           
  4329                           ;keypad.c: 71:             } else {
  4330  000E9A  EF69  F007         	goto	l2217
  4331  000E9E                     l2215:
  4332                           
  4333                           ;keypad.c: 72:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  4334  000E9E  5029               	movf	kpDebounce@i^0,w,c
  4335  000EA0  0D04               	mullw	4
  4336  000EA2  50F3               	movf	243,w,c
  4337  000EA4  2428               	addwf	kpDebounce@j^0,w,c
  4338  000EA6  6E20               	movwf	??_kpDebounce^0,c
  4339  000EA8  0E01               	movlw	1
  4340  000EAA  6E21               	movwf	(??_kpDebounce+1)^0,c
  4341  000EAC  0E00               	movlw	0
  4342  000EAE  6E22               	movwf	(??_kpDebounce+2)^0,c
  4343  000EB0  2A20               	incf	??_kpDebounce^0,f,c
  4344  000EB2  EF5E  F007         	goto	u1854
  4345  000EB6                     u1855:
  4346  000EB6  90D8               	bcf	status,0,c
  4347  000EB8  3621               	rlcf	(??_kpDebounce+1)^0,f,c
  4348  000EBA  3622               	rlcf	(??_kpDebounce+2)^0,f,c
  4349  000EBC                     u1854:
  4350  000EBC  2E20               	decfsz	??_kpDebounce^0,f,c
  4351  000EBE  EF5B  F007         	goto	u1855
  4352  000EC2  1C21               	comf	(??_kpDebounce+1)^0,w,c
  4353  000EC4  6E23               	movwf	(??_kpDebounce+3)^0,c
  4354  000EC6  1C22               	comf	(??_kpDebounce+2)^0,w,c
  4355  000EC8  6E24               	movwf	(??_kpDebounce+4)^0,c
  4356  000ECA  5023               	movf	(??_kpDebounce+3)^0,w,c
  4357  000ECC  1639               	andwf	kpDebounce@valorNovo^0,f,c
  4358  000ECE  5024               	movf	(??_kpDebounce+4)^0,w,c
  4359  000ED0  163A               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  4360  000ED2                     l2217:
  4361                           
  4362                           ;keypad.c: 74:         }
  4363  000ED2  2A28               	incf	kpDebounce@j^0,f,c
  4364  000ED4  0E03               	movlw	3
  4365  000ED6  6428               	cpfsgt	kpDebounce@j^0,c
  4366  000ED8  EF70  F007         	goto	u1861
  4367  000EDC  EF72  F007         	goto	u1860
  4368  000EE0                     u1861:
  4369  000EE0  EF21  F007         	goto	l2211
  4370  000EE4                     u1860:
  4371  000EE4                     
  4372                           ;keypad.c: 75:     }
  4373  000EE4  2A29               	incf	kpDebounce@i^0,f,c
  4374  000EE6  0E02               	movlw	2
  4375  000EE8  6429               	cpfsgt	kpDebounce@i^0,c
  4376  000EEA  EF79  F007         	goto	u1871
  4377  000EEE  EF7B  F007         	goto	u1870
  4378  000EF2                     u1871:
  4379  000EF2  EFEA  F006         	goto	l2193
  4380  000EF6                     u1870:
  4381  000EF6                     
  4382                           ;keypad.c: 76:     if (valorAntigo == valorNovo) {
  4383  000EF6  5039               	movf	kpDebounce@valorNovo^0,w,c
  4384  000EF8  1837               	xorwf	kpDebounce@valorAntigo^0,w,c
  4385  000EFA  E107               	bnz	u1881
  4386  000EFC  503A               	movf	(kpDebounce@valorNovo+1)^0,w,c
  4387  000EFE  1838               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  4388  000F00  A4D8               	btfss	status,2,c
  4389  000F02  EF85  F007         	goto	u1881
  4390  000F06  EF87  F007         	goto	u1880
  4391  000F0A                     u1881:
  4392  000F0A  EF8A  F007         	goto	l2229
  4393  000F0E                     u1880:
  4394  000F0E                     
  4395                           ;keypad.c: 77:         tempo--;
  4396  000F0E  063D               	decf	kpDebounce@tempo^0,f,c
  4397                           
  4398                           ;keypad.c: 78:     } else {
  4399  000F10  EF90  F007         	goto	l349
  4400  000F14                     l2229:
  4401                           
  4402                           ;keypad.c: 79:         tempo = 10;
  4403  000F14  0E0A               	movlw	10
  4404  000F16  6E3D               	movwf	kpDebounce@tempo^0,c
  4405  000F18                     
  4406                           ;keypad.c: 80:         valorAntigo = valorNovo;
  4407  000F18  C039  F037         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  4408  000F1C  C03A  F038         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  4409  000F20                     l349:
  4410                           
  4411                           ;keypad.c: 82:     if (tempo == 0) {
  4412  000F20  503D               	movf	kpDebounce@tempo^0,w,c
  4413  000F22  A4D8               	btfss	status,2,c
  4414  000F24  EF96  F007         	goto	u1891
  4415  000F28  EF98  F007         	goto	u1890
  4416  000F2C                     u1891:
  4417  000F2C  EF9C  F007         	goto	l350
  4418  000F30                     u1890:
  4419  000F30                     
  4420                           ;keypad.c: 83:         valor = valorAntigo;
  4421  000F30  C037  F03B         	movff	kpDebounce@valorAntigo,_valor@keypad$F261
  4422  000F34  C038  F03C         	movff	kpDebounce@valorAntigo+1,_valor@keypad$F261+1
  4423  000F38                     l350:
  4424                           
  4425                           ;keypad.c: 85:     PORTD = old_D;
  4426  000F38  C025  FF83         	movff	kpDebounce@old_D,3971	;volatile
  4427  000F3C                     
  4428                           ;keypad.c: 86:     TRISD = 0x00;
  4429  000F3C  0E00               	movlw	0
  4430  000F3E  6E95               	movwf	149,c	;volatile
  4431  000F40  0012               	return		;funcret
  4432  000F42                     __end_of_kpDebounce:
  4433                           	callstack 0
  4434                           
  4435 ;; *************** function _alterarVolume *****************
  4436 ;; Defined at:
  4437 ;;		line 152 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  opt             1    wreg     unsigned char 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;  opt             1    6[COMRAM] unsigned char 
  4442 ;;  old_D           1    7[COMRAM] unsigned char 
  4443 ;;  old_A           1    0        unsigned char 
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  1    wreg      void 
  4446 ;; Registers used:
  4447 ;;		wreg, status,2, status,0, cstack
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4453 ;;      Params:         0       0       0       0       0       0       0
  4454 ;;      Locals:         2       0       0       0       0       0       0
  4455 ;;      Temps:          0       0       0       0       0       0       0
  4456 ;;      Totals:         2       0       0       0       0       0       0
  4457 ;;Total ram usage:        2 bytes
  4458 ;; Hardware stack levels used:    1
  4459 ;; Hardware stack levels required when called:    1
  4460 ;; This function calls:
  4461 ;;		_atraso_ms
  4462 ;; This function is called by:
  4463 ;;		_playSong
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467                           	psect	text26
  4468  0011D2                     __ptext26:
  4469                           	callstack 0
  4470  0011D2                     _alterarVolume:
  4471                           	callstack 27
  4472                           
  4473                           ;incstack = 0
  4474                           ;alterarVolume@opt stored from wreg
  4475  0011D2  6E26               	movwf	alterarVolume@opt^0,c
  4476  0011D4                     
  4477                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 153:     if (opt == 1) {
  4478  0011D4  0426               	decf	alterarVolume@opt^0,w,c
  4479  0011D6  A4D8               	btfss	status,2,c
  4480  0011D8  EFF0  F008         	goto	u1941
  4481  0011DC  EFF2  F008         	goto	u1940
  4482  0011E0                     u1941:
  4483  0011E0  EFFE  F008         	goto	l2325
  4484  0011E4                     u1940:
  4485  0011E4                     
  4486                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 154:         if(volume!=8){volum
      +                          e += 1;}
  4487  0011E4  0E08               	movlw	8
  4488  0011E6  181D               	xorwf	_volume^0,w,c
  4489  0011E8  B4D8               	btfsc	status,2,c
  4490  0011EA  EFF9  F008         	goto	u1951
  4491  0011EE  EFFB  F008         	goto	u1950
  4492  0011F2                     u1951:
  4493  0011F2  EF07  F009         	goto	l2329
  4494  0011F6                     u1950:
  4495  0011F6  2A1D               	incf	_volume^0,f,c
  4496  0011F8  EF07  F009         	goto	l2329
  4497  0011FC                     l2325:
  4498                           
  4499                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 156:         if(volume!=0){volum
      +                          e -= 1;}
  4500  0011FC  501D               	movf	_volume^0,w,c
  4501  0011FE  B4D8               	btfsc	status,2,c
  4502  001200  EF04  F009         	goto	u1961
  4503  001204  EF06  F009         	goto	u1960
  4504  001208                     u1961:
  4505  001208  EF07  F009         	goto	l2329
  4506  00120C                     u1960:
  4507  00120C  061D               	decf	_volume^0,f,c
  4508  00120E                     l2329:
  4509                           
  4510                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 158:     unsigned char old_D, ol
      +                          d_A;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 159:     old_D = TRISD;
  4511  00120E  CF95 F027          	movff	3989,alterarVolume@old_D	;volatile
  4512  001212                     
  4513                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 161:     PORTA=0x00;
  4514  001212  0E00               	movlw	0
  4515  001214  6E80               	movwf	128,c	;volatile
  4516  001216                     
  4517                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 162:     TRISD = 0x00;
  4518  001216  0E00               	movlw	0
  4519  001218  6E95               	movwf	149,c	;volatile
  4520  00121A                     
  4521                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 164:     if (volume == 0) {
  4522  00121A  501D               	movf	_volume^0,w,c
  4523  00121C  A4D8               	btfss	status,2,c
  4524  00121E  EF13  F009         	goto	u1971
  4525  001222  EF15  F009         	goto	u1970
  4526  001226                     u1971:
  4527  001226  EF19  F009         	goto	l2339
  4528  00122A                     u1970:
  4529  00122A                     
  4530                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 165:         PORTD = 0b00000000;
  4531  00122A  0E00               	movlw	0
  4532  00122C  6E83               	movwf	131,c	;volatile
  4533                           
  4534                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 166:     } else if (volume == 1)
      +                           {
  4535  00122E  EF7F  F009         	goto	l2371
  4536  001232                     l2339:
  4537  001232  041D               	decf	_volume^0,w,c
  4538  001234  A4D8               	btfss	status,2,c
  4539  001236  EF1F  F009         	goto	u1981
  4540  00123A  EF21  F009         	goto	u1980
  4541  00123E                     u1981:
  4542  00123E  EF25  F009         	goto	l2343
  4543  001242                     u1980:
  4544  001242                     
  4545                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 167:         PORTD = 0b10000000;
  4546  001242  0E80               	movlw	128
  4547  001244  6E83               	movwf	131,c	;volatile
  4548                           
  4549                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 168:     } else if (volume == 2)
      +                           {
  4550  001246  EF7F  F009         	goto	l2371
  4551  00124A                     l2343:
  4552  00124A  0E02               	movlw	2
  4553  00124C  181D               	xorwf	_volume^0,w,c
  4554  00124E  A4D8               	btfss	status,2,c
  4555  001250  EF2C  F009         	goto	u1991
  4556  001254  EF2E  F009         	goto	u1990
  4557  001258                     u1991:
  4558  001258  EF32  F009         	goto	l2347
  4559  00125C                     u1990:
  4560  00125C                     
  4561                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 169:         PORTD = 0b11000000;
  4562  00125C  0EC0               	movlw	192
  4563  00125E  6E83               	movwf	131,c	;volatile
  4564                           
  4565                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 170:     } else if (volume == 3)
      +                           {
  4566  001260  EF7F  F009         	goto	l2371
  4567  001264                     l2347:
  4568  001264  0E03               	movlw	3
  4569  001266  181D               	xorwf	_volume^0,w,c
  4570  001268  A4D8               	btfss	status,2,c
  4571  00126A  EF39  F009         	goto	u2001
  4572  00126E  EF3B  F009         	goto	u2000
  4573  001272                     u2001:
  4574  001272  EF3F  F009         	goto	l2351
  4575  001276                     u2000:
  4576  001276                     
  4577                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 171:         PORTD = 0b11100000;
  4578  001276  0EE0               	movlw	224
  4579  001278  6E83               	movwf	131,c	;volatile
  4580                           
  4581                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 172:     } else if (volume == 4)
      +                           {
  4582  00127A  EF7F  F009         	goto	l2371
  4583  00127E                     l2351:
  4584  00127E  0E04               	movlw	4
  4585  001280  181D               	xorwf	_volume^0,w,c
  4586  001282  A4D8               	btfss	status,2,c
  4587  001284  EF46  F009         	goto	u2011
  4588  001288  EF48  F009         	goto	u2010
  4589  00128C                     u2011:
  4590  00128C  EF4C  F009         	goto	l2355
  4591  001290                     u2010:
  4592  001290                     
  4593                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 173:         PORTD = 0b11110000;
  4594  001290  0EF0               	movlw	240
  4595  001292  6E83               	movwf	131,c	;volatile
  4596                           
  4597                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 174:     } else if (volume == 5)
      +                           {
  4598  001294  EF7F  F009         	goto	l2371
  4599  001298                     l2355:
  4600  001298  0E05               	movlw	5
  4601  00129A  181D               	xorwf	_volume^0,w,c
  4602  00129C  A4D8               	btfss	status,2,c
  4603  00129E  EF53  F009         	goto	u2021
  4604  0012A2  EF55  F009         	goto	u2020
  4605  0012A6                     u2021:
  4606  0012A6  EF59  F009         	goto	l2359
  4607  0012AA                     u2020:
  4608  0012AA                     
  4609                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 175:         PORTD = 0b11111000;
  4610  0012AA  0EF8               	movlw	248
  4611  0012AC  6E83               	movwf	131,c	;volatile
  4612                           
  4613                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 176:     } else if (volume == 6)
      +                           {
  4614  0012AE  EF7F  F009         	goto	l2371
  4615  0012B2                     l2359:
  4616  0012B2  0E06               	movlw	6
  4617  0012B4  181D               	xorwf	_volume^0,w,c
  4618  0012B6  A4D8               	btfss	status,2,c
  4619  0012B8  EF60  F009         	goto	u2031
  4620  0012BC  EF62  F009         	goto	u2030
  4621  0012C0                     u2031:
  4622  0012C0  EF66  F009         	goto	l2363
  4623  0012C4                     u2030:
  4624  0012C4                     
  4625                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 177:         PORTD = 0b11111100;
  4626  0012C4  0EFC               	movlw	252
  4627  0012C6  6E83               	movwf	131,c	;volatile
  4628                           
  4629                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 178:     } else if (volume == 7)
      +                           {
  4630  0012C8  EF7F  F009         	goto	l2371
  4631  0012CC                     l2363:
  4632  0012CC  0E07               	movlw	7
  4633  0012CE  181D               	xorwf	_volume^0,w,c
  4634  0012D0  A4D8               	btfss	status,2,c
  4635  0012D2  EF6D  F009         	goto	u2041
  4636  0012D6  EF6F  F009         	goto	u2040
  4637  0012DA                     u2041:
  4638  0012DA  EF73  F009         	goto	l2367
  4639  0012DE                     u2040:
  4640  0012DE                     
  4641                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 179:         PORTD = 0b11111110;
  4642  0012DE  0EFE               	movlw	254
  4643  0012E0  6E83               	movwf	131,c	;volatile
  4644                           
  4645                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 180:     } else if (volume == 8)
      +                           {
  4646  0012E2  EF7F  F009         	goto	l2371
  4647  0012E6                     l2367:
  4648  0012E6  0E08               	movlw	8
  4649  0012E8  181D               	xorwf	_volume^0,w,c
  4650  0012EA  A4D8               	btfss	status,2,c
  4651  0012EC  EF7A  F009         	goto	u2051
  4652  0012F0  EF7C  F009         	goto	u2050
  4653  0012F4                     u2051:
  4654  0012F4  EF7F  F009         	goto	l268
  4655  0012F8                     u2050:
  4656  0012F8                     
  4657                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 181:         PORTD = 0b11111111;
  4658  0012F8  6883               	setf	131,c	;volatile
  4659  0012FA  EF7F  F009         	goto	l2371
  4660  0012FE                     l268:
  4661  0012FE                     l2371:
  4662                           
  4663                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 183:     atraso_ms(500);
  4664  0012FE  0E01               	movlw	1
  4665  001300  6E21               	movwf	(atraso_ms@t+1)^0,c
  4666  001302  0EF4               	movlw	244
  4667  001304  6E20               	movwf	atraso_ms@t^0,c
  4668  001306  ECDD  F00C         	call	_atraso_ms	;wreg free
  4669  00130A                     
  4670                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/songs.c: 184:     TRISD=old_D;
  4671  00130A  C027  FF95         	movff	alterarVolume@old_D,3989	;volatile
  4672  00130E  0012               	return		;funcret
  4673  001310                     __end_of_alterarVolume:
  4674                           	callstack 0
  4675                           
  4676 ;; *************** function _atraso_ms *****************
  4677 ;; Defined at:
  4678 ;;		line 3 in file "D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;  t               2    0[COMRAM] int 
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;  i               2    2[COMRAM] volatile unsigned int 
  4683 ;;  k               1    5[COMRAM] volatile unsigned char 
  4684 ;;  j               1    4[COMRAM] volatile unsigned char 
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  1    wreg      void 
  4687 ;; Registers used:
  4688 ;;		wreg, status,2, status,0
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4694 ;;      Params:         2       0       0       0       0       0       0
  4695 ;;      Locals:         4       0       0       0       0       0       0
  4696 ;;      Temps:          0       0       0       0       0       0       0
  4697 ;;      Totals:         6       0       0       0       0       0       0
  4698 ;;Total ram usage:        6 bytes
  4699 ;; Hardware stack levels used:    1
  4700 ;; This function calls:
  4701 ;;		Nothing
  4702 ;; This function is called by:
  4703 ;;		_chooseSong
  4704 ;;		_playSong
  4705 ;;		_alterarVolume
  4706 ;;		_main
  4707 ;; This function uses a non-reentrant model
  4708 ;;
  4709                           
  4710                           	psect	text27
  4711  0019BA                     __ptext27:
  4712                           	callstack 0
  4713  0019BA                     _atraso_ms:
  4714                           	callstack 28
  4715  0019BA                     
  4716                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 4:     volatile unsigned char j,
      +                           k;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 5:     volatile unsigned int 
      +                          i;;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 7:     for (i = 0; i < (t); i+
      +                          +) {
  4717  0019BA  0E00               	movlw	0
  4718  0019BC  6E23               	movwf	(atraso_ms@i+1)^0,c	;volatile
  4719  0019BE  0E00               	movlw	0
  4720  0019C0  6E22               	movwf	atraso_ms@i^0,c	;volatile
  4721  0019C2  EF03  F00D         	goto	l2087
  4722  0019C6                     l2065:
  4723                           
  4724                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 8:         for (j = 0; j < 41; j
      +                          ++) {
  4725  0019C6  0E00               	movlw	0
  4726  0019C8  6E24               	movwf	atraso_ms@j^0,c	;volatile
  4727  0019CA                     l2067:
  4728  0019CA  0E28               	movlw	40
  4729  0019CC  6424               	cpfsgt	atraso_ms@j^0,c	;volatile
  4730  0019CE  EFEB  F00C         	goto	u1641
  4731  0019D2  EFED  F00C         	goto	u1640
  4732  0019D6                     u1641:
  4733  0019D6  EFEF  F00C         	goto	l2071
  4734  0019DA                     u1640:
  4735  0019DA  EF01  F00D         	goto	l2085
  4736  0019DE                     l2071:
  4737                           
  4738                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 9:             for (k = 0; k < 3
      +                          ; k++);
  4739  0019DE  0E00               	movlw	0
  4740  0019E0  6E25               	movwf	atraso_ms@k^0,c	;volatile
  4741  0019E2                     l2073:
  4742  0019E2  0E02               	movlw	2
  4743  0019E4  6425               	cpfsgt	atraso_ms@k^0,c	;volatile
  4744  0019E6  EFF7  F00C         	goto	u1651
  4745  0019EA  EFF9  F00C         	goto	u1650
  4746  0019EE                     u1651:
  4747  0019EE  EFFB  F00C         	goto	l2077
  4748  0019F2                     u1650:
  4749  0019F2  EFFE  F00C         	goto	l2081
  4750  0019F6                     l2077:
  4751  0019F6  2A25               	incf	atraso_ms@k^0,f,c	;volatile
  4752  0019F8  EFF1  F00C         	goto	l2073
  4753  0019FC                     l2081:
  4754                           
  4755                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 10:         }
  4756  0019FC  2A24               	incf	atraso_ms@j^0,f,c	;volatile
  4757  0019FE  EFE5  F00C         	goto	l2067
  4758  001A02                     l2085:
  4759                           
  4760                           ;D:/Documents/MPLABX Projects/MP3-Player/MP3.X/delay.c: 11:     }
  4761  001A02  4A22               	infsnz	atraso_ms@i^0,f,c	;volatile
  4762  001A04  2A23               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  4763  001A06                     l2087:
  4764  001A06  5020               	movf	atraso_ms@t^0,w,c
  4765  001A08  5C22               	subwf	atraso_ms@i^0,w,c	;volatile
  4766  001A0A  5021               	movf	(atraso_ms@t+1)^0,w,c
  4767  001A0C  5823               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  4768  001A0E  A0D8               	btfss	status,0,c
  4769  001A10  EF0C  F00D         	goto	u1661
  4770  001A14  EF0E  F00D         	goto	u1660
  4771  001A18                     u1661:
  4772  001A18  EFE3  F00C         	goto	l2065
  4773  001A1C                     u1660:
  4774  001A1C  0012               	return		;funcret
  4775  001A1E                     __end_of_atraso_ms:
  4776                           	callstack 0
  4777                           
  4778 ;; *************** function ___awmod *****************
  4779 ;; Defined at:
  4780 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awmod.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;  dividend        2    8[COMRAM] int 
  4783 ;;  divisor         2   10[COMRAM] int 
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;  sign            1   13[COMRAM] unsigned char 
  4786 ;;  counter         1   12[COMRAM] unsigned char 
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  2    8[COMRAM] int 
  4789 ;; Registers used:
  4790 ;;		wreg, status,2, status,0
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4796 ;;      Params:         4       0       0       0       0       0       0
  4797 ;;      Locals:         2       0       0       0       0       0       0
  4798 ;;      Temps:          0       0       0       0       0       0       0
  4799 ;;      Totals:         6       0       0       0       0       0       0
  4800 ;;Total ram usage:        6 bytes
  4801 ;; Hardware stack levels used:    1
  4802 ;; This function calls:
  4803 ;;		Nothing
  4804 ;; This function is called by:
  4805 ;;		_playSong
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text28
  4810  0014E0                     __ptext28:
  4811                           	callstack 0
  4812  0014E0                     ___awmod:
  4813                           	callstack 28
  4814  0014E0  0E00               	movlw	0
  4815  0014E2  6E2D               	movwf	___awmod@sign^0,c
  4816  0014E4  BE29               	btfsc	(___awmod@dividend+1)^0,7,c
  4817  0014E6  EF79  F00A         	goto	u2120
  4818  0014EA  EF77  F00A         	goto	u2121
  4819  0014EE                     u2121:
  4820  0014EE  EF7F  F00A         	goto	l2427
  4821  0014F2                     u2120:
  4822  0014F2  6C28               	negf	___awmod@dividend^0,c
  4823  0014F4  1E29               	comf	(___awmod@dividend+1)^0,f,c
  4824  0014F6  B0D8               	btfsc	status,0,c
  4825  0014F8  2A29               	incf	(___awmod@dividend+1)^0,f,c
  4826  0014FA  0E01               	movlw	1
  4827  0014FC  6E2D               	movwf	___awmod@sign^0,c
  4828  0014FE                     l2427:
  4829  0014FE  BE2B               	btfsc	(___awmod@divisor+1)^0,7,c
  4830  001500  EF86  F00A         	goto	u2130
  4831  001504  EF84  F00A         	goto	u2131
  4832  001508                     u2131:
  4833  001508  EF8A  F00A         	goto	l2431
  4834  00150C                     u2130:
  4835  00150C  6C2A               	negf	___awmod@divisor^0,c
  4836  00150E  1E2B               	comf	(___awmod@divisor+1)^0,f,c
  4837  001510  B0D8               	btfsc	status,0,c
  4838  001512  2A2B               	incf	(___awmod@divisor+1)^0,f,c
  4839  001514                     l2431:
  4840  001514  502A               	movf	___awmod@divisor^0,w,c
  4841  001516  102B               	iorwf	(___awmod@divisor+1)^0,w,c
  4842  001518  B4D8               	btfsc	status,2,c
  4843  00151A  EF91  F00A         	goto	u2141
  4844  00151E  EF93  F00A         	goto	u2140
  4845  001522                     u2141:
  4846  001522  EFB7  F00A         	goto	l2447
  4847  001526                     u2140:
  4848  001526  0E01               	movlw	1
  4849  001528  6E2C               	movwf	___awmod@counter^0,c
  4850  00152A  EF9B  F00A         	goto	l2437
  4851  00152E                     l2435:
  4852  00152E  90D8               	bcf	status,0,c
  4853  001530  362A               	rlcf	___awmod@divisor^0,f,c
  4854  001532  362B               	rlcf	(___awmod@divisor+1)^0,f,c
  4855  001534  2A2C               	incf	___awmod@counter^0,f,c
  4856  001536                     l2437:
  4857  001536  AE2B               	btfss	(___awmod@divisor+1)^0,7,c
  4858  001538  EFA0  F00A         	goto	u2151
  4859  00153C  EFA2  F00A         	goto	u2150
  4860  001540                     u2151:
  4861  001540  EF97  F00A         	goto	l2435
  4862  001544                     u2150:
  4863  001544                     l2439:
  4864  001544  502A               	movf	___awmod@divisor^0,w,c
  4865  001546  5C28               	subwf	___awmod@dividend^0,w,c
  4866  001548  502B               	movf	(___awmod@divisor+1)^0,w,c
  4867  00154A  5829               	subwfb	(___awmod@dividend+1)^0,w,c
  4868  00154C  A0D8               	btfss	status,0,c
  4869  00154E  EFAB  F00A         	goto	u2161
  4870  001552  EFAD  F00A         	goto	u2160
  4871  001556                     u2161:
  4872  001556  EFB1  F00A         	goto	l2443
  4873  00155A                     u2160:
  4874  00155A  502A               	movf	___awmod@divisor^0,w,c
  4875  00155C  5E28               	subwf	___awmod@dividend^0,f,c
  4876  00155E  502B               	movf	(___awmod@divisor+1)^0,w,c
  4877  001560  5A29               	subwfb	(___awmod@dividend+1)^0,f,c
  4878  001562                     l2443:
  4879  001562  90D8               	bcf	status,0,c
  4880  001564  322B               	rrcf	(___awmod@divisor+1)^0,f,c
  4881  001566  322A               	rrcf	___awmod@divisor^0,f,c
  4882  001568  2E2C               	decfsz	___awmod@counter^0,f,c
  4883  00156A  EFA2  F00A         	goto	l2439
  4884  00156E                     l2447:
  4885  00156E  502D               	movf	___awmod@sign^0,w,c
  4886  001570  B4D8               	btfsc	status,2,c
  4887  001572  EFBD  F00A         	goto	u2171
  4888  001576  EFBF  F00A         	goto	u2170
  4889  00157A                     u2171:
  4890  00157A  EFC3  F00A         	goto	l2451
  4891  00157E                     u2170:
  4892  00157E  6C28               	negf	___awmod@dividend^0,c
  4893  001580  1E29               	comf	(___awmod@dividend+1)^0,f,c
  4894  001582  B0D8               	btfsc	status,0,c
  4895  001584  2A29               	incf	(___awmod@dividend+1)^0,f,c
  4896  001586                     l2451:
  4897  001586  C028  F028         	movff	___awmod@dividend,?___awmod
  4898  00158A  C029  F029         	movff	___awmod@dividend+1,?___awmod+1
  4899  00158E  0012               	return		;funcret
  4900  001590                     __end_of___awmod:
  4901                           	callstack 0
  4902                           
  4903 ;; *************** function ___awdiv *****************
  4904 ;; Defined at:
  4905 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;  dividend        2    0[COMRAM] int 
  4908 ;;  divisor         2    2[COMRAM] int 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  quotient        2    6[COMRAM] int 
  4911 ;;  sign            1    5[COMRAM] unsigned char 
  4912 ;;  counter         1    4[COMRAM] unsigned char 
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  2    0[COMRAM] int 
  4915 ;; Registers used:
  4916 ;;		wreg, status,2, status,0
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4922 ;;      Params:         4       0       0       0       0       0       0
  4923 ;;      Locals:         4       0       0       0       0       0       0
  4924 ;;      Temps:          0       0       0       0       0       0       0
  4925 ;;      Totals:         8       0       0       0       0       0       0
  4926 ;;Total ram usage:        8 bytes
  4927 ;; Hardware stack levels used:    1
  4928 ;; This function calls:
  4929 ;;		Nothing
  4930 ;; This function is called by:
  4931 ;;		_playSong
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935                           	psect	text29
  4936  00141C                     __ptext29:
  4937                           	callstack 0
  4938  00141C                     ___awdiv:
  4939                           	callstack 28
  4940  00141C  0E00               	movlw	0
  4941  00141E  6E25               	movwf	___awdiv@sign^0,c
  4942  001420  BE23               	btfsc	(___awdiv@divisor+1)^0,7,c
  4943  001422  EF17  F00A         	goto	u2060
  4944  001426  EF15  F00A         	goto	u2061
  4945  00142A                     u2061:
  4946  00142A  EF1D  F00A         	goto	l2383
  4947  00142E                     u2060:
  4948  00142E  6C22               	negf	___awdiv@divisor^0,c
  4949  001430  1E23               	comf	(___awdiv@divisor+1)^0,f,c
  4950  001432  B0D8               	btfsc	status,0,c
  4951  001434  2A23               	incf	(___awdiv@divisor+1)^0,f,c
  4952  001436  0E01               	movlw	1
  4953  001438  6E25               	movwf	___awdiv@sign^0,c
  4954  00143A                     l2383:
  4955  00143A  BE21               	btfsc	(___awdiv@dividend+1)^0,7,c
  4956  00143C  EF24  F00A         	goto	u2070
  4957  001440  EF22  F00A         	goto	u2071
  4958  001444                     u2071:
  4959  001444  EF2A  F00A         	goto	l2389
  4960  001448                     u2070:
  4961  001448  6C20               	negf	___awdiv@dividend^0,c
  4962  00144A  1E21               	comf	(___awdiv@dividend+1)^0,f,c
  4963  00144C  B0D8               	btfsc	status,0,c
  4964  00144E  2A21               	incf	(___awdiv@dividend+1)^0,f,c
  4965  001450  0E01               	movlw	1
  4966  001452  1A25               	xorwf	___awdiv@sign^0,f,c
  4967  001454                     l2389:
  4968  001454  0E00               	movlw	0
  4969  001456  6E27               	movwf	(___awdiv@quotient+1)^0,c
  4970  001458  0E00               	movlw	0
  4971  00145A  6E26               	movwf	___awdiv@quotient^0,c
  4972  00145C  5022               	movf	___awdiv@divisor^0,w,c
  4973  00145E  1023               	iorwf	(___awdiv@divisor+1)^0,w,c
  4974  001460  B4D8               	btfsc	status,2,c
  4975  001462  EF35  F00A         	goto	u2081
  4976  001466  EF37  F00A         	goto	u2080
  4977  00146A                     u2081:
  4978  00146A  EF5F  F00A         	goto	l2411
  4979  00146E                     u2080:
  4980  00146E  0E01               	movlw	1
  4981  001470  6E24               	movwf	___awdiv@counter^0,c
  4982  001472  EF3F  F00A         	goto	l2397
  4983  001476                     l2395:
  4984  001476  90D8               	bcf	status,0,c
  4985  001478  3622               	rlcf	___awdiv@divisor^0,f,c
  4986  00147A  3623               	rlcf	(___awdiv@divisor+1)^0,f,c
  4987  00147C  2A24               	incf	___awdiv@counter^0,f,c
  4988  00147E                     l2397:
  4989  00147E  AE23               	btfss	(___awdiv@divisor+1)^0,7,c
  4990  001480  EF44  F00A         	goto	u2091
  4991  001484  EF46  F00A         	goto	u2090
  4992  001488                     u2091:
  4993  001488  EF3B  F00A         	goto	l2395
  4994  00148C                     u2090:
  4995  00148C                     l2399:
  4996  00148C  90D8               	bcf	status,0,c
  4997  00148E  3626               	rlcf	___awdiv@quotient^0,f,c
  4998  001490  3627               	rlcf	(___awdiv@quotient+1)^0,f,c
  4999  001492  5022               	movf	___awdiv@divisor^0,w,c
  5000  001494  5C20               	subwf	___awdiv@dividend^0,w,c
  5001  001496  5023               	movf	(___awdiv@divisor+1)^0,w,c
  5002  001498  5821               	subwfb	(___awdiv@dividend+1)^0,w,c
  5003  00149A  A0D8               	btfss	status,0,c
  5004  00149C  EF52  F00A         	goto	u2101
  5005  0014A0  EF54  F00A         	goto	u2100
  5006  0014A4                     u2101:
  5007  0014A4  EF59  F00A         	goto	l2407
  5008  0014A8                     u2100:
  5009  0014A8  5022               	movf	___awdiv@divisor^0,w,c
  5010  0014AA  5E20               	subwf	___awdiv@dividend^0,f,c
  5011  0014AC  5023               	movf	(___awdiv@divisor+1)^0,w,c
  5012  0014AE  5A21               	subwfb	(___awdiv@dividend+1)^0,f,c
  5013  0014B0  8026               	bsf	___awdiv@quotient^0,0,c
  5014  0014B2                     l2407:
  5015  0014B2  90D8               	bcf	status,0,c
  5016  0014B4  3223               	rrcf	(___awdiv@divisor+1)^0,f,c
  5017  0014B6  3222               	rrcf	___awdiv@divisor^0,f,c
  5018  0014B8  2E24               	decfsz	___awdiv@counter^0,f,c
  5019  0014BA  EF46  F00A         	goto	l2399
  5020  0014BE                     l2411:
  5021  0014BE  5025               	movf	___awdiv@sign^0,w,c
  5022  0014C0  B4D8               	btfsc	status,2,c
  5023  0014C2  EF65  F00A         	goto	u2111
  5024  0014C6  EF67  F00A         	goto	u2110
  5025  0014CA                     u2111:
  5026  0014CA  EF6B  F00A         	goto	l2415
  5027  0014CE                     u2110:
  5028  0014CE  6C26               	negf	___awdiv@quotient^0,c
  5029  0014D0  1E27               	comf	(___awdiv@quotient+1)^0,f,c
  5030  0014D2  B0D8               	btfsc	status,0,c
  5031  0014D4  2A27               	incf	(___awdiv@quotient+1)^0,f,c
  5032  0014D6                     l2415:
  5033  0014D6  C026  F020         	movff	___awdiv@quotient,?___awdiv
  5034  0014DA  C027  F021         	movff	___awdiv@quotient+1,?___awdiv+1
  5035  0014DE  0012               	return		;funcret
  5036  0014E0                     __end_of___awdiv:
  5037                           	callstack 0
  5038                           
  5039                           	psect	rparam
  5040  0000                     
  5041                           	psect	idloc
  5042                           
  5043                           ;Config register IDLOC0 @ 0x200000
  5044                           ;	unspecified, using default values
  5045  200000                     	org	2097152
  5046  200000  FF                 	db	255
  5047                           
  5048                           ;Config register IDLOC1 @ 0x200001
  5049                           ;	unspecified, using default values
  5050  200001                     	org	2097153
  5051  200001  FF                 	db	255
  5052                           
  5053                           ;Config register IDLOC2 @ 0x200002
  5054                           ;	unspecified, using default values
  5055  200002                     	org	2097154
  5056  200002  FF                 	db	255
  5057                           
  5058                           ;Config register IDLOC3 @ 0x200003
  5059                           ;	unspecified, using default values
  5060  200003                     	org	2097155
  5061  200003  FF                 	db	255
  5062                           
  5063                           ;Config register IDLOC4 @ 0x200004
  5064                           ;	unspecified, using default values
  5065  200004                     	org	2097156
  5066  200004  FF                 	db	255
  5067                           
  5068                           ;Config register IDLOC5 @ 0x200005
  5069                           ;	unspecified, using default values
  5070  200005                     	org	2097157
  5071  200005  FF                 	db	255
  5072                           
  5073                           ;Config register IDLOC6 @ 0x200006
  5074                           ;	unspecified, using default values
  5075  200006                     	org	2097158
  5076  200006  FF                 	db	255
  5077                           
  5078                           ;Config register IDLOC7 @ 0x200007
  5079                           ;	unspecified, using default values
  5080  200007                     	org	2097159
  5081  200007  FF                 	db	255
  5082                           
  5083                           	psect	config
  5084                           
  5085                           ; Padding undefined space
  5086  300000                     	org	3145728
  5087  300000  FF                 	db	255
  5088                           
  5089                           ;Config register CONFIG1H @ 0x300001
  5090                           ;	Oscillator Selection bits
  5091                           ;	OSC = HS, HS oscillator
  5092                           ;	Fail-Safe Clock Monitor Enable bit
  5093                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5094                           ;	Internal/External Oscillator Switchover bit
  5095                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5096  300001                     	org	3145729
  5097  300001  02                 	db	2
  5098                           
  5099                           ;Config register CONFIG2L @ 0x300002
  5100                           ;	Power-up Timer Enable bit
  5101                           ;	PWRT = OFF, PWRT disabled
  5102                           ;	Brown-out Reset Enable bits
  5103                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5104                           ;	Brown Out Reset Voltage bits
  5105                           ;	BORV = 0x2E, user specified literal
  5106  300002                     	org	3145730
  5107  300002  71                 	db	369
  5108                           
  5109                           ;Config register CONFIG2H @ 0x300003
  5110                           ;	Watchdog Timer Enable bit
  5111                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5112                           ;	Watchdog Timer Postscale Select bits
  5113                           ;	WDTPS = 1, 1:1
  5114  300003                     	org	3145731
  5115  300003  00                 	db	0
  5116                           
  5117                           ; Padding undefined space
  5118  300004                     	org	3145732
  5119  300004  FF                 	db	255
  5120                           
  5121                           ;Config register CONFIG3H @ 0x300005
  5122                           ;	CCP2 MUX bit
  5123                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5124                           ;	PORTB A/D Enable bit
  5125                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5126                           ;	Low-Power Timer1 Oscillator Enable bit
  5127                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5128                           ;	MCLR Pin Enable bit
  5129                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5130  300005                     	org	3145733
  5131  300005  83                 	db	131
  5132                           
  5133                           ;Config register CONFIG4L @ 0x300006
  5134                           ;	Stack Full/Underflow Reset Enable bit
  5135                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5136                           ;	Single-Supply ICSP Enable bit
  5137                           ;	LVP = OFF, Single-Supply ICSP disabled
  5138                           ;	Extended Instruction Set Enable bit
  5139                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5140                           ;	Background Debugger Enable bit
  5141                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5142  300006                     	org	3145734
  5143  300006  80                 	db	128
  5144                           
  5145                           ; Padding undefined space
  5146  300007                     	org	3145735
  5147  300007  FF                 	db	255
  5148                           
  5149                           ;Config register CONFIG5L @ 0x300008
  5150                           ;	Code Protection bit
  5151                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5152                           ;	Code Protection bit
  5153                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5154                           ;	Code Protection bit
  5155                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5156                           ;	Code Protection bit
  5157                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5158  300008                     	org	3145736
  5159  300008  0F                 	db	15
  5160                           
  5161                           ;Config register CONFIG5H @ 0x300009
  5162                           ;	Boot Block Code Protection bit
  5163                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5164                           ;	Data EEPROM Code Protection bit
  5165                           ;	CPD = OFF, Data EEPROM not code-protected
  5166  300009                     	org	3145737
  5167  300009  C0                 	db	192
  5168                           
  5169                           ;Config register CONFIG6L @ 0x30000A
  5170                           ;	Write Protection bit
  5171                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5172                           ;	Write Protection bit
  5173                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5174                           ;	Write Protection bit
  5175                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5176                           ;	Write Protection bit
  5177                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5178  30000A                     	org	3145738
  5179  30000A  0F                 	db	15
  5180                           
  5181                           ;Config register CONFIG6H @ 0x30000B
  5182                           ;	Configuration Register Write Protection bit
  5183                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5184                           ;	Boot Block Write Protection bit
  5185                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  5186                           ;	Data EEPROM Write Protection bit
  5187                           ;	WRTD = OFF, Data EEPROM not write-protected
  5188  30000B                     	org	3145739
  5189  30000B  E0                 	db	224
  5190                           
  5191                           ;Config register CONFIG7L @ 0x30000C
  5192                           ;	Table Read Protection bit
  5193                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5194                           ;	Table Read Protection bit
  5195                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5196                           ;	Table Read Protection bit
  5197                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5198                           ;	Table Read Protection bit
  5199                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5200  30000C                     	org	3145740
  5201  30000C  0F                 	db	15
  5202                           
  5203                           ;Config register CONFIG7H @ 0x30000D
  5204                           ;	Boot Block Table Read Protection bit
  5205                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5206  30000D                     	org	3145741
  5207  30000D  40                 	db	64
  5208                           tosu	equ	0xFFF
  5209                           tosh	equ	0xFFE
  5210                           tosl	equ	0xFFD
  5211                           stkptr	equ	0xFFC
  5212                           pclatu	equ	0xFFB
  5213                           pclath	equ	0xFFA
  5214                           pcl	equ	0xFF9
  5215                           tblptru	equ	0xFF8
  5216                           tblptrh	equ	0xFF7
  5217                           tblptrl	equ	0xFF6
  5218                           tablat	equ	0xFF5
  5219                           prodh	equ	0xFF4
  5220                           prodl	equ	0xFF3
  5221                           indf0	equ	0xFEF
  5222                           postinc0	equ	0xFEE
  5223                           postdec0	equ	0xFED
  5224                           preinc0	equ	0xFEC
  5225                           plusw0	equ	0xFEB
  5226                           fsr0h	equ	0xFEA
  5227                           fsr0l	equ	0xFE9
  5228                           wreg	equ	0xFE8
  5229                           indf1	equ	0xFE7
  5230                           postinc1	equ	0xFE6
  5231                           postdec1	equ	0xFE5
  5232                           preinc1	equ	0xFE4
  5233                           plusw1	equ	0xFE3
  5234                           fsr1h	equ	0xFE2
  5235                           fsr1l	equ	0xFE1
  5236                           bsr	equ	0xFE0
  5237                           indf2	equ	0xFDF
  5238                           postinc2	equ	0xFDE
  5239                           postdec2	equ	0xFDD
  5240                           preinc2	equ	0xFDC
  5241                           plusw2	equ	0xFDB
  5242                           fsr2h	equ	0xFDA
  5243                           fsr2l	equ	0xFD9
  5244                           status	equ	0xFD8

Data Sizes:
    Strings     61
    Constant    16
    Data        201
    BSS         211
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     23      75
    BANK0           128      0       0
    BANK1           256      0     190
    BANK2           256      0     170
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 170
		 -> nomes(BANK2[170]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 170
		 -> nomes(BANK2[170]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    lcdStr@str	PTR const unsigned char  size(2) Largest target is 190
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[7]), STR_3(CODE[4]), 
		 -> STR_2(CODE[16]), STR_1(CODE[17]), musicas.nome(BANK1[17]), musicas(BANK1[190]), 


Critical Paths under _main in COMRAM

    _main->_chooseSong
    _ssdInit->_pinMode
    _songsInit->_strcpy
    _strcpy->___wmul
    _lcdInit->_lcdCommand
    _chooseSong->_playSong
    _ssdUpdate->_digitalWrite
    _pwmSet->___lwdiv
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _lcdStr->_lcdData
    _lcdData->_digitalWrite
    _lcdPosition->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us
    _alterarVolume->_atraso_ms
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   49225
                          _atraso_ms
                         _chooseSong
                             _kpInit
                         _lcdCommand
                            _lcdInit
                        _lcdPosition
                             _lcdStr
                          _songsInit
                            _ssdInit
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    1352
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _songsInit                                            2     2      0    1149
                                             14 COMRAM     2     2      0
                             ___wmul
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     4      4     248
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    4243
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _chooseSong                                           2     2      0   32215
                                             21 COMRAM     2     2      0
                          _atraso_ms
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                        _lcdPosition
                             _lcdStr
                           _playSong
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _playSong                                             5     5      0   18202
                                             16 COMRAM     5     5      0
                            ___awdiv
                            ___awmod
                      _alterarVolume
                          _atraso_ms
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                        _lcdPosition
                             _lcdStr
                            _pwmInit
                             _pwmSet
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _ssdUpdate                                            2     2      0    2572
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1     860
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _pwmSet                                               5     5      0    1172
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     767
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _pwmInit                                              0     0      0     550
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (4) _pwmFrequency                                         2     0      2     550
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcdStr                                               5     3      2    3361
                                              8 COMRAM     5     3      2
                            _lcdData
 ---------------------------------------------------------------------------------
 (2) _lcdData                                              2     2      0    2663
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _lcdPosition                                          3     2      1    3588
                                              8 COMRAM     3     2      1
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    2799
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    2572
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      92
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _kpDebounce                                          10    10      0     315
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (3) _alterarVolume                                        3     3      0     563
                                              6 COMRAM     2     2      0
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            6     4      2     518
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     904
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _chooseSong
     _atraso_ms
     _kpDebounce
     _kpRead
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _lcdPosition
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
     _lcdStr
       _lcdData
         _Delay40us
         _digitalWrite
     _playSong
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _alterarVolume
         _atraso_ms
       _atraso_ms
       _kpDebounce
       _kpRead
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
       _lcdPosition
         _lcdCommand
           _Delay2ms
             _Delay40us
           _Delay40us
           _digitalWrite
       _lcdStr
         _lcdData
           _Delay40us
           _digitalWrite
       _pwmInit
         _pwmFrequency
           ___aldiv
       _pwmSet
         ___lwdiv
         ___wmul
       _ssdDigit
       _ssdUpdate
         _digitalWrite
     _ssdDigit
     _ssdUpdate
       _digitalWrite
   _kpInit
   _lcdCommand
     _Delay2ms
       _Delay40us
     _Delay40us
     _digitalWrite
   _lcdInit
     _Delay2ms
       _Delay40us
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _pinMode
   _lcdPosition
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
   _lcdStr
     _lcdData
       _Delay40us
       _digitalWrite
   _songsInit
     ___wmul
     _strcpy
       ___wmul (ARG)
   _ssdInit
     _pinMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      AA       9       66.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      BE       7       74.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     17      4B       1       59.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B3      15        0.0%
DATA                 0      0     1B3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Dec 08 21:01:31 2020

                      _i 003E          ??_alterarVolume 0026                       l42 0DC6  
                     l76 0B78                       l86 1A1C                       l99 1CD2  
           ___awdiv@sign 0025                       _v0 0042                       _v1 0041  
                     _v2 0040                       _v3 003F      ___wmul@multiplicand 0022  
                    l111 17E8                      l104 1CA0                      l120 1A9C  
                    l121 1AC2                      l114 1BDA                      l130 18D8  
                    l124 1AD8                      l301 1B30                      l213 116A  
                    l117 1860                      l311 1090                      l231 0820  
                    l209 113C                      l226 07E6                      l314 1B86  
                    l331 1CE6                      l235 08CC                      l219 11D0  
                    l236 0870                      l421 1CBA                      l350 0F38  
                    l351 0F40                      l503 141A                      l415 19B8  
                    l247 092A                      l424 1C3E                      l274 130E  
                    l418 1C64                      l354 1CDC                      l268 12FE  
                    l349 0F20                      l199 16DE                      l655 14DE  
                    l922 194C                      l915 1944                      l668 158E  
                    _PR2 000FCB                      _cnt 0044             ___awmod@sign 002D  
                    prod 000FF3                      wreg 000FE8                     l1101 1C18  
                   l2001 0D6E                     l2003 0D88                     l2013 1C8A  
                   l2005 0DA8                     l2101 17B6                     l2021 1314  
                   l2015 1C8E                     l2007 1C86                     l2103 17BA  
                   l2111 1B8A                     l2031 1354                     l2023 1322  
                   l2201 0E1E                     l2017 1C90                     l2105 17CC  
                   l2121 1BBE                     l2113 1B8E                     l2041 1392  
                   l2033 1358                     l2025 1332                     l2211 0E42  
                   l2203 0E22                     l2107 17DC                     l2123 1BD2  
                   l2115 1B92                     l2051 13DA                     l2043 13A0  
                   l2035 1368                     l2027 1336                     l2019 1310  
                   l2131 1C36                     l2221 0EE4                     l2213 0E6E  
                   l2205 0E3E                     l2109 17E4                     l2125 1BD6  
                   l2117 1BA6                     l2053 13E4                     l2045 13AA  
                   l2037 137E                     l2029 1344                     l2301 1CA4  
                   l2141 18FC                     l2071 19DE                     l2063 19BA  
                   l2231 0F18                     l2223 0EE6                     l2215 0E9E  
                   l2119 1BAA                     l2047 13C8                     l2039 1386  
                   l2055 13EA                     l2127 1C40                     l2303 1CA8  
                   l2151 1936                     l2143 1904                     l2135 18DA  
                   l2311 196E                     l2401 1492                     l2081 19FC  
                   l2073 19E2                     l2065 19C6                     l2321 11E4  
                   l2233 0F30                     l2225 0EF6                     l2217 0ED2  
                   l2161 1A96                     l2057 13FA                     l2049 13D8  
                   l2305 1CAA                     l2153 1938                     l2145 1912  
                   l2137 18E2                     l2129 1C1A                     l2313 198A  
                   l2241 0F46                     l2403 14A8                     l2411 14BE  
                   l2067 19CA                     l2331 1212                     l2323 11F6  
                   l2235 0F3C                     l2227 0F0E                     l2219 0ED4  
                   l2091 1772                     l2163 1A96                     l2059 140A  
                   l2307 1CAE                     l2155 193E                     l2147 1918  
                   l2139 18F4                     l2315 1992                     l2251 0FB0  
                   l2243 0F5A                     l2413 14CE                     l2405 14B0  
                   l2421 14E4                     l2077 19F6                     l2085 1A02  
                   l2341 1242                     l2333 1216                     l2325 11FC  
                   l2229 0F14                     l2237 1CDE                     l2093 1776  
                   l2173 1AD2                     l2165 1AAC                     l2157 1A82  
                   l2181 189C                     l2149 192E                     l2317 19AA  
                   l2309 1950                     l2261 0FFA                     l2253 0FC4  
                   l2245 0F6E                     l2501 0664                     l2415 14D6  
                   l2407 14B2                     l2431 1514                     l2423 14F2  
                   l2087 1A06                     l2351 127E                     l2343 124A  
                   l2335 121A                     l2327 120C                     l2319 11D4  
                   l2183 0DC8                     l2095 178A                     l2167 1ABC  
                   l2159 1A86                     l2175 1862                     l2271 104E  
                   l2263 100C                     l2255 0FCC                     l2247 0F82  
                   l2239 0F42                     l2511 06AC                     l2503 0678  
                   l2409 14B8                     l2441 155A                     l2433 1526  
                   l2425 14FA                     l2361 12C4                     l2353 1290  
                   l2345 125C                     l2337 122A                     l2329 120E  
                   l2193 0DD4                     l2185 0DCC                     l2097 178E  
                   l2089 176E                     l2169 1AD2                     l2177 186A  
                   l2265 1020                     l2257 0FDE                     l2249 0F9E  
                   l2601 091A                     l2521 0794                     l2513 078C  
                   l2505 0682                     l2451 1586                     l2443 1562  
                   l2435 152E                     l2427 14FE                     l2419 14E0  
                   l2363 12CC                     l2355 1298                     l2347 1264  
                   l2371 12FE                     l2339 1232                     l2195 0E16  
                   l2187 0DD0                     l2099 17A2                     l2179 189A  
                   l2291 1B04                     l2283 1ADC                     l2267 1028  
                   l2259 0FF2                     l2603 091C                     l2531 07BE  
                   l2523 07A0                     l2507 068E                     l2611 1812  
                   l2381 1436                     l2445 1568                     l2437 1536  
                   l2429 150C                     l2373 130A                     l2365 12DE  
                   l2357 12AA                     l2349 1276                     l2293 1B16  
                   l2285 1AEC                     l2269 103A                     l2277 1056  
                   l2605 0928                     l2533 07C2                     l2525 07A4  
                   l2509 06A2                     l2701 11A6                     l2461 097A  
                   l2621 1826                     l2613 1816                     l2391 145C  
                   l2383 143A                     l2375 141C                     l2439 1544  
                   l2447 156E                     l2367 12E6                     l2359 12B2  
                   l2295 1B1A                     l2287 1AF0                     l2551 0816  
                   l2543 07F8                     l2535 07C6                     l2527 07AC  
                   l2519 0790                     l2703 11BA                     l2471 0A14  
                   l2463 099C                     l2455 092C                     l2631 183E  
                   l2623 182A                     l2615 181A                     l2711 1B82  
                   l2393 146E                     l2385 1448                     l2377 1420  
                   l2449 157E                     l2369 12F8                     l2297 1B2C  
                   l2289 1B00                     l2561 0842                     l2545 07FC  
                   l2537 07CE                     l2705 11C4                     l2481 0AA8  
                   l2473 0A30                     l2465 09B8                     l2457 0948  
                   l2641 185A                     l2633 1842                     l2625 1830  
                   l2617 181E                     l2609 17EA                     l2721 16F0  
                   l2713 16E0                     l2395 1476                     l2387 1450  
                   l2379 142E                     l2299 1CA2                     l2571 0882  
                   l2563 0850                     l2555 0832                     l2547 0800  
                   l2539 07DC                     l2707 11CC                     l2491 0B32  
                   l2483 0ABA                     l2475 0A42                     l2467 09CA  
                   l2459 095A                     l2635 1848                     l2627 1834  
                   l2619 1822                     l2651 16C4                     l2643 163A  
                   l2731 1722                     l2723 16F6                     l2715 16E4  
                   l2397 147E                     l2389 1454                     l2573 0886  
                   l2565 0860                     l2557 0836                     l2549 0808  
                   l2661 10A2                     l2493 0B56                     l2485 0ADE  
                   l2477 0A66                     l2469 09EE                     l2637 184E  
                   l2629 1838                     l2653 16C8                     l2709 1B32  
                   l2741 1754                     l2733 172E                     l2725 1700  
                   l2717 16E8                     l2399 148C                     l2591 08F0  
                   l2575 088A                     l2567 0868                     l2559 083A  
                   l2583 08CC                     l2671 10CA                     l2663 10B0  
                   l2655 1092                     l2487 0B04                     l2479 0A8C  
                   l2639 1854                     l2495 1BDC                     l2743 1760  
                   l2735 1734                     l2727 170C                     l2719 16EC  
                   l2593 08FA                     l2585 08CE                     l2577 0892  
                   l2681 111E                     l2673 10D6                     l2665 10BE  
                   l2657 1096                     l2489 0B20                     l2497 1BEC  
                   l2649 1646                     l2737 173E                     l2729 1716  
                   l1963 1CC0                     l1971 0BA8                     l2587 08DE  
                   l2579 08A0                     l2595 0900                     l2499 0650  
                   l2691 1164                     l2683 112E                     l2675 10F8  
                   l2667 10C2                     l2659 109E                     l1859 1CD4  
                   l2739 174A                     l1965 1CC2                     l1957 1CBC  
                   l1981 0C40                     l1973 0BC8                     l2749 106A  
                   l2597 0910                     l2589 08EE                     l2693 1178  
                   l2685 1136                     l2677 1108                     l2669 10C6  
                   l1991 0CDA                     l1983 0C62                     l1975 0BEA  
                   l1967 0B7A                     l2599 0914                     l2687 114A  
                   l2695 1180                     l2679 1110                     l1993 0CF6  
                   l1985 0C7E                     l1977 0C06                     l1969 0B96  
                   l2697 1190                     l2689 115C                     l1995 0D10  
                   l1987 0C98                     l1979 0C20                     l2699 119C  
                   l1997 0D30                     l1989 0CB8                     l1999 0D52  
                   STR_1 0622                     STR_2 0633                     STR_3 064A  
                   STR_4 0643                     STR_5 0611                     STR_6 0622  
                   u2000 1276                     u2001 1272                     u2010 1290  
                   u2011 128C                     u2100 14A8                     u2020 12AA  
                   u2101 14A4                     u2021 12A6                     u2110 14CE  
                   u2030 12C4                     u2111 14CA                     u2031 12C0  
                   u2120 14F2                     u2040 12DE                     u2121 14EE  
                   u2041 12DA                     u2130 150C                     u2050 12F8  
                   u1410 0C06                     u2131 1508                     u2051 12F4  
                   u1411 0C02                     u2060 142E                     u2140 1526  
                   u1500 0D10                     u1420 0C20                     u1404 0BDA  
                   u2300 0AA8                     u2220 09B8                     u2204 096C  
                   u2061 142A                     u2141 1522                     u1501 0D0C  
                   u1421 0C1C                     u1405 0BD6                     u2301 0AA4  
                   u2221 09B4                     u2205 0968                     u2070 1448  
                   u2150 1544                     u2310 0ABA                     u2230 09CA  
                   u2214 098C                     u2071 1444                     u2151 1540  
                   u2311 0AB6                     u2231 09C6                     u2215 0988  
                   u2080 146E                     u2160 155A                     u1360 1CD2  
                   u1600 137E                     u2400 07DC                     u2081 146A  
                   u2161 1556                     u1361 1CCE                     u1601 137A  
                   u2401 07D8                     u2090 148C                     u2170 157E  
                   u1530 0D6E                     u1514 0D22                     u1450 0C7E  
                   u1434 0C32                     u1370 0B96                     u1610 13A0  
                   u2410 07F4                     u2091 1488                     u2171 157A  
                   u1531 0D6A                     u1515 0D1E                     u1451 0C7A  
                   u1435 0C2E                     u1371 0B92                     u1611 139C  
                   u2411 07F0                     u1540 0D88                     u1524 0D42  
                   u1460 0C98                     u1444 0C52                     u1380 0BA8  
                   u1620 13C8                     u1700 1912                     u2500 0910  
                   u2420 0816                     u2340 0B20                     u2324 0AD0  
                   u2260 0A30                     u2244 09E0                     u2180 0948  
                   u1541 0D84                     u1525 0D3E                     u1461 0C94  
                   u1445 0C4E                     u1381 0BA4                     u1621 13C4  
                   u1701 190E                     u2501 090C                     u2421 0812  
                   u2341 0B1C                     u2325 0ACC                     u2261 0A2C  
                   u2245 09DC                     u2181 0944                     u1630 13FA  
                   u1710 192E                     u2430 082E                     u2350 0B32  
                   u2334 0AF4                     u2270 0A42                     u2254 0A04  
                   u2190 095A                     u2510 16DE                     u1631 13F6  
                   u1711 192A                     u2431 082A                     u2351 0B2E  
                   u2335 0AF0                     u2271 0A3E                     u2255 0A00  
                   u2191 0956                     u2511 16DA                     u1640 19DA  
                   u1720 1A96                     u2440 0850                     u2600 1178  
                   u2520 10B0                     u1641 19D6                     u1721 1A92  
                   u2441 084C                     u2601 1174                     u2521 10AC  
                   u1650 19F2                     u1810 0E3E                     u1570 1CA0  
                   u1554 0D9A                     u1490 0CF6                     u1474 0CAA  
                   u1394 0BBA                     u1730 1AAC                     u2450 0860  
                   u2530 10BE                     u1651 19EE                     u1811 0E3A  
                   u1571 1C9C                     u1555 0D96                     u1491 0CF2  
                   u1475 0CA6                     u1395 0BB6                     u1731 1AA8  
                   u2451 085C                     u2531 10BA                     u1660 1A1C  
                   u1804 0E0A                     u1564 0DBA                     u1484 0CCA  
                   u1740 1ABC                     u1580 1322                     u1900 1AEC  
                   u2460 087E                     u2540 10F8                     u2364 0B48  
                   u2284 0A58                     u2380 1C18                     u1661 1A18  
                   u1805 0E06                     u1565 0DB6                     u1485 0CC6  
                   u1741 1AB8                     u1581 131E                     u1901 1AE8  
                   u2461 087A                     u2541 10F4                     u2365 0B44  
                   u2285 0A54                     u2381 1C14                     u1830 0E6E  
                   u1670 17CC                     u1750 1AD2                     u1590 1344  
                   u1910 1B00                     u2470 08A0                     u2390 07BA  
                   u2550 1108                     u2374 0B6C                     u2294 0A7C  
                   u1831 0E6A                     u1671 17C8                     u1751 1ACE  
                   u1591 1340                     u1911 1AFC                     u2471 089C  
                   u2391 07B6                     u2551 1104                     u2375 0B68  
                   u2295 0A78                     u1824 0E54                     u1680 17DC  
                   u1760 1896                     u1920 1B16                     u2480 08DE  
                   u2560 111E                     u1825 0E50                     u1681 17D8  
                   u1921 1B12                     u2481 08DA                     u2561 111A  
                   u1770 18C8                     u1690 18F4                     u1930 1B2C  
                   u2490 08EE                     u2570 112E                     u1691 18F0  
                   u1931 1B28                     u2491 08EA                     u2571 112A  
                   u1940 11E4                     u1860 0EE4                     u1844 0E8C  
                   u1780 18D8                     u2580 114A                     u1941 11E0  
                   u1861 0EE0                     u1845 0E86                     u1781 18D4  
                   u2581 1146                     u1950 11F6                     u1870 0EF6  
                   u1854 0EBC                     u2590 115C                     u1951 11F2  
                   u1871 0EF2                     u1855 0EB6                     u1767 188C  
                   u2591 1158                     u1960 120C                     u1880 0F0E  
                   u1961 1208                     u1881 0F0A                     u1777 18BE  
                   u1970 122A                     u1890 0F30                     u1794 0DEA  
                   u1971 1226                     u1891 0F2C                     u1795 0DE6  
                   u1980 1242                     u1981 123E                     u1990 125C  
                   u1991 1258                     _flag 004A                     _main 16E0  
                   fsr0h 000FEA                     fsr1h 000FE2                     indf0 000FEF  
                   fsr2h 000FDA                     fsr0l 000FE9                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
           ___param_bank 000000           pwmSet@porcento 0029          __end_of___aldiv 141C  
                  ?_main 0020          __end_of___awdiv 14E0          __end_of___awmod 1590  
                  _T0CON 000FD5          ___awdiv@divisor 0022                    _T2CON 000FCA  
        __end_of___lwdiv 194E       alterarVolume@old_D 0027          ___awdiv@counter 0024  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_lcdData 1BDC          __end_of_lcdInit 1862                    _pause 001E  
                  _tecla 001F                    _nomes 0200          __end_of_pinMode 0B7A  
                  _valor 0601                    _tempo 0049                    tablat 000FF5  
        __end_of_ssdInit 1B88          __end_of_pwmInit 1CBC                    status 000FD8  
       __end_of_Delay2ms 1CA2     __end_of_digitalWrite 0DC8          __initialization 1A1E  
           __end_of_main 176C       __size_of_Delay40us 0018                   ??_main 0037  
          __activetblptr 000002                   _CCPR1L 000FBE         ___awdiv@dividend 0020  
                 _INTCON 000FF2     __size_of_lcdPosition 005A        lcdPosition@coluna 0028  
              ??___aldiv 0028                   ___wmul 1C1A                ??___awdiv 0024  
              ??___awmod 002C                ??___lwdiv 0024                   _lcdStr 1862  
                 _kpInit 1CD4                   _kpRead 1CDE                   _indice 004B  
                 clear_0 1A64                   clear_1 1A70         ___awdiv@quotient 0026  
                 _teclas 0015          ___awmod@divisor 002A                ??_lcdData 0026  
              ??_lcdInit 0028                   _pwmSet 194E          ___awmod@counter 002C  
                 _strcpy 1BDC                   _volume 001D         __end_of_playSong 092C  
       __end_of_ssdDigit 1B32             __pdataCOMRAM 0001                ??_pinMode 0024  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_ssdInit 0026                ??_pwmInit 0030  
      __end_of_Delay40us 1CD4               __accesstop 0080  __end_of__initialization 1A76  
          ___rparam_used 000001              pinMode@type 0022           __pcstackCOMRAM 0020  
           __pidataBANK2 1590         alterarVolume@opt 0026            __end_of_valor 0611  
              ?_Delay2ms 0020       __size_of_atraso_ms 0064               __pbssBANK1 0100  
  __size_of_digitalWrite 024E               _lcdCommand 176C                  ?___wmul 0020  
                ?_lcdStr 0028                  ?_kpInit 0020                  ?_kpRead 0020  
                _CCP1CON 000FBD               _kpDebounce 0DC8    __end_of_alterarVolume 1310  
             _chooseSong 1092                  ?_pwmSet 0020                  ?_strcpy 0026  
     __size_of_ssdUpdate 0150               ??_Delay2ms 0021             _digitalWrite 0B7A  
     __size_of_songsInit 00A6                ?_playSong 0020                  __Hparam 0000  
                __Lparam 0000                ?_ssdDigit 0020          kpDebounce@old_D 0025  
     lcdPosition@comando 002A          kpDebounce@tempo 003D                  ___aldiv 1310  
                ___awdiv 141C                  ___awmod 14E0          __size_of___wmul 0026  
                ___lwdiv 18DA        __end_of_atraso_ms 1A1E             __psmallconst 0600  
        __size_of_lcdStr 0078          __size_of_kpInit 000A          __size_of_kpRead 000A  
            ssdDigit@val 0021              ssdDigit@pos 0020                  __pcinit 1A1E  
                _lcdData 1B88                  __ramtop 0600                  _lcdInit 17EA  
                __ptext0 16E0                  __ptext1 1B32                  __ptext2 163A  
                __ptext3 1BDC                  __ptext4 17EA                  __ptext5 092C  
                __ptext6 1CD4                  __ptext7 1092                  __ptext8 0650  
                __ptext9 0F42          __size_of_pwmSet 006C                  _display 0043  
        __size_of_strcpy 003E                  _pinMode 092C         ___awmod@dividend 0028  
       ___aldiv@dividend 0020                  _minuto1 0048                  _minuto2 0047  
                _ssdInit 1B32                  _pwmInit 1CA2                  _musicas 0100  
                lcdStr@i 002C                Delay2ms@i 0021      kpDebounce@valorNovo 0039  
   end_of_initialization 1A76            __Lmediumconst 0000            ?_pwmFrequency 002E  
             ??_playSong 0030        __end_of_ssdUpdate 1092               ??_ssdDigit 0021  
       ___aldiv@quotient 002A        __end_of_songsInit 16E0                  postdec1 000FE5  
                postdec2 000FDD              ?_lcdCommand 0020                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE                  strcpy@d 002C  
                strcpy@s 002A              ?_kpDebounce 0020              ?_chooseSong 0020  
          ??_lcdPosition 0029           ??_pwmFrequency 0030                _Delay40us 1CBC  
             atraso_ms@i 0022               atraso_ms@j 0024               atraso_ms@k 0025  
             atraso_ms@t 0020           __end_of___wmul 1C40            __pidataCOMRAM 1C66  
         __end_of_lcdStr 18DA           __end_of_kpInit 1CDE           __end_of_kpRead 1CE8  
         __end_of_pwmSet 19BA           __end_of_strcpy 1C1A      start_initialization 1A1E  
      __size_of_Delay2ms 001C      __size_of_lcdCommand 007E      __size_of_kpDebounce 017A  
             ?_Delay40us 0020      __size_of_chooseSong 0140      __end_of_lcdPosition 1ADA  
       lcdPosition@linha 0029                 ??___wmul 0024                 ??_lcdStr 002A  
               ??_kpInit 0020                 ??_kpRead 0022              __pdataBANK2 0200  
               ??_pwmSet 0027                 ??_strcpy 002A              __pbssCOMRAM 0037  
             pinMode@pin 0020         ___lwdiv@dividend 0020        __size_of_playSong 02DC  
               ?___aldiv 0020                 ?___awdiv 0020                 ?___awmod 0028  
      __size_of_ssdDigit 0058                 ?___lwdiv 0020                 ?_lcdData 0020  
               ?_lcdInit 0020     __end_of_pwmFrequency 1C66            lcdCommand@cmd 0027  
              _atraso_ms 19BA              __smallconst 0600                 ?_pinMode 0020  
               ?_ssdInit 0020                 ?_pwmInit 0020         ___lwdiv@quotient 0024  
            _lcdPosition 1A80         pwmFrequency@freq 002E          ___aldiv@divisor 0024  
        ___aldiv@counter 0028              ??_Delay40us 0020           ___wmul@product 0024  
 __size_of_alterarVolume 013E             ??_lcdCommand 0026                _ssdUpdate 0F42  
              lcdStr@str 0028             ??_kpDebounce 0020             ??_chooseSong 0035  
              _songsInit 163A        ___wmul@multiplier 0020               ?_atraso_ms 0020  
        lcdCommand@old_D 0026    kpDebounce@valorAntigo 0037                 _Delay2ms 1C86  
              copy_data0 1A32                copy_data1 1A52             _playSong$977 0030  
           _playSong$978 0032       __end_of_lcdCommand 17EA             lcdData@old_D 0027  
           lcdData@valor 0026               songsInit@i 002E       __end_of_kpDebounce 0F42  
     __end_of_chooseSong 11D2                 __Hrparam 0000                 __Lrparam 0000  
             ?_ssdUpdate 0020         __size_of___aldiv 010C         __size_of___awdiv 00C4  
       __size_of___awmod 00B0         __size_of___lwdiv 0074               ?_songsInit 0020  
          _alterarVolume 11D2         __size_of_lcdData 0054         __size_of_lcdInit 0078  
       __size_of_pinMode 024E          ___lwdiv@divisor 0022          ___lwdiv@counter 0026  
               __ptext10 1ADA                 __ptext11 194E                 __ptext20 176C  
               __ptext12 1C1A                 __ptext21 0B7A                 __ptext13 18DA  
               __ptext22 1C86                 __ptext14 1CA2                 __ptext23 1CBC  
               __ptext15 1C40                 __ptext24 1CDE                 __ptext16 1310  
               __ptext25 0DC8                 __ptext17 1862                 __ptext26 11D2  
               __ptext18 1B88                 __ptext27 19BA                 __ptext19 1A80  
               __ptext28 14E0                 __ptext29 141C                playSong@j 0034  
       __size_of_ssdInit 0056         __size_of_pwmInit 001A               strcpy@dest 0026  
               _duracoes 0001            __size_of_main 008C                 _playSong 0650  
               _segundo1 0046                 _segundo2 0045               Delay40us@i 0020  
               _ssdDigit 1ADA    __size_of_pwmFrequency 0026                pwmSet@val 002A  
         ?_alterarVolume 0020              ??_atraso_ms 0022            ?_digitalWrite 0020  
      digitalWrite@value 0022             _pwmFrequency 1C40                strcpy@src 0028  
            ??_ssdUpdate 0026              ??_songsInit 002E              kpDebounce@i 0029  
            kpDebounce@j 0028              kpDebounce@k 0026           ??_digitalWrite 0024  
           ___aldiv@sign 0029             ?_lcdPosition 0028          digitalWrite@pin 0020  
      _valor@keypad$F261 003B  
